text,label
"import {keccak256, bufferToHex} from ""ethereumjs-util""

export default class MerkleTree {
    constructor(elements) {
    // Filter empty strings and hash elements
        this.elements = elements.filter(el => el).map(el => keccak256(el))

        // Deduplicate elements
        this.elements = this.bufDedup(this.elements)
        // Sort elements
        this.elements.sort(Buffer.compare)

        // Create layers
        this.layers = this.getLayers(this.elements)
    }

    getLayers(elements) {
        if (elements.length === 0) {
            return [[""""]]
        }

        const layers = []
        layers.push(elements)

        // Get next layer until we reach the root
        while (layers[layers.length - 1].length > 1) {
            layers.push(this.getNextLayer(layers[layers.length - 1]))
        }

        return layers
    }

    getNextLayer(elements) {
        return elements.reduce((layer, el, idx, arr) => {
            if (idx % 2 === 0) {
                // Hash the current element with its pair element
                layer.push(this.combinedHash(el, arr[idx + 1]))
            }

            return layer
        }, [])
    }

    combinedHash(first, second) {
        if (!first) {
            return second
        }
        if (!second) {
            return first
        }

        return keccak256(this.sortAndConcat(first, second))
    }

    getRoot() {
        return this.layers[this.layers.length - 1][0]
    }

    getHexRoot() {
        return bufferToHex(this.getRoot())
    }

    getProof(el) {
        let idx = this.bufIndexOf(el, this.elements)

        if (idx === -1) {
            throw new Error(""Element does not exist in Merkle tree"")
        }

        return this.layers.reduce((proof, layer) => {
            const pairElement = this.getPairElement(idx, layer)

            if (pairElement) {
                proof.push(pairElement)
            }

            idx = Math.floor(idx / 2)

            return proof
        }, [])
    }

    getHexProof(el) {
        const proof = this.getProof(el)

        return this.bufArrToHexArr(proof)
    }

    getPairElement(idx, layer) {
        const pairIdx = idx % 2 === 0 ? idx + 1 : idx - 1

        if (pairIdx < layer.length) {
            return layer[pairIdx]
        } else {
            return null
        }
    }

    bufIndexOf(el, arr) {
        let hash

        // Convert element to 32 byte hash if it is not one already
        if (el.length !== 32 || !Buffer.isBuffer(el)) {
            hash = keccak256(el)
        } else {
            hash = el
        }

        for (let i = 0; i < arr.length; i++) {
            if (hash.equals(arr[i])) {
                return i
            }
        }

        return -1
    }

    bufDedup(elements) {
        return elements.filter((el, idx) => {
            return this.bufIndexOf(el, elements) === idx
        })
    }

    bufArrToHexArr(arr) {
        if (arr.some(el => !Buffer.isBuffer(el))) {
            throw new Error(""Array is not an array of buffers"")
        }

        return arr.map(el => ""0x"" + el.toString(""hex""))
    }

    sortAndConcat(...args) {
        return Buffer.concat([...args].sort(Buffer.compare))
    }
}
",JavaScript
"(function (angular) {
    ""use strict"";
    var appFooter = angular.module('myApp.footer', []);

    appFooter.controller(""footerCtrl"", ['$scope', function ($scope) {
            
        }]);

    myApp.directive(""siteFooter"",function(){
        return {
            restrict: 'A',
            templateUrl:'app/components/footer/footer.html'
        };
    });

} (angular));",JavaScript
"define('exports@*', [], function(require, exports, module){

    exports.a = 1;

});",JavaScript
"window.ImageViewer = function(url, alt, title){
    var img = $('<img />').attr('src', url).attr('alt', title).css({
        display: 'inline-block',
        'max-width': '90vw',
        'max-height': '90vh'
    });
    var a = $('<a></a>').attr('target', '_blank')
        .attr('title', title)
        .attr('href', url)
        .css({
            display: 'inline-block',
            height: '100%'
        })
        .append(img);
    var close_it = function(){
        overlay.remove();
        container.remove();
    };
    var closeBtn = $('<a class=""icon-remove-sign""></a>').css({
        color: 'red',
        'font-size': 'x-large',
        'margin-left': '-0.1em'
    }).bind('click', close_it);
    var closeWrapper = $('<div></div>').css({
        height: '100%',
        width: '2em',
        'text-align': 'left',
        'display': 'inline-block',
        'vertical-algin': 'top',
        'margin-top': '-0.6em',
        'float': 'right'
    }).append(closeBtn);
    var container = $('<div></div>').append(
            $('<div></div>').css({
                margin: '5vh 1vw',
                display: 'inline-block',
                'vertical-align': 'top'
            }).append(a).append(closeWrapper))
        .css({
            'z-index': 30000000,
            'position': 'fixed',
            'padding': 0,
            'margin': 0,
            'width': '100vw',
            'height': '100vh',
            'top': 0,
            'left': 0,
            'text-align': 'center',
            'cursor': 'default',
            'vertical-align': 'middle'
        })
        .bind('click',close_it)
        .appendTo('body');
    var overlay = $('<div class=""blockUI blockMsg blockPage"">').css({
        'z-index': 9999,
        'position': 'fixed',
        padding: 0,
        margin: 0,
        width: '100vw',
        height: '100vh',
        top: '0vh',
        left: '0vw',
        'text-align': 'center',
        'cursor': 'default',
        'vertical-align': 'middle',
        'background-color': 'gray',
        'opacity': '0.4'
    }).bind('click', close_it).appendTo('body');

    this.close = close_it;
    return this;
}",JavaScript
"import React, { Component } from 'react';

class Home extends Component {
    render () {
        return (
            <div>
                <h1>Home</h1>
                <p>Bienvenidos!!!</p>
                <pre>{`
                    {
                        path: '/',
                        pathExact: true,
                        component: Home
                    },
                    {
                        path: '/pageOne',
                        pathExact: true,
                        component: PageOne
                    },
                    {
                        path: '/pageTwo',
                        pathExact: true,
                        component: PageTwo

                    },
                    {
                        path: '/pageThree',
                        pathExact: true,
                        auth: true,
                        component: PageThree,
                        routes: [
                            // PAGE 3/ADD
                            {
                                path: '/pageThree/add',
                                pathExact: true,
                                auth: true,
                                component: PageThreeAdd
                            },
                            // PAGE 4
                            {
                                path: '/pageFour/:id/:action',
                                auth: true,
                                component: PageFour
                            }
                        ]
                    },
                    // 404 NOT FOUND
                    {
                        component: NotFound
                    }
                    `}
                </pre>
            </div>
        );
    }
}

export default Home;
",JavaScript
"'use strict';

var clear          = require('es5-ext/array/#/clear')
  , eIndexOf       = require('es5-ext/array/#/e-index-of')
  , setPrototypeOf = require('es5-ext/object/set-prototype-of')
  , callable       = require('es5-ext/object/valid-callable')
  , d              = require('d')
  , ee             = require('event-emitter')
  , Symbol         = require('es6-symbol')
  , iterator       = require('es6-iterator/valid-iterable')
  , forOf          = require('es6-iterator/for-of')
  , Iterator       = require('./lib/iterator')
  , isNative       = require('./is-native-implemented')

  , call = Function.prototype.call, defineProperty = Object.defineProperty
  , SetPoly, getValues;

module.exports = SetPoly = function (/*iterable*/) {
	var iterable = arguments[0];
	if (!(this instanceof SetPoly)) return new SetPoly(iterable);
	if (this.__setData__ !== undefined) {
		throw new TypeError(this + "" cannot be reinitialized"");
	}
	if (iterable != null) iterator(iterable);
	defineProperty(this, '__setData__', d('c', []));
	if (!iterable) return;
	forOf(iterable, function (value) {
		if (eIndexOf.call(this, value) !== -1) return;
		this.push(value);
	}, this.__setData__);
};

if (isNative) {
	if (setPrototypeOf) setPrototypeOf(SetPoly, Set);
	SetPoly.prototype = Object.create(Set.prototype, {
		constructor: d(SetPoly)
	});
}

ee(Object.defineProperties(SetPoly.prototype, {
	add: d(function (value) {
		if (this.has(value)) return this;
		this.emit('_add', this.__setData__.push(value) - 1, value);
		return this;
	}),
	clear: d(function () {
		if (!this.__setData__.length) return;
		clear.call(this.__setData__);
		this.emit('_clear');
	}),
	delete: d(function (value) {
		var index = eIndexOf.call(this.__setData__, value);
		if (index === -1) return false;
		this.__setData__.splice(index, 1);
		this.emit('_delete', index, value);
		return true;
	}),
	entries: d(function () { return new Iterator(this, 'key+value'); }),
	forEach: d(function (cb/*, thisArg*/) {
		var thisArg = arguments[1], iterator, result, value;
		callable(cb);
		iterator = this.values();
		result = iterator._next();
		while (result !== undefined) {
			value = iterator._resolve(result);
			call.call(cb, thisArg, value, value, this);
			result = iterator._next();
		}
	}),
	has: d(function (value) {
		return (eIndexOf.call(this.__setData__, value) !== -1);
	}),
	keys: d(getValues = function () { return this.values(); }),
	size: d.gs(function () { return this.__setData__.length; }),
	values: d(function () { return new Iterator(this); }),
	toString: d(function () { return '[object Set]'; })
}));
defineProperty(SetPoly.prototype, Symbol.iterator, d(getValues));
defineProperty(SetPoly.prototype, Symbol.toStringTag, d('c', 'Set'));
",JavaScript
"'use strict';

var defaultEnvConfig = require('./default');

module.exports = {
  db: {
    uri: process.env.MONGOHQ_URL || process.env.MONGODB_URI || 'mongodb://' + (process.env.DB_1_PORT_27017_TCP_ADDR || 'localhost') + '/flipflop-test',
    options: {
      user: '',
      pass: ''
    },
    // Enable mongoose debug mode
    debug: process.env.MONGODB_DEBUG || false
  },
  log: {
    // logging with Morgan - https://github.com/expressjs/morgan
    // Can specify one of 'combined', 'common', 'dev', 'short', 'tiny'
    // format: 'dev'
    // fileLogger: {
    //   directoryPath: process.cwd(),
    //   fileName: 'app.log',
    //   maxsize: 10485760,
    //   maxFiles: 2,
    //   json: false
    // }
  },
  port: process.env.PORT || 3001,
  app: {
    title: defaultEnvConfig.app.title + ' - Test Environment'
  },
  uploads: {
    profile: {
      image: {
        dest: './modules/users/client/img/profile/uploads/',
        limits: {
          fileSize: 100000 // Limit filesize (100kb) for testing purposes
        }
      }
    }
  },
  facebook: {
    clientID: process.env.FACEBOOK_ID || 'APP_ID',
    clientSecret: process.env.FACEBOOK_SECRET || 'APP_SECRET',
    callbackURL: '/api/auth/facebook/callback'
  },
  twitter: {
    username: '@TWITTER_USERNAME',
    clientID: process.env.TWITTER_KEY || 'CONSUMER_KEY',
    clientSecret: process.env.TWITTER_SECRET || 'CONSUMER_SECRET',
    callbackURL: '/api/auth/twitter/callback'
  },
  google: {
    clientID: process.env.GOOGLE_ID || 'APP_ID',
    clientSecret: process.env.GOOGLE_SECRET || 'APP_SECRET',
    callbackURL: '/api/auth/google/callback'
  },
  linkedin: {
    clientID: process.env.LINKEDIN_ID || 'APP_ID',
    clientSecret: process.env.LINKEDIN_SECRET || 'APP_SECRET',
    callbackURL: '/api/auth/linkedin/callback'
  },
  github: {
    clientID: process.env.GITHUB_ID || 'APP_ID',
    clientSecret: process.env.GITHUB_SECRET || 'APP_SECRET',
    callbackURL: '/api/auth/github/callback'
  },
  paypal: {
    clientID: process.env.PAYPAL_ID || 'CLIENT_ID',
    clientSecret: process.env.PAYPAL_SECRET || 'CLIENT_SECRET',
    callbackURL: '/api/auth/paypal/callback',
    sandbox: true
  },
  mailer: {
    from: process.env.MAILER_FROM || 'MAILER_FROM',
    options: {
      service: process.env.MAILER_SERVICE_PROVIDER || 'MAILER_SERVICE_PROVIDER',
      auth: {
        user: process.env.MAILER_EMAIL_ID || 'MAILER_EMAIL_ID',
        pass: process.env.MAILER_PASSWORD || 'MAILER_PASSWORD'
      }
    }
  },
  seedDB: {
    seed: process.env.MONGO_SEED === 'true',
    options: {
      logResults: process.env.MONGO_SEED_LOG_RESULTS !== 'false',
      seedUser: {
        username: process.env.MONGO_SEED_USER_USERNAME || 'seeduser',
        provider: 'local',
        email: process.env.MONGO_SEED_USER_EMAIL || 'user@localhost.com',
        firstName: 'User',
        lastName: 'Local',
        displayName: 'User Local',
        roles: ['user']
      },
      seedAdmin: {
        username: process.env.MONGO_SEED_ADMIN_USERNAME || 'seedadmin',
        provider: 'local',
        email: process.env.MONGO_SEED_ADMIN_EMAIL || 'admin@localhost.com',
        firstName: 'Admin',
        lastName: 'Local',
        displayName: 'Admin Local',
        roles: ['user', 'admin']
      }
    }
  }
};
",JavaScript
"'use strict';

const test = require('ava');
const hashSet = require('../index');

const MySet = hashSet(x => x);

test('should not change empty set', t => {
    const set = new MySet();

    set.clear();

    t.is(set.size, 0);
});

test('should clear set', t => {
    const set = new MySet();

    set.add(1);
    set.clear();

    t.is(set.size, 0);
});
",JavaScript
"'use strict';

var redis      = require('redis')
  , xtend      = require('xtend')
  , hyperquest = require('hyperquest')
  ;

module.exports = FetchAndCache;

/**
 * Creates a fetchncache instance.
 * 
 * #### redis opts
 *
 * - **opts.redis.host**  *{number=}* host at which redis is listening, defaults to `127.0.0.1`
 * - **opts.redis.port**  *{string=}* port at which redis is listening, defaults to `6379`
 *
 * #### service opts
 *
 * - **opts.service.url** *{string=}* url at which to reach the service
 *
 * @name fetchncache
 * @function
 * @param {Object=} opts
 * @param {Object=} opts.redis        redis options passed straight to [redis](https://github.com/mranney/node_redis) (@see above)
 * @param {Object=} opts.service      options specifying how to reach the service that provides the data (@see above)
 * @param {number=} opts.expire       the default number of seconds after which to expire a resource from the redis cache (defaults to 15mins)
 * @return {Object} fetchncache instance
 */
function FetchAndCache(opts) {
  if (!(this instanceof FetchAndCache)) return new FetchAndCache(opts);
  opts = opts || {};

  var redisOpts = xtend({ port: 6379, host: '127.0.0.1' }, opts.redis)
    , serviceOpts = xtend({ url: 'http://127.0.0.1' }, opts.service)

  this._defaultExpire = opts.expire || 15 * 60 // 15min
  this._serviceOpts   = serviceOpts;
  this._markCached    = opts.markCached !== false;
  this._client        = redis.createClient(redisOpts.port, redisOpts.host, redisOpts)
}

var proto = FetchAndCache.prototype;

/**
 * Fetches the resource, probing the redis cache first and falling back to the service.
 * If a transform function is provided (@see opts), that is applied to the result before returning or caching it.
 * When fetched from the service it is added to the redis cached according to the provided options.
 * 
 * @name fetcncache::fetch
 * @function
 * @param {string}    uri path to the resource, i.e. `/reource1?q=1234`
 * @param {Object=}   opts            configure caching and transformation behavior for this particular resource
 * @param {number=}   opts.expire     overrides default expire for this particular resource
 * @param {function=} opts.transform  specify the transform function to be applied, default: `function (res} { return res }`
 * @param {function}  cb              called back with an error or the transformed resource
 */
proto.fetch = function (uri, opts, cb) {
  var self = this;
  if (!self._client) return cb(new Error('fetchncache was stopped and can no longer be used to fetch data'));

  if (typeof opts === 'function') {
    cb = opts;
    opts = null;
  }
  opts = xtend({ expire: self._defaultExpire, transform: function (x) { return x } }, opts);

  self._client.get(uri, function (err, res) {
    if (err) return cb(err);
    if (res) return cb(null, res, true);  

    self._get(uri, function (err, res) {
      if (err) return cb(err);
      self._cache(uri, res, opts, cb);
    })
  });
}

/**
 * Stops the redis client in order to allow exiting the application.
 * At this point this fetchncache instance becomes unusable and throws errors on any attempts to use it.
 * 
 * @name fetchncache::stop
 * @function
 * @param {boolean=} force will make it more aggressive about ending the underlying redis client (default: false)
 */
proto.stop = function (force) {
  if (!this._client) throw new Error('fetchncache was stopped previously and cannot be stopped again');
  if (force) this._client.end(); else this._client.unref();  
  this._client = null;
}

/**
 * Clears the entire redis cache, so use with care.
 * Mainly useful for testing or to ensure that all resources get refreshed.
 * 
 * @name fetchncache::clearCache
 * @function
 * @return {Object} fetchncache instance
 */
proto.clearCache = function () {
  if (!this._client) throw new Error('fetchncache was stopped previously and cannot be cleared');
  this._client.flushdb();
  return this;
}

proto._get = function (uri, cb) {
  var body = '';
  var url =  this._serviceOpts.url + uri;
  console.log('url', url);
  hyperquest
    .get(url)
    .on('error', cb)
    .on('data', function (d) { body += d.toString() })
    .on('end', function () { cb(null, body) })
}

proto._cache = function (uri, res, opts, cb) {
  var self = this;
  var val;
  try {
    val = opts.transform(res);
  } catch (e) {
    return cb(e);
  }

  // assuming that value is now a string we use set to add it
  self._client.set(uri, val, function (err) {
    if (err) return cb(err);

    self._client.expire(uri, opts.expire, function (err) {
      if (err) return cb(err);
      cb(null, val);  
    })
  });
}
",JavaScript
"/* Accordion directive */
app.directive('vmfAccordionContainer', ['$compile', function($compile) {
    return {
        restrict: 'EA',
        scope: {
            type: '@',
            headers: '=',
            accData: '=',
            selAcc: '=',
            customClass:'='
        },

        link: function(scope, elem, attrs) {
            
            var template;
            if(scope.type === '1') {
                template = '<table class=""vmf-accordion-table1""><thead class=""vmf-accordion-table-header""><tr><td class=""col1""></td>';

                var count = 1;
                angular.forEach(scope.headers, function(item) {
                    // if(count === 1) {
                    //     template += '<td colspan=""2"">' + item + '</td>';    
                    // }
                    // else {
                       template += '<td class=""col' + (count + 1) +'"">' + item + '</td>';
                    // }
                    count += 1;

                });    
                
                template += '</tr></thead><tbody class=""vmf-accordion-table-body"">';
                scope.accordionIndex = 0;

                angular.forEach(scope.accData, function(item) {
                    template += '<tr class=""vmf-accordion-header"" ng-click=""toggleAccordion(' +  scope.accordionIndex + ')""><td ><span class=""vmf-arrow""></span></td><td colspan=""3"">' + item.header + '</td></tr>';

                    angular.forEach(item.contents, function(content) {
                        template += '<tr class=""vmf-accordion-row"" ng-show=""activeIndex =='+ scope.accordionIndex + '""><td colspan=""1""></td>';
                        angular.forEach(content, function(cellData) {
                            template += '<td colspan=""1"">' + cellData + '</td>';    
                        });
                            
                        template += '</tr>';
                        
                    });

                    scope.accordionIndex += 1;

                });    

                template += '</tbody></table>';

                elem.append(template);
                // console.log(template);
                $compile(elem.contents())(scope);

                // for IE7    
                elem.find('.vmf-accordion-row').hide();  
            }

            else if(scope.type === '2') {
                template = '<table class=""vmf-accordion-table2""><thead class=""vmf-accordion-table2-header"" style=""background-color: lightgray;""><tr><td class=""col1""></td>';

                var headerCount = 0;

                angular.forEach(scope.headers, function(item) {
                    if(headerCount !== scope.headers.length - 1) {
                        template += '<td class=""col' + (headerCount + 1 + 1)+ '"">' + item + '</td>';
                    }
                    else {
                        template += '<td colspan=""2"" class=""col' + (headerCount + 1 + 1)+ '"">' + item + '</td>';   
                    }    
                    headerCount += 1;

                });    
                
                template += '</tr></thead><tbody class=""vmf-accordion-table2-body"">';
                scope.accordionIndex = 0;

                angular.forEach(scope.accData, function(item) {
                    template += '<tr class=""vmf-accordion-header2"" ng-click=""toggleAccordion(' +  scope.accordionIndex + ')""><td><span class=""vmf-arrow""></span></td>';

                    var accHeadersCount = 1;

                    angular.forEach(item.headers, function(header) {
                        if(accHeadersCount !== item.headers.length) {
                            template += '<td>' + header + '</td>';
                        }
                        else {
                            template += '<td class=""vmf-acc-header-last-child"">' + header + '</td>';   
                        }    

                        accHeadersCount += 1;
                    });    

                    template += '</tr><tr class=""vmf-accordion-row2""><td></td><td class=""vmf-acc-header-last-child"" colspan=""' + item.headers.length + '""><table class=""vmf-accordion-sub-table"" ng-show=""activeIndex =='+ scope.accordionIndex + '"">';

                    var count = 0;
                    angular.forEach(item.contents, function(content) {

                        if(count !== 0) {
                            template += '<tr class=""vmf-accordion-sub-table-row"">';
                            angular.forEach(content, function(cellData) {
                                template += '<td>' + cellData + '</td>';                                    
                            });

                            template += '</tr>';

                        }
                        else {
                            template += '<thead class=""vmf-accordion-sub-table-header""><tr>';

                            var subHeaderCount = 1;

                            angular.forEach(content, function(cellData) {
                                template += '<td class=""col' + subHeaderCount + '"">' + cellData + '</td>';
                                subHeaderCount += 1;                                    
                            });

                            template += '</tr></thead><tbody class=""vmf-accordion-sub-table-body"">';
                        }

                        count += 1;   
                        
                        
                    });

                    template += '</tbody></table></td></tr>';

                    scope.accordionIndex += 1;

                });                    

                template += '</tbody></table>';

                elem.append(template);
                // console.log(template);
                if(scope.customClass){
                    angular.forEach(scope.customClass, function(item) {
                        elem.find(item.selector).addClass(item.cusclass);
                        
                        
                    });
                }
                
                $compile(elem.contents())(scope);

                // for IE7    
                elem.find('.vmf-accordion-row2').hide();  
                // elem.find('.vmf-accordion-row2').hide();  
            }


            scope.toggleAccordion = function(index) {
                scope.activeIndex = scope.activeIndex === index ? -1 : index;

                var accordions, accordionRows;
                if(scope.type === '1') {
                    elem.find('.vmf-accordion-row').hide();
                    
                    accordions = elem.find('.vmf-accordion-header');
                        
                    accordions.removeClass('vmf-active-row');    
                    
                    // for IE7
                    if(scope.activeIndex !== -1) {
                        // accordions = elem.find('.vmf-accordion-header');
                        // console.log(accordions[index]);
                        $(accordions[index]).addClass('vmf-active-row');
                        accordionRows = $(accordions[index]).nextUntil('.vmf-accordion-header');

                        
                        $(accordionRows).show();

                    }
                }
                else if(scope.type === '2') {
                    elem.find('.vmf-accordion-row2').hide();

                    accordions = elem.find('.vmf-accordion-header2');
                    accordions.removeClass('vmf-active-row');
                    // for IE7
                    if(scope.activeIndex !== -1) {
                        $(accordions[index]).addClass('vmf-active-row');
                        
                        accordionRows = $(accordions[index]).nextUntil('.vmf-accordion-header2');
                        
                        $(accordionRows).show();

                    }
                }

            };

            scope.buttonClick = function($event, index) {
                
                $event.stopPropagation();
                scope.selAcc = index;
            }; 
        }

    };
}]);",JavaScript
"import $ from 'jquery';
import keyboard from 'virtual-keyboard';

$.fn.addKeyboard = function () {
  return this.keyboard({
    openOn: null,
    stayOpen: false,
    layout: 'custom',
    customLayout: {
      'normal': ['7 8 9 {c}', '4 5 6 {del}', '1 2 3 {sign}', '0 0 {dec} {a}'],
    },
    position: {
      // null (attach to input/textarea) or a jQuery object (attach elsewhere)
      of: null,
      my: 'center top',
      at: 'center top',
      // at2 is used when ""usePreview"" is false (centers keyboard at the bottom
      // of the input/textarea)
      at2: 'center top',
      collision: 'flipfit flipfit'
    },
    reposition: true,
    css: {
      input: 'form-control input-sm',
      container: 'center-block dropdown-menu',
      buttonDefault: 'btn btn-default',
      buttonHover: 'btn-light',
      // used when disabling the decimal button {dec}
      // when a decimal exists in the input area
      buttonDisabled: 'enabled',
    },
  });
};
",JavaScript
"﻿angular.module('movieApp')
	.directive('movieResult', function () {
	var directive = {
		restrict: 'E',
		replace: true,
		scope: {
			result: '=result'
		},
		template: [
			'<div class=""row"">',
				'<div class=""col-sm-4"">',
					'<img ng-src=""{{result.Poster}}"" alt=""{{result.Title}}"" width=""220px"">',
				'</div>',
				'<div class=""col-sm-8"">',
					'<h3>{{result.Title}}</h3>',
					'<p>{{result.Plot}}</p>',
					'<p><strong>Director:</strong> {{result.Director}}</p>',
					'<p><strong>Actors:</strong> {{result.Actors}}</p>',
					'<p><strong>Released:</strong> {{result.Released}} ({{result.Released | fromNow}})</p>',
					'<p><strong>Genre:</strong> {{result.Genre}}</p>',
				'</div>',
			'</div>'
		].join('')
	};
	return directive;
});",JavaScript
"// var isWaiting = false;
// var isRunning = false;
// var seconds = 10;
// var countdownTimer;
// var finalCountdown = false;

function GameTimer(game) {
	this.seconds = game.timelimit;

	this.secondPassed = function() {
		if (this.seconds === 0 && !game.gameOver) {
			game.endGame();
		} else if (!game.gameOver) {
			this.seconds--;
			$(""#timer_num"").html(this.seconds);
			}
	} 
        
	var countdownTimer = setInterval('t.secondPassed()', 1000);
}
",JavaScript
"import DateParser from '../date-parser.js';
import ParsedInfo from '../../parsed-info';
import moment from 'moment';

Date.now = jest.fn(() => 1527130897000)

test('Parses 12 Jan', () => {
  const dateParser = new DateParser();
  dateParser.parse('12 Jan', ParsedInfo);
  const { value, startIndex, endIndex } = ParsedInfo.dateParser;
  expect({ value: value.unix(), startIndex, endIndex })
  .toEqual({ value: 1515695400, startIndex: 0, endIndex: 6 });
});

test('Parses 22 May', () => {
  const dateParser = new DateParser();
  dateParser.parse('22 May', ParsedInfo);
  const { value, startIndex, endIndex } = ParsedInfo.dateParser;
  expect({ value: value.unix(), startIndex, endIndex })
  .toEqual({ value: 1526927400, startIndex: 0, endIndex: 6 });
});
",JavaScript
"'use strict';

var run = require('./helpers').runMochaJSON;
var assert = require('assert');

describe('.only()', function() {
  describe('bdd', function() {
    it('should run only tests that marked as `only`', function(done) {
      run('options/only/bdd.fixture.js', ['--ui', 'bdd'], function(err, res) {
        if (err) {
          done(err);
          return;
        }
        assert.equal(res.stats.pending, 0);
        assert.equal(res.stats.passes, 11);
        assert.equal(res.stats.failures, 0);
        assert.equal(res.code, 0);
        done();
      });
    });
  });

  describe('tdd', function() {
    it('should run only tests that marked as `only`', function(done) {
      run('options/only/tdd.fixture.js', ['--ui', 'tdd'], function(err, res) {
        if (err) {
          done(err);
          return;
        }
        assert.equal(res.stats.pending, 0);
        assert.equal(res.stats.passes, 8);
        assert.equal(res.stats.failures, 0);
        assert.equal(res.code, 0);
        done();
      });
    });
  });

  describe('qunit', function() {
    it('should run only tests that marked as `only`', function(done) {
      run('options/only/qunit.fixture.js', ['--ui', 'qunit'], function(
        err,
        res
      ) {
        if (err) {
          done(err);
          return;
        }
        assert.equal(res.stats.pending, 0);
        assert.equal(res.stats.passes, 5);
        assert.equal(res.stats.failures, 0);
        assert.equal(res.code, 0);
        done();
      });
    });
  });
});
",JavaScript
"//APP
var app = angular.module('PortfolioApp', ['ngRoute', 'slick']);

//ROUTING
app.config(function ($routeProvider) {
	""ngInject"";
	$routeProvider
	.when('/', {
		controller: ""HomeController"",
		templateUrl: ""js/angular/views/home-view.html""
	})
	.when('/work/:projectId', {
		controller: 'ProjectController',
		templateUrl: 'js/angular/views/project-view.html'
	})
	.otherwise({
		redirectTo: '/'
	});
});

//CONTROLLERS
app.controller('HomeController', ['$scope', 'projects', function($scope, projects) {
	""ngInject"";
	projects.success(function(data) {
		$scope.projects = data;
	});

	//init function for binding
	function bindListeners() {
		$(""header"").on(""click"", "".mobile-toggle"", function() {
			$(this).toggleClass(""active"");
		})

		$(""header, .about"").on(""click"", "".nav-link"", function(e) {
			e.preventDefault();
			e.stopImmediatePropagation();
			if($(window).width() <= 740)
				$("".mobile-toggle"").removeClass(""active"");

			var anchor = $(this).attr(""href"");
			$('html, body').animate({
				scrollTop: $(anchor).offset().top - 70
			}, 500);
		})
	}

	//Home page initializations
	angular.element(document).ready(function () {
		bindListeners();
	});
}]);

app.controller('ProjectController', ['$scope', '$routeParams', '$http',
	function($scope, $routeParams, $http, $sce) {
		""ngInject"";
		$scope.video = false;

		$http.get('projects/' + $routeParams.projectId + '.json').success(function(data) {
			$scope.detail = data;
		})
		.error(function(data) {
			console.log(""Failed to get data"")
		});
	}
]);

//SERVICES
app.factory('projects', ['$http', function($http) {
	""ngInject"";
	return $http.get('projects/project-list.json')
	.success(function(data) {
		return data;
	})
	.error(function(data) {
		return data;
		console.log(""Failed to get data"")
	});
}]);

//FILTERS
app.filter('safe', function($sce) {
	""ngInject"";
	return function(val) {
		return $sce.trustAsHtml(val);
	};
});
",JavaScript
"module.exports = require('eden-class').extend(function() {
	/* Require
	-------------------------------*/
	/* Constants
	-------------------------------*/
	/* Public.Properties
	-------------------------------*/
	/* Protected Properties
	-------------------------------*/
	this._table 	= null;
	this._where 	= [];
	
	/* Private Properties
	-------------------------------*/
	/* Magic
	-------------------------------*/
	this.___construct = function(table) {
		this.argument().test(1, 'string', 'undef');	
		
		if(typeof table === 'string') {
			this.setTable(table);
		}
	};
	
	/* Public.Methods
	-------------------------------*/
	/**
	 * Set the table name in which you want to delete from
	 *
	 * @param string name
	 * @return this
	 */
	this.setTable = function(table) {
		//argument test
		this.argument().test(1, 'string');
		
		this._table = table;
		return this;
	};
	
	/**
	 * Returns the string version of the query 
	 *
	 * @param  bool
	 * @return string
	 * @notes returns the query based on the registry
	 */
	this.getQuery = function() {
		return 'DELETE FROM {TABLE} WHERE {WHERE};'
			.replace('{TABLE}'	, this._table)
			.replace('{WHERE}'	, this._where.join(' AND '));
	};
	
	/**
	 * Where clause
	 *
	 * @param array|string where
	 * @return	this
	 * @notes loads a where phrase into registry
	 */
	this.where = function(where) {
		//Argument 1 must be a string or array
		this.argument().test(1, 'string', 'array');
		
		if(typeof where === 'string') {
			where = [where];
		}
		
		this._where = this._where.concat(where); 
		
		return this;
	};
	
	/* Protected Methods
	-------------------------------*/
	/* Private Methods
	-------------------------------*/
}).register('eden/mysql/delete');",JavaScript
"/**
 *
 * Modelo de Login usando MCV
 * Desenvolvido por Ricardo Hirashiki
 * Publicado em: http://www.sitedoricardo.com.br
 * Data: Ago/2011
 *
 * Baseado na extensao criada por Wemerson Januario
 * http://code.google.com/p/login-window/
 *
 */
 
Ext.define('Siccad.view.authentication.CapsWarningTooltip', {
  extend       : 'Ext.tip.QuickTip',
  alias        : 'widget.capswarningtooltip',
  target       : 'authentication-login',
  id           : 'toolcaps',
  anchor       : 'left',
  anchorOffset : 60,
  width        : 305,
  dismissDelay : 0,
  autoHide     : false,
  disabled     : false,
  title        : '<b>Caps Lock est&aacute; ativada</b>',
  html         : '<div>Se Caps lock estiver ativado, isso pode fazer com que voc&ecirc;</div>' +
                 '<div>digite a senha incorretamente.</div><br/>' +
                 '<div>Voc&ecirc; deve pressionar a tecla Caps lock para desativ&aacute;-la</div>' +
                 '<div>antes de digitar a senha.</div>' 
});",JavaScript
"'use strict';

/**
 * Module dependencies.
 */
var users = require('../../app/controllers/users'),
	goaliedash = require('../../app/controllers/goaliedash');

module.exports = function(app) {
	
	app.route('/goaliedash')
		.get(users.requiresLogin, users.hasAuthorization);
};",JavaScript
"'use strict';

var intlNameInitials = function () {
};
var pattern = '{0}{1}';

function _firstLetter(text) {
    return text.charAt(0);
}

function _upperCase(letter) {

    if (letter === 'ı'){
        return 'I';
    }

    return letter.toUpperCase();
}

function _isHangul(l){

    if ((l > 44032) && (l < 55203)) {
        return true;
    }
    return false;

}

function _initials(letter) {
    var l = letter.charCodeAt(0);
    // Generated by regenerate and unicode-8.0.0
    // Greek 117
    // Latin 991
    // Cyrillic 302
    var alphaRegex = '[A-Za-z\xAA\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02B8\u02E0-\u02E4\u0370-\u0373\u0375-\u0377\u037A-\u037D\u037F\u0384\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03E1\u03F0-\u0484\u0487-\u052F\u1D00-\u1D25\u1D2C-\u1D5C\u1D62-\u1D65\u1D6B-\u1D77\u1D79-\u1DBE\u1E00-\u1EFE]';
    var re = new RegExp(alphaRegex,'i');

    if (re.test(letter)){
        return letter;
    }

    return '';
}

function _isSupportedInitials(letter) {

    var alphaRegex = '[A-Za-z\xAA\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02B8\u02E0-\u02E4\u0370-\u0373\u0375-\u0377\u037A-\u037D\u037F\u0384\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03E1\u03F0-\u0484\u0487-\u052F\u1D00-\u1D25\u1D2C-\u1D5C\u1D62-\u1D65\u1D6B-\u1D77\u1D79-\u1DBE\u1E00-\u1EFE]';
    var re = new RegExp(alphaRegex,'i');

    if (re.test(letter)){
        return true;
    }
    return false;
}


function isThai(a){

    var thaiRegex = '[\u0E01-\u0E3A\u0E40-\u0E5B]';
    var re = new RegExp(thaiRegex,'i');

    if (a.length === 1){
        return true;
    } else {
        var letter = _firstLetter(a);
        if (re.test(a)) {
            return true;
        }
    }
    return false;

}

function isCJK(a){

    // HANGUL SYLLABLES
    // We want to be sure the full name is Hangul
    if (a.length < 3){
        var i = 0;
        for(var c=0;c< a.length;c++){
            if (_isHangul(a.charCodeAt(c)) )
            {
                i++;
            }
        }
        if (i === a.length){
            return true;
        }
    }
    return false;
}

intlNameInitials.prototype.format = function (name, options) {

    var initials = '',
        a = '',
        b = '';
    var fields = ['firstName', 'lastName'],
        initialName = { firstName : '', lastName: '' };

    if (name === null || typeof name !== 'object' ) {
        return undefined;
    }

    fields.forEach(function(field){
        if (name.hasOwnProperty(field)) {
            if (name[field] === null || name[field].length === 0){
                // Nothing to do. but keeping it as placeholder
            } else {
                if (_isSupportedInitials(_firstLetter(name[field]))) {
                    initialName[field] = _firstLetter(name[field]);
                    initials = initials + _upperCase(_initials(initialName[field]));
                }
            }
        }

    });


    // for CJK
    if (name.hasOwnProperty(""lastName"")){

        if (name.lastName === null || name.lastName.length === 0){

        } else {
            if (isCJK(name.lastName)) {
                initials = name.lastName;
            }
        }
    }
    if (initials.length === 0){
        return undefined;
    }
    return initials;

};

module.exports = intlNameInitials;
",JavaScript
"// @flow

(require('../../lib/git'): any).rebaseRepoMaster = jest.fn();

import {
  _clearCustomCacheDir as clearCustomCacheDir,
  _setCustomCacheDir as setCustomCacheDir,
} from '../../lib/cacheRepoUtils';

import {copyDir, mkdirp} from '../../lib/fileUtils';

import {parseDirString as parseFlowDirString} from '../../lib/flowVersion';

import {
  add as gitAdd,
  commit as gitCommit,
  init as gitInit,
  setLocalConfig as gitConfig,
} from '../../lib/git';

import {fs, path, child_process} from '../../lib/node';

import {getNpmLibDefs} from '../../lib/npm/npmLibDefs';

import {testProject} from '../../lib/TEST_UTILS';

import {
  _determineFlowVersion as determineFlowVersion,
  _installNpmLibDefs as installNpmLibDefs,
  _installNpmLibDef as installNpmLibDef,
  run,
} from '../install';

const BASE_FIXTURE_ROOT = path.join(__dirname, '__install-fixtures__');

function _mock(mockFn) {
  return ((mockFn: any): JestMockFn<*, *>);
}

async function touchFile(filePath) {
  await fs.close(await fs.open(filePath, 'w'));
}

async function writePkgJson(filePath, pkgJson) {
  await fs.writeJson(filePath, pkgJson);
}

describe('install (command)', () => {
  describe('determineFlowVersion', () => {
    it('infers version from path if arg not passed', () => {
      return testProject(async ROOT_DIR => {
        const ARBITRARY_PATH = path.join(ROOT_DIR, 'some', 'arbitrary', 'path');
        await Promise.all([
          mkdirp(ARBITRARY_PATH),
          touchFile(path.join(ROOT_DIR, '.flowconfig')),
          writePkgJson(path.join(ROOT_DIR, 'package.json'), {
            name: 'test',
            devDependencies: {
              'flow-bin': '^0.40.0',
            },
          }),
        ]);

        const flowVer = await determineFlowVersion(ARBITRARY_PATH);
        expect(flowVer).toEqual({
          kind: 'specific',
          ver: {
            major: 0,
            minor: 40,
            patch: 0,
            prerel: null,
          },
        });
      });
    });

    it('uses explicitly specified version', async () => {
      const explicitVer = await determineFlowVersion('/', '0.7.0');
      expect(explicitVer).toEqual({
        kind: 'specific',
        ver: {
          major: 0,
          minor: 7,
          patch: 0,
          prerel: null,
        },
      });
    });

    it(""uses 'v'-prefixed explicitly specified version"", async () => {
      const explicitVer = await determineFlowVersion('/', 'v0.7.0');
      expect(explicitVer).toEqual({
        kind: 'specific',
        ver: {
          major: 0,
          minor: 7,
          patch: 0,
          prerel: null,
        },
      });
    });
  });

  describe('installNpmLibDefs', () => {
    const origConsoleError = console.error;

    beforeEach(() => {
      (console: any).error = jest.fn();
    });

    afterEach(() => {
      (console: any).error = origConsoleError;
    });

    it('errors if unable to find a project root (.flowconfig)', () => {
      return testProject(async ROOT_DIR => {
        const result = await installNpmLibDefs({
          cwd: ROOT_DIR,
          flowVersion: parseFlowDirString('flow_v0.40.0'),
          explicitLibDefs: [],
          libdefDir: 'flow-typed',
          verbose: false,
          overwrite: false,
          skip: false,
          ignoreDeps: [],
          useCacheUntil: 1000 * 60,
        });
        expect(result).toBe(1);
        expect(_mock(console.error).mock.calls).toEqual([
          [
            'Error: Unable to find a flow project in the current dir or any of ' +
              ""it's parent dirs!\n"" +
              'Please run this command from within a Flow project.',
          ],
        ]);
      });
    });

    it(
      ""errors if an explicitly specified libdef arg doesn't match npm "" +
        'pkgver format',
      () => {
        return testProject(async ROOT_DIR => {
          await touchFile(path.join(ROOT_DIR, '.flowconfig'));
          await writePkgJson(path.join(ROOT_DIR, 'package.json'), {
            name: 'test',
            devDependencies: {
              'flow-bin': '^0.40.0',
            },
          });
          const result = await installNpmLibDefs({
            cwd: ROOT_DIR,
            flowVersion: parseFlowDirString('flow_v0.40.0'),
            explicitLibDefs: ['INVALID'],
            libdefDir: 'flow-typed',
            verbose: false,
            overwrite: false,
            skip: false,
            ignoreDeps: [],
            useCacheUntil: 1000 * 60,
          });
          expect(result).toBe(1);
          expect(_mock(console.error).mock.calls).toEqual([
            [
              'ERROR: Package not found from package.json.\n' +
                'Please specify version for the package in the format of `foo@1.2.3`',
            ],
          ]);
        });
      },
    );

    it('warns if 0 dependencies are found in package.json', () => {
      return testProject(async ROOT_DIR => {
        await Promise.all([
          touchFile(path.join(ROOT_DIR, '.flowconfig')),
          writePkgJson(path.join(ROOT_DIR, 'package.json'), {
            name: 'test',
          }),
        ]);
        const result = await installNpmLibDefs({
          cwd: ROOT_DIR,
          flowVersion: parseFlowDirString('flow_v0.40.0'),
          explicitLibDefs: [],
          libdefDir: 'flow-typed',
          verbose: false,
          overwrite: false,
          skip: false,
          ignoreDeps: [],
          useCacheUntil: 1000 * 60,
        });
        expect(result).toBe(0);
        expect(_mock(console.error).mock.calls).toEqual([
          [""No dependencies were found in this project's package.json!""],
        ]);
      });
    });
  });

  describe('installNpmLibDef', () => {
    const FIXTURE_ROOT = path.join(BASE_FIXTURE_ROOT, 'installNpmLibDef');

    const FIXTURE_FAKE_CACHE_REPO_DIR = path.join(
      FIXTURE_ROOT,
      'fakeCacheRepo',
    );

    const origConsoleLog = console.log;
    beforeEach(() => {
      (console: any).log = jest.fn();
    });

    afterEach(() => {
      (console: any).log = origConsoleLog;
    });

    it('installs scoped libdefs within a scoped directory', () => {
      return testProject(async ROOT_DIR => {
        const FAKE_CACHE_DIR = path.join(ROOT_DIR, 'fakeCache');
        const FAKE_CACHE_REPO_DIR = path.join(FAKE_CACHE_DIR, 'repo');
        const FLOWPROJ_DIR = path.join(ROOT_DIR, 'flowProj');
        const FLOWTYPED_DIR = path.join(FLOWPROJ_DIR, 'flow-typed', 'npm');

        await Promise.all([mkdirp(FAKE_CACHE_REPO_DIR), mkdirp(FLOWTYPED_DIR)]);

        await Promise.all([
          copyDir(FIXTURE_FAKE_CACHE_REPO_DIR, FAKE_CACHE_REPO_DIR),
          touchFile(path.join(FLOWPROJ_DIR, '.flowconfig')),
          writePkgJson(path.join(FLOWPROJ_DIR, 'package.json'), {
            name: 'test',
            devDependencies: {
              'flow-bin': '^0.40.0',
            },
          }),
        ]);
        await gitInit(FAKE_CACHE_REPO_DIR),
          await gitAdd(FAKE_CACHE_REPO_DIR, 'definitions');
        await gitCommit(FAKE_CACHE_REPO_DIR, 'FIRST');

        setCustomCacheDir(FAKE_CACHE_DIR);

        const availableLibDefs = await getNpmLibDefs(
          path.join(FAKE_CACHE_REPO_DIR, 'definitions'),
        );

        await installNpmLibDef(availableLibDefs[0], FLOWTYPED_DIR, false);
      });
    });
  });

  describe('end-to-end tests', () => {
    const FIXTURE_ROOT = path.join(BASE_FIXTURE_ROOT, 'end-to-end');

    const FIXTURE_FAKE_CACHE_REPO_DIR = path.join(
      FIXTURE_ROOT,
      'fakeCacheRepo',
    );

    const origConsoleLog = console.log;
    const origConsoleError = console.error;
    beforeEach(() => {
      (console: any).log = jest.fn();
      (console: any).error = jest.fn();
    });
    afterEach(() => {
      (console: any).log = origConsoleLog;
      (console: any).error = origConsoleError;
    });

    async function fakeProjectEnv(runTest) {
      return await testProject(async ROOT_DIR => {
        const FAKE_CACHE_DIR = path.join(ROOT_DIR, 'fakeCache');
        const FAKE_CACHE_REPO_DIR = path.join(FAKE_CACHE_DIR, 'repo');
        const FLOWPROJ_DIR = path.join(ROOT_DIR, 'flowProj');
        const FLOWTYPED_DIR = path.join(FLOWPROJ_DIR, 'flow-typed', 'npm');

        await Promise.all([mkdirp(FAKE_CACHE_REPO_DIR), mkdirp(FLOWTYPED_DIR)]);

        await copyDir(FIXTURE_FAKE_CACHE_REPO_DIR, FAKE_CACHE_REPO_DIR);

        await gitInit(FAKE_CACHE_REPO_DIR),
          await Promise.all([
            gitConfig(FAKE_CACHE_REPO_DIR, 'user.name', 'Test Author'),
            gitConfig(FAKE_CACHE_REPO_DIR, 'user.email', 'test@flow-typed.org'),
          ]);
        await gitAdd(FAKE_CACHE_REPO_DIR, 'definitions');
        await gitCommit(FAKE_CACHE_REPO_DIR, 'FIRST');

        setCustomCacheDir(FAKE_CACHE_DIR);

        const origCWD = process.cwd;
        (process: any).cwd = () => FLOWPROJ_DIR;
        try {
          await runTest(FLOWPROJ_DIR);
        } finally {
          (process: any).cwd = origCWD;
          clearCustomCacheDir();
        }
      });
    }

    it('installs available libdefs', () => {
      return fakeProjectEnv(async FLOWPROJ_DIR => {
        // Create some dependencies
        await Promise.all([
          touchFile(path.join(FLOWPROJ_DIR, '.flowconfig')),
          writePkgJson(path.join(FLOWPROJ_DIR, 'package.json'), {
            name: 'test',
            devDependencies: {
              'flow-bin': '^0.43.0',
            },
            dependencies: {
              foo: '1.2.3',
            },
          }),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'foo')),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'flow-bin')),
        ]);

        // Run the install command
        await run({
          overwrite: false,
          verbose: false,
          skip: false,
          ignoreDeps: [],
          explicitLibDefs: [],
        });

        // Installs libdefs
        expect(
          await Promise.all([
            fs.exists(
              path.join(
                FLOWPROJ_DIR,
                'flow-typed',
                'npm',
                'flow-bin_v0.x.x.js',
              ),
            ),
            fs.exists(
              path.join(FLOWPROJ_DIR, 'flow-typed', 'npm', 'foo_v1.x.x.js'),
            ),
          ]),
        ).toEqual([true, true]);

        // Signs installed libdefs
        const fooLibDefContents = await fs.readFile(
          path.join(FLOWPROJ_DIR, 'flow-typed', 'npm', 'foo_v1.x.x.js'),
          'utf8',
        );
        expect(fooLibDefContents).toContain('// flow-typed signature: ');
        expect(fooLibDefContents).toContain('// flow-typed version: ');
      });
    });

    it('installs available libdefs using PnP', () => {
      return fakeProjectEnv(async FLOWPROJ_DIR => {
        // Create some dependencies
        await Promise.all([
          touchFile(path.join(FLOWPROJ_DIR, '.flowconfig')),
          writePkgJson(path.join(FLOWPROJ_DIR, 'package.json'), {
            name: 'test',
            installConfig: {
              pnp: true,
            },
            devDependencies: {
              'flow-bin': '^0.43.0',
            },
            dependencies: {
              // Use local foo for initial install
              foo: 'file:./foo',
            },
          }),
          mkdirp(path.join(FLOWPROJ_DIR, 'foo')),
        ]);

        await writePkgJson(path.join(FLOWPROJ_DIR, 'foo/package.json'), {
          name: 'foo',
          version: '1.2.3',
        });

        // Yarn install so PnP file resolves to local foo
        await child_process.execP('yarn install', {cwd: FLOWPROJ_DIR});

        // Overwrite foo dep so it's like we installed from registry instead
        writePkgJson(path.join(FLOWPROJ_DIR, 'package.json'), {
          name: 'test',
          installConfig: {
            pnp: true,
          },
          devDependencies: {
            'flow-bin': '^0.43.0',
          },
          dependencies: {
            foo: '1.2.3',
          },
        });

        // Run the install command
        await run({
          overwrite: false,
          verbose: false,
          skip: false,
          ignoreDeps: [],
          explicitLibDefs: [],
        });

        // Installs libdefs
        expect(
          await Promise.all([
            fs.exists(
              path.join(
                FLOWPROJ_DIR,
                'flow-typed',
                'npm',
                'flow-bin_v0.x.x.js',
              ),
            ),
            fs.exists(
              path.join(FLOWPROJ_DIR, 'flow-typed', 'npm', 'foo_v1.x.x.js'),
            ),
          ]),
        ).toEqual([true, true]);

        // Signs installed libdefs
        const fooLibDefRawContents = await fs.readFile(
          path.join(FLOWPROJ_DIR, 'flow-typed', 'npm', 'foo_v1.x.x.js'),
        );
        const fooLibDefContents = fooLibDefRawContents.toString();
        expect(fooLibDefContents).toContain('// flow-typed signature: ');
        expect(fooLibDefContents).toContain('// flow-typed version: ');
      });
    });

    it('ignores libdefs in dev, bundled, optional or peer dependencies when flagged', () => {
      return fakeProjectEnv(async FLOWPROJ_DIR => {
        // Create some dependencies
        await Promise.all([
          touchFile(path.join(FLOWPROJ_DIR, '.flowconfig')),
          writePkgJson(path.join(FLOWPROJ_DIR, 'package.json'), {
            name: 'test',
            devDependencies: {
              foo: '1.2.3',
            },
            peerDependencies: {
              'flow-bin': '^0.43.0',
            },
            optionalDependencies: {
              foo: '2.0.0',
            },
            bundledDependencies: {
              bar: '^1.6.9',
            },
            dependencies: {
              foo: '1.2.3',
            },
          }),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'foo')),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'flow-bin')),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'bar')),
        ]);

        // Run the install command
        await run({
          overwrite: false,
          verbose: false,
          skip: false,
          ignoreDeps: ['dev', 'optional', 'bundled'],
          explicitLibDefs: [],
        });

        // Installs libdefs
        expect(
          await Promise.all([
            fs.exists(
              path.join(
                FLOWPROJ_DIR,
                'flow-typed',
                'npm',
                'flow-bin_v0.x.x.js',
              ),
            ),
            fs.exists(
              path.join(FLOWPROJ_DIR, 'flow-typed', 'npm', 'foo_v1.x.x.js'),
            ),
            fs.exists(
              path.join(FLOWPROJ_DIR, 'flow-typed', 'npm', 'bar_v1.x.x.js'),
            ),
          ]),
        ).toEqual([true, true, false]);
      });
    });

    it('stubs unavailable libdefs', () => {
      return fakeProjectEnv(async FLOWPROJ_DIR => {
        // Create some dependencies
        await Promise.all([
          touchFile(path.join(FLOWPROJ_DIR, '.flowconfig')),
          writePkgJson(path.join(FLOWPROJ_DIR, 'package.json'), {
            name: 'test',
            devDependencies: {
              'flow-bin': '^0.43.0',
            },
            dependencies: {
              someUntypedDep: '1.2.3',
            },
          }),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'someUntypedDep')),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'flow-bin')),
        ]);

        // Run the install command
        await run({
          overwrite: false,
          verbose: false,
          skip: false,
          explicitLibDefs: [],
        });

        // Installs a stub for someUntypedDep
        expect(
          await fs.exists(
            path.join(
              FLOWPROJ_DIR,
              'flow-typed',
              'npm',
              'someUntypedDep_vx.x.x.js',
            ),
          ),
        ).toBe(true);
      });
    });

    it(""doesn't stub unavailable libdefs when --skip is passed"", () => {
      return fakeProjectEnv(async FLOWPROJ_DIR => {
        // Create some dependencies
        await Promise.all([
          touchFile(path.join(FLOWPROJ_DIR, '.flowconfig')),
          writePkgJson(path.join(FLOWPROJ_DIR, 'package.json'), {
            name: 'test',
            devDependencies: {
              'flow-bin': '^0.43.0',
            },
            dependencies: {
              someUntypedDep: '1.2.3',
            },
          }),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'someUntypedDep')),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'flow-bin')),
        ]);

        // Run the install command
        await run({
          overwrite: false,
          verbose: false,
          skip: true,
          explicitLibDefs: [],
        });

        // Installs a stub for someUntypedDep
        expect(
          await fs.exists(path.join(FLOWPROJ_DIR, 'flow-typed', 'npm')),
        ).toBe(true);
      });
    });

    it('overwrites stubs when libdef becomes available (with --overwrite)', () => {
      return fakeProjectEnv(async FLOWPROJ_DIR => {
        // Create some dependencies
        await Promise.all([
          touchFile(path.join(FLOWPROJ_DIR, '.flowconfig')),
          writePkgJson(path.join(FLOWPROJ_DIR, 'package.json'), {
            name: 'test',
            devDependencies: {
              'flow-bin': '^0.43.0',
            },
            dependencies: {
              foo: '1.2.3',
            },
          }),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'foo')),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'flow-bin')),
        ]);

        await fs.writeFile(
          path.join(FLOWPROJ_DIR, 'flow-typed', 'npm', 'foo_vx.x.x.js'),
          '',
        );

        // Run the install command
        await run({
          overwrite: true,
          verbose: false,
          skip: false,
          explicitLibDefs: [],
        });

        // Replaces the stub with the real typedef
        expect(
          await Promise.all([
            fs.exists(
              path.join(FLOWPROJ_DIR, 'flow-typed', 'npm', 'foo_vx.x.x.js'),
            ),
            fs.exists(
              path.join(FLOWPROJ_DIR, 'flow-typed', 'npm', 'foo_v1.x.x.js'),
            ),
          ]),
        ).toEqual([false, true]);
      });
    });

    it(""doesn't overwrite tweaked libdefs (without --overwrite)"", () => {
      return fakeProjectEnv(async FLOWPROJ_DIR => {
        // Create some dependencies
        await Promise.all([
          touchFile(path.join(FLOWPROJ_DIR, '.flowconfig')),
          writePkgJson(path.join(FLOWPROJ_DIR, 'package.json'), {
            name: 'test',
            devDependencies: {
              'flow-bin': '^0.43.0',
            },
            dependencies: {
              foo: '1.2.3',
            },
          }),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'foo')),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'flow-bin')),
        ]);

        // Run the install command
        await run({
          overwrite: false,
          verbose: false,
          skip: false,
          explicitLibDefs: [],
        });

        const libdefFilePath = path.join(
          FLOWPROJ_DIR,
          'flow-typed',
          'npm',
          'foo_v1.x.x.js',
        );

        // Tweak the libdef for foo
        const libdefFileContent =
          (await fs.readFile(libdefFilePath, 'utf8')) + '\n// TWEAKED!';
        await fs.writeFile(libdefFilePath, libdefFileContent);

        // Run install command again
        await run({
          overwrite: false,
          verbose: false,
          skip: false,
          explicitLibDefs: [],
        });

        // Verify that the tweaked libdef file wasn't overwritten
        expect(await fs.readFile(libdefFilePath, 'utf8')).toBe(
          libdefFileContent,
        );
      });
    });

    it('overwrites tweaked libdefs when --overwrite is passed', () => {
      return fakeProjectEnv(async FLOWPROJ_DIR => {
        // Create some dependencies
        await Promise.all([
          touchFile(path.join(FLOWPROJ_DIR, '.flowconfig')),
          writePkgJson(path.join(FLOWPROJ_DIR, 'package.json'), {
            name: 'test',
            devDependencies: {
              'flow-bin': '^0.43.0',
            },
            dependencies: {
              foo: '1.2.3',
            },
          }),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'foo')),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'flow-bin')),
        ]);

        // Run the install command
        await run({
          overwrite: false,
          verbose: false,
          skip: false,
          explicitLibDefs: [],
        });

        const libdefFilePath = path.join(
          FLOWPROJ_DIR,
          'flow-typed',
          'npm',
          'foo_v1.x.x.js',
        );

        // Tweak the libdef for foo
        const libdefFileContent = await fs.readFile(libdefFilePath, 'utf8');
        await fs.writeFile(libdefFilePath, libdefFileContent + '\n// TWEAKED!');

        // Run install command again
        await run({
          overwrite: true,
          skip: false,
          verbose: false,
          explicitLibDefs: [],
        });

        // Verify that the tweaked libdef file wasn't overwritten
        expect(await fs.readFile(libdefFilePath, 'utf8')).toBe(
          libdefFileContent,
        );
      });
    });

    it('uses flow-bin defined in another package.json', () => {
      return fakeProjectEnv(async FLOWPROJ_DIR => {
        // Create some dependencies
        await Promise.all([
          touchFile(path.join(FLOWPROJ_DIR, '.flowconfig')),
          writePkgJson(path.join(FLOWPROJ_DIR, 'package.json'), {
            name: 'test',
            dependencies: {
              foo: '1.2.3',
            },
          }),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'foo')),
          writePkgJson(path.join(FLOWPROJ_DIR, '..', 'package.json'), {
            name: 'parent',
            devDependencies: {
              'flow-bin': '^0.45.0',
            },
          }),
          mkdirp(path.join(FLOWPROJ_DIR, '..', 'node_modules', 'flow-bin')),
        ]);

        // Run the install command
        await run({
          overwrite: false,
          verbose: false,
          skip: false,
          packageDir: path.join(FLOWPROJ_DIR, '..'),
          explicitLibDefs: [],
        });

        // Installs libdef
        expect(
          await fs.exists(
            path.join(FLOWPROJ_DIR, 'flow-typed', 'npm', 'foo_v1.x.x.js'),
          ),
        ).toEqual(true);
      });
    });

    it('uses .flowconfig from specified root directory', () => {
      return fakeProjectEnv(async FLOWPROJ_DIR => {
        // Create some dependencies
        await Promise.all([
          mkdirp(path.join(FLOWPROJ_DIR, 'src')),
          writePkgJson(path.join(FLOWPROJ_DIR, 'package.json'), {
            name: 'test',
            devDependencies: {
              'flow-bin': '^0.43.0',
            },
            dependencies: {
              foo: '1.2.3',
            },
          }),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'foo')),
          mkdirp(path.join(FLOWPROJ_DIR, 'node_modules', 'flow-bin')),
        ]);

        await touchFile(path.join(FLOWPROJ_DIR, 'src', '.flowconfig'));

        // Run the install command
        await run({
          overwrite: false,
          verbose: false,
          skip: false,
          rootDir: path.join(FLOWPROJ_DIR, 'src'),
          explicitLibDefs: [],
        });

        // Installs libdef
        expect(
          await fs.exists(
            path.join(
              FLOWPROJ_DIR,
              'src',
              'flow-typed',
              'npm',
              'foo_v1.x.x.js',
            ),
          ),
        ).toEqual(true);
      });
    });
  });
});
",JavaScript
"version https://git-lfs.github.com/spec/v1
oid sha256:d5b913ad3304fa791ac6c6064dcecf37b157290bb0e8292e76aee05bee6dc425
size 3752
",JavaScript
"import {Component} from 'react'

export class Greeter {
  constructor (message) {
    this.greeting = message;
  }

  greetFrom (...names) {
    let suffix = names.reduce((s, n) => s + "", "" + n.toUpperCase());
    return ""Hello, "" + this.greeting + "" from "" + suffix;
  }

  greetNTimes ({name, times}) {
    let greeting = this.greetFrom(name);
    for (let i = 0; i < times; i++) {
      console.log(greeting)
    }
  }
}

new Greeter(""foo"").greetNTimes({name: ""Webstorm"", times: 3})


function foo (x, y, z) {
  var i = 0;
  var x = {0: ""zero"", 1: ""one""};
  var a = [0, 1, 2];
  var foo = function () {
  }
  var asyncFoo = async (x, y, z) => {
  }
  var v = x.map(s => s.length);
  if (!i > 10) {
    for (var j = 0; j < 10; j++) {
      switch (j) {
        case 0:
          value = ""zero"";
          break;
        case 1:
          value = ""one"";
          break;
      }
      var c = j > 5 ? ""GT 5"" : ""LE 5"";
    }
  } else {
    var j = 0;
    try {
      while (j < 10) {
        if (i == j || j > 5) {
          a[j] = i + j * 12;
        }
        i = (j << 2) & 4;
        j++;
      }
      do {
        j--;
      } while (j > 0)
    } catch (e) {
      alert(""Failure: "" + e.message);
    } finally {
      reset(a, i);
    }
  }
}
",JavaScript
"var RocketBoots = {

	isInitialized : false,
	readyFunctions : [],
	components : {},
	loadedScripts: [],
	version: {full: ""0.7.0"", major: 0, minor: 7, patch: 0, codeName: ""sun-master""},
	_autoLoadRequirements: true,
	_initTimer : null,
	_MAX_ATTEMPTS : 300,
	_BOOTING_ELEMENT_ID : ""booting-up-rocket-boots"",
	_: null, // Lodash
	$: null, // jQuery
	
//==== Classes

	Component : function(c){
		this.fileName = c;
		this.name = null;
		this.isLoaded = false;
		this.isInstalled = false;	
	},
	
//==== General Functions
	log : console.log,
	loadScript : function(url, callback){
		//console.log(""Loading script"", url);
		// http://stackoverflow.com/a/7719185/1766230
		var o = this;
		var s = document.createElement('script');
		var r = false;
		var t;
		s.type = 'text/javascript';
		s.src = ""scripts/"" + url + "".js"";
		s.className = ""rocketboots-script"";
		s.onload = s.onreadystatechange = function() {
			//console.log( this.readyState ); //uncomment this line to see which ready states are called.
			if ( !r && (!this.readyState || this.readyState == 'complete') )
			{
				r = true;
				o.loadedScripts.push(url);
				if (typeof callback == ""function"") callback();
			}
		};
		t = document.getElementsByTagName('script')[0];
		t.parentNode.insertBefore(s, t);
		return this;
	},

//==== Component Functions

	hasComponent: function (componentClass) {
		if (typeof RocketBoots[componentClass] == ""function"") {
			return true;
		} else {
			return false;
		}
	},
	installComponent : function (options, callback, attempt) {
		// options = { fileName, classNames, requirements, description, credits }
		var o = this;
		var mainClassName = (typeof options.classNames === 'object' && options.classNames.length > 0) ? options.classNames[0] : (options.classNames || options.className);
		var componentClass = options[mainClassName];
		var requirements = options.requirements;
		var fileName = options.fileName;
		var callbacks = [];
		var i;
		// Setup array of callbacks
		if (typeof callback === 'function') { 			callbacks.push(callback); }
		if (typeof options.callback === 'function') { 	callbacks.push(options.callback); }
		if (typeof options.callbacks === 'object') { 	callbacks.concat(options.callbacks); }
		// Check for possible errors
		if (typeof mainClassName !== 'string') {
			console.error(""Error installing component: mainClassName is not a string"", mainClassName, options);
			console.log(""options"", options);
			return;
		} else if (typeof componentClass !== 'function') {
			console.error(""Error installing component: class name"", mainClassName, ""not found on options:"", options);
			console.log(""options"", options);
			return;
		}
		
		//console.log(""Installing"", fileName, "" ...Are required components"", requirements, "" loaded?"", o.areComponentsLoaded(requirements));
		if (!o.areComponentsLoaded(requirements)) {
			var tryAgainDelay, compTimer;

			if (typeof attempt === ""undefined"") { 
				attempt = 1; 
			} else if (attempt > o._MAX_ATTEMPTS) {
				console.error(""Could not initialize RocketBoots: too many attempts"");
				return false;
			} else {
				attempt++;
			}

			if (o._autoLoadRequirements) {
				console.log(fileName, ""requires component(s)"", requirements, "" which aren't loaded. Autoloading..."");
				o.loadComponents(requirements);
				tryAgainDelay = 100 * attempt;
			} else {
				console.warn(fileName, ""requires component(s)"", requirements, "" which aren't loaded."");
				tryAgainDelay = 5000;
			}
			compTimer = window.setTimeout(function(){ 
				o.installComponent(options, callback, attempt);
			}, tryAgainDelay);

		} else {
			if (typeof o.components[fileName] == ""undefined"") {
				o.components[fileName] = new o.Component(fileName);
			}
			/*
			for (i = 0; i < callbacks.length; i++) {
				if (typeof callbacks[i] === ""function"") {
					callbacks[i]();
				}
			}
			*/
			o.components[fileName].name = mainClassName;
			o.components[fileName].isInstalled = true;
			o.components[fileName].callbacks = callbacks;
			// TODO: Add description and credits
			//o.components[fileName].description = """";
			//o.components[fileName].credits = """";
			o[mainClassName] = componentClass;
		}
		return this;
	},
	getComponentByName: function (componentName) {
		var o = this;
		for (var cKey in o.components) {
			if (o.components[cKey].name == componentName) {
				return o.components[cKey];
			}
		};
		return;
	},
	areComponentsLoaded: function (componentNameArr) {
		var o = this, areLoaded = true;
		if (typeof componentNameArr !== 'object') {
			return areLoaded;
		}
		for (var i = 0; i < componentNameArr.length; i++) {
			if (!o.isComponentInstalled(componentNameArr[i])) { areLoaded = false; }
		};
		return areLoaded;
	},
	isComponentInstalled: function (componentName) {
		var comp = this.getComponentByName(componentName);
		return (comp && comp.isInstalled);
	},
	loadComponents : function(arr, path){
		var o = this;
		var componentName;
		path = (typeof path === 'undefined') ? ""rocketboots/"" : path;

		for (var i = 0, al = arr.length; i < al; i++){
			componentName = arr[i];
			if (typeof o.components[componentName] == ""undefined"") {
				o.components[componentName] = new o.Component(componentName);
				o.loadScript(path + arr[i], function(){
					o.components[componentName].isLoaded = true;
				});
			} else {
				//console.warn(""Trying to load"", componentName, ""component that already exists."");
			}
		}
		return this;
	},
	loadCustomComponents : function (arr, path) {
		path = (typeof path === 'undefined') ? """" : path;
		return this.loadComponents(arr, path);
	},
	areAllComponentsLoaded : function(){
		var o = this;
		var componentCount = 0,
			componentsInstalledCount = 0;
		for (var c in o.components) {
			// if (o.components.hasOwnProperty(c)) {  do stuff	}
			componentCount++;
			if (o.components[c].isInstalled) componentsInstalledCount++;
		}
		console.log(""RB Components Installed: "" + componentsInstalledCount + ""/"" + componentCount);
		return (componentsInstalledCount >= componentCount);
	},

//==== Ready and Init Functions

	ready : function(callback){
		if (typeof callback == ""function"") {
			if (this.isInitialized) {
				callback(this);
			} else {
				this.readyFunctions.push(callback);
			}
		} else {
			console.error(""Ready argument (callback) not a function"");
		}
		return this;
	},
	runReadyFunctions : function(){
		var o = this;
		// Loop over readyFunctions and run each one
		var f, fn;
		for (var i = 0; o.readyFunctions.length > 0; i++){
			f = o.readyFunctions.splice(i,1);
			fn = f[0];
			fn(o);
		}
		return this;	
	},
	init : function(attempt){
		var o = this;
		// TODO: allow dependecies to be injected rather than forcing them to be on the window scope
		var isJQueryUndefined = (typeof $ === ""undefined"");
		var isLodashUndefined = (typeof _ === ""undefined"");
		var areRequiredScriptsMissing = isJQueryUndefined || isLodashUndefined;

		if (typeof attempt === ""undefined"") { 
			attempt = 1; 
		} else if (attempt > o._MAX_ATTEMPTS) {
			console.error(""Could not initialize RocketBoots: too many attempts"");
			return false;
		} else {
			attempt++;
		}
		//console.log(""RB Init"", attempt, (areRequiredScriptsMissing ? ""Waiting on required objects from external scripts"" : """"));

		if (!isJQueryUndefined) {
			o.$ = $;
			o.$('#' + o._BOOTING_ELEMENT_ID).show();
		}
		if (!isLodashUndefined) {
			o._ = _;
			o.each = o.forEach = _.each;
		}

		function tryAgain () {
			// Clear previous to stop multiple inits from happening
			window.clearTimeout(o._initTimer);
			o._initTimer = window.setTimeout(function(){
				o.init(attempt);
			}, (attempt * 10));
		}

		// On first time through, do some things
		if (attempt === 1) {
			// Create ""rb"" alias
			if (typeof window.rb !== ""undefined"") {
				o._rb = window.rb;
			}
			window.rb = o;
			
			// Aliases
			o.window = window;
			o.document = window.document;

			// Load default components
			// TODO: make this configurable
			this.loadComponents([""Game""]);

			// Load required scripts
			if (isJQueryUndefined) {
				o.loadScript(""libs/jquery-2.2.4.min"", function(){
					//o.init(1);
				});
			} 
			if (isLodashUndefined) {
				o.loadScript(""libs/lodash.min"", function(){ });
			}
		}

		if (o.areAllComponentsLoaded() && !areRequiredScriptsMissing) {
			console.log(""RB Init - All scripts and components are loaded."", o.loadedScripts, ""\nRunning component callbacks..."");
			// TODO: These don't necessarily run in the correct order for requirements
			o.each(o.components, function(component){
				o.each(component.callbacks, function(callback){
					console.log(""Callback for"", component.name);
					callback(); // TODO: Make this run in the right context?
				});
			});
			console.log(""RB Init - Running Ready functions.\n"");
			o.$('#' + o._BOOTING_ELEMENT_ID).hide();
			o.runReadyFunctions();
			o.isInitialized = true;
			return true;
		}

		tryAgain();
		return false;
	}

};

RocketBoots.init();
",JavaScript
"import React, { PropTypes } from 'react';

class Link extends React.Component {
  render() {
    return <article key={this.props.item.id} className=""List-Item"">
      <header className=""List-Item-Header"">
        <cite className=""List-Item-Title""><a href={this.props.item.href}>{this.props.item.title}</a></cite>
      </header>
      <p className=""List-Item-Description List-Item-Description--Short"">{this.props.item.short_description}</p>
    </article>

  }
}

export default Link;",JavaScript
"#  :floppy_disk: ghbackup

[![GoDoc](https://godoc.org/qvl.io/ghbackup?status.svg)](https://godoc.org/qvl.io/ghbackup)
[![Build Status](https://travis-ci.org/qvl/ghbackup.svg?branch=master)](https://travis-ci.org/qvl/ghbackup)
[![Go Report Card](https://goreportcard.com/badge/qvl.io/ghbackup)](https://goreportcard.com/report/qvl.io/ghbackup)


Backup your GitHub repositories with a simple command-line application written in Go.

The simplest way to keep your repositories save:

1. [Install](#install) `ghbackup`
1. Get a token from https://github.com/settings/tokens
2. `ghbackup -secret token /path/to/backup/dir`

This will backup all repositories you have access to.

-----------------------------------



    Embarrassing simple GitHub backup tool

    Usage: ghbackup [flags] directory

      directory  path to save the repositories to

    At least one of -account or -secret must be specified.

    Flags:
      -account string
            GitHub user or organization name to get repositories from.
            If not specified, all repositories the authenticated user has access to
    will be loaded.
      -secret string
            Authentication secret for GitHub API.
            Can use the users password or a personal access token (https://github.c
    om/settings/tokens).
            Authentication increases rate limiting (https://developer.github.com/v3
    /#rate-limiting) and enables backup of private repositories.
      -silent
            Suppress all output
      -version
            Print binary version

    For more visit https://qvl.io/ghbackup.


## Install

- Note that `ghbackup` uses `git` under the hood. Please make sure it is installed on your system.

- With [Go](https://golang.org/):
```
go get qvl.io/ghbackup
```

- With [Homebrew](http://brew.sh/):
```
brew install qvl/tap/ghbackup
```

- Download binary: https://github.com/qvl/ghbackup/releases


## Automation

Mostly, we like to setup backups to run automatically in an interval.

Let's setup `ghbackup` on a Linux server and make it run daily at 1am. This works similar on other platforms.
There are different tools to do this:


### systemd and sleepto

*Also see [this tutorial](https://jorin.me/automating-github-backup-with-ghbackup/).*

[systemd](https://freedesktop.org/wiki/Software/systemd/) runs on most Linux systems and using [sleepto](https://qvl.io/sleepto) it's easy to create a service to schedule a backup.

- Create a new unit file:
``` sh
sudo touch /etc/systemd/system/ghbackup.service && sudo chmod 644 $_
```

- Edit file:
```
[Unit]
Description=GitHub backup
After=network.target

[Service]
User=jorin
ExecStart=/PATH/TO/sleepto -hour 1 /PATH/TO/ghbackup -account qvl /home/USER/github
Restart=always

[Install]
WantedBy=multi-user.target
```

- Replace the paths with your options.

- Start service and enable it on boot:
``` sh
sudo systemctl daemon-reload
sudo systemctl enable --now ghbackup
```

- Check if service is running:
``` sh
systemctl status ghbackup
```


### Cron

Cron is a job scheduler that already runs on most Unix systems.

- Run `crontab -e`
- Add a new line and replace `NAME` and `DIR` with your options:

``` sh
0 1 * * * ghbackup -account NAME DIR
```

For example:

``` sh
0 1 * * * ghbackup -account qvl /home/qvl/backup-qvl
```

### Sending statistics

The last line of the output contains a summary.
You can use this to collect statistics about your backups.
An easy way would be to use a [Slack hook](https://api.slack.com/incoming-webhooks) and send it like this:

```sh
ghbackup -secret $GITHUB_TOKEN $DIR \
  | tail -n1 \
  | xargs -I%% curl -s -X POST --data-urlencode 'payload={""text"": ""%%""}' $SLACK_HOOK
```


## What happens?

Get all repositories of a GitHub account.
Save them to a folder.
Update already cloned repositories.

Best served as a scheduled job to keep your backups up to date!


## Limits

`ghbackup` is about repositories.
There are other solutions if you like to backup issues and wikis.


## Use as Go package

From another Go program you can directly use the `ghbackup` sub-package.
Have a look at the [GoDoc](https://godoc.org/qvl.io/ghbackup/ghbackup).


## Development

Make sure to use `gofmt` and create a [Pull Request](https://github.com/qvl/ghbackup/pulls).

### Releasing

Push a new Git tag and [GoReleaser](https://github.com/goreleaser/releaser) will automatically create a release.


## License

[MIT](./license)
",Markdown
"# TriDIYBio

Web site for TriDIYBio

## Workflow

Setup:
- `git clone https://github.com/Densaugeo/TriDIYBio.git`
- `npm install`

Making changes:
- `git pull`
- Make your changes and save files
- `node gen.js`
- `node test_server.js`
- `git commit -am ""Commit message""`
- `npm run push`
",Markdown
"# dotfiles
My config files for linux

Looking for a sane default vimrc?
```
wget https://raw.githubusercontent.com/ekohilas/dotfiles/master/.vimrc.default -O ~/.vimrc
```

Want the DarkIdle Colorscheme?
```
wget https://raw.githubusercontent.com/ekohilas/dotfiles/master/.vim/colors/DarkIdle.vim -O ~/.vim/colors/DarkIdle.vim
```
Don't forget to add ```colorscheme DarkIdle``` to your .vimrc
",Markdown
"---
layout: post
title:  How the Go team could track what to include in release notes
date:   2021-03-13
author: Paschalis Ts
tags:   [golang, foss]
mathjax: false
description: """"
---

Release notes can sometimes be exciting to read. 

Condensing the work since the last release into a couple of paragraphs, announcing new exciting features or deprecating older ones, communicating bugfixes or architectural decisions, making important announcements.. Come to think of it, the couple of times that I've had to *write* them, wasn't so bad at all! 

Unfortunately, the current trend is release notes becoming a mix of *Bug fixes*, *Made ur app faster*, *Added new feature, won't tell you what it is*, which can sound like generalities at best and condescending or patronizing at worst; usually like something written just to fill an arbitrary word limit in the last five minutes before a release.

Here's what's currently listed in the ""What's New"" section for a handful of popular applications in the Google Play Store.

```
- Thanks for choosing Chrome! This release includes stability and performance improvements.

- Every week we polish up the Pinterest app to make it faster and better than ever. 
Tell us if you like this newest version at http://help.pinterest.com/contact

- Get the best experience for enjoying recent hits and timeless classics with our latest 
Netflix update for your phone and tablet.

- We update the Uber app as often as possible to help make it faster and more reliable 
for you. This version includes several bug fixes and performance improvements.

- We’re always making changes and improvements to Spotify. To make sure you don’t miss 
a thing, just keep your Updates turned on.

- For new features, look for in-product education & notifications sharing the feature 
and how to use it! (FYI this was YouTube, as it doesn't even mention the product's name)
```

The Opera browser, on the other hand has something more reminiscent of actual release notes.
```
What's New
Thanks for choosing Opera! This version includes improvements to Flow, 
the share dialog and the built-in video player.

More changes:
- Chromium 87
- Updated onboarding
- Adblocker improvements
- Various fixes and stability improvements
```


Just to make things clear *I'm not bashing these fellow developers at all*. [Here's](https://github.com/beatlabs/patron/releases) the release history of a project I'm helping maintain; our release notes can be just as vague sometimes. 

Writing helpful, informative (and even fun!) release notes is time consuming and has little benefit non-technical folks. It's also hard to keep track of what's changed since the last release, and deciding what's important and what's not.

How would *you* do it?

## The Go team solution
So, how is Go team approaching this problem? A typical Go release in the past three years may contain from 1.6k to 2.3k commits.

```
from -> to   commits
1.15 -> 1.16 1695
1.14 -> 1.15 1651
1.13 -> 1.14 1754
1.12 -> 1.13 1646
1.11 -> 1.12 1682
1.10 -> 1.11 2268
1.9  -> 1.10 1996
1.8  -> 1.9  2157
```

How do you keep track of what was important, what someone reading the release notes may need to know?

I set to find out, after [Emmanuel](https://twitter.com/odeke_et) (a great person, and one of the best ambassadors the Go community could wish for), added a mysterious comment on one of my [latest CLs](https://go-review.googlesource.com/c/go/+/284136) that read `RELNOTE=yes`.

The [`build`](https://github.com/golang/build) repo holds Go's continuous build and release infrastructure; it also contains the [`relnote` tool](https://github.com/golang/build/blob/master/cmd/relnote/relnote.go) that gathers and summarizes Gerrit changes (CLs) which are marked with RELNOTE annotations. The earliest reference of this idea I could find is [this CL](https://go-review.googlesource.com/c/build/+/30697) from Brad Fitzpatrick, back in October 2016.

So, any time a commit is merged (or close to merging) where someone thinks it may be useful to include in the release notes, they can leave a `RELNOTE=yes` or `RELNOTES=yes` comment. All these CLs are then gathered to be reviewed by the release author. Here's the actual Gerrit API query:
```
query := fmt.Sprintf(`status:merged branch:master since:%s (comment:""RELNOTE"" OR comment:""RELNOTES"")`
```

Of course, this is not a tool that will automatically generate something you can publish, but it's a pretty good alternative to sieving a couple thousands of commits manually.

I love the simplicity; I feel that it embodies the Go way of doing things. I feel that if my team at work tried to find a solution, we'd come up with something much more complex, fragile and unmaintainable than this. The tool doesn't even support time ranges as input; since Go releases are roughly once every six months, here's how it decides which commits to include

```go
// Releases are every 6 months. Walk forward by 6 month increments to next release.
cutoff := time.Date(2016, time.August, 1, 00, 00, 00, 0, time.UTC)
now := time.Now()
for cutoff.Before(now) {
    cutoff = cutoff.AddDate(0, 6, 0)
}

// Previous release was 6 months earlier.
cutoff = cutoff.AddDate(0, -6, 0)
```

## In action!
Here's me running the tool, and a small part of the output.

```bash
$ git clone https://github.com/golang/build
$ cd build/cmd/relnote
$ go build .
$ ./relnote
...
...
  https://golang.org/cl/268020: os: avoid allocation in File.WriteString
reflect
  https://golang.org/cl/266197: reflect: add Method.IsExported and StructField.IsExported methods
  https://golang.org/cl/281233: reflect: add VisibleFields function
syscall
  https://golang.org/cl/295371: syscall: do not overflow key memory in GetQueuedCompletionStatus
unicode
  https://golang.org/cl/280493: unicode: correctly handle negative runes
```


## Parting words
That's all for today! I hope that my change will find its way on the Go 1.17 release notes; if not I'm happy that I learned something new! 

I'm not sure if the `relnote` tool is still being actively used, but I think it would be fun to learn more about what goes into packaging a Go release.

Until next time, bye!
",Markdown
"# fish-p2p
FISH: FIle SHaring, a Distributed File System - Decentralised P2P system
",Markdown
"# Minion_Game

This is a project for a game that I currently work on with a friend. We decided to use github to enable both of us to work on the project simultaneously. Due to the way githubs payment model works, we decided to upload the code into a public repository, while keeping compilation instructions and assets private using different systems.
",Markdown
"# riemann-stream
Stream events from Riemann on CLI
",Markdown
"Style
=====

**Author**: gejiawen
**Email**: gejiawen@baidu.com
**Desp**:
> 将会阐述一些基本的代码样式、文件命名、变量命名、代码组织等规范",Markdown
"#AtaK

##The Atari 2600 Compiler Kit

AtaK, pronounced attack, is a collection of programs built to aid in the
development of Atari 2600 programs.

##Programs(Planned/Developing):

 * AtaR(ah-tar), The **Ata**ri 2600 Assemble**r**
 * AtaC(attack), The **Ata**ri 2600 **C** Compiler

##Universal Features:

 * Programmed in C89

##Contributing:

Here are some ways to contribute:

 * Come up with features
 * Criticize source code and programming methods
 * Put comments where you see fit
 * Build/test the program on other machines

##Versioning Scheme:

[major release(roman)].[year of release(roman)], rev. [revision (arabic)]

Example:

    AraR I.MMXVI, rev. 0

was the first release of AtaR(a development stub)

##Contributers:

Charles ""Gip-Gip"" Thompson - Author/Maintainer<br>
[ZackAttack](http://atariage.com/forums/user/40226-zackattack/) - General Critic
<br>
",Markdown
A PvPGNChatParser converts raw messages received from PvPGNChat to ChatMessage objects,Markdown
"## Estrutura de diretórios para projetos AngularJS

* app/    		              -> arquivos da aplicação  
    + css/		              -> arquivos css  
    + js/ 		              -> componentes javascript da aplicação 
        + controllers/ 	      -> diretório para os controllers    
        + directives/         -> diretório para os directives  
        + filters/            -> diretório para os filters  
        + services/           -> diretório para os services  
        + scripts/			  -> diretório para os scrips js
        + app.js              -> principal script da aplicação 
    + lib/                 	  -> bibliotecas javascript  
    + views/           	  	  -> diretório para as views  
    + index.html          	  -> principal arquivo html
* public/ 				 -> diretório para arquivos estáticos 
    + css/				 -> arquivos css  
    + fonts/			 -> arquivos de fontes
    + images/			 -> arquivos de imagens
    + js/				 -> arquivos js 
",Markdown
"Answer these questions in your reflection:

What git concepts were you struggling with prior to the GPS session?
 - Prior to the GPS session I was having trouble navigating between branches. I also was completely confused on remote and fetch. I thought that you could just use the command git pull which would fetch/merge in one.

What concepts were clarified during the GPS?
 - Using git checkout moves between branches.

What questions did you ask your pair and the guide?
 - I asked them questions on what was troubling me and that cleared things up. I am still a little fuzzy on fetch / remote but I know that will come with more practice.  Git pull is also a compact way to fetch and merge in one.

What still confuses you about git?
 -  When using the remote I am still not completely sure on what it does. I will need to do more research and practice while I work on the HTML this week.

How was your first experience of pairing in a GPS?
 -  My first experience was great! I really enjoyed working with my partner and the guide had some great pointers. Once again my feelings toward DBC are getting better and better as the days go on. I am having a great time learning things that interest me.",Markdown
"# NS

Provides a Ruby wrapper for the Dutch NS API.

## Installation

Add this line to your application's Gemfile:

    gem 'ns'

And then execute:

    $ bundle

Or install it yourself as:

    $ gem install ns

## Usage

    ns_client = Ns::Client.new(api_key, api_password)
    available_stations = ns_client.get_stations
    advice = ns_client.get_travel_advice(available_stations[0], 
                                         available_stations[1])

Should return a travel advice based on the first and second available station.



## Contributing

1. Fork it
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Commit your changes (`git commit -am 'Added some feature'`)
4. Push to the branch (`git push origin my-new-feature`)
5. Create new Pull Request
",Markdown
"rfstats
======

statistics for random fields
----------------------------

Several different methods for estimating correlation functions for random fields are included.",Markdown
"WBlog
=======
[![Build Status](https://travis-ci.org/windy/wblog.svg?branch=master)](https://travis-ci.org/windy/wblog)
[![Code Climate](https://codeclimate.com/github/windy/wblog.png)](https://codeclimate.com/github/windy/wblog)
[![Test Coverage](https://codeclimate.com/github/windy/wblog/coverage.png)](https://codeclimate.com/github/windy/wblog)

为移动而生的 Ruby on Rails 开源博客. WBlog 基于 MIT 协议, 自由使用.

* 用户极为友好的阅读体验
* 自带干净的评论系统
* 简洁而不简单的发布博客流程

访问我的博客以体验: <http://yafeilee.me>

后台禁止爬虫, 使用: <http://yafeilee.me/admin> 访问, 用户名密码可配置.

截图如下: <#screenshots>


### WBlog 的设计目标

* 优先以手机用户体验为主
* 独立干净的评论系统
* 良好的博客语法高亮支持
* 可邮件订阅
* Markdown 支持
* 尽可能独立

### 特色

* 优先支持移动端访问
* 响应式设计, 支持所有屏幕终端, 并且支持微信扫码继续阅读和分享
* 自带评论系统, 干净而方便
* Markdown 支持, 博客语法高亮, 方便技术性博客
* 开源可商用, 定制能力强

### 期望

成为 `Ruby on Rails` 下最好用的独立博客建站系统

### 开发环境

WBlog 是一个标准的 Ruby on Rails 应用. 开发环境依赖于:

* Ruby ( = 2.3.1 )
* Postgresql ( >= 9.x )

配置 WBlog:

  ```shell
  gem install bundler
  bundle install
  cp config/application.yml.example config/application.yml
  cp config/database.yml.example config/database.yml
  ```

  更新对应配置: application.yml & database.yml.

  对于配置有不明白的地方, 可以来这里咨询.

就这样, 可以尝试启动了:

  ```shell
  rails s
  ```

登录 http://localhsot:3000/admin 来发布第一篇博客.

### 发布应用

WBlog 采用了 `mina` 作为自动化发布工具, 使用 `nginx`, `puma` 为相关容器.

对应的发布流程在: [WBlog 的发布流程](https://github.com/windy/wblog/wiki)

### 技术栈

* Ruby on Rails 5.0.0
* Ruby 2.3.1
* Foundation 6
* mina
* slim
* Postgresql


## Ruby 相关开源博客推荐

* writings.io( Ruby on Rails 4.0.2 ): <https://github.com/chloerei/writings>
* jekyll( Ruby Gem, Markdown, Static ): <http://jekyllrb.com/>
* octopress( Github Pages ): <http://octopress.org/>
* middleman( Ruby Gem, Static ): <https://github.com/middleman/middleman>
* robbin_site( Padrino ): <https://github.com/robbin/robbin_site>

### Screenshots

首页:

![screenshot home](https://github.com/windy/wblog/raw/master/doc/wblog_s/home.png)

小屏首页:

![screenshot home small](https://github.com/windy/wblog/raw/master/doc/wblog_s/home-small.png)

展开的小屏首页:

![screenshot home hover](https://github.com/windy/wblog/raw/master/doc/wblog_s/home-small-hover.png)

博客详情页:

![screenshot post](https://github.com/windy/wblog/raw/master/doc/wblog_s/post.png)

展开的博客详情页:

![screenshot post hover](https://github.com/windy/wblog/raw/master/doc/wblog_s/post-hover.png)

管理员登录页:

![screenshot admin](https://github.com/windy/wblog/raw/master/doc/wblog_s/admin-login.png)

管理页面板:

![screenshot admin](https://github.com/windy/wblog/raw/master/doc/wblog_s/admin-dashboard.png)

发布新博客页:

![screenshot admin](https://github.com/windy/wblog/raw/master/doc/wblog_s/admin-post.png)

博客管理页:

![screenshot admin](https://github.com/windy/wblog/raw/master/doc/wblog_s/admin-posts.png)
",Markdown
"# Fire Keeper
## Introduction
Fire Keeper is a bot designed for the *Praise the Place* Dark Souls Discord server.

Please do not use this bot in your server without adapation of the code, or else things will not work correctly.
",Markdown
"---
name: Bug上报
about: 提交Bug让框架更加健壮
title: ''
labels: bug
assignees: ''

---

🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶

😁为了能够更好地复现问题和修复问题, 请提供 Demo 和详细的 bug 重现步骤😭

🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶🥶
> 记得删除以上内容

**描述bug**
清晰简单地描述这个bug是啥

**必现/偶发?**
必现

**怎么样重现这个bug**
1. 显示哪个页面
2. 点击哪个位置
3. 滚动到哪个位置
4. 发生了什么错误

**你期望的结果是什么？**
你本来期望得到的正确结果是怎样的？就是解决bug之后的结果

**截图**
如果有必要的话，请上传几张截图

**运行环境**
 - iPhone6
 - iOS8.1
 - Xcode10

**额外的**
最好能提供出现bug的Demo
",Markdown
"---
layout: page
title: Purple Systems Seminar
date: 2016-05-24
author: Martha Chandler
tags: weekly links, java
status: published
summary: Fusce risus orci, porttitor id molestie sit amet, mollis.
banner: images/banner/meeting-01.jpg
booking:
  startDate: 10/13/2016
  endDate: 10/14/2016
  ctyhocn: FTWMFHX
  groupCode: PSS
published: true
---
Phasellus pretium nulla id risus congue maximus. Fusce elementum elementum facilisis. Suspendisse ut venenatis nunc. Nulla euismod, elit non semper aliquam, odio leo pellentesque turpis, vitae feugiat lorem purus in purus. Vestibulum accumsan bibendum felis, vitae volutpat nunc fringilla et. Quisque eros nunc, congue in pharetra ut, lacinia quis urna. Praesent a enim vitae turpis fringilla tristique. Mauris euismod elit id nunc mollis porttitor. In ultricies est libero, non porttitor ante eleifend pharetra. Quisque tincidunt sapien sollicitudin urna viverra rutrum. Quisque molestie leo libero, nec porttitor tortor vestibulum tempor. Nullam vel ullamcorper quam, at euismod nunc. Etiam faucibus nisl eros, id tempor enim pellentesque vel.

* Pellentesque porttitor eros a diam faucibus commodo.

In sit amet leo diam. Phasellus sollicitudin porta mi, in venenatis lectus ultricies sit amet. Aliquam eu porta nisl. Maecenas nec est eget enim elementum elementum vel ac justo. Ut aliquam tellus non commodo pulvinar. Curabitur pharetra ligula vel orci maximus viverra. Duis a blandit dolor. Vestibulum sit amet venenatis nulla. Mauris lectus eros, pellentesque vitae urna in, vulputate blandit augue. Suspendisse potenti. Fusce a euismod nisl, eu imperdiet sem. Aliquam nec finibus elit. Praesent odio velit, bibendum et leo et, rhoncus ornare odio.
",Markdown
"## Part 3

[![](https://rawgit.com/Bogdan-Lyashenko/Under-the-hood-ReactJS/master/stack/images/3/part-3.svg)](https://rawgit.com/Bogdan-Lyashenko/Under-the-hood-ReactJS/master/stack/images/3/part-3.svg)

<em>3.0 第 3 部分 (点击查看大图)</em>

### 挂载

 `componentMount` 是我们整个系列中极其重要的一个板块。如图，我们关注 `ReactCompositeComponent.mountComponent` (1) 方法

如果你还记得，我曾提到过 **组件树的入口组件** 是 `TopLevelWrapper` 组件 (React 底层内部类)。我们准备挂载它。由于它实际上是一个空的包装器，调试起来非常枯燥并且对实际的流程而言没有任何影响，所以我们跳过这个组件从他的孩子组件开始分析。

把组件挂载到组件树上的过程就是先挂载父亲组件，然后他的孩子组件，然后他的孩子的孩子组件，依次类推。可以肯定，当 `TopLevelWrapper` 挂载后，他的孩子组件 (用来管理 `ExampleApplication` 的组件 `ReactCompositeComponent`) 也会在同一阶段注入.

现在我们回到步骤 (1) 观察这个方法的内部实现，有一些重要行为会发生，接下来让我们深入研究这些重要行为。

### 构造 instance 和 updater

从 `transaction.getUpdateQueue()` 结果返回的步骤 (2) 方法 `updater` 实际上就是 `ReactUpdateQueue` 模块。 那么为什么需要在这里构造它呢？因为我们正在研究的类 `ReactCompositeComponent` 是一个全平台的共用的类，但是 `updater` 却依赖于平台环境而不尽相同，所以我们在这里根据不同的平台动态的构造它。

然而，我们现在并不马上需要这个 `updater` ，但是你要记住它是非常重要的，因为它很快就会应用于非常知名的组件内更新方法 **`setState`**。

事实上在这个过程中，不仅仅 `updater` 被构造，组件实例（你的自定义组件）也获得了继承的 `props`, `context`, 和 `refs`.

我们来看下面的代码:

```javascript
// \src\renderers\shared\stack\reconciler\ReactCompositeComponent.js#255
// These should be set up in the constructor, but as a convenience for
// simpler class abstractions, we set them up after the fact.
inst.props = publicProps;
inst.context = publicContext;
inst.refs = emptyObject;
inst.updater = updateQueue;
```

因此，你才可以通过一个实例从你的代码中获得 `props`，比如 `this.props`。

### 创建 ExampleApplication 实例

通过调用步骤 (3) 的方法  `_constructComponent` 然后经过几个构造方法的作用后，最终创建了 `new ExampleApplication()`。这就是我们代码中构造方法第一次被执行的时机，当然也是我们的代码第一次实际接触到 React 的生态系统，很棒。

### 执行首次挂载

接着我们研究步骤 (4)，第一个即将发生的行为是 `componentWillMount`(当然仅当它被定义时) 的调用。这是我们遇到的第一个生命周期钩子函数。当然，在下面一点你会看到 `componentDidMount` 函数, 只不过这时由于它不能马上执行，而是被注入了一个事务队列中，在很后面执行。他会在挂载系列操作执行完毕后执行。当然你也可能在 `componentWillMount` 内部调用 `setState`，在这种情况下 `state` 会被重新计算但此时不会调用 `render`。(这是合理的，因为这时候组件还没有被挂载)

官方文档的解释也证明这一点:

> `componentWillMount()` 在挂载执行之前执行，他会在 `render()` 之前被调用，因此在这个过程中设置组件状态不会触发重绘。

观察以下的代码

```javascript
// \src\renderers\shared\stack\reconciler\ReactCompositeComponent.js#476
if (inst.componentWillMount) {
    //..
    inst.componentWillMount();

    // 当挂载时, 在 `componentWillMount` 中调用的 `setState` 会执行并改变状态
    // `this._pendingStateQueue` 不会触发重渲染
    if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
    }
}
```

确实如此，但是当 state 被重新计算完成后，会调用我们在组件中申明的 render 方法。再一次接触 “我们的” 代码。

接下来下一步就会创建 React 的组件实例。然后呢？我们已经看见过步骤 (5) `this._instantiateReactComponent` 的调用了，对吗？是的。在那个时候它为我们的 `ExampleApplication` 组件实例化了 `ReactCompositeComponent` ，现在我们准备基于它的 `render` 方法获得的元素作为它的孩子创建 VDOM (虚拟 DOM) 实例，当该实例被创建后，我们会再次调用 `ReactReconciler.mountComponent` ，但是这次我们传入刚刚新创建的  `ReactDOMComponent` 实例 作为`internalInstance` 。

然后继续调用此类中的 `mountComponent` 方法，这样递归往下..

### 好，**第 3 部分**我们讲完了

我们来回顾一下我们学到的。我们再看一下这种模式，然后去掉冗余的部分：

[![](https://rawgit.com/Bogdan-Lyashenko/Under-the-hood-ReactJS/master/stack/images/3/part-3-A.svg)](https://rawgit.com/Bogdan-Lyashenko/Under-the-hood-ReactJS/master/stack/images/3/part-3-A.svg)

<em>3.1 第 3 部分简化版 (点击查看大图)</em>

让我们适度在调整一下:

[![](https://rawgit.com/Bogdan-Lyashenko/Under-the-hood-ReactJS/master/stack/images/3/part-3-B.svg)](https://rawgit.com/Bogdan-Lyashenko/Under-the-hood-ReactJS/master/stack/images/3/part-3-B.svg)

<em>3.2 第 3 部分简化和重构 (点击查看大图)</em>

很好，实际上，下面的示意图就是我们所讲的。因此，我们可以理解**第 3 部分**的本质，并将其用于最终的 `mount` 方案：:

[![](https://rawgit.com/Bogdan-Lyashenko/Under-the-hood-ReactJS/master/stack/images/3/part-3-C.svg)](https://rawgit.com/Bogdan-Lyashenko/Under-the-hood-ReactJS/master/stack/images/3/part-3-C.svg)

<em>3.3 第 3 部分本质 (点击查看大图)</em>

完成!


[下一节: 第 4 部分 >>](./Part-4.md)

[<< 上一节: 第 0 部分](./Part-2.md)


[主页](../../README.md)
",Markdown
"# MUSCA 
a flyweight CA

## Installation

",Markdown
"# Toady 1.0
Wickedly extensible IRC bot written in Node.js.  Load and reload mods without reconnecting.

## Please pay attention: This master branch is merged with version 1.x from Toady and got extended afterwards!

## Download. Install. Fly.
If you don't already have Node.js, [get it](http://nodejs.org). It's awesome.
And also required.

Then, grab Toady from Github by using the [download link](https://github.com/TomFrost/Toady/archive/master.zip),
or if you're dev-minded and like to stay updated, clone it on the command line:

	git clone git@github.com:TomFrost/Toady.git

Get into that folder on the command line and install:

    npm install

## Configure it. Just a little bit.
Copy config/default.yaml.sample to config/default.yaml.  Enter your server
settings, change Toady's name, and pay extra careful attention to the section
marked with

    ## !!IMPORTANT!! ##

Because four exclamation points means business, son.

## You turn Toady on.
To launch (from the Toady directory) on any non-Windows machine, or Cygwin:

    ./ribbit start

If you're on Windows, it's:

    ribbit.cmd start

Need to launch it on more than one server? Just copy config/default.yaml to
config/myotherserver.yaml, edit it for the new server, and launch
Toady like this:

    ./ribbit start myotherserver

When he's in your channel, do this in IRC for more info:

    /msg Toady help

## Teach Toady new tricks.
Toady can be extended through simple mods, and mods can make Toady do
practially anything.  Mods can be searched for, installed, and uninstalled
through ribbit.

**IMPORTANT NOTE: This section shows you how to install third-party mods.
These are not moderated, maintained, guaranteed, or otherwise vetted by
Toady's author.  Install at your own risk, as mods are capable of anything!**

List all Toady mods:

    ./ribbit search
    # Or in IRC: /msg Toady ribbit search

List only mods that deal with typos:

    ./ribbit search typo
    # Or in IRC: /msg Toady ribbit search typo

Install a mod:

    ./ribbit install typofix
    # Or in IRC, just say: !ribbit install typofix

Uninstall a mod:

    ./ribbit uninstall typofix
    # Or in IRC, just say: !ribbit uninstall typofix

Did I mention you can search, download, and install mods into a running Toady
instance directly from IRC?  Yeah.  Toady's like that.

## Write your own mods! (It's easy)
Mods for Toady are standard Node.js modules.  They can have their own
node_modules folder with dependencies set up in a package.json, they can
require() whatever they need, they can open new ports, and they can interact
with the entire Toady framework including other mods.  Toady mods have no
limitations.

### Make a basic mod
For your first mod, make a folder in Toady's 'mods' folder called 'test'.
That makes 'test' your mod's 'id' -- no other mod can be loaded with the same
id.  Inside of mods/test, create index.js and paste in the following.  This is
the most basic form of a mod:

	/**
	 * Creates a new Test mod
	 *
	 * @param {Object} config Contains config fields specific to this mod
	 * @param {Object} client The connected IRC client powering the bot
	 * @param {Object} modMan A reference to the ModManager object,
	 *      responsible for loading/unloading mods and commands.
	 * @returns {Object} The new Test mod
	 */
	module.exports = function(config, client, modMan) {
		return {
			name: ""My Test Mod"",
			version: ""0.1.0"",
			author: ""Me, Myself, and I"",
			desc: ""I just made this to screw around"",
			commands: {
				greet: {
					handler: function(from, to, target, args) {
						client.say(target, ""Hi "" + from + ""!"");
					},
					desc: ""Makes the bot say Hi to you."",
                    help: [
                        ""Format: {cmd} [#channel]"",
                        ""Examples:"",
                        ""  /msg {nick} {cmd} #room"",
                        ""  {!}{cmd}"",
                        ""  {!}{cmd} #otherRoomImIn"",
                        "" "",
                        ""If this is said in a channel, I'll greet you on the"" +
                            ""same channel if no other is specified.""
                    ],
                    targetChannel: true
				}
			}
		};
	};

If Toady isn't running yet, this mod will be loaded automatically when you
start him up.  If he *is* currently running, just say this:

	!loadmod test

And now you can try out your new `!greet` command. Any time you make a change
to this mod and want Toady to update to the latest version, just say:

	!reloadmod test

For a list of these and other mod-related commands, type

	!viewmod modcontrol

### Structure of a mod
The object literal that the exported function returns has the following
properties:

#### name: string
The name given to your mod when it's listed with `!help` or `!viewmod`.

#### version: string
The version of your mod.  This should follow the semantic versioning guidelines
at [semver.org](http://semver.org). **You can omit this if your mod has a
package.json file with a version! Toady will pull it from there instead.**

#### author: string
Your name!  You can optionally specify your E-mail address, in the format
`Your Name <your@email.com>`.  **You can omit this if your mod has a
package.json file with an author! Toady will pull it from there instead.**

#### desc: string
A very brief, one-liner description of what your mod does.  This will show
up in the `!viewmod` output.  **You can omit this if your mod has a
package.json file with a description! Toady will pull it from there instead.**

#### unload: function() *(optional)*
A function that will be called immediately before unloading this module in the
ModManager.  **If any event listeners have been placed on the ModManager
or the IRC client object, they MUST BE REMOVED by this function!** Toady cannot
enforce this, so it is up to you, the mod author, to make sure.  Toady will
have unexpected and unstable behavior if this function does not remove all
the mod's listeners.

#### configItems: object *(optional)*
A mapping of configuration keys to objects defining that key. The object
has the following properties, all of which are optional:

	{
		desc: ""Describe what this option means in a one-liner"",
		type: ""number"", // Either string, boolean, or number.
		validate: function(value) { return true; }
	}

These items will be made available to be changed by the 'config' core module.
If a type is specified, the user input will be cast to that type. If validate
is specified, the value will be passed to it and the function can return one
of three things:
	- {Error} If validation failed and an error message should be provided
		to the user
	- {boolean} false if validation failed and a generic error message
		should be provided to the user
	- {boolean} true if validation passed

#### blockReload: boolean *(optional, default false)*
If true, this will stop your mod from being reloaded with the `!reloadmod`
command.  While this can be convenient to stop the mod's ""memory"" from being
wiped by an unsuspecting Owner or SuperUser, this is *extremely bad practice*.
Use the config object to save changes rather than blocking your mod from
being reloaded.

#### blockUnload: boolean *(optional, default false)*
If true, this will stop your mod from being unloaded with the `!unloadmod`
command, but *not* through the `!reloadmod` command.  **This should only
ever be used for mods that are core to the function of the bot**

#### commands
An object literal that maps command names (whatever you would msg Toady or
say in a room with the fantasy char) to command objects.  Those are defined
below.  *This field is optional; not all mods have user-callabe commands.*

### Structure of a Command
Commands are managed by the Toady framework to prevent name overlaps, ensure
users have the appropriate permissions, etc.  If your mod just needs to listen
for IRC events and react to them, no commands are necessary.  But if you want
someone to be able to say `!somecommand`, here's how:

#### handler: function(from, to, target, args, inChan)
The function that executes when the function is called.  The arguments are:
- *from* - The nick of the user calling the command
- *to* - The bot's name if this was sent in a private message, or the channel the command was spoken in if not.
- *target* - The channel or nick targeted for the command. This is configured below.
- *args* - An array containing the arguments to this command.  If no *pattern* is specified below, this will have just one element: The entire string following the command or target.
- *inChan* - True if the command was said in a channel (and thus 'to' is a channel name); false if the command was messaged privately (and this 'to' is the bot's nick).

#### desc: string
A brief one-liner description of what the command does.  Shown in `!help`.

#### help: array
An array of strings to be sent in the `!help` command.  Each string will be
sent in its own IRC NOTICE, so this can be utilized to control line breaks.
The following placeholders will be automatically replaced with the appropriate
contents:
- **{!}** - The configured fantasy character
- **{cmd}** - The name of the command
- **{mod}** - The name of the mod (specified in the mod's `name` field)
- **{modId}** - The id of the mod (usually, its folder name in the mods folder)
- **{nick}** - The nickname of the bot
- **{version}** - The version number of the mod

#### minPermission: string *(optional)*
The permission character of the lowest permission allowed to call this command.
If omitted, the command won't be restricted by permission.  Toady recognizes
the following permissions, in order from most to least privileged:
- **O** - Owner. Full access to all commands, cannot be revoked.
- **S** - SuperUser. Full access to all commands, except those which may impact other Owners or SuperUsers.
- **P** - PowerUser. Limited access to global command set.
- **~** - Channel founder
- **&** - Channel admin
- **@** - Channel op
- **%** - Channel half-op
- **+** - Voice
- **''** - (Empty string) A user in a channel

The **O**, **S**, and **P** permissions are Toady-specfic and can be set with
the `!adduser` and `!updateuser` commands.  All others come directly from IRC.

#### pattern: RexExp *(optional)*
The regex pattern that the command arguments must match in order for the
function to be called.  If specified, the `args` argument in the handler
function will be the result of the match -- so index 0 will be the entire
string, 1 will be the first paranthetical match, 2 will be the second, and so
on.  If targetChannel or targetNick is specified as described below, this
pattern will *NOT* be applied to the target argument.

#### targetChannel: boolean *(optional, default false)*
Setting this to `true` will require that the first argument to the command
is a channel name, prefixed with `#` or `&`.  If the command is said in a
channel using the fantasy char, the channel can be omitted and it will be
assumed that the target is the same channel.  This value will be passed in the
handler's `target` argument.

#### targetNick: boolean *(optional, default false)*
Setting this to `true` will require that the first argument to the command
is a user's nick.  **Note that this will *not* ensure that the nick is real
or connected -- it just assumes the first argument is the target nick**.
This value will be passed in the handler's `target` argument.

#### hidden: boolean *(optional, default false)*
Setting this to `true` will cause this command to be omitted from `!help`.
This can be useful in games where certain commands would only make sense to
users if the game is currently running.  The ""hidden"" flag can be turned on
and off dynamically as needed.  It should **never** be used to exercise
any form of security through obscurity.  Use *minPermission* to restrict
access to commands.

### Config
The `config` argument passed to each mod is an object literal containing
configuration fields.  The fields are loaded in the following order, with
each step overwriting any existing fields from previous steps:
- The mod's own module.exports.configDefaults object, if one exists
- The mod_MODNAME-HERE section from the .yaml config file currently in use, if it exists
- The config/CONFNAME-mod_MODNAME.json file, if it exists

So if a mod named ""test"" is written with this at the bottom:

	module.exports.configDefaults = {
		delay: 12,
		message: 'Hello!',
		name: 'Ted'
	};

And **config/default.yaml** contains this block:

	mod_test:
	  delay: 5

And the file **config/default-mod_test.json** contains this:

	{
		""message"": ""Yo!""
	}

Then the config object passed into the 'test' mod when it's loaded will be:

	{
		delay: 5,
		message: ""Yo!"",
		name: ""Ted""
	}

Why the complexity?
- module.exports.configDefaults allows you to define the default values your mod will be instantiated with, so that no error checking for nonexistant config values is necessary
- The block in the .yaml file allows the bot owner to easily specify new config options
- The .json file is what the config object itself saves when config.save() is called.

Note that any mod can access any other mod's config object to read, write, and
save with the following call. This should be used sparingly and only when
absolutely necessary, as the target mod may not be prepared to handle dynamic
changes in its config:

    var otherModConfig = modMan.getMod('otherModId').config;

#### config.save(_\[{Array} properties\]_, _\[{Function} callback\]_)
The 'save' function is the only value that Toady itself adds to your config
object, and it is non-enumable -- so iterating over your config values will not
show 'save' as a property.  It's there, though, and calling it will write the
file config/default-mod_MODNAME.json, where ""default"" is the name of the .yaml
file currently in use.  Any saved config will be provided back to the mod if
it's reloaded, or the bot is restarted.

If _properties_ is omitted, all enumerable properties on the config object will
be saved.  But _properties_ can be set to an array of strings representing
the only config keys that should be saved in the resulting file.

The optional callback function will be called with an Error object from
_fs.writeFile_ if the write fails, or with no error upon success.

### Client
The IRC client provided to each mod is an instance of martynsmith's
fantastic [node-irc](https://github.com/martynsmith/node-irc) client, unaltered
in any way except for configuring and connecting it according to the options
defined in the configuration yaml file.

The client object allows the bot to send messages, join, part, quit, change
nicks, etc -- anything you would expect an IRC client to do.  It also tracks
the bot's nick as well as the users and their permissions in the channels the
bot is in, and exposes many events you can hook to be notified of new messages,
nick changes, parts, and more.  Just skim [the node-irc documentation site](https://node-irc.readthedocs.org/en/latest/API.html)
for details.

Here are a few examples of how easy the client is to use:

	client.say('#myChan', ""HI GUYS! MY NAME IS "" + client.nick + ""!!!"");

	function nickHandler(oldnick, newnick, channels) {
    	channels.forEach(function(channel) {
    		client.say(channel, ""Stop changing your name, "" + newnick);
    	});
    }
	client.on('nick', nickHandler);

	// And your mod's 'unload' function MUST contain this line
	// if you do the above:
	// client.removeListener('nick', nickHandler);

### ModManager
The ModManager instance that gets passed to each mod on load is a singleton
responsible for loading/unloading all mods, collecting command objects, and
providing all of these things to other mods on request.  In addition to
returning official mod properties in the resulting object literal, arbitrary
properties can be added for other mods to take advantage of.  For example,
the 'users' mod includes functions for finding and checking user permissions.
If your mod needs to do that, you could call:

	var usersMod = modMan.getMod('users');
	client.say(channel, ""You have the permission: "" + usersMod.getPermission(nick));

The ModManager also emits events for when mods and commands are
loaded/unloaded, so if your mod needs to modify all new commands as they load
(maybe your mod's goal is to remove permission requirements from all comamnds?),
listening for those events is extremely easy.

Since the use cases for accessing the ModManager are fairly rare, I'll refer to
the very thorough in-code documentation in app/modmanager/ModManager.js to
guide you to the different events and function calls.

### Mod Metadata
Toady mods all assign module.exports to a function.  However, some features
can be impacted before the mod is fully loaded by assigning other properties
to module.exports as well.

#### module.exports.configDefaults = {Object}
A mapping of config keys to their default value, which will be passed in the
module's _'config'_ argument at load time unless a key or keys have been
overridden through other means.  See **Config** above for details.

#### module.exports.minToadyVersion = {String}
The minimum version of Toady with which this mod is compatible.  Toady will
refuse to load the mod if this value is greater than Toady's own version.

### Examples
Learn faster from looking at code than reading docs? Nearly all of Toady's
functionality happens in mods -- from the help commands, to finding and
verifying user permissions, to even detecting and executing commands
themselves.  All of these core mods are very thoroughly documented in the
app/coremods folder.

## Distribute your mods on ribbit
To get your mods on ribbit, all you need to do is publish your mod to NPM
under the following name:

    toady-mod_name_here

So if your mod is named 'typofix', your mod's package.json should contain
this line:

    ""name"": ""toady-typofix""

Don't have a package.json yet? Just type `npm init` in your mod's directory
and follow the prompts, giving it the ""toady-"" prefixed name when it asks.

If you haven't already done it, run `npm adduser` to log in (or make an
account) on NPM, and then run `npm publish` to give your mod to the world.
It should show up in ribbit searches within a few minutes.

## Toady has a lawyer
Toady is distributed under the BSD license.  See the 'LICENSE.txt' file for the
legalese.  It's friendly and open, I promise.

## Toady has a purpose in life
I wrote Toady in 2013 to help manage my dev team's IRC room. There are other
bots, but this is the magical mix of features that few of the others had:
- Written in Javascript, so practically anyone can extend it
- Dead-simple command framework, so new commands are no more than a few lines of code away
- Can develop on it and test mods without restarting (/msg Toady viewmod modcontrol)
- Can restrict its commands by its own global permissions as well as channel and NickServ permissions on the IRC server itself
- Since it's Node.js, making mods do crazy stuff like hosting websites to view channel logs right within Toady is as simple as `npm install express`

## Obligatory Copyright
Toady is Copyright ©2013 Tom Frost.
",Markdown
"---
layout:     post
author:     Christoph Broschinski
author_lnk: https://github.com/cbroschinski
title:      TU Clausthal reports its 2016 and 2017 APC expenditures
date:       2018-02-05 08:00:00
summary:    
categories: [general, openAPC]
comments: true
---




The [TU Clausthal](http://www.tu-clausthal.de/Welcome.php.en) has updated its APC expenditures. The latest contribution provides data for the 2016 and 2017 periods.

The [Library of Clausthal University of Technology](http://www.ub.tu-clausthal.de/en/) is in charge of the [University's Open Access Publishing Fund](http://www.ub.tu-clausthal.de/en/angebote-fuer-wissenschaftlerinnen/elektronisches-publizieren/publikationsfonds/), which is supported by the DFG under its [Open-Access Publishing Programme](http://www.dfg.de/en/research_funding/programmes/infrastructure/lis/funding_opportunities/open_access/).

Contact person is [Silke Frank](mailto:silke.frank@tu-clausthal.de)

## Cost data



The new dataset covers publication fees for 7 articles. Total expenditure amounts to 11 106€ and the average fee is 1 587€.

The following table shows the payments the library of Clausthal University of Technology has made to publishers in 2016 and 2017.


|                                     | Articles| Fees paid in EURO| Mean Fee paid|
|:------------------------------------|--------:|-----------------:|-------------:|
|Scientific Research Publishing, Inc, |        2|               921|           461|
|Carl Hanser Verlag                   |        1|              2099|          2099|
|Elsevier BV                          |        1|              1964|          1964|
|MDPI AG                              |        1|              1004|          1004|
|Springer Nature                      |        1|              2618|          2618|
|Wiley-Blackwell                      |        1|              2500|          2500|

## Overview

With the recent contribution included, the overall APC data for TU Clausthal now looks as follows:

### Fees paid per publisher (in EURO)

![plot of chunk tree_clausthal_2018_02_05_full](/figure/tree_clausthal_2018_02_05_full-1.png)

###  Average costs per year (in EURO)

![plot of chunk box_clausthal_2018_02_05_year_full](/figure/box_clausthal_2018_02_05_year_full-1.png)
",Markdown
"# Deploying Development Office 365 Sites to Microsoft Azure #

### Summary ###

When developing any type a web application, most development is done locally using http://localhost. Some projects use local resources or a mix of local and remote resources. Taking these projects from local development environments involves a handful of tasks to perform like changing database connection strings, URLs, configurations, etc.

Web projects that leverage the Office 365 APIs are no different. These projects leverage Microsoft's Azure AD service to authenticate the applications and obtain OAuth 2.0 access tokens. These tokens are used by the web applications to authenticate with the Office 365 APIs.

This page explains the steps involved in taking an Office 365 API development project and launching it to a working sample hosted entirely in Microsoft Azure using [Office 365](http://products.office.com/en-us/business/explore-office-365-for-business), [Azure Active Directory](http://azure.microsoft.com/en-us/services/active-directory/) & [Azure Websites](http://azure.microsoft.com/en-us/services/websites/.

Deploying an Office 365 API web application to Microsoft Azure from a local development environment requires three high-level steps to be performed as outlined in this page:

- [Create and Configure an Azure Website](#create-and-configure-an-azure-website)
- [Configure the Azure AD Application](#configure-the-azure-ad-application)
- [Configure the ASP.NET Project](#configure-the-aspnet-project)
- [Deploy the Office 365 API ASP.NET Web Application](#deploy-the-office-365-api-aspnet-web-application)

> This page assumes that you have a local working ASP.NET application that uses the Office 365 APIs. For reference, it will use the **[O365-WebApp-SingleTenant](https://github.com/OfficeDev/O365-WebApp-SingleTenant)** project found in the **[OfficeDev](https://github.com/OfficeDev)** account in GitHub.

# Create and Configure an Azure Website

In this step you will create an Azure website that will be used to host the web application. 

1. Navigate to the [Azure Management Portal](https://manage.windowsazure.com) and login using your Organization ID account.
1. After logging in, using the navigation sidebar, select **WEBSITES**.
1. On the **websites** page, click the **NEW** link in the footer found in the lower-left corner of the page.
1. In the wizard that appears, select **Quick Create**, enter a name for the site in the **URL** field, select a **Web Hosting Plan** and **Subscription**. 

  ![](media/Move-O365Api-Project-from-Dev-To-Prod/Move-O365Api-Project-from-Dev-To-Prod-01.png)

  > Make sure to keep a note of the name of the website you create as it will be needed later.

1. Finally click the **Create Website** link to create the site.

Give Azure a few moments to create the site. After creating the site you can specify *app settings* through the web interface. This allows you to override any `<appSettings>` within the project's `web.config` file through the web administration interface for the website without deploying your site codebase for simple `web.config` changes.

1. Click the website that you just created within the **Azure Management Portal**.
1. CLick the **CONFIGURE** link in the top navigation.
1. Scroll down to the **App Settings** section and add three new entries:
  - **ida:ClientID**
  - **ida:Password** 
  - **ida:TenantID** 
1. Copy the corresponding values from the working project's `web.config` to these settings values in your Azure website as shown in the following figure:

  ![](media/Move-O365Api-Project-from-Dev-To-Prod/Move-O365Api-Project-from-Dev-To-Prod-02.png)

1. In the footer, click the **SAVE** button to save your changes.

At this point the Azure website is setup and configured to host the Office 365 API web project that you will deploy in a later step.


[back to top](#deploying-development-office-365-sites-to-microsoft-azure)


# Configure the Azure AD Application

In this step you will modify the Azure AD application used in the development & testing of the Office 365 application.

1. Navigate to the [Azure Management Portal](https://manage.windowsazure.com) and login using your Organization ID account.
1. After logging in, using the navigation sidebar, select **ACTIVE DIRECTORY**.
1. On the **active directory** page, select the directory that is linked to your Office 365 tenant.
1. Next, click the **APPLICATIONS** item in the top navigation.
1. Within the **Properties** section, update the **SIGN-ON URL** to point to the default URL of the Azure Website you created. Take note to use the HTTPS endpoint that is provided with all Azure websites.

  ![](media/Move-O365Api-Project-from-Dev-To-Prod/Move-O365Api-Project-from-Dev-To-Prod-03.png)

1. Within the **Single Sign-On** section, update the **App ID URI** to use the domain for the Azure website (shown in the following figure).
1. Next, update the **REPLY URL** so the only URL listed is the homepage of the Azure website:

  ![](media/Move-O365Api-Project-from-Dev-To-Prod/Move-O365Api-Project-from-Dev-To-Prod-04.png)

1. In the footer, click the **SAVE** button to save your changes.

At this point, the Azure AD application used by the Office 365 API web project has been configured to work with the new Azure website.


[back to top](#deploying-development-office-365-sites-to-microsoft-azure)


# Configure the ASP.NET Project

In this step you will configure the ASP.NET project in your application to use the new Azure Website.

For the sample application used in the example for this guidance, no extra work is actually required. However the web application does contain the settings within the `web.config` file for the Azure AD application and Azure AD tenant used during development. Some developers may choose to use different Azure AD applications or even different Azure subscriptions for their development and production instances.

In a previous step outlined in this page, when you created the Azure website you set the add-in settings for the application that are typically found in the `web.config`. To ensure the web application receives these values from the Azure website configuration, it's recommended you replace the values within the `web.config` with placeholder values instead.

1. Open the project's `web.config` file.
1. Locate the add-in settings for the **ida:ClientID**, **ida:Password** and **ida:TenantId**.
1. Replace the values of these settings with a placeholder value:

  ````xml
  <add key=""ida:TenantId"" value=""set-in-azure-website-config"" />
  <add key=""ida:ClientID"" value=""set-in-azure-website-config"" />
  <add key=""ida:Password"" value=""set-in-azure-website-config"" />
  ````

1. Save you changes.

At this point the web application, Azure website & application in Azure AD are all configured correctly and ready to be deployed.


[back to top](#deploying-development-office-365-sites-to-microsoft-azure)


# Deploy the Office 365 API ASP.NET Web Application

In this step you will publish the Office 365 API web application to the Azure website. Once the site has been deployed you will test it to ensure everything works as desired.

> This step assumes you have he Microsoft [Azure SDK](http://azure.microsoft.com/en-us/downloads/), version 2.0 or higher, installed. 


## Deploy the ASP.NET Web Application

1. Open your Office 365 API web application in Visual Studio 2013.
1. Within the Solution Explorer tool window, right-click the project and select **Publish** start the **Publish Web** wizard.
1. On the **Profile** tab, select **Microsoft Azure Website**.

  At this point you will be prompted to login to your Azure subscription using your Organization ID.

1. After logging in, select the website that you created in a previous step from this page and click **OK**.

  ![](media/Move-O365Api-Project-from-Dev-To-Prod/Move-O365Api-Project-from-Dev-To-Prod-05.png)

1. On the **Connection** tab, click the **Validate Connection** button to ensure the connection profile was successfully downloaded and applied.

  ![](media/Move-O365Api-Project-from-Dev-To-Prod/Move-O365Api-Project-from-Dev-To-Prod-06.png)

1. Click the **Publish** button to publish the web application to the Azure website.

## Test the ASP.NET Web Application

After publishing the web application to the Azure website, Visual Studio will open a browser and navigate to the site's homepage. 

By default this is the HTTP endpoint. Recall from the previous step when you configured the Azure AD application that you set it to only accept sign ons from the HTTPS endpoint. Before you use the application update the url to point to the HTTPS endpoint.

1. In the browser, update the URL to go to the HTTPS homepage for the Azure website. In the example in this page, that is https://o365api-01.azurewebsites.net.
1. Click the **Sign In** link in the header at the top-right of the page. This will redirect you to the Azure AD sign on page.

  > If you get an error at this point, it's likely an issue with the three add-in settings you created for the Azure website. Go back and make sure the values are the correct values from the Azure AD tenant & application. You should see a URL that looks 

1. After successfully logging in, you will be redirected back to the homepage for the web application of the Azure website you created.

At this point you have successfully deployed your Office 365 API web application project to run in an Azure website.

[back to top](#deploying-development-office-365-sites-to-microsoft-azure)


----------

### Related links ###
-  [O365-WebApp-SingleTenant](https://github.com/OfficeDev/O365-WebApp-SingleTenant)

### Applies to ###
-  Office 365 Multi Tenant (MT)
-  Office 365 Dedicated (D)

### Author
Andrew Connell - [@andrewconnell](https://twitter.com/andrewconnell)

### Version history ###
Version  | Date | Comments
---------| -----| --------
0.1  | January 2, 2015 | First draft


",Markdown
"---
layout: post
title:  ""[BOJ] 15686. 치킨 배달""
categories: Algorithm
author: goodGid
---
* content
{:toc}

## Problem

Problem URL : **[치킨 배달](https://www.acmicpc.net/problem/15686)**












![](/assets/img/algorithm/15686_1.png)

![](/assets/img/algorithm/15686_2.png)


---

## [1] Answer Code (18. 10. 15)

``` cpp
#include<iostream>
#include<vector>
#include<algorithm>
#define p pair<int,int>
using namespace std;

int n,m;
int map[50][50];
int ans;
int dp[2500][13];

vector<p> house;
vector<p> chicken;
vector<int> pick_idx;

void cal_dist(){
    int sum =0;
    
    for(int i=0; i<house.size(); i++){
        int pivot = 2e9;
        for(int j=0; j<m; j++){
            pivot = pivot < dp[i][ pick_idx[j] ] ? pivot : dp[i][ pick_idx[j] ] ;
        }
        sum += pivot;
    }
    ans = ans < sum ? ans : sum;
}

void dfs(int idx, int pick_cnt){
    if(pick_cnt == m){
        cal_dist();
        return ;
    }
    
    if( idx == chicken.size()){
        return ;
    }
    
    // pick
    pick_idx.push_back(idx);
    dfs( idx + 1, pick_cnt + 1 );
    pick_idx.pop_back();
    
    // pass
    dfs( idx+1, pick_cnt) ;
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);

    ans = 2e9;
    cin >> n >> m;
    
    for(int i=0; i<n; i++){
        for(int j=0; j<n; j++){
            cin >> map[i][j];
            if(map[i][j] == 1)
                house.push_back(p(i,j));
            else if(map[i][j] == 2)
                chicken.push_back(p(i,j));
        }
    }
    
    for(int i=0; i<house.size(); i++){
        for(int j=0; j<chicken.size(); j++){
            int _sum = 0;
            _sum += abs(house[i].first - chicken[j].first);
            _sum += abs(house[i].second - chicken[j].second);
                dp[i][j] = _sum;
        }
    }
    
    dfs(0,0);
    cout << ans << endl;
    return 0;
}
```

### Review

* 삼성 역량 테스트 기출 문제

* 각 집에서 모든 치킨 집 거리에 대해 미리 계산을 한 후 <br> DFS로 치킨 집을 선정하고 <br> 선정한 치킨 집에 대해 집에서 가장 최소가 되는 값들을 구한다. <br> 끝",Markdown
"---
title: ""Tagging and Sample Data""
---

Use the [`Appsignal.Transaction.set_sample_data`](https://hexdocs.pm/appsignal/Appsignal.Transaction.html#set_sample_data/2) function to supply extra context on errors and
performance issues. This can help to add information that is not already part of
the request, session or environment parameters.

```elixir
Appsignal.Transaction.set_sample_data(""tags"", %{locale: ""en""})
```

!> **Warning**: Do not use tagging to send personal data such as names or email
   addresses to AppSignal. If you want to identify a person, consider using a
   user ID, hash or pseudonymized identifier instead. You can use
   [link templates](/application/link-templates.html) to link them to your own
   system.

## Tags

Using tags you can easily add more information to errors and performance issues
tracked by AppSignal. There are a few limitations on tagging though.

- The tag key must be a `String` or `Atom`.
- The tagged value must be a `String`, `Atom` or `Integer`.

Tags that do not meet these limitations are dropped without warning.

`set_sample_data` can be called multiple times, but only the last value will be retained:

```elixir
Appsignal.Transaction.set_sample_data(""tags"", %{locale: ""en""})
Appsignal.Transaction.set_sample_data(""tags"", %{user: ""bob""})
Appsignal.Transaction.set_sample_data(""tags"", %{locale: ""de""})
```
will result in the following data:

```elixir
%{
  locale: ""de""
}
```

### Link templates

Tags can also be used to create link templates. Read more about link templates
in our [link templates guide](/application/link-templates.html).


## Sample Data

Besides tags you can add more metadata to a transaction (or override default metadata from integrations such as Phoenix), below is a list of valid keys that can be given to `set_sample_data` and the format of the value.


### `session_data`

Filled with session/cookie data by default, but can be overridden with the following call:

```
Appsignal.Transaction.set_sample_data(""session_data"", %{_csrf_token: ""Z11CWRVG+I2egpmiZzuIx/qbFb/60FZssui5eGA8a3g=""})
```

This key accepts nested objects that will be rendered as JSON on a Incident Sample page for both Exception and Performance samples.

![session_data](/assets/images/screenshots/sample_data/session_data.png)



### `params`
Filled with framework (such as Phoenix) parameters by default, but can be overridden or filled with the following call:

```
Appsignal.Transaction.set_sample_data(""params"", %{action: ""show"", controller: ""homepage""})
```

This key accepts nested objects and will show up as follows on a Incident Sample page for both Exception and Performance samples, formatted as JSON.

![params](/assets/images/screenshots/sample_data/params.png)



### `environment`
Environment variables from a request/background job, filled by the Phoenix integration, but can be filled/overriden with the following call:

```
Appsignal.Transaction.set_sample_data(""environment"", %{CONTENT_LENGTH: ""0""})
```

This call only accepts a one-level key/value object, nested values will be ignored.
This will result the following block on a Incident Sample page for both Exception and Performance samples.

![environment](/assets/images/screenshots/sample_data/environment.png)



### `custom_data`
Custom data is not set by default, but can be used to add additional debugging data to solve a performance issue or exception.

```
Appsignal.Transaction.set_sample_data(""custom_data"", %{foo: ""bar""})
```
This key accepts nested objects and will result in the following block on a Incident Sample page for both Exception and Performance samples formatted as JSON.

![custom_data](/assets/images/screenshots/sample_data/custom_data.png)
",Markdown
"
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""utf-8"" />
            
    <title>User agent detail - Mozilla/5.0 (Linux; U; Android 1.1.20; En-au; A101C Build/ECLAIR) AppleWebKit/530.17 (KHTML, Like Gecko) Version/4.0 Mobile Safari/530.17</title>
        
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.3/css/materialize.min.css"">
    <link href=""https://fonts.googleapis.com/icon?family=Material+Icons"" rel=""stylesheet"">
    <link href=""../circle.css"" rel=""stylesheet"">
</head>
        
<body>
<div class=""container"">
    
<div class=""section"">
	<h1 class=""header center orange-text"">User agent detail</h1>
	<div class=""row center"">
        <h5 class=""header light"">
            Mozilla/5.0 (Linux; U; Android 1.1.20; En-au; A101C Build/ECLAIR) AppleWebKit/530.17 (KHTML, Like Gecko) Version/4.0 Mobile Safari/530.17
        </h5>
	</div>
</div>   

<div class=""section"">
    <table class=""striped""><tr><th></th><th colspan=""3"">General</th><th colspan=""5"">Device</th><th colspan=""3"">Bot</th><th colspan=""2""></th></tr><tr><th>Provider</th><th>Browser</th><th>Engine</th><th>OS</th><th>Brand</th><th>Model</th><th>Type</th><th>Is mobile</th><th>Is touch</th><th>Is bot</th><th>Name</th><th>Type</th><th>Parse time</th><th>Actions</th></tr><tr><th colspan=""14"" class=""green lighten-3"">Test suite</th></tr><tr><td>UAParser<br /><small>v0.5.0.2</small><br /><small>vendor/thadafinser/uap-core/tests/test_device.yaml</small></td><td> </td><td><i class=""material-icons"">close</i></td><td> </td><td style=""border-left: 1px solid #555"">Archos</td><td>A101C</td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td>0</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-cfed3005-df48-4fa8-bf03-4f6ef8988f59"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-cfed3005-df48-4fa8-bf03-4f6ef8988f59"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>UAParser result detail</h4>
        <p><pre><code class=""php"">Array
(
    [user_agent_string] => Mozilla/5.0 (Linux; U; Android 1.1.20; En-au; A101C Build/ECLAIR) AppleWebKit/530.17 (KHTML, Like Gecko) Version/4.0 Mobile Safari/530.17
    [family] => Archos A101C
    [brand] => Archos
    [model] => A101C
)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><th colspan=""14"" class=""green lighten-3"">Providers</th></tr><tr><td>BrowscapFull<br /><small>6014</small><br /></td><td>Android 4.0</td><td>WebKit </td><td>Android 1.1</td><td style=""border-left: 1px solid #555""></td><td></td><td>Mobile Phone</td><td>yes</td><td>yes</td><td style=""border-left: 1px solid #555""></td><td></td><td></td><td>0.023</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-47a9cd06-e213-4882-bc34-db6aed664223"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-47a9cd06-e213-4882-bc34-db6aed664223"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>BrowscapFull result detail</h4>
        <p><pre><code class=""php"">stdClass Object
(
    [browser_name_regex] => /^mozilla\/5\.0 \(.*linux.*android.1\.1.* build\/.*\).*applewebkit\/.*\(.*khtml,.*like gecko.*\).*version\/4\.0.*safari.*$/
    [browser_name_pattern] => mozilla/5.0 (*linux*android?1.1* build/*)*applewebkit/*(*khtml,*like gecko*)*version/4.0*safari*
    [parent] => Android Browser 4.0
    [comment] => Android Browser 4.0
    [browser] => Android
    [browser_type] => Browser
    [browser_bits] => 32
    [browser_maker] => Google Inc
    [browser_modus] => unknown
    [version] => 4.0
    [majorver] => 4
    [minorver] => 0
    [platform] => Android
    [platform_version] => 1.1
    [platform_description] => Android OS
    [platform_bits] => 32
    [platform_maker] => Google Inc
    [alpha] => 
    [beta] => 
    [win16] => 
    [win32] => 
    [win64] => 
    [frames] => 1
    [iframes] => 1
    [tables] => 1
    [cookies] => 1
    [backgroundsounds] => 
    [javascript] => 1
    [vbscript] => 
    [javaapplets] => 1
    [activexcontrols] => 
    [ismobiledevice] => 1
    [istablet] => 
    [issyndicationreader] => 
    [crawler] => 
    [isfake] => 
    [isanonymized] => 
    [ismodified] => 
    [cssversion] => 3
    [aolversion] => 0
    [device_name] => general Mobile Phone
    [device_maker] => unknown
    [device_type] => Mobile Phone
    [device_pointing_method] => touchscreen
    [device_code_name] => general Mobile Phone
    [device_brand_name] => unknown
    [renderingengine_name] => WebKit
    [renderingengine_version] => unknown
    [renderingengine_description] => For Google Chrome, iOS (including both mobile Safari, WebViews within third-party apps, and web clips), Safari, Arora, Midori, OmniWeb, Shiira, iCab since version 4, Web, SRWare Iron, Rekonq, and in Maxthon 3.
    [renderingengine_maker] => Apple Inc
)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>BrowscapLite<br /><small>6014</small><br /></td><td>Android 4.0</td><td><i class=""material-icons"">close</i></td><td>Android </td><td style=""border-left: 1px solid #555""><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td>Mobile Phone</td><td>yes</td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td>0.005</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-42bb56ba-b834-47c5-bea0-c0270e9ab371"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-42bb56ba-b834-47c5-bea0-c0270e9ab371"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>BrowscapLite result detail</h4>
        <p><pre><code class=""php"">stdClass Object
(
    [browser_name_regex] => /^mozilla\/5\.0 \(.*linux.*android.* build\/.*\).*applewebkit\/.*\(.*khtml,.*like gecko.*\).*version\/4\.0.*safari.*$/
    [browser_name_pattern] => mozilla/5.0 (*linux*android* build/*)*applewebkit/*(*khtml,*like gecko*)*version/4.0*safari*
    [parent] => Android Browser 4.0
    [comment] => Android Browser 4.0
    [browser] => Android
    [browser_type] => unknown
    [browser_bits] => 0
    [browser_maker] => unknown
    [browser_modus] => unknown
    [version] => 4.0
    [majorver] => 0
    [minorver] => 0
    [platform] => Android
    [platform_version] => unknown
    [platform_description] => unknown
    [platform_bits] => 0
    [platform_maker] => unknown
    [alpha] => false
    [beta] => false
    [win16] => false
    [win32] => false
    [win64] => false
    [frames] => false
    [iframes] => false
    [tables] => false
    [cookies] => false
    [backgroundsounds] => false
    [javascript] => false
    [vbscript] => false
    [javaapplets] => false
    [activexcontrols] => false
    [ismobiledevice] => 1
    [istablet] => 
    [issyndicationreader] => false
    [crawler] => false
    [isfake] => false
    [isanonymized] => false
    [ismodified] => false
    [cssversion] => 0
    [aolversion] => 0
    [device_name] => unknown
    [device_maker] => unknown
    [device_type] => Mobile Phone
    [device_pointing_method] => unknown
    [device_code_name] => unknown
    [device_brand_name] => unknown
    [renderingengine_name] => unknown
    [renderingengine_version] => unknown
    [renderingengine_description] => unknown
    [renderingengine_maker] => unknown
)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>BrowscapPhp<br /><small>6014</small><br /></td><td>Android 4.0</td><td><i class=""material-icons"">close</i></td><td>Android </td><td style=""border-left: 1px solid #555""><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td>Mobile Phone</td><td>yes</td><td>yes</td><td style=""border-left: 1px solid #555""></td><td></td><td><i class=""material-icons"">close</i></td><td>0.021</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-ad0041a2-b0f4-43f6-a70d-cad1443caa68"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-ad0041a2-b0f4-43f6-a70d-cad1443caa68"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>BrowscapPhp result detail</h4>
        <p><pre><code class=""php"">stdClass Object
(
    [browser_name_regex] => /^mozilla\/5\.0 \(.*linux.*android.* build\/.*\).*applewebkit\/.*\(.*khtml,.*like gecko.*\).*version\/4\.0.*safari.*$/
    [browser_name_pattern] => mozilla/5.0 (*linux*android* build/*)*applewebkit/*(*khtml,*like gecko*)*version/4.0*safari*
    [parent] => Android Browser 4.0
    [comment] => Android Browser 4.0
    [browser] => Android
    [browser_type] => unknown
    [browser_bits] => 0
    [browser_maker] => Google Inc
    [browser_modus] => unknown
    [version] => 4.0
    [majorver] => 4
    [minorver] => 0
    [platform] => Android
    [platform_version] => unknown
    [platform_description] => unknown
    [platform_bits] => 0
    [platform_maker] => unknown
    [alpha] => false
    [beta] => false
    [win16] => false
    [win32] => false
    [win64] => false
    [frames] => false
    [iframes] => false
    [tables] => false
    [cookies] => false
    [backgroundsounds] => false
    [javascript] => false
    [vbscript] => false
    [javaapplets] => false
    [activexcontrols] => false
    [ismobiledevice] => 1
    [istablet] => 
    [issyndicationreader] => false
    [crawler] => 
    [isfake] => false
    [isanonymized] => false
    [ismodified] => false
    [cssversion] => 0
    [aolversion] => 0
    [device_name] => unknown
    [device_maker] => unknown
    [device_type] => Mobile Phone
    [device_pointing_method] => touchscreen
    [device_code_name] => unknown
    [device_brand_name] => unknown
    [renderingengine_name] => unknown
    [renderingengine_version] => unknown
    [renderingengine_description] => unknown
    [renderingengine_maker] => unknown
)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>DonatjUAParser<br /><small>v0.5.1</small><br /></td><td>Android Browser 4.0</td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td>0</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-15fbc1f0-2615-4d42-b5d9-a30dd647b050"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-15fbc1f0-2615-4d42-b5d9-a30dd647b050"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>DonatjUAParser result detail</h4>
        <p><pre><code class=""php"">Array
(
    [platform] => Android
    [browser] => Android Browser
    [version] => 4.0
)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>JenssegersAgent<br /><small>v2.3.3</small><br /></td><td>Safari 4.0</td><td><i class=""material-icons"">close</i></td><td>AndroidOS 1.1.20</td><td style=""border-left: 1px solid #555""><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td>yes</td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""></td><td></td><td><i class=""material-icons"">close</i></td><td>0.001</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-b85a2b91-6a55-4436-a82c-1ea0d46e2e51"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-b85a2b91-6a55-4436-a82c-1ea0d46e2e51"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>JenssegersAgent result detail</h4>
        <p><pre><code class=""php"">Array
(
    [browserName] => Safari
    [browserVersion] => 4.0
    [osName] => AndroidOS
    [osVersion] => 1.1.20
    [deviceModel] => WebKit
    [isMobile] => 1
    [isRobot] => 
    [botName] => 
)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>NeutrinoApiCom<br /><small></small><br /></td><td>Android Webkit 4.0</td><td><i class=""material-icons"">close</i></td><td>Android 1.1.20</td><td style=""border-left: 1px solid #555"">Archos</td><td>Arnova 10 G2</td><td>mobile-browser</td><td>yes</td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""></td><td></td><td><i class=""material-icons"">close</i></td><td>0.27401</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-8c2a7a4e-3fbf-4df2-8d61-5e730422f67b"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-8c2a7a4e-3fbf-4df2-8d61-5e730422f67b"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>NeutrinoApiCom result detail</h4>
        <p><pre><code class=""php"">stdClass Object
(
    [mobile_screen_height] => 320
    [is_mobile] => 1
    [type] => mobile-browser
    [mobile_brand] => Archos
    [mobile_model] => Arnova 10 G2
    [version] => 4.0
    [is_android] => 1
    [browser_name] => Android Webkit
    [operating_system_family] => Android
    [operating_system_version] => 1.1.20
    [is_ios] => 
    [producer] => Google Inc.
    [operating_system] => Android
    [mobile_screen_width] => 240
    [mobile_browser] => Android Webkit
)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>PiwikDeviceDetector<br /><small>3.6.1</small><br /></td><td>Android Browser </td><td>WebKit </td><td>Android 1.1</td><td style=""border-left: 1px solid #555"">Arnova</td><td>10 G2</td><td>tablet</td><td>yes</td><td></td><td style=""border-left: 1px solid #555""></td><td></td><td></td><td>0.002</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-4a941d34-a8d3-4914-9724-346f60ad7046"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-4a941d34-a8d3-4914-9724-346f60ad7046"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>PiwikDeviceDetector result detail</h4>
        <p><pre><code class=""php"">Array
(
    [client] => Array
        (
            [type] => browser
            [name] => Android Browser
            [short_name] => AN
            [version] => 
            [engine] => WebKit
        )

    [operatingSystem] => Array
        (
            [name] => Android
            [short_name] => AND
            [version] => 1.1
            [platform] => 
        )

    [device] => Array
        (
            [brand] => AN
            [brandName] => Arnova
            [model] => 10 G2
            [device] => 2
            [deviceName] => tablet
        )

    [bot] => 
    [extra] => Array
        (
            [isBot] => 
            [isBrowser] => 1
            [isFeedReader] => 
            [isMobileApp] => 
            [isPIM] => 
            [isLibrary] => 
            [isMediaPlayer] => 
            [isCamera] => 
            [isCarBrowser] => 
            [isConsole] => 
            [isFeaturePhone] => 
            [isPhablet] => 
            [isPortableMediaPlayer] => 
            [isSmartDisplay] => 
            [isSmartphone] => 
            [isTablet] => 1
            [isTV] => 
            [isDesktop] => 
            [isMobile] => 1
            [isTouchEnabled] => 
        )

)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>SinergiBrowserDetector<br /><small>6.0.1</small><br /></td><td>Navigator 4.0</td><td><i class=""material-icons"">close</i></td><td>Android 1.1.20</td><td style=""border-left: 1px solid #555""><i class=""material-icons"">close</i></td><td></td><td><i class=""material-icons"">close</i></td><td>yes</td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td>0</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-ec1cd248-02b0-457e-8a9d-35bb99af008c"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-ec1cd248-02b0-457e-8a9d-35bb99af008c"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>SinergiBrowserDetector result detail</h4>
        <p><pre><code class=""php"">Array
(
    [browser] => Sinergi\BrowserDetector\Browser Object
        (
            [userAgent:Sinergi\BrowserDetector\Browser:private] => Sinergi\BrowserDetector\UserAgent Object
                (
                    [userAgentString:Sinergi\BrowserDetector\UserAgent:private] => Mozilla/5.0 (Linux; U; Android 1.1.20; En-au; A101C Build/ECLAIR) AppleWebKit/530.17 (KHTML, Like Gecko) Version/4.0 Mobile Safari/530.17
                )

            [name:Sinergi\BrowserDetector\Browser:private] => Navigator
            [version:Sinergi\BrowserDetector\Browser:private] => 4.0
            [isRobot:Sinergi\BrowserDetector\Browser:private] => 
            [isChromeFrame:Sinergi\BrowserDetector\Browser:private] => 
            [isFacebookWebView:Sinergi\BrowserDetector\Browser:private] => 
            [isCompatibilityMode:Sinergi\BrowserDetector\Browser:private] => 
        )

    [operatingSystem] => Sinergi\BrowserDetector\Os Object
        (
            [name:Sinergi\BrowserDetector\Os:private] => Android
            [version:Sinergi\BrowserDetector\Os:private] => 1.1.20
            [isMobile:Sinergi\BrowserDetector\Os:private] => 1
            [userAgent:Sinergi\BrowserDetector\Os:private] => Sinergi\BrowserDetector\UserAgent Object
                (
                    [userAgentString:Sinergi\BrowserDetector\UserAgent:private] => Mozilla/5.0 (Linux; U; Android 1.1.20; En-au; A101C Build/ECLAIR) AppleWebKit/530.17 (KHTML, Like Gecko) Version/4.0 Mobile Safari/530.17
                )

        )

    [device] => Sinergi\BrowserDetector\Device Object
        (
            [name:Sinergi\BrowserDetector\Device:private] => unknown
            [userAgent:Sinergi\BrowserDetector\Device:private] => Sinergi\BrowserDetector\UserAgent Object
                (
                    [userAgentString:Sinergi\BrowserDetector\UserAgent:private] => Mozilla/5.0 (Linux; U; Android 1.1.20; En-au; A101C Build/ECLAIR) AppleWebKit/530.17 (KHTML, Like Gecko) Version/4.0 Mobile Safari/530.17
                )

        )

)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>UAParser<br /><small>v3.4.5</small><br /></td><td>Android 1.1.20</td><td><i class=""material-icons"">close</i></td><td>Android 1.1.20</td><td style=""border-left: 1px solid #555"">Archos</td><td>A101C</td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""></td><td></td><td><i class=""material-icons"">close</i></td><td>0.001</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-3160e405-8a8f-46dd-8f47-5115f06462d2"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-3160e405-8a8f-46dd-8f47-5115f06462d2"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>UAParser result detail</h4>
        <p><pre><code class=""php"">UAParser\Result\Client Object
(
    [ua] => UAParser\Result\UserAgent Object
        (
            [major] => 1
            [minor] => 1
            [patch] => 20
            [family] => Android
        )

    [os] => UAParser\Result\OperatingSystem Object
        (
            [major] => 1
            [minor] => 1
            [patch] => 20
            [patchMinor] => 
            [family] => Android
        )

    [device] => UAParser\Result\Device Object
        (
            [brand] => Archos
            [model] => A101C
            [family] => Archos A101C
        )

    [originalUserAgent] => Mozilla/5.0 (Linux; U; Android 1.1.20; En-au; A101C Build/ECLAIR) AppleWebKit/530.17 (KHTML, Like Gecko) Version/4.0 Mobile Safari/530.17
)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>UserAgentApiCom<br /><small></small><br /></td><td>Safari 530.17</td><td>WebKit 530.17</td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td>Mobile</td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""></td><td></td><td><i class=""material-icons"">close</i></td><td>0.15001</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-afeb05fb-26b9-4509-b8ac-0c604a9e97d6"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-afeb05fb-26b9-4509-b8ac-0c604a9e97d6"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>UserAgentApiCom result detail</h4>
        <p><pre><code class=""php"">stdClass Object
(
    [platform_name] => Android
    [platform_version] => 1.1.20
    [platform_type] => Mobile
    [browser_name] => Safari
    [browser_version] => 530.17
    [engine_name] => WebKit
    [engine_version] => 530.17
)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>UserAgentStringCom<br /><small></small><br /></td><td>Android Webkit Browser </td><td><i class=""material-icons"">close</i></td><td>Android 1.1.20</td><td style=""border-left: 1px solid #555""><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""></td><td></td><td></td><td>0.068</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-08a9ddfb-838f-48d7-9ede-1d132306b2ee"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-08a9ddfb-838f-48d7-9ede-1d132306b2ee"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>UserAgentStringCom result detail</h4>
        <p><pre><code class=""php"">stdClass Object
(
    [agent_type] => Browser
    [agent_name] => Android Webkit Browser
    [agent_version] => --
    [os_type] => Android
    [os_name] => Android
    [os_versionName] => 
    [os_versionNumber] => 1.1.20
    [os_producer] => 
    [os_producerURL] => 
    [linux_distibution] => Null
    [agent_language] => English - Australia
    [agent_languageTag] => En-au
)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>WhatIsMyBrowserCom<br /><small></small><br /></td><td>Android Browser 4.0</td><td>WebKit 530.17</td><td>Android 1.1.20</td><td style=""border-left: 1px solid #555""></td><td></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td>0.24601</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-5fc1ff22-a74d-481b-9ad1-fcfde73ded9c"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-5fc1ff22-a74d-481b-9ad1-fcfde73ded9c"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>WhatIsMyBrowserCom result detail</h4>
        <p><pre><code class=""php"">stdClass Object
(
    [operating_system_name] => Android
    [simple_sub_description_string] => 
    [simple_browser_string] => Android Browser 4 on Android 1.1
    [browser_version] => 4
    [extra_info] => Array
        (
        )

    [operating_platform] => 
    [extra_info_table] => Array
        (
        )

    [layout_engine_name] => WebKit
    [detected_addons] => Array
        (
        )

    [operating_system_flavour_code] => 
    [hardware_architecture] => 
    [operating_system_flavour] => 
    [operating_system_frameworks] => Array
        (
        )

    [browser_name_code] => android-browser
    [operating_system_version] => 1.1
    [simple_operating_platform_string] => 
    [is_abusive] => 
    [layout_engine_version] => 530.17
    [browser_capabilities] => Array
        (
        )

    [operating_platform_vendor_name] => 
    [operating_system] => Android 1.1
    [operating_system_version_full] => 1.1.20
    [operating_platform_code] => 
    [browser_name] => Android Browser
    [operating_system_name_code] => android
    [user_agent] => Mozilla/5.0 (Linux; U; Android 1.1.20; En-au; A101C Build/ECLAIR) AppleWebKit/530.17 (KHTML, Like Gecko) Version/4.0 Mobile Safari/530.17
    [browser_version_full] => 4.0
    [browser] => Android Browser 4
)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>WhichBrowser<br /><small>v2.0.18</small><br /></td><td>Android Browser </td><td>Webkit 530.17</td><td>Android 1.1.20</td><td style=""border-left: 1px solid #555"">Archos</td><td>Arnova 10 G2</td><td>tablet</td><td>yes</td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""></td><td></td><td><i class=""material-icons"">close</i></td><td>0.004</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-083a336f-5d73-4505-84f3-c5fc9bb78652"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-083a336f-5d73-4505-84f3-c5fc9bb78652"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>WhichBrowser result detail</h4>
        <p><pre><code class=""php"">Array
(
    [browser] => Array
        (
            [name] => Android Browser
        )

    [engine] => Array
        (
            [name] => Webkit
            [version] => 530.17
        )

    [os] => Array
        (
            [name] => Android
            [version] => 1.1.20
        )

    [device] => Array
        (
            [type] => tablet
            [manufacturer] => Archos
            [model] => Arnova 10 G2
        )

)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>Woothee<br /><small>v1.2.0</small><br /></td><td>Safari 4.0</td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td>smartphone</td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""></td><td></td><td><i class=""material-icons"">close</i></td><td>0</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-f00e7198-0e22-49fe-bad0-dbb3a9cde9b9"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-f00e7198-0e22-49fe-bad0-dbb3a9cde9b9"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>Woothee result detail</h4>
        <p><pre><code class=""php"">Array
(
    [name] => Safari
    [vendor] => Apple
    [version] => 4.0
    [category] => smartphone
    [os] => Android
    [os_version] => 1.1.20
)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>Wurfl<br /><small>1.7.1.0</small><br /></td><td>Android Webkit 1.1.20</td><td><i class=""material-icons"">close</i></td><td>Android 1.1.20</td><td style=""border-left: 1px solid #555""></td><td></td><td>Feature Phone</td><td>yes</td><td>yes</td><td style=""border-left: 1px solid #555""></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td>0.016</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-a2bedf8c-4a95-42a7-96c5-aaf233b2ac50"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-a2bedf8c-4a95-42a7-96c5-aaf233b2ac50"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>Wurfl result detail</h4>
        <p><pre><code class=""php"">Array
(
    [virtual] => Array
        (
            [is_android] => true
            [is_ios] => false
            [is_windows_phone] => false
            [is_app] => false
            [is_full_desktop] => false
            [is_largescreen] => false
            [is_mobile] => true
            [is_robot] => false
            [is_smartphone] => false
            [is_touchscreen] => true
            [is_wml_preferred] => false
            [is_xhtmlmp_preferred] => false
            [is_html_preferred] => true
            [advertised_device_os] => Android
            [advertised_device_os_version] => 1.1.20
            [advertised_browser] => Android Webkit
            [advertised_browser_version] => 1.1.20
            [complete_device_name] => Generic Android 2.0
            [device_name] => Generic Android 2.0
            [form_factor] => Feature Phone
            [is_phone] => true
            [is_app_webview] => false
        )

    [all] => Array
        (
            [brand_name] => Generic
            [model_name] => Android 2.0
            [unique] => true
            [ununiqueness_handler] => 
            [is_wireless_device] => true
            [device_claims_web_support] => true
            [has_qwerty_keyboard] => true
            [can_skip_aligned_link_row] => true
            [uaprof] => 
            [uaprof2] => 
            [uaprof3] => 
            [nokia_series] => 0
            [nokia_edition] => 0
            [device_os] => Android
            [mobile_browser] => Android Webkit
            [mobile_browser_version] => 
            [device_os_version] => 2.0
            [pointing_method] => touchscreen
            [release_date] => 2009_october
            [marketing_name] => 
            [model_extra_info] => 
            [nokia_feature_pack] => 0
            [can_assign_phone_number] => true
            [is_tablet] => false
            [manufacturer_name] => 
            [is_bot] => false
            [is_google_glass] => false
            [proportional_font] => false
            [built_in_back_button_support] => false
            [card_title_support] => true
            [softkey_support] => false
            [table_support] => true
            [numbered_menus] => false
            [menu_with_select_element_recommended] => false
            [menu_with_list_of_links_recommended] => true
            [icons_on_menu_items_support] => false
            [break_list_of_links_with_br_element_recommended] => true
            [access_key_support] => false
            [wrap_mode_support] => false
            [times_square_mode_support] => false
            [deck_prefetch_support] => false
            [elective_forms_recommended] => true
            [wizards_recommended] => false
            [image_as_link_support] => false
            [insert_br_element_after_widget_recommended] => false
            [wml_can_display_images_and_text_on_same_line] => false
            [wml_displays_image_in_center] => false
            [opwv_wml_extensions_support] => false
            [wml_make_phone_call_string] => wtai://wp/mc;
            [chtml_display_accesskey] => false
            [emoji] => false
            [chtml_can_display_images_and_text_on_same_line] => false
            [chtml_displays_image_in_center] => false
            [imode_region] => none
            [chtml_make_phone_call_string] => tel:
            [chtml_table_support] => false
            [xhtml_honors_bgcolor] => true
            [xhtml_supports_forms_in_table] => true
            [xhtml_support_wml2_namespace] => false
            [xhtml_autoexpand_select] => false
            [xhtml_select_as_dropdown] => false
            [xhtml_select_as_radiobutton] => false
            [xhtml_select_as_popup] => false
            [xhtml_display_accesskey] => false
            [xhtml_supports_invisible_text] => false
            [xhtml_supports_inline_input] => false
            [xhtml_supports_monospace_font] => false
            [xhtml_supports_table_for_layout] => true
            [xhtml_supports_css_cell_table_coloring] => true
            [xhtml_format_as_css_property] => false
            [xhtml_format_as_attribute] => false
            [xhtml_nowrap_mode] => false
            [xhtml_marquee_as_css_property] => false
            [xhtml_readable_background_color1] => #FFFFFF
            [xhtml_readable_background_color2] => #FFFFFF
            [xhtml_allows_disabled_form_elements] => true
            [xhtml_document_title_support] => true
            [xhtml_preferred_charset] => iso-8859-1
            [opwv_xhtml_extensions_support] => false
            [xhtml_make_phone_call_string] => tel:
            [xhtmlmp_preferred_mime_type] => text/html
            [xhtml_table_support] => true
            [xhtml_send_sms_string] => sms:
            [xhtml_send_mms_string] => mms:
            [xhtml_file_upload] => not_supported
            [cookie_support] => true
            [accept_third_party_cookie] => true
            [xhtml_supports_iframe] => full
            [xhtml_avoid_accesskeys] => true
            [xhtml_can_embed_video] => play_and_stop
            [ajax_support_javascript] => true
            [ajax_manipulate_css] => true
            [ajax_support_getelementbyid] => true
            [ajax_support_inner_html] => true
            [ajax_xhr_type] => standard
            [ajax_manipulate_dom] => true
            [ajax_support_events] => true
            [ajax_support_event_listener] => true
            [ajax_preferred_geoloc_api] => w3c_api
            [xhtml_support_level] => 4
            [preferred_markup] => html_web_4_0
            [wml_1_1] => false
            [wml_1_2] => false
            [wml_1_3] => false
            [html_wi_w3_xhtmlbasic] => true
            [html_wi_oma_xhtmlmp_1_0] => true
            [html_wi_imode_html_1] => false
            [html_wi_imode_html_2] => false
            [html_wi_imode_html_3] => false
            [html_wi_imode_html_4] => false
            [html_wi_imode_html_5] => false
            [html_wi_imode_htmlx_1] => false
            [html_wi_imode_htmlx_1_1] => false
            [html_wi_imode_compact_generic] => false
            [html_web_3_2] => true
            [html_web_4_0] => true
            [voicexml] => false
            [multipart_support] => false
            [total_cache_disable_support] => false
            [time_to_live_support] => false
            [resolution_width] => 320
            [resolution_height] => 480
            [columns] => 60
            [max_image_width] => 320
            [max_image_height] => 400
            [rows] => 40
            [physical_screen_width] => 34
            [physical_screen_height] => 50
            [dual_orientation] => true
            [density_class] => 1.0
            [wbmp] => true
            [bmp] => false
            [epoc_bmp] => false
            [gif_animated] => false
            [jpg] => true
            [png] => true
            [tiff] => false
            [transparent_png_alpha] => true
            [transparent_png_index] => true
            [svgt_1_1] => false
            [svgt_1_1_plus] => false
            [greyscale] => false
            [gif] => true
            [colors] => 65536
            [webp_lossy_support] => false
            [webp_lossless_support] => false
            [post_method_support] => true
            [basic_authentication_support] => true
            [empty_option_value_support] => true
            [emptyok] => false
            [nokia_voice_call] => false
            [wta_voice_call] => false
            [wta_phonebook] => false
            [wta_misc] => false
            [wta_pdc] => false
            [https_support] => true
            [phone_id_provided] => false
            [max_data_rate] => 200
            [wifi] => true
            [sdio] => false
            [vpn] => false
            [has_cellular_radio] => true
            [max_deck_size] => 1000000
            [max_url_length_in_requests] => 256
            [max_url_length_homepage] => 0
            [max_url_length_bookmark] => 0
            [max_url_length_cached_page] => 0
            [max_no_of_connection_settings] => 0
            [max_no_of_bookmarks] => 0
            [max_length_of_username] => 0
            [max_length_of_password] => 0
            [max_object_size] => 0
            [downloadfun_support] => false
            [directdownload_support] => true
            [inline_support] => false
            [oma_support] => true
            [ringtone] => false
            [ringtone_3gpp] => false
            [ringtone_midi_monophonic] => false
            [ringtone_midi_polyphonic] => false
            [ringtone_imelody] => false
            [ringtone_digiplug] => false
            [ringtone_compactmidi] => false
            [ringtone_mmf] => false
            [ringtone_rmf] => false
            [ringtone_xmf] => false
            [ringtone_amr] => false
            [ringtone_awb] => false
            [ringtone_aac] => false
            [ringtone_wav] => false
            [ringtone_mp3] => false
            [ringtone_spmidi] => false
            [ringtone_qcelp] => false
            [ringtone_voices] => 1
            [ringtone_df_size_limit] => 0
            [ringtone_directdownload_size_limit] => 0
            [ringtone_inline_size_limit] => 0
            [ringtone_oma_size_limit] => 0
            [wallpaper] => false
            [wallpaper_max_width] => 0
            [wallpaper_max_height] => 0
            [wallpaper_preferred_width] => 0
            [wallpaper_preferred_height] => 0
            [wallpaper_resize] => none
            [wallpaper_wbmp] => false
            [wallpaper_bmp] => false
            [wallpaper_gif] => false
            [wallpaper_jpg] => false
            [wallpaper_png] => false
            [wallpaper_tiff] => false
            [wallpaper_greyscale] => false
            [wallpaper_colors] => 2
            [wallpaper_df_size_limit] => 0
            [wallpaper_directdownload_size_limit] => 0
            [wallpaper_inline_size_limit] => 0
            [wallpaper_oma_size_limit] => 0
            [screensaver] => false
            [screensaver_max_width] => 0
            [screensaver_max_height] => 0
            [screensaver_preferred_width] => 0
            [screensaver_preferred_height] => 0
            [screensaver_resize] => none
            [screensaver_wbmp] => false
            [screensaver_bmp] => false
            [screensaver_gif] => false
            [screensaver_jpg] => false
            [screensaver_png] => false
            [screensaver_greyscale] => false
            [screensaver_colors] => 2
            [screensaver_df_size_limit] => 0
            [screensaver_directdownload_size_limit] => 0
            [screensaver_inline_size_limit] => 0
            [screensaver_oma_size_limit] => 0
            [picture] => false
            [picture_max_width] => 0
            [picture_max_height] => 0
            [picture_preferred_width] => 0
            [picture_preferred_height] => 0
            [picture_resize] => none
            [picture_wbmp] => false
            [picture_bmp] => false
            [picture_gif] => false
            [picture_jpg] => false
            [picture_png] => false
            [picture_greyscale] => false
            [picture_colors] => 2
            [picture_df_size_limit] => 0
            [picture_directdownload_size_limit] => 0
            [picture_inline_size_limit] => 0
            [picture_oma_size_limit] => 0
            [video] => false
            [oma_v_1_0_forwardlock] => false
            [oma_v_1_0_combined_delivery] => false
            [oma_v_1_0_separate_delivery] => false
            [streaming_video] => true
            [streaming_3gpp] => true
            [streaming_mp4] => true
            [streaming_mov] => false
            [streaming_video_size_limit] => 0
            [streaming_real_media] => none
            [streaming_flv] => false
            [streaming_3g2] => false
            [streaming_vcodec_h263_0] => 10
            [streaming_vcodec_h263_3] => -1
            [streaming_vcodec_mpeg4_sp] => 2
            [streaming_vcodec_mpeg4_asp] => -1
            [streaming_vcodec_h264_bp] => 3.0
            [streaming_acodec_amr] => nb
            [streaming_acodec_aac] => lc
            [streaming_wmv] => none
            [streaming_preferred_protocol] => rtsp
            [streaming_preferred_http_protocol] => progressive_download
            [wap_push_support] => false
            [connectionless_service_indication] => false
            [connectionless_service_load] => false
            [connectionless_cache_operation] => false
            [connectionoriented_unconfirmed_service_indication] => false
            [connectionoriented_unconfirmed_service_load] => false
            [connectionoriented_unconfirmed_cache_operation] => false
            [connectionoriented_confirmed_service_indication] => false
            [connectionoriented_confirmed_service_load] => false
            [connectionoriented_confirmed_cache_operation] => false
            [utf8_support] => true
            [ascii_support] => false
            [iso8859_support] => false
            [expiration_date] => false
            [j2me_cldc_1_0] => false
            [j2me_cldc_1_1] => false
            [j2me_midp_1_0] => false
            [j2me_midp_2_0] => false
            [doja_1_0] => false
            [doja_1_5] => false
            [doja_2_0] => false
            [doja_2_1] => false
            [doja_2_2] => false
            [doja_3_0] => false
            [doja_3_5] => false
            [doja_4_0] => false
            [j2me_jtwi] => false
            [j2me_mmapi_1_0] => false
            [j2me_mmapi_1_1] => false
            [j2me_wmapi_1_0] => false
            [j2me_wmapi_1_1] => false
            [j2me_wmapi_2_0] => false
            [j2me_btapi] => false
            [j2me_3dapi] => false
            [j2me_locapi] => false
            [j2me_nokia_ui] => false
            [j2me_motorola_lwt] => false
            [j2me_siemens_color_game] => false
            [j2me_siemens_extension] => false
            [j2me_heap_size] => 0
            [j2me_max_jar_size] => 0
            [j2me_storage_size] => 0
            [j2me_max_record_store_size] => 0
            [j2me_screen_width] => 0
            [j2me_screen_height] => 0
            [j2me_canvas_width] => 0
            [j2me_canvas_height] => 0
            [j2me_bits_per_pixel] => 0
            [j2me_audio_capture_enabled] => false
            [j2me_video_capture_enabled] => false
            [j2me_photo_capture_enabled] => false
            [j2me_capture_image_formats] => none
            [j2me_http] => false
            [j2me_https] => false
            [j2me_socket] => false
            [j2me_udp] => false
            [j2me_serial] => false
            [j2me_gif] => false
            [j2me_gif89a] => false
            [j2me_jpg] => false
            [j2me_png] => false
            [j2me_bmp] => false
            [j2me_bmp3] => false
            [j2me_wbmp] => false
            [j2me_midi] => false
            [j2me_wav] => false
            [j2me_amr] => false
            [j2me_mp3] => false
            [j2me_mp4] => false
            [j2me_imelody] => false
            [j2me_rmf] => false
            [j2me_au] => false
            [j2me_aac] => false
            [j2me_realaudio] => false
            [j2me_xmf] => false
            [j2me_wma] => false
            [j2me_3gpp] => false
            [j2me_h263] => false
            [j2me_svgt] => false
            [j2me_mpeg4] => false
            [j2me_realvideo] => false
            [j2me_real8] => false
            [j2me_realmedia] => false
            [j2me_left_softkey_code] => 0
            [j2me_right_softkey_code] => 0
            [j2me_middle_softkey_code] => 0
            [j2me_select_key_code] => 0
            [j2me_return_key_code] => 0
            [j2me_clear_key_code] => 0
            [j2me_datefield_no_accepts_null_date] => false
            [j2me_datefield_broken] => false
            [receiver] => false
            [sender] => false
            [mms_max_size] => 0
            [mms_max_height] => 0
            [mms_max_width] => 0
            [built_in_recorder] => false
            [built_in_camera] => true
            [mms_jpeg_baseline] => false
            [mms_jpeg_progressive] => false
            [mms_gif_static] => false
            [mms_gif_animated] => false
            [mms_png] => false
            [mms_bmp] => false
            [mms_wbmp] => false
            [mms_amr] => false
            [mms_wav] => false
            [mms_midi_monophonic] => false
            [mms_midi_polyphonic] => false
            [mms_midi_polyphonic_voices] => 0
            [mms_spmidi] => false
            [mms_mmf] => false
            [mms_mp3] => false
            [mms_evrc] => false
            [mms_qcelp] => false
            [mms_ota_bitmap] => false
            [mms_nokia_wallpaper] => false
            [mms_nokia_operatorlogo] => false
            [mms_nokia_3dscreensaver] => false
            [mms_nokia_ringingtone] => false
            [mms_rmf] => false
            [mms_xmf] => false
            [mms_symbian_install] => false
            [mms_jar] => false
            [mms_jad] => false
            [mms_vcard] => false
            [mms_vcalendar] => false
            [mms_wml] => false
            [mms_wbxml] => false
            [mms_wmlc] => false
            [mms_video] => false
            [mms_mp4] => false
            [mms_3gpp] => false
            [mms_3gpp2] => false
            [mms_max_frame_rate] => 0
            [nokiaring] => false
            [picturemessage] => false
            [operatorlogo] => false
            [largeoperatorlogo] => false
            [callericon] => false
            [nokiavcard] => false
            [nokiavcal] => false
            [sckl_ringtone] => false
            [sckl_operatorlogo] => false
            [sckl_groupgraphic] => false
            [sckl_vcard] => false
            [sckl_vcalendar] => false
            [text_imelody] => false
            [ems] => false
            [ems_variablesizedpictures] => false
            [ems_imelody] => false
            [ems_odi] => false
            [ems_upi] => false
            [ems_version] => 0
            [siemens_ota] => false
            [siemens_logo_width] => 101
            [siemens_logo_height] => 29
            [siemens_screensaver_width] => 101
            [siemens_screensaver_height] => 50
            [gprtf] => false
            [sagem_v1] => false
            [sagem_v2] => false
            [panasonic] => false
            [sms_enabled] => true
            [wav] => false
            [mmf] => false
            [smf] => false
            [mld] => false
            [midi_monophonic] => false
            [midi_polyphonic] => false
            [sp_midi] => false
            [rmf] => false
            [xmf] => false
            [compactmidi] => false
            [digiplug] => false
            [nokia_ringtone] => false
            [imelody] => false
            [au] => false
            [amr] => false
            [awb] => false
            [aac] => true
            [mp3] => true
            [voices] => 1
            [qcelp] => false
            [evrc] => false
            [flash_lite_version] => 
            [fl_wallpaper] => false
            [fl_screensaver] => false
            [fl_standalone] => false
            [fl_browser] => false
            [fl_sub_lcd] => false
            [full_flash_support] => false
            [css_supports_width_as_percentage] => true
            [css_border_image] => webkit
            [css_rounded_corners] => webkit
            [css_gradient] => none
            [css_spriting] => true
            [css_gradient_linear] => none
            [is_transcoder] => false
            [transcoder_ua_header] => user-agent
            [rss_support] => false
            [pdf_support] => true
            [progressive_download] => true
            [playback_vcodec_h263_0] => 10
            [playback_vcodec_h263_3] => -1
            [playback_vcodec_mpeg4_sp] => 0
            [playback_vcodec_mpeg4_asp] => -1
            [playback_vcodec_h264_bp] => -1
            [playback_real_media] => none
            [playback_3gpp] => true
            [playback_3g2] => false
            [playback_mp4] => true
            [playback_mov] => false
            [playback_acodec_amr] => nb
            [playback_acodec_aac] => none
            [playback_df_size_limit] => 0
            [playback_directdownload_size_limit] => 0
            [playback_inline_size_limit] => 0
            [playback_oma_size_limit] => 0
            [playback_acodec_qcelp] => false
            [playback_wmv] => none
            [hinted_progressive_download] => true
            [html_preferred_dtd] => html4
            [viewport_supported] => true
            [viewport_width] => device_width_token
            [viewport_userscalable] => no
            [viewport_initial_scale] => 
            [viewport_maximum_scale] => 
            [viewport_minimum_scale] => 
            [mobileoptimized] => false
            [handheldfriendly] => false
            [canvas_support] => full
            [image_inlining] => true
            [is_smarttv] => false
            [is_console] => false
            [nfc_support] => false
            [ux_full_desktop] => false
            [jqm_grade] => C
            [is_sencha_touch_ok] => false
        )

)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr><tr><td>Zsxsoft<br /><small>1.3</small><br /></td><td>Android Webkit 4.0</td><td><i class=""material-icons"">close</i></td><td>Android 1.1.20</td><td style=""border-left: 1px solid #555""></td><td></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td style=""border-left: 1px solid #555""><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td><i class=""material-icons"">close</i></td><td>0.001</td><td>
        
<!-- Modal Trigger -->
<a class=""modal-trigger btn waves-effect waves-light"" href=""#modal-5d43e024-b46c-44f6-8914-529b05569bc2"">Detail</a>
        
<!-- Modal Structure -->
<div id=""modal-5d43e024-b46c-44f6-8914-529b05569bc2"" class=""modal modal-fixed-footer"">
    <div class=""modal-content"">
        <h4>Zsxsoft result detail</h4>
        <p><pre><code class=""php"">Array
(
    [browser] => Array
        (
            [link] => http://developer.android.com/reference/android/webkit/package-summary.html
            [title] => Android Webkit 4.0
            [name] => Android Webkit
            [version] => 4.0
            [code] => android-webkit
            [image] => img/16/browser/android-webkit.png
        )

    [os] => Array
        (
            [link] => http://www.android.com/
            [name] => Android
            [version] => 1.1.20
            [code] => android
            [x64] => 
            [title] => Android 1.1.20
            [type] => os
            [dir] => os
            [image] => img/16/os/android.png
        )

    [device] => Array
        (
            [link] => 
            [title] => 
            [model] => 
            [brand] => 
            [code] => null
            [dir] => device
            [type] => device
            [image] => img/16/device/null.png
        )

    [platform] => Array
        (
            [link] => http://www.android.com/
            [name] => Android
            [version] => 1.1.20
            [code] => android
            [x64] => 
            [title] => Android 1.1.20
            [type] => os
            [dir] => os
            [image] => img/16/os/android.png
        )

)
</code></pre></p>
    </div>
    <div class=""modal-footer"">
        <a href=""#!"" class=""modal-action modal-close waves-effect waves-green btn-flat "">close</a>
    </div>
</div>
        
                </td></tr></table>
</div>

        
    <div class=""section"">
        <h1 class=""header center orange-text"">About this comparison</h1>
    
        <div class=""row center"">
            <h5 class=""header light"">
                The primary goal of this project is simple<br />
        
                I wanted to know which user agent parser is the most accurate in each part - device detection, bot detection and so on...<br />
                <br />
                The secondary goal is to provide a source for all user agent parsers to improve their detection based on this results.<br />
                <br />
                You can also improve this further, by suggesting ideas at <a href=""https://github.com/ThaDafinser/UserAgentParserComparison"">ThaDafinser/UserAgentParserComparison</a><br />
                <br />
                The comparison is based on the abstraction by <a href=""https://github.com/ThaDafinser/UserAgentParser"">ThaDafinser/UserAgentParser</a>
            </h5>
        </div>
            
    </div>
        
    <div class=""card"">
		<div class=""card-content"">
			Comparison created <i>2016-05-10 08:03:09</i> | by 
            <a href=""https://github.com/ThaDafinser"">ThaDafinser</a>
        </div>
    </div>
			    
</div>
			    
    <script src=""https://code.jquery.com/jquery-2.1.4.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.3/js/materialize.min.js""></script>
    <script src=""http://cdnjs.cloudflare.com/ajax/libs/list.js/1.2.0/list.min.js""></script>
        
    <script>
    
$(document).ready(function(){
    // the ""href"" attribute of .modal-trigger must specify the modal ID that wants to be triggered
    $('.modal-trigger').leanModal();
});
        
    </script>
        
</body>
</html>",HTML
"﻿<div class=""panel panel-default"">
    <div class=""panel-heading"">
        <h3 class=""panel-title"">Relationships</h3>
    </div>
    <div class=""panel-body"">
        <div ng-repeat=""relationship in contactGroupMember.Relationships"">
            <div class=""form-group"">
                <label for=""inputRelationship"" class=""col-sm-2 control-label"">Relationship</label>
                <div class=""col-sm-10"">
                    <input type=""text"" class=""form-control"" id=""inputRelationship"" placeholder=""Relationship"" ng-model=""relationship.Name"" />
                </div>
            </div>
            <div class=""form-group"">
                <div class=""col-sm-10 col-sm-offset-2"">
                    <button type=""button"" class=""btn btn-default btn-xs"" ng-click=""contactGroupMember.removeRelationship(relationship)""><span class=""glyphicon glyphicon-remove""></span> Remove</button>
                </div>
            </div>
        </div>
        <div class=""form-group"">
            <div class=""col-sm-12"">
                <button type=""button"" class=""btn btn-default btn-xs"" ng-click=""contactGroupMember.addRelationship('')""><span class=""glyphicon glyphicon-plus""></span> Add a Relationship</button>
            </div>
        </div>
    </div>
</div>
",HTML
"<div class=""container"">
  <div class=""row"">
    <sd-toolbar></sd-toolbar>
  </div>
  <div class=""row"">
    <sd-navbar></sd-navbar>
  </div>
  <div class=""row"">
    <router-outlet></router-outlet>
  </div>
</div>
",HTML
"<!DOCTYPE html>
<html lang = ""en"">
<head>
	<title> Cultural Blog</title>
	<link href='http://fonts.googleapis.com/css?family=Italianno' rel='stylesheet' type='text/css'>
</head>
<style type=""text/css"">
	h1 {
		text-align: center;
		margin-top: 3%
	}
	p {
		
	}
	body {
		background: url(""http://www.hdwallpapers.in/walls/hd_sky_blue_beach-HD.jpg"");
		background-size: cover;
		font-family: 'Italianno', serif;
		font-size: 32px
	}
	.question {
		color: #4D4D4D;
		margin-top: 3%
	}
	.answer {

	}
</style>

<body>
	<h1>Here are my answers to Q&A:</h1>
	<p class=""question"">Q: When you think of the times in your life where you've been the happiest, the proudest, or the most satisfied, which of the following values come to mind?</p>
	<p class=""answer"">A: Accomplishment, Achievement, Adventure, Autonomy, Relationships, Commitment, Courage, Creativity, Competence, Confidence, Credibility, Decisiveness, Effectiveness, Excitement, Faith, Freedom, Fiendships, Growth, Having a family, Health, Helping other people, Independence, Inner harmony, Insight, Justice, Knowledge, Peace, Personal development, Pleasure, Romance, Security, Serenity, Sophistication, Spirituality, Tranquility, Truth, Vibrancy, Wisdom</p>
	<p class=""question"">Q: Pick one value and write a couple of sentences about why one of the values you chose is important to you</p>
	<p class=""answer"">A: Having faith is the source of everything you need in life. Faith in god and yourself. It brings all other qualities and values you need in life. It brings peace, Inner harmony, Serenity, Courage, Confidence, and all other values I mentioned above.</p>
	<p class=""question"">Q: Answer the following for the values you chose in Exercise 1: In general, I try to live up to these values: Disagree 1 ----- 2 ----- 3 ----- 4 ----- 5 Agree</p>
	<p class=""answer"">A: I have to say 5. I try my best to live up to those values because they do make me happy and satisfied.</p>
	<p class=""question"">Q: What was the last topic that someone asked for your advice on?</p>
	<p class=""answer"">A: A close friend of mine got accepted in couple of universities for p.h.d and he asked for my advice about the cities and which university he should attend.</p>
</body>
",HTML
"﻿<!DOCTYPE html>
<html>
<head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">

    <title>Децентрализированное Хранилище Данных</title>

    <link rel=""stylesheet"" href=""/bootstrap-3.3.7/css/bootstrap.min.css"">
    <link rel=""stylesheet"" href=""/style.css"">
</head>
<body>
    <nav class=""navbar navbar-default navbar-fixed-top"">
        <div class=""container"">
            <div class=""navbar-header"">
                <button type=""button"" class=""navbar-toggle collapsed"" data-toggle=""collapse"" data-target=""#navbar"" aria-expanded=""false"" aria-controls=""navbar"">
                    <span class=""sr-only"">Toggle navigation</span>
                    <span class=""icon-bar""></span>
                    <span class=""icon-bar""></span>
                    <span class=""icon-bar""></span>
                </button>
                <a class=""navbar-brand"" href=""/"">АйВи</a>
            </div>
            <div id=""navbar"" class=""navbar-collapse collapse"">
                <ul class=""nav navbar-nav"">
                    <li><a href=""/"">Домашняя</a></li>
                    <li><a href=""/about"">О компании</a></li>
                </ul>
            </div>
        </div>
    </nav>
    <div class=""container"">
        <div class=""alert alert-danger"" role=""alert"">
            Данный сайт в разработке
        </div>
        <div class=""row"">

            <div class=""col-md-9"" role=""main"">
            <h1 >Храненние данных</h1>
            <p id=""description"">
                У большинства пользователей компьютера много свободного места на диске,
                которые можно использовать для хранения данных. 
            </p>
            <h2 id=""how-it-works"">Как это работает</h2>
            <p>Данный продукт объеденяет свободные ресурсы пользователей в общее децентрализованное облако,
                не зависящее от места положения пользователя, другими словами виртуальный RAID массив.</p>
            </div>

            <div class=""col-md-3"" role=""complementary"">
                <nav class=""hidden-print hidden-sm hidden-xs affix"">
                    <ul class=""nav"">
                <li class=""""><a href=""#description"">Описание</a></li>
                <li class=""""><a href=""#how-it-works"">Как это работатает</a></li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>

    <script src=""jquery/1.12.4/jquery.min.js""></script>
    <script src=""/bootstrap-3.3.7/js/bootstrap.min.js""></script>
    <script src=""/js/site.js""></script>
</body>
</html>
",HTML
"{# ------------------------------------------------------- #}
{# INDIVIDUAL VIEW FOR EACH storycontributor #}
{# This page can use any data from http:localhost:2000/cms/#/form/storycontributor/ #}
{# Webhook uses the SWIG.js (like Djagno/Twig) templating system. Their documentation is here: #}
{# http://paularmstrong.github.io/swig/docs/tags/ #}
{# Learn about calling data into Webhook pages here: #}
{# http://www.webhook.com/docs/template-rules-and-filters/ #}
{# ------------------------------------------------------- #}
{# Confused what extends and blocks do? Watch a primer: #}
{# http://www.webhook.com/docs/template-inheritance-blocks/ #}
{% extends ""templates/partials/base.html"" %}
{# This sets our page <title>. It will append this storycontributor's name to the site title defined in base.html #}
{% block title %}{% parent %} - {{ item.name }}{% endblock %}
{% block content %}
  <p><a href=""{{ url('storycontributor') }}"">View a list of all storycontributor</a></p>
  <h1>{{ item.name }}</h1>
  <ul>
      <li>
        <strong>Name: </strong>
        {{ item.name }}
      </li>
      <li>
        <strong>Create Date: </strong>
        {# Format the date. You can use PHP's date function to format as needed. http://php.net/manual/en/function.date.php #}
        {{ item.create_date|date('F d Y') }}
      </li>
      <li>
        <strong>Last Updated: </strong>
        {# Format the date. You can use PHP's date function to format as needed. http://php.net/manual/en/function.date.php #}
        {{ item.last_updated|date('F d Y') }}
      </li>
      <li>
        <strong>Publish Date: </strong>
        {# Format the date. You can use PHP's date function to format as needed. http://php.net/manual/en/function.date.php #}
        {{ item.publish_date|date('F d Y') }}
      </li>
      <li>
        <strong>First Name: </strong>
        {{ item.first_name }}
      </li>
      <li>
        <strong>Last Name: </strong>
        {{ item.last_name }}
      </li>
      <li>
        <strong>Title: </strong>
        {{ item.title }}
      </li>
      <li>
        <strong>Company: </strong>
        {{ item.company }}
      </li>
      <li>
        <strong>Bio - Short: </strong>
        {{ item.bio__short }}
      </li>
      <li>
        <strong>Bio - Full: </strong>
        {{ item.bio__full|safe }}
      </li>
      <li>
        <strong>Avatar: </strong>
        {# You can pull out a lot more information from the image property. Info here: #}
        {# http://www.webhook.com/docs/widget-template-reference/#image #}
        <img src=""{{ item.avatar|imageSize(200) }}"" />
      </li>
      <li>
        <strong>Website: </strong>
        {{ item.website }}
      </li>
      <li>
        <strong>Twitter: </strong>
        {{ item.twitter }}
      </li>
      <li>
        <strong>LinkedIn: </strong>
        {{ item.linkedin }}
      </li>
      <li>
        <strong>Preview URL: </strong>
        {{ item.preview_url }}
      </li>
      <li>
        <strong>Slug: </strong>
        {{ item.slug }}
      </li>
      <li>
        <strong>Story (Contributor - Primary): </strong>
        {# Relations require some special code. More info about relations here: #}
        {# http://www.webhook.com/docs/template-rules-and-filters/#getitem #}
        {% for relation in item.story_contributor__primary %}
          {# You can ouput more than just the name. Feel free to output more fields from the CMS. #}
          <a href=""{{ url(relation) }}"">{{ relation.name }}</a>{% if not loop.last %},{% endif %}
        {% endfor %}
      </li>
      <li>
        <strong>Story (Contributor - Additional): </strong>
        {# Relations require some special code. More info about relations here: #}
        {# http://www.webhook.com/docs/template-rules-and-filters/#getitem #}
        {% for relation in item.story_contributor__additional %}
          {# You can ouput more than just the name. Feel free to output more fields from the CMS. #}
          <a href=""{{ url(relation) }}"">{{ relation.name }}</a>{% if not loop.last %},{% endif %}
        {% endfor %}
      </li>
  </ul>
{% endblock %}
",HTML
"---
layout: default
---

<div class=""posts"">
  {% for post in site.posts %}
    <article class=""post"">

      {% if post.icon %}
      <div style=""float: left; padding-right: 20px; margin-top: 10px"">
        <img style="""" src=""{{post.icon}}"" width=""50"" height=""50""/>
      </div>
      {% endif %}

      <a class=""post-link"" href=""{{ site.baseurl }}{{ post.url }}""><h1>{{ post.title }}</h1></a>
      <p class=""post-meta post-meta-date"">{{ post.date | date: ""%b %d %Y"" }}</p>

      <div class=""entry"">
        {{ post.excerpt }}
      </div>

      <a href=""{{ site.baseurl }}{{ post.url }}"" class=""read-more"">Read More</a>
    </article>
  {% endfor %}
</div>",HTML
"<!DOCTYPE html>
<html>
<head lang=""ru"">
	<meta charset=""UTF-8"">
	<meta name=""viewport"" content=""width=device-width, initial-scale=1, user-scalable=no"">
	<meta http-equiv=""x-ua-compatible"" content=""ie=edge"">
	<title>Template</title>

	<link href=""http://themesanytime.com/startui/demo/img/favicon.144x144.png"" rel=""apple-touch-icon"" type=""image/png"" sizes=""144x144"">
	<link href=""http://themesanytime.com/startui/demo/img/favicon.114x114.png"" rel=""apple-touch-icon"" type=""image/png"" sizes=""114x114"">
	<link href=""http://themesanytime.com/startui/demo/img/favicon.72x72.png"" rel=""apple-touch-icon"" type=""image/png"" sizes=""72x72"">
	<link href=""http://themesanytime.com/startui/demo/img/favicon.57x57.png"" rel=""apple-touch-icon"" type=""image/png"">
	<link href=""http://themesanytime.com/startui/demo/img/favicon.png"" rel=""icon"" type=""image/png"">
	<link href=""http://themesanytime.com/startui/demo/img/favicon.ico"" rel=""shortcut icon"">

	<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
	<!--[if lt IE 9]>
	<script src=""https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js""></script>
	<script src=""https://oss.maxcdn.com/respond/1.4.2/respond.min.js""></script>
	<![endif]-->

	<script src=""js/plugins.js""></script>
	<script src=""js/app.js""></script>

    <link rel=""stylesheet"" href=""css/lib/font-awesome/font-awesome.min.css"">
    <link rel=""stylesheet"" href=""css/main.css"">
</head>
<body>

	<header class=""site-header"">
	    <div class=""container-fluid"">
	        <a href=""profile.html#"" class=""site-logo"">
	            <img class=""hidden-md-down"" src=""img/logo-2.png"" alt="""">
	            <img class=""hidden-lg-up"" src=""img/logo-2-mob.png"" alt="""">
	        </a>
	        <button class=""hamburger hamburger--htla"">
	            <span>toggle menu</span>
	        </button>
	        <div class=""site-header-content"">
	            <div class=""site-header-content-in"">
	                <div class=""site-header-shown"">
	                    <div class=""dropdown dropdown-notification notif"">
	                        <a href=""profile.html#""
	                           class=""header-alarm dropdown-toggle active""
	                           id=""dd-notification""
	                           data-toggle=""dropdown""
	                           aria-haspopup=""true""
	                           aria-expanded=""false"">
	                            <i class=""font-icon-alarm""></i>
	                        </a>
	                        <div class=""dropdown-menu dropdown-menu-right dropdown-menu-notif"" aria-labelledby=""dd-notification"">
	                            <div class=""dropdown-menu-notif-header"">
	                                Notifications
	                                <span class=""label label-pill label-danger"">4</span>
	                            </div>
	                            <div class=""dropdown-menu-notif-list"">
	                                <div class=""dropdown-menu-notif-item"">
	                                    <div class=""photo"">
	                                        <img src=""img/photo-64-1.jpg"" alt="""">
	                                    </div>
	                                    <div class=""dot""></div>
	                                    <a href=""profile.html#"">Morgan</a> was bothering about something
	                                    <div class=""color-blue-grey-lighter"">7 hours ago</div>
	                                </div>
	                                <div class=""dropdown-menu-notif-item"">
	                                    <div class=""photo"">
	                                        <img src=""img/photo-64-2.jpg"" alt="""">
	                                    </div>
	                                    <div class=""dot""></div>
	                                    <a href=""profile.html#"">Lioneli</a> had commented on this <a href=""profile.html#"">Super Important Thing</a>
	                                    <div class=""color-blue-grey-lighter"">7 hours ago</div>
	                                </div>
	                                <div class=""dropdown-menu-notif-item"">
	                                    <div class=""photo"">
	                                        <img src=""img/photo-64-3.jpg"" alt="""">
	                                    </div>
	                                    <div class=""dot""></div>
	                                    <a href=""profile.html#"">Xavier</a> had commented on the <a href=""profile.html#"">Movie title</a>
	                                    <div class=""color-blue-grey-lighter"">7 hours ago</div>
	                                </div>
	                                <div class=""dropdown-menu-notif-item"">
	                                    <div class=""photo"">
	                                        <img src=""img/photo-64-4.jpg"" alt="""">
	                                    </div>
	                                    <a href=""profile.html#"">Lionely</a> wants to go to <a href=""profile.html#"">Cinema</a> with you to see <a href=""profile.html#"">This Movie</a>
	                                    <div class=""color-blue-grey-lighter"">7 hours ago</div>
	                                </div>
	                            </div>
	                            <div class=""dropdown-menu-notif-more"">
	                                <a href=""profile.html#"">See more</a>
	                            </div>
	                        </div>
	                    </div>
	
	                    <div class=""dropdown dropdown-notification messages"">
	                        <a href=""profile.html#""
	                           class=""header-alarm dropdown-toggle active""
	                           id=""dd-messages""
	                           data-toggle=""dropdown""
	                           aria-haspopup=""true""
	                           aria-expanded=""false"">
	                            <i class=""font-icon-mail""></i>
	                        </a>
	                        <div class=""dropdown-menu dropdown-menu-right dropdown-menu-messages"" aria-labelledby=""dd-messages"">
	                            <div class=""dropdown-menu-messages-header"">
	                                <ul class=""nav"" role=""tablist"">
	                                    <li class=""nav-item"">
	                                        <a class=""nav-link active""
	                                           data-toggle=""tab""
	                                           href=""profile.html#tab-incoming""
	                                           role=""tab"">
	                                            Inbox
	                                            <span class=""label label-pill label-danger"">8</span>
	                                        </a>
	                                    </li>
	                                    <li class=""nav-item"">
	                                        <a class=""nav-link""
	                                           data-toggle=""tab""
	                                           href=""profile.html#tab-outgoing""
	                                           role=""tab"">Outbox</a>
	                                    </li>
	                                </ul>
	                                <!--<button type=""button"" class=""create"">
	                                    <i class=""font-icon font-icon-pen-square""></i>
	                                </button>-->
	                            </div>
	                            <div class=""tab-content"">
	                                <div class=""tab-pane active"" id=""tab-incoming"" role=""tabpanel"">
	                                    <div class=""dropdown-menu-messages-list"">
	                                        <a href=""profile.html#"" class=""mess-item"">
	                                            <span class=""avatar-preview avatar-preview-32""><img src=""img/photo-64-2.jpg"" alt=""""></span>
	                                            <span class=""mess-item-name"">Tim Collins</span>
	                                            <span class=""mess-item-txt"">Morgan was bothering about something!</span>
	                                        </a>
	                                        <a href=""profile.html#"" class=""mess-item"">
	                                            <span class=""avatar-preview avatar-preview-32""><img src=""img/avatar-2-64.png"" alt=""""></span>
	                                            <span class=""mess-item-name"">Christian Burton</span>
	                                            <span class=""mess-item-txt"">Morgan was bothering about something! Morgan was bothering about something.</span>
	                                        </a>
	                                        <a href=""profile.html#"" class=""mess-item"">
	                                            <span class=""avatar-preview avatar-preview-32""><img src=""img/photo-64-2.jpg"" alt=""""></span>
	                                            <span class=""mess-item-name"">Tim Collins</span>
	                                            <span class=""mess-item-txt"">Morgan was bothering about something!</span>
	                                        </a>
	                                        <a href=""profile.html#"" class=""mess-item"">
	                                            <span class=""avatar-preview avatar-preview-32""><img src=""img/avatar-2-64.png"" alt=""""></span>
	                                            <span class=""mess-item-name"">Christian Burton</span>
	                                            <span class=""mess-item-txt"">Morgan was bothering about something...</span>
	                                        </a>
	                                    </div>
	                                </div>
	                                <div class=""tab-pane"" id=""tab-outgoing"" role=""tabpanel"">
	                                    <div class=""dropdown-menu-messages-list"">
	                                        <a href=""profile.html#"" class=""mess-item"">
	                                            <span class=""avatar-preview avatar-preview-32""><img src=""img/avatar-2-64.png"" alt=""""></span>
	                                            <span class=""mess-item-name"">Christian Burton</span>
	                                            <span class=""mess-item-txt"">Morgan was bothering about something! Morgan was bothering about something...</span>
	                                        </a>
	                                        <a href=""profile.html#"" class=""mess-item"">
	                                            <span class=""avatar-preview avatar-preview-32""><img src=""img/photo-64-2.jpg"" alt=""""></span>
	                                            <span class=""mess-item-name"">Tim Collins</span>
	                                            <span class=""mess-item-txt"">Morgan was bothering about something! Morgan was bothering about something.</span>
	                                        </a>
	                                        <a href=""profile.html#"" class=""mess-item"">
	                                            <span class=""avatar-preview avatar-preview-32""><img src=""img/avatar-2-64.png"" alt=""""></span>
	                                            <span class=""mess-item-name"">Christian Burtons</span>
	                                            <span class=""mess-item-txt"">Morgan was bothering about something!</span>
	                                        </a>
	                                        <a href=""profile.html#"" class=""mess-item"">
	                                            <span class=""avatar-preview avatar-preview-32""><img src=""img/photo-64-2.jpg"" alt=""""></span>
	                                            <span class=""mess-item-name"">Tim Collins</span>
	                                            <span class=""mess-item-txt"">Morgan was bothering about something!</span>
	                                        </a>
	                                    </div>
	                                </div>
	                            </div>
	                            <div class=""dropdown-menu-notif-more"">
	                                <a href=""profile.html#"">See more</a>
	                            </div>
	                        </div>
	                    </div>
	
	                    <div class=""dropdown dropdown-lang"">
	                        <button class=""dropdown-toggle"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
	                            <span class=""flag-icon flag-icon-us""></span>
	                        </button>
	                        <div class=""dropdown-menu dropdown-menu-right"">
	                            <div class=""dropdown-menu-col"">
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""flag-icon flag-icon-ru""></span>Русский</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""flag-icon flag-icon-de""></span>Deutsch</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""flag-icon flag-icon-it""></span>Italiano</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""flag-icon flag-icon-es""></span>Español</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""flag-icon flag-icon-pl""></span>Polski</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""flag-icon flag-icon-li""></span>Lietuviu</a>
	                            </div>
	                            <div class=""dropdown-menu-col"">
	                                <a class=""dropdown-item current"" href=""profile.html#""><span class=""flag-icon flag-icon-us""></span>English</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""flag-icon flag-icon-fr""></span>Français</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""flag-icon flag-icon-by""></span>Беларускi</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""flag-icon flag-icon-ua""></span>Українська</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""flag-icon flag-icon-cz""></span>Česky</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""flag-icon flag-icon-ch""></span>中國</a>
	                            </div>
	                        </div>
	                    </div>
	
	                    <div class=""dropdown user-menu"">
	                        <button class=""dropdown-toggle"" id=""dd-user-menu"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
	                            <img src=""img/avatar-2-64.png"" alt="""">
	                        </button>
	                        <div class=""dropdown-menu dropdown-menu-right"" aria-labelledby=""dd-user-menu"">
	                            <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon glyphicon glyphicon-user""></span>Profile</a>
	                            <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon glyphicon glyphicon-cog""></span>Settings</a>
	                            <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon glyphicon glyphicon-question-sign""></span>Help</a>
	                            <div class=""dropdown-divider""></div>
	                            <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon glyphicon glyphicon-log-out""></span>Logout</a>
	                        </div>
	                    </div>
	
	                    <button type=""button"" class=""burger-right"">
	                        <i class=""font-icon-menu-addl""></i>
	                    </button>
	                </div><!--.site-header-shown-->
	
	                <div class=""mobile-menu-right-overlay""></div>
	                <div class=""site-header-collapsed"">
	                    <div class=""site-header-collapsed-in"">
	                        <div class=""dropdown dropdown-typical"">
	                            <a class=""dropdown-toggle"" id=""dd-header-sales"" data-target=""#"" href=""http://example.com"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
	                                <span class=""font-icon font-icon-wallet""></span>
	                                <span class=""lbl"">Sales</span>
	                            </a>
	
	                            <div class=""dropdown-menu"" aria-labelledby=""dd-header-sales"">
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-home""></span>Quant and Verbal</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-cart""></span>Real Gmat Test</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-speed""></span>Prep Official App</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-users""></span>CATprer Test</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-comments""></span>Third Party Test</a>
	                            </div>
	                        </div>
	                        <div class=""dropdown dropdown-typical"">
	                            <a class=""dropdown-toggle"" id=""dd-header-marketing"" data-target=""#"" href=""http://example.com"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
	                                <span class=""font-icon font-icon-cogwheel""></span>
	                                <span class=""lbl"">Marketing automation</span>
	                            </a>
	
	                            <div class=""dropdown-menu"" aria-labelledby=""dd-header-marketing"">
	                                <a class=""dropdown-item"" href=""profile.html#"">Current Search</a>
	                                <a class=""dropdown-item"" href=""profile.html#"">Search for Issues</a>
	                                <div class=""dropdown-divider""></div>
	                                <div class=""dropdown-header"">Recent issues</div>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-home""></span>Quant and Verbal</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-cart""></span>Real Gmat Test</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-speed""></span>Prep Official App</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-users""></span>CATprer Test</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-comments""></span>Third Party Test</a>
	                                <div class=""dropdown-more"">
	                                    <div class=""dropdown-more-caption padding"">more...</div>
	                                    <div class=""dropdown-more-sub"">
	                                        <div class=""dropdown-more-sub-in"">
	                                            <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-home""></span>Quant and Verbal</a>
	                                            <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-cart""></span>Real Gmat Test</a>
	                                            <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-speed""></span>Prep Official App</a>
	                                            <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-users""></span>CATprer Test</a>
	                                            <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-comments""></span>Third Party Test</a>
	                                        </div>
	                                    </div>
	                                </div>
	                                <div class=""dropdown-divider""></div>
	                                <a class=""dropdown-item"" href=""profile.html#"">Import Issues from CSV</a>
	                                <div class=""dropdown-divider""></div>
	                                <div class=""dropdown-header"">Filters</div>
	                                <a class=""dropdown-item"" href=""profile.html#"">My Open Issues</a>
	                                <a class=""dropdown-item"" href=""profile.html#"">Reported by Me</a>
	                                <div class=""dropdown-divider""></div>
	                                <a class=""dropdown-item"" href=""profile.html#"">Manage filters</a>
	                                <div class=""dropdown-divider""></div>
	                                <div class=""dropdown-header"">Timesheet</div>
	                                <a class=""dropdown-item"" href=""profile.html#"">Subscribtions</a>
	                            </div>
	                        </div>
	                        <div class=""dropdown dropdown-typical"">
	                            <a class=""dropdown-toggle"" id=""dd-header-social"" data-target=""#"" href=""http://example.com"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
	                                <span class=""font-icon font-icon-share""></span>
	                                <span class=""lbl"">Social media</span>
	                            </a>
	
	                            <div class=""dropdown-menu"" aria-labelledby=""dd-header-social"">
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-home""></span>Quant and Verbal</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-cart""></span>Real Gmat Test</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-speed""></span>Prep Official App</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-users""></span>CATprer Test</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-comments""></span>Third Party Test</a>
	                            </div>
	                        </div>
	                        <div class=""dropdown dropdown-typical"">
	                            <a href=""profile.html#"" class=""dropdown-toggle no-arr"">
	                                <span class=""font-icon font-icon-page""></span>
	                                <span class=""lbl"">Projects</span>
	                                <span class=""label label-pill label-danger"">35</span>
	                            </a>
	                        </div>
	                        <div class=""dropdown dropdown-typical"">
	                            <a class=""dropdown-toggle"" id=""dd-header-form-builder"" data-target=""#"" href=""http://example.com"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
	                                <span class=""font-icon font-icon-pencil""></span>
	                                <span class=""lbl"">Form builder</span>
	                            </a>
	
	                            <div class=""dropdown-menu"" aria-labelledby=""dd-header-form-builder"">
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-home""></span>Quant and Verbal</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-cart""></span>Real Gmat Test</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-speed""></span>Prep Official App</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-users""></span>CATprer Test</a>
	                                <a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-comments""></span>Third Party Test</a>
	                            </div>
	                        </div>
	                        <div class=""dropdown"">
	                            <button class=""btn btn-rounded dropdown-toggle"" id=""dd-header-add"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
	                                Add
	                            </button>
	                            <div class=""dropdown-menu"" aria-labelledby=""dd-header-add"">
	                                <a class=""dropdown-item"" href=""profile.html#"">Quant and Verbal</a>
	                                <a class=""dropdown-item"" href=""profile.html#"">Real Gmat Test</a>
	                                <a class=""dropdown-item"" href=""profile.html#"">Prep Official App</a>
	                                <a class=""dropdown-item"" href=""profile.html#"">CATprer Test</a>
	                                <a class=""dropdown-item"" href=""profile.html#"">Third Party Test</a>
	                            </div>
	                        </div>
	                        <div class=""help-dropdown"">
	                            <button type=""button"">
	                                <i class=""font-icon font-icon-help""></i>
	                            </button>
	                            <div class=""help-dropdown-popup"">
	                                <div class=""help-dropdown-popup-side"">
	                                    <ul>
	                                        <li><a href=""profile.html#"">Getting Started</a></li>
	                                        <li><a href=""profile.html#"" class=""active"">Creating a new project</a></li>
	                                        <li><a href=""profile.html#"">Adding customers</a></li>
	                                        <li><a href=""profile.html#"">Settings</a></li>
	                                        <li><a href=""profile.html#"">Importing data</a></li>
	                                        <li><a href=""profile.html#"">Exporting data</a></li>
	                                    </ul>
	                                </div>
	                                <div class=""help-dropdown-popup-cont"">
	                                    <div class=""help-dropdown-popup-cont-in"">
	                                        <div class=""jscroll"">
	                                            <a href=""profile.html#"" class=""help-dropdown-popup-item"">
	                                                Lorem Ipsum is simply
	                                                <span class=""describe"">Lorem Ipsum has been the industry's standard dummy text </span>
	                                            </a>
	                                            <a href=""profile.html#"" class=""help-dropdown-popup-item"">
	                                                Contrary to popular belief
	                                                <span class=""describe"">Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC</span>
	                                            </a>
	                                            <a href=""profile.html#"" class=""help-dropdown-popup-item"">
	                                                The point of using Lorem Ipsum
	                                                <span class=""describe"">Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text</span>
	                                            </a>
	                                            <a href=""profile.html#"" class=""help-dropdown-popup-item"">
	                                                Lorem Ipsum
	                                                <span class=""describe"">There are many variations of passages of Lorem Ipsum available</span>
	                                            </a>
	                                            <a href=""profile.html#"" class=""help-dropdown-popup-item"">
	                                                Lorem Ipsum is simply
	                                                <span class=""describe"">Lorem Ipsum has been the industry's standard dummy text </span>
	                                            </a>
	                                            <a href=""profile.html#"" class=""help-dropdown-popup-item"">
	                                                Contrary to popular belief
	                                                <span class=""describe"">Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC</span>
	                                            </a>
	                                            <a href=""profile.html#"" class=""help-dropdown-popup-item"">
	                                                The point of using Lorem Ipsum
	                                                <span class=""describe"">Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text</span>
	                                            </a>
	                                            <a href=""profile.html#"" class=""help-dropdown-popup-item"">
	                                                Lorem Ipsum
	                                                <span class=""describe"">There are many variations of passages of Lorem Ipsum available</span>
	                                            </a>
	                                            <a href=""profile.html#"" class=""help-dropdown-popup-item"">
	                                                Lorem Ipsum is simply
	                                                <span class=""describe"">Lorem Ipsum has been the industry's standard dummy text </span>
	                                            </a>
	                                            <a href=""profile.html#"" class=""help-dropdown-popup-item"">
	                                                Contrary to popular belief
	                                                <span class=""describe"">Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC</span>
	                                            </a>
	                                            <a href=""profile.html#"" class=""help-dropdown-popup-item"">
	                                                The point of using Lorem Ipsum
	                                                <span class=""describe"">Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text</span>
	                                            </a>
	                                            <a href=""profile.html#"" class=""help-dropdown-popup-item"">
	                                                Lorem Ipsum
	                                                <span class=""describe"">There are many variations of passages of Lorem Ipsum available</span>
	                                            </a>
	                                        </div>
	                                    </div>
	                                </div>
	                            </div>
	                        </div><!--.help-dropdown-->
	                        <div class=""site-header-search-container"">
	                            <form class=""site-header-search closed"">
	                                <input type=""text"" placeholder=""Search""/>
	                                <button type=""submit"">
	                                    <span class=""font-icon-search""></span>
	                                </button>
	                                <div class=""overlay""></div>
	                            </form>
	                        </div>
	                    </div><!--.site-header-collapsed-in-->
	                </div><!--.site-header-collapsed-->
	            </div><!--site-header-content-in-->
	        </div><!--.site-header-content-->
	    </div><!--.container-fluid-->
	</header><!--.site-header-->

	<div class=""page-content"">
		<div class=""container-fluid"">
			<div class=""row"">
				<div class=""col-lg-6 col-lg-push-3 col-md-12"">
					<form class=""box-typical"">
						<input type=""text"" class=""write-something"" placeholder=""Write Something...""/>
						<div class=""box-typical-footer"">
							<div class=""tbl"">
								<div class=""tbl-row"">
									<div class=""tbl-cell"">
										<button type=""button"" class=""btn-icon"">
											<i class=""font-icon font-icon-earth""></i>
										</button>
										<button type=""button"" class=""btn-icon"">
											<i class=""font-icon font-icon-picture""></i>
										</button>
										<button type=""button"" class=""btn-icon"">
											<i class=""font-icon font-icon-calend""></i>
										</button>
										<button type=""button"" class=""btn-icon"">
											<i class=""font-icon font-icon-video-fill""></i>
										</button>
									</div>
									<div class=""tbl-cell tbl-cell-action"">
										<button type=""submit"" class=""btn btn-rounded"">Send</button>
									</div>
								</div>
							</div>
						</div>
					</form><!--.box-typical-->

					<section class=""box-typical"">
						<header class=""box-typical-header-sm"">
							Posts
							<div class=""slider-arrs"">
								<button type=""button"" class=""posts-slider-prev"">
									<i class=""font-icon font-icon-arrow-left""></i>
								</button>
								<button type=""button"" class=""posts-slider-next"">
									<i class=""font-icon font-icon-arrow-right""></i>
								</button>
							</div>
						</header>
						<div class=""posts-slider"">
							<div class=""slide"">
								<article class=""post-announce"">
									<div class=""post-announce-pic"">
										<a href=""profile.html#"">
											<img src=""img/post-1.jpeg"" alt="""">
										</a>
									</div>
									<div class=""post-announce-title"">
										<a href=""profile.html#"">3 Myths That Confuse the D Myths That Confuse the D Myths That Confuse the D</a>
									</div>
									<div class=""post-announce-date"">Februrary 19, 2016</div>
									<ul class=""post-announce-meta"">
										<li>
											<i class=""font-icon font-icon-eye""></i>
											18
										</li>
										<li>
											<i class=""font-icon font-icon-heart""></i>
											5K
										</li>
										<li>
											<i class=""font-icon font-icon-comment""></i>
											3K
										</li>
									</ul>
								</article>
							</div><!--.slide-->
							<div class=""slide"">
								<article class=""post-announce"">
									<div class=""post-announce-pic"">
										<a href=""profile.html#"">
											<img src=""img/post-2.jpg"" alt="""">
										</a>
									</div>
									<div class=""post-announce-title"">
										<a href=""profile.html#"">How Much Do We Spend on How Much Do We Spend on How Much Do We Spend on </a>
									</div>
									<div class=""post-announce-date"">January 21, 2016</div>
									<ul class=""post-announce-meta"">
										<li>
											<i class=""font-icon font-icon-eye""></i>
											18
										</li>
										<li>
											<i class=""font-icon font-icon-heart""></i>
											5K
										</li>
										<li>
											<i class=""font-icon font-icon-comment""></i>
											3K
										</li>
									</ul>
								</article>
							</div><!--.slide-->
							<div class=""slide"">
								<article class=""post-announce"">
									<div class=""post-announce-pic"">
										<a href=""profile.html#"">
											<img src=""img/post-3.jpeg"" alt="""">
										</a>
									</div>
									<div class=""post-announce-title"">
										<a href=""profile.html#"">Good News You Might Have Good News You Might Have Good News You Might Have </a>
									</div>
									<div class=""post-announce-date"">December 30, 2016</div>
									<ul class=""post-announce-meta"">
										<li>
											<i class=""font-icon font-icon-eye""></i>
											18
										</li>
										<li>
											<i class=""font-icon font-icon-heart""></i>
											5K
										</li>
										<li>
											<i class=""font-icon font-icon-comment""></i>
											3K
										</li>
									</ul>
								</article>
							</div><!--.slide-->
							<div class=""slide"">
								<article class=""post-announce"">
									<div class=""post-announce-pic"">
										<a href=""profile.html#"">
											<img src=""img/post-1.jpeg"" alt="""">
										</a>
									</div>
									<div class=""post-announce-title"">
										<a href=""profile.html#"">3 Myths That Confuse the D Myths That Confuse the D Myths That Confuse the D</a>
									</div>
									<div class=""post-announce-date"">Februrary 19, 2016</div>
									<ul class=""post-announce-meta"">
										<li>
											<i class=""font-icon font-icon-eye""></i>
											18
										</li>
										<li>
											<i class=""font-icon font-icon-heart""></i>
											5K
										</li>
										<li>
											<i class=""font-icon font-icon-comment""></i>
											3K
										</li>
									</ul>
								</article>
							</div><!--.slide-->
							<div class=""slide"">
								<article class=""post-announce"">
									<div class=""post-announce-pic"">
										<a href=""profile.html#"">
											<img src=""img/post-2.jpg"" alt="""">
										</a>
									</div>
									<div class=""post-announce-title"">
										<a href=""profile.html#"">How Much Do We Spend on How Much Do We Spend on How Much Do We Spend on </a>
									</div>
									<div class=""post-announce-date"">January 21, 2016</div>
									<ul class=""post-announce-meta"">
										<li>
											<i class=""font-icon font-icon-eye""></i>
											18
										</li>
										<li>
											<i class=""font-icon font-icon-heart""></i>
											5K
										</li>
										<li>
											<i class=""font-icon font-icon-comment""></i>
											3K
										</li>
									</ul>
								</article>
							</div><!--.slide-->
							<div class=""slide"">
								<article class=""post-announce"">
									<div class=""post-announce-pic"">
										<a href=""profile.html#"">
											<img src=""img/post-3.jpeg"" alt="""">
										</a>
									</div>
									<div class=""post-announce-title"">
										<a href=""profile.html#"">Good News You Might Have Good News You Might Have Good News You Might Have </a>
									</div>
									<div class=""post-announce-date"">December 30, 2016</div>
									<ul class=""post-announce-meta"">
										<li>
											<i class=""font-icon font-icon-eye""></i>
											18
										</li>
										<li>
											<i class=""font-icon font-icon-heart""></i>
											5K
										</li>
										<li>
											<i class=""font-icon font-icon-comment""></i>
											3K
										</li>
									</ul>
								</article>
							</div><!--.slide-->
						</div><!--.posts-slider-->
					</section><!--.box-typical-->

					<section class=""box-typical"">
						<header class=""box-typical-header-sm"">Background</header>
						<article class=""profile-info-item"">
							<header class=""profile-info-item-header"">
								<i class=""font-icon font-icon-notebook-bird""></i>
								Summary
							</header>
							<div class=""text-block text-block-typical"">
								<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
								<p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. </p>
							</div>
						</article><!--.profile-info-item-->

						<article class=""profile-info-item"">
							<header class=""profile-info-item-header"">
								<i class=""font-icon font-icon-case""></i>
								Experience
							</header>
							<ul class=""exp-timeline"">
								<li class=""exp-timeline-item"">
									<div class=""dot""></div>
									<div class=""tbl"">
										<div class=""tbl-row"">
											<div class=""tbl-cell"">
												<div class=""exp-timeline-range"">2000 President</div>
												<div class=""exp-timeline-status"">Co-founder, Chairman</div>
												<div class=""exp-timeline-location""><a href=""profile.html#"">Company</a></div>
											</div>
											<div class=""tbl-cell tbl-cell-logo"">
												<img src=""img/logo-2.png"" alt="""">
											</div>
										</div>
									</div>
								</li>
								<li class=""exp-timeline-item"">
									<div class=""dot""></div>
									<div class=""tbl"">
										<div class=""tbl-row"">
											<div class=""tbl-cell"">
												<div class=""exp-timeline-range"">1992–1999</div>
												<div class=""exp-timeline-status"">Senior Developer</div>
												<div class=""exp-timeline-location""><a href=""profile.html#"">YouTube</a></div>
											</div>
											<div class=""tbl-cell tbl-cell-logo"">
												<img src=""img/logo-2.png"" alt="""">
											</div>
										</div>
									</div>
								</li>
								<li class=""exp-timeline-item"">
									<div class=""dot""></div>
									<div class=""tbl"">
										<div class=""tbl-row"">
											<div class=""tbl-cell"">
												<div class=""exp-timeline-range"">2000 President</div>
												<div class=""exp-timeline-status"">Co-founder, Chairman</div>
												<div class=""exp-timeline-location""><a href=""profile.html#"">Company</a></div>
											</div>
											<div class=""tbl-cell tbl-cell-logo"">
												<img src=""img/logo-2.png"" alt="""">
											</div>
										</div>
									</div>
								</li>
							</ul>
						</article><!--.profile-info-item-->

						<article class=""profile-info-item"">
							<header class=""profile-info-item-header"">
								<i class=""font-icon font-icon-award""></i>
								Edication
							</header>
							<ul class=""exp-timeline"">
								<li class=""exp-timeline-item"">
									<div class=""dot""></div>
									<div class=""tbl"">
										<div class=""tbl-row"">
											<div class=""tbl-cell"">
												<div class=""exp-timeline-range"">1973 – 1975</div>
												<div class=""exp-timeline-status"">Harvard University</div>
												<div class=""exp-timeline-location""><a href=""profile.html#"">BS Computer Science</a></div>
											</div>
											<div class=""tbl-cell tbl-cell-logo"">
												<img src=""img/logo-2.png"" alt="""">
											</div>
										</div>
									</div>
								</li>
								<li class=""exp-timeline-item"">
									<div class=""dot""></div>
									<div class=""tbl"">
										<div class=""tbl-row"">
											<div class=""tbl-cell"">
												<div class=""exp-timeline-range"">1960 – 1973</div>
												<div class=""exp-timeline-status"">Lakeside Scool, Seattle</div>
											</div>
											<div class=""tbl-cell tbl-cell-logo"">
												<img src=""img/logo-2.png"" alt="""">
											</div>
										</div>
									</div>
								</li>
							</ul>
						</article><!--.profile-info-item-->

						<article class=""profile-info-item"">
							<header class=""profile-info-item-header"">
								<i class=""font-icon font-icon-lamp""></i>
								Skills
							</header>

							<section class=""skill-item tbl"">
								<div class=""tbl-row"">
									<div class=""tbl-cell tbl-cell-num"">
										<div class=""skill-circle skill-circle-num"">74</div>
									</div>
									<div class=""tbl-cell tbl-cell-txt"">Social Media Marketing</div>
									<div class=""tbl-cell tbl-cell-users"">
										<img class=""skill-user-photo"" src=""img/avatar-1-64.png"" alt=""""/>
										<img class=""skill-user-photo"" src=""img/photo-64-3.jpg"" alt=""""/>
										<img class=""skill-user-photo"" src=""img/photo-64-4.jpg"" alt=""""/>
										<div class=""skill-circle skill-circle-users"">+74</div>
									</div>
								</div>
							</section><!--.skill-item-->

							<section class=""skill-item tbl"">
								<div class=""tbl-row"">
									<div class=""tbl-cell tbl-cell-num"">
										<div class=""skill-circle skill-circle-num"">67</div>
									</div>
									<div class=""tbl-cell tbl-cell-txt"">Web Development</div>
									<div class=""tbl-cell tbl-cell-users"">
										<img class=""skill-user-photo"" src=""img/avatar-2-64.png"" alt=""""/>
										<img class=""skill-user-photo"" src=""img/photo-64-2.jpg"" alt=""""/>
										<img class=""skill-user-photo"" src=""img/photo-64-3.jpg"" alt=""""/>
										<div class=""skill-circle skill-circle-users"">+82</div>
									</div>
								</div>
							</section><!--.skill-item-->

							<section class=""skill-item tbl"">
								<div class=""tbl-row"">
									<div class=""tbl-cell tbl-cell-num"">
										<div class=""skill-circle skill-circle-num"">25</div>
									</div>
									<div class=""tbl-cell tbl-cell-txt"">Search Engine Optimization</div>
									<div class=""tbl-cell tbl-cell-users"">
										<img class=""skill-user-photo"" src=""img/avatar-3-64.png"" alt=""""/>
										<img class=""skill-user-photo"" src=""img/photo-64-1.jpg"" alt=""""/>
										<img class=""skill-user-photo"" src=""img/photo-64-2.jpg"" alt=""""/>
										<div class=""skill-circle skill-circle-users"">+4</div>
									</div>
								</div>
							</section><!--.skill-item-->

							<section class=""skill-item tbl"">
								<div class=""tbl-row"">
									<div class=""tbl-cell tbl-cell-num"">
										<div class=""skill-circle skill-circle-num"">20</div>
									</div>
									<div class=""tbl-cell tbl-cell-txt"">User Experience Design</div>
									<div class=""tbl-cell tbl-cell-users"">
										<img class=""skill-user-photo"" src=""img/photo-64-3.jpg"" alt=""""/>
										<img class=""skill-user-photo"" src=""img/photo-64-4.jpg"" alt=""""/>
										<img class=""skill-user-photo"" src=""img/photo-64-1.jpg"" alt=""""/>
										<div class=""skill-circle skill-circle-users"">+13</div>
									</div>
								</div>
							</section><!--.skill-item-->
						</article><!--.profile-info-item-->

						<article class=""profile-info-item"">
							<header class=""profile-info-item-header"">
								<i class=""font-icon font-icon-star""></i>
								More interest
							</header>
							<div class=""profile-interests"">
								<a href=""profile.html#"" class=""label label-light-grey"">Interest</a>
								<a href=""profile.html#"" class=""label label-light-grey"">Example</a>
								<a href=""profile.html#"" class=""label label-light-grey"">One more</a>
								<a href=""profile.html#"" class=""label label-light-grey"">Here is example interest</a>
								<a href=""profile.html#"" class=""label label-light-grey"">Interest</a>
								<a href=""profile.html#"" class=""label label-light-grey"">Example</a>
								<a href=""profile.html#"" class=""label label-light-grey"">One more</a>
								<a href=""profile.html#"" class=""label label-light-grey"">Here is example interest</a>
								<a href=""profile.html#"" class=""label label-light-grey"">Interest</a>
								<a href=""profile.html#"" class=""label label-light-grey"">Example</a>
								<a href=""profile.html#"" class=""label label-light-grey"">One more</a>
								<a href=""profile.html#"" class=""label label-light-grey"">Here is example interest</a>
							</div>
						</article><!--.profile-info-item-->
					</section><!--.box-typical-->

					<section class=""box-typical"">
						<header class=""box-typical-header-sm"">
							Recomendations
							<div class=""slider-arrs"">
								<button type=""button"" class=""recomendations-slider-prev"">
									<i class=""font-icon font-icon-arrow-left""></i>
								</button>
								<button type=""button"" class=""recomendations-slider-next"">
									<i class=""font-icon font-icon-arrow-right""></i>
								</button>
							</div>
						</header>
						<div class=""recomendations-slider"">
							<div class=""slide"">
								<div class=""citate-speech-bubble"">
									<i class=""font-icon-quote""></i>
									Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
								</div>
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-3.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name""><a href=""profile.html#"">Molly Bridjet</a></p>
											<p class=""user-card-row-status""><a href=""profile.html#"">PatchworkLabs</a></p>
										</div>
									</div>
								</div>
							</div><!--.slide-->

							<div class=""slide"">
								<div class=""citate-speech-bubble"">
									<i class=""font-icon-quote""></i>
									Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
								</div>
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-1.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name""><a href=""profile.html#"">Molly Bridjet</a></p>
											<p class=""user-card-row-status""><a href=""profile.html#"">PatchworkLabs</a></p>
										</div>
									</div>
								</div>
							</div><!--.slide-->

							<div class=""slide"">
								<div class=""citate-speech-bubble"">
									<i class=""font-icon-quote""></i>
									Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
								</div>
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-2.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name""><a href=""profile.html#"">Molly Bridjet</a></p>
											<p class=""user-card-row-status""><a href=""profile.html#"">PatchworkLabs</a></p>
										</div>
									</div>
								</div>
							</div><!--.slide-->

							<div class=""slide"">
								<div class=""citate-speech-bubble"">
									<i class=""font-icon-quote""></i>
									Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
								</div>
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-4.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name""><a href=""profile.html#"">Molly Bridjet</a></p>
											<p class=""user-card-row-status""><a href=""profile.html#"">PatchworkLabs</a></p>
										</div>
									</div>
								</div>
							</div><!--.slide-->

							<div class=""slide"">
								<div class=""citate-speech-bubble"">
									<i class=""font-icon-quote""></i>
									Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
								</div>
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-2.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name""><a href=""profile.html#"">Molly Bridjet</a></p>
											<p class=""user-card-row-status""><a href=""profile.html#"">PatchworkLabs</a></p>
										</div>
									</div>
								</div>
							</div><!--.slide-->

							<div class=""slide"">
								<div class=""citate-speech-bubble"">
									<i class=""font-icon-quote""></i>
									Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
								</div>
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-4.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name""><a href=""profile.html#"">Molly Bridjet</a></p>
											<p class=""user-card-row-status""><a href=""profile.html#"">PatchworkLabs</a></p>
										</div>
									</div>
								</div>
							</div><!--.slide-->
						</div><!--.recomendations-slider-->
					</section><!--.box-typical-->

					<section class=""box-typical"">
						<header class=""box-typical-header-sm"">Following</header>
						<div class=""profile-following"">
							<div class=""profile-following-grid"">
								<div class=""col"">
									<article class=""follow-group"">
										<div class=""follow-group-logo"">
											<a href=""profile.html#"" class=""follow-group-logo-in""><img src=""img/logo-2.png"" alt=""""></a>
										</div>
										<div class=""follow-group-name"">
											<a href=""profile.html#"">KIPP Foundation</a>
										</div>
										<div class=""follow-group-link"">
											<a href=""profile.html#"">
												<span class=""plus-link-circle""><span>&plus;</span></span>
												Follow
											</a>
										</div>
									</article>
								</div>
								<div class=""col"">
									<article class=""follow-group"">
										<div class=""follow-group-logo"">
											<a href=""profile.html#"" class=""follow-group-logo-in""><img src=""img/logo-2.png"" alt=""""></a>
										</div>
										<div class=""follow-group-name"">
											<a href=""profile.html#"">KIPP Foundation</a>
										</div>
										<div class=""follow-group-link"">
											<a href=""profile.html#"">
												<span class=""plus-link-circle""><span>&plus;</span></span>
												Follow
											</a>
										</div>
									</article>
								</div>
								<div class=""col"">
									<article class=""follow-group"">
										<div class=""follow-group-logo"">
											<a href=""profile.html#"" class=""follow-group-logo-in""><img src=""img/logo-2.png"" alt=""""></a>
										</div>
										<div class=""follow-group-name"">
											<a href=""profile.html#"">KIPP Foundation</a>
										</div>
										<div class=""follow-group-link"">
											<a href=""profile.html#"">
												<span class=""plus-link-circle""><span>&plus;</span></span>
												Follow
											</a>
										</div>
									</article>
								</div>
								<div class=""col"">
									<article class=""follow-group"">
										<div class=""follow-group-logo"">
											<a href=""profile.html#"" class=""follow-group-logo-in""><img src=""img/logo-2.png"" alt=""""></a>
										</div>
										<div class=""follow-group-name"">
											<a href=""profile.html#"">KIPP Foundation</a>
										</div>
										<div class=""follow-group-link"">
											<a href=""profile.html#"">
												<span class=""plus-link-circle""><span>&plus;</span></span>
												Follow
											</a>
										</div>
									</article>
								</div>
							</div>
							<a href=""profile.html#"" class=""btn btn-rounded btn-primary-outline"">See all (20)</a>
						</div><!--.profile-following-->
					</section><!--.box-typical-->
				</div><!--.col- -->

				<div class=""col-lg-3 col-lg-pull-6 col-md-6 col-sm-6"">
					<section class=""box-typical"">
						<div class=""profile-card"">
							<div class=""profile-card-photo"">
								<img src=""img/photo-220-1.jpg"" alt=""""/>
							</div>
							<div class=""profile-card-name"">Sarah Sanchez</div>
							<div class=""profile-card-status"">Company Founder</div>
							<div class=""profile-card-location"">Greater Seattle Area</div>
							<button type=""button"" class=""btn btn-rounded"">Follow</button>
							<div class=""btn-group"">
								<button type=""button""
										class=""btn btn-rounded btn-primary-outline dropdown-toggle""
										data-toggle=""dropdown""
										aria-haspopup=""true""
										aria-expanded=""false"">
									Connect
								</button>
								<div class=""dropdown-menu"">
									<a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-home""></span>Quant and Verbal</a>
									<a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-cart""></span>Real Gmat Test</a>
									<a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-speed""></span>Prep Official App</a>
									<a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-users""></span>CATprer Test</a>
									<a class=""dropdown-item"" href=""profile.html#""><span class=""font-icon font-icon-comments""></span>Third Party Test</a>
								</div>
							</div>
						</div><!--.profile-card-->

						<div class=""profile-statistic tbl"">
							<div class=""tbl-row"">
								<div class=""tbl-cell"">
									<b>200</b>
									Connections
								</div>
								<div class=""tbl-cell"">
									<b>1.9M</b>
									Followers
								</div>
							</div>
						</div>

						<ul class=""profile-links-list"">
							<li class=""nowrap"">
								<i class=""font-icon font-icon-earth-bordered""></i>
								<a href=""profile.html#"">example.com</a>
							</li>
							<li class=""nowrap"">
								<i class=""font-icon font-icon-fb-fill""></i>
								<a href=""profile.html#"">facebook.com/example</a>
							</li>
							<li class=""nowrap"">
								<i class=""font-icon font-icon-vk-fill""></i>
								<a href=""profile.html#"">vk.com/example</a>
							</li>
							<li class=""nowrap"">
								<i class=""font-icon font-icon-in-fill""></i>
								<a href=""profile.html#"">linked.in/example</a>
							</li>
							<li class=""nowrap"">
								<i class=""font-icon font-icon-tw-fill""></i>
								<a href=""profile.html#"">twitter.com/example</a>
							</li>
							<li class=""divider""></li>
							<li>
								<i class=""font-icon font-icon-pdf-fill""></i>
								<a href=""profile.html#"">Export page as PDF</a>
							</li>
						</ul>
					</section><!--.box-typical-->

					<section class=""box-typical"">
						<header class=""box-typical-header-sm"">
							Friends
							&nbsp;
							<a href=""profile.html#"" class=""full-count"">268</a>
						</header>
						<div class=""friends-list"">
							<article class=""friends-list-item"">
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-2.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name status-online""><a href=""profile.html#"">Dan Cederholm</a></p>
											<p class=""user-card-row-location"">New York</p>
										</div>
									</div>
								</div>
							</article>
							<article class=""friends-list-item"">
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-1.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name""><a href=""profile.html#"">Oykun Yilmaz</a></p>
											<p class=""user-card-row-location"">Los Angeles</p>
										</div>
									</div>
								</div>
							</article>
							<article class=""friends-list-item"">
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-3.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name""><a href=""profile.html#"">Bill S Kenney</a></p>
											<p class=""user-card-row-location"">Cardiff</p>
										</div>
									</div>
								</div>
							</article>
							<article class=""friends-list-item"">
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-4.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name""><a href=""profile.html#"">Maggy Smith</a></p>
											<p class=""user-card-row-location"">Dusseldorf</p>
										</div>
									</div>
								</div>
							</article>
							<article class=""friends-list-item"">
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-2.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name""><a href=""profile.html#"">Dan Cederholm</a></p>
											<p class=""user-card-row-location"">New York</p>
										</div>
									</div>
								</div>
							</article>
						</div>
					</section><!--.box-typical-->
				</div><!--.col- -->

				<div class=""col-lg-3 col-md-6 col-sm-6"">
					<section class=""box-typical"">
						<header class=""box-typical-header-sm"">People also viewed</header>
						<div class=""friends-list stripped"">
							<article class=""friends-list-item"">
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-2.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name status-online""><a href=""profile.html#"">Dan Cederholm</a></p>
											<p class=""user-card-row-status"">Co-founder of <a href=""profile.html#"">Company</a></p>
										</div>
										<div class=""tbl-cell tbl-cell-action"">
											<a href=""profile.html#"" class=""plus-link-circle""><span>&plus;</span></a>
										</div>
									</div>
								</div>
							</article>
							<article class=""friends-list-item"">
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-1.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name""><a href=""profile.html#"">Oykun Yilmaz</a></p>
											<p class=""user-card-row-status"">Co-founder of <a href=""profile.html#"">Company</a></p>
										</div>
										<div class=""tbl-cell tbl-cell-action"">
											<a href=""profile.html#"" class=""plus-link-circle""><span>&plus;</span></a>
										</div>
									</div>
								</div>
							</article>
							<article class=""friends-list-item"">
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-3.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name""><a href=""profile.html#"">Bill S Kenney</a></p>
											<p class=""user-card-row-status"">Co-founder of <a href=""profile.html#"">Company</a></p>
										</div>
										<div class=""tbl-cell tbl-cell-action"">
											<a href=""profile.html#"" class=""plus-link-circle""><span>&plus;</span></a>
										</div>
									</div>
								</div>
							</article>
							<article class=""friends-list-item"">
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-4.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name""><a href=""profile.html#"">Maggy Smith</a></p>
											<p class=""user-card-row-status"">Co-founder of <a href=""profile.html#"">Company</a></p>
										</div>
										<div class=""tbl-cell tbl-cell-action"">
											<a href=""profile.html#"" class=""plus-link-circle""><span>&plus;</span></a>
										</div>
									</div>
								</div>
							</article>
							<article class=""friends-list-item"">
								<div class=""user-card-row"">
									<div class=""tbl-row"">
										<div class=""tbl-cell tbl-cell-photo"">
											<a href=""profile.html#"">
												<img src=""img/photo-64-2.jpg"" alt="""">
											</a>
										</div>
										<div class=""tbl-cell"">
											<p class=""user-card-row-name""><a href=""profile.html#"">Susan Andrews</a></p>
											<p class=""user-card-row-status"">Co-founder of <a href=""profile.html#"">Company</a></p>
										</div>
										<div class=""tbl-cell tbl-cell-action"">
											<a href=""profile.html#"" class=""plus-link-circle""><span>&plus;</span></a>
										</div>
									</div>
								</div>
							</article>
						</div>

						<div class=""see-all"">
							<a href=""profile.html#"">See All (300)</a>
						</div>

						<section>
							<header class=""box-typical-header-sm"">More Influencer</header>
							<div class=""profile-card-slider"">
								<div class=""slide"">
									<div class=""profile-card"">
										<div class=""profile-card-photo"">
											<img src=""img/photo-220-1.jpg"" alt=""""/>
										</div>
										<div class=""profile-card-name"">Jackie Tran</div>
										<div class=""profile-card-status"">Company Founder</div>
										<button type=""button"" class=""btn btn-rounded btn-primary-outline"">Follow</button>
									</div><!--.profile-card-->
								</div><!--.slide-->
								<div class=""slide"">
									<div class=""profile-card"">
										<div class=""profile-card-photo"">
											<img src=""img/avatar-1-256.png"" alt=""""/>
										</div>
										<div class=""profile-card-name"">Jackie Tran</div>
										<div class=""profile-card-status"">Company Founder</div>
										<button type=""button"" class=""btn btn-rounded btn-primary-outline"">Follow</button>
									</div><!--.profile-card-->
								</div><!--.slide-->
								<div class=""slide"">
									<div class=""profile-card"">
										<div class=""profile-card-photo"">
											<img src=""img/avatar-2-256.png"" alt=""""/>
										</div>
										<div class=""profile-card-name"">Sarah Sanchez</div>
										<div class=""profile-card-status"">Longnameexample<br/>corporation</div>
										<button type=""button"" class=""btn btn-rounded btn-primary-outline"">Follow</button>
									</div><!--.profile-card-->
								</div><!--.slide-->
								<div class=""slide"">
									<div class=""profile-card"">
										<div class=""profile-card-photo"">
											<img src=""img/avatar-3-256.png"" alt=""""/>
										</div>
										<div class=""profile-card-name"">Sarah Sanchez</div>
										<div class=""profile-card-status"">Longnameexample<br/>corporation</div>
										<button type=""button"" class=""btn btn-rounded btn-primary-outline"">Follow</button>
									</div><!--.profile-card-->
								</div><!--.slide-->
							</div><!--.profile-card-slider-->
						</section>
					</section><!--.box-typical-->

					<section class=""box-typical"">
						<header class=""box-typical-header-sm"">People you may know</header>
						<div class=""people-rel-list"">
							<div class=""people-rel-list-name""><a href=""profile.html#"">Jackie Tran Anh</a>  /  Designer</div>
							<ul class=""people-rel-list-photos"">
								<li><a href=""profile.html#""><img src=""img/photo-92-1.jpg"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/photo-92-2.jpg"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/photo-92-3.jpg"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/avatar-1-128.png"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/photo-92-2.jpg"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/avatar-2-128.png"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/photo-92-1.jpg"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/avatar-3-128.png"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/photo-92-3.jpg"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/photo-92-1.jpg"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/photo-92-2.jpg"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/photo-92-3.jpg"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/photo-92-1.jpg"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/photo-92-2.jpg"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/photo-92-3.jpg"" alt=""""></a></li>
								<li><a href=""profile.html#""><img src=""img/photo-92-1.jpg"" alt=""""></a></li>
							</ul>
							<form class=""site-header-search"">
								<input type=""text"" placeholder=""Search for people""/>
								<button type=""submit"">
									<span class=""font-icon-search""></span>
								</button>
								<div class=""overlay""></div>
							</form>
						</div>
					</section><!--.box-typical-->
				</div><!--.col- -->
			</div><!--.row-->
		</div><!--.container-fluid-->
	</div><!--.page-content-->

	<!--Progress bar-->
	<!--<div class=""circle-progress-bar pieProgress"" role=""progressbar"" data-goal=""100"" data-barcolor=""#ac6bec"" data-barsize=""10"" aria-valuemin=""0"" aria-valuemax=""100"">-->
	    <!--<span class=""pie_progress__number"">0%</span>-->
	<!--</div>-->

</body>
</html>",HTML
"<!DOCTYPE html>
<html lang='en' dir='auto'><head>
  <meta charset='utf-8'>
<meta name='viewport' content='width=device-width, initial-scale=1'>
<meta name='description' content='The last weekend my colleagues and I had a nice time moving an existing application from a bare-metal infrastructure to AWS. I would like to share some of the focal points involved in such process, in case you’d go through it and would like to know:
 don’t expect everything to work as usual: you are changing the underlying hardware, moving to a virtualized environment. You can test every single part of the application but infrastructural side effects may occur in a second time relying on the provider: consider well which functionalities should be delegated to the cloud provider (AWS, in this case, offers a lot) or should be managed internally; for example S3 is not a distributed filesystem, and in some cases an RDS instance won’t have the same performance as database installed on an EC2 instance test application compliance, not hardware failure: instead of focusing on stress tests, you should focus first on functionality tests to ensure every part of te application is behaving as expected; hardware failure are easily handled in the cloud, that’s the primary purpose of IaaS.'>
<meta name='theme-color' content='#ffcd00'>

<meta property='og:title' content='A smooth migration to the cloud » INGE4PRES RATIONAL THOUGHTS'>
<meta property='og:description' content='The last weekend my colleagues and I had a nice time moving an existing application from a bare-metal infrastructure to AWS. I would like to share some of the focal points involved in such process, in case you’d go through it and would like to know:
 don’t expect everything to work as usual: you are changing the underlying hardware, moving to a virtualized environment. You can test every single part of the application but infrastructural side effects may occur in a second time relying on the provider: consider well which functionalities should be delegated to the cloud provider (AWS, in this case, offers a lot) or should be managed internally; for example S3 is not a distributed filesystem, and in some cases an RDS instance won’t have the same performance as database installed on an EC2 instance test application compliance, not hardware failure: instead of focusing on stress tests, you should focus first on functionality tests to ensure every part of te application is behaving as expected; hardware failure are easily handled in the cloud, that’s the primary purpose of IaaS.'>
<meta property='og:url' content='http://inge.4pr.es/2014/10/15/2014-10-15-a-smooth-migration-to-the-cloud/'>
<meta property='og:site_name' content='INGE4PRES RATIONAL THOUGHTS'>
<meta property='og:type' content='article'><meta property='article:publisher' content='358809487873346'><meta property='article:section' content='post'><meta property='article:published_time' content='2014-10-15T18:15:28Z'/><meta property='article:modified_time' content='2014-10-15T18:15:28Z'/><meta property='fb:app_id' content='1845367892442473'><meta property='fb:admins' content='francesco.inge'><meta name='twitter:card' content='summary'><meta name='twitter:site' content='@inge4pres'>

<meta name=""generator"" content=""Hugo 0.82.0"" />

  <title>A smooth migration to the cloud » INGE4PRES RATIONAL THOUGHTS</title>
  <link rel='canonical' href='http://inge.4pr.es/2014/10/15/2014-10-15-a-smooth-migration-to-the-cloud/'>
  
  
  <link rel='icon' href='/favicon.ico'>
<link rel='stylesheet' href='/assets/css/main.ab98e12b.css'><style>
:root{--color-accent:#ffcd00;}
</style>

<script type=""application/javascript"">
var doNotTrack = false;
if (!doNotTrack) {
	window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
	ga('create', 'UA-55252403-1', 'auto');
	
	ga('send', 'pageview');
}
</script>
<script async src='https://www.google-analytics.com/analytics.js'></script>

  

</head>
<body class='page type-post layout-post has-sidebar'>

  <div class='site'><div id='sidebar' class='sidebar'>
  <a class='screen-reader-text' href='#main-menu'>Skip to Main Menu</a>

  <div class='container'><section class='widget widget-about sep-after'>
  <header>
    
    <div class='logo'>
      <a href='/'>
        <img src='/avatar.png'>
      </a>
    </div>
    
    <h2 class='title site-title '>
      <a href='/'>
      Francesco Gualazzi
      </a>
    </h2>
    <div class='desc'>
    infrastructure-aware developer
    </div>
  </header>

</section>
</div>

  <div class='sidebar-overlay'></div>
</div><div class='main'><nav id='main-menu' class='menu main-menu' aria-label='Main Menu'>
  <div class='container'>
    <a class='screen-reader-text' href='#content'>Skip to Content</a>

<button id='sidebar-toggler' class='sidebar-toggler' aria-controls='sidebar'>
  <span class='screen-reader-text'>Toggle Sidebar</span>
  <span class='open'><svg class='icon' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 24 24' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' aria-hidden='true'>
    
    
  <line x1=""3"" y1=""12"" x2=""21"" y2=""12"" />
  <line x1=""3"" y1=""6"" x2=""21"" y2=""6"" />
  <line x1=""3"" y1=""18"" x2=""21"" y2=""18"" />

</svg>
</span>
  <span class='close'><svg class='icon' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 24 24' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' aria-hidden='true'>
    
    
  <line x1=""18"" y1=""6"" x2=""6"" y2=""18"" />
  <line x1=""6"" y1=""6"" x2=""18"" y2=""18"" />

</svg>
</span>
</button>
    <ul><li class='item'>
        <a href='/'>/</a>
      </li><li class='item'>
        <a href='/about'>/about</a>
      </li><li class='item'>
        <a href='/resume'>/resume</a>
      </li></ul>
  </div>
</nav><div class='header-widgets'>
        <div class='container'></div>
      </div>

      <header id='header' class='header site-header'>
        <div class='container sep-after'>
          <div class='header-info'><p class='site-title title'>INGE4PRES RATIONAL THOUGHTS</p><p class='desc site-desc'>Growing knowledge one post at a time</p>
          </div>
        </div>
      </header>

      <main id='content'>


<article lang='en' class='entry'>
  <header class='header entry-header'>
  <div class='container sep-after'>
    <div class='header-info'>
      <h1 class='title'>A smooth migration to the cloud</h1>
      

    </div>
    <div class='entry-meta'>
  <span class='posted-on'><svg class='icon' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 24 24' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' aria-hidden='true'>
    
    
  <rect x=""3"" y=""4"" width=""18"" height=""18"" rx=""2"" ry=""2""/>
  <line x1=""16"" y1=""2"" x2=""16"" y2=""6""/>
  <line x1=""8"" y1=""2"" x2=""8"" y2=""6""/>
  <line x1=""3"" y1=""10"" x2=""21"" y2=""10""/>

</svg>
<span class='screen-reader-text'>Posted on </span>
  <time class='entry-date' datetime='2014-10-15T18:15:28Z'>15 Oct 2014</time>
</span>

  
  
<span class='reading-time'><svg class='icon' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 24 24' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' aria-hidden='true'>
    
    
  <circle cx=""12"" cy=""12"" r=""10""/>
  <polyline points=""12 6 12 12 15 15""/>

</svg>
2 mins read
</span>


</div>


  </div>
</header>

  
  

  <div class='container entry-content'>
  <p>The last weekend my colleagues and I had a nice time moving an existing application from a bare-metal infrastructure to AWS. I would like to share some of the focal points involved in such process, in case you’d go through it and would like to know:</p>
<ul>
<li><strong>don’t expect everything to work as usual</strong>: you are changing the underlying hardware, moving to a virtualized environment. You can test every single part of the application but infrastructural side effects may occur in a second time</li>
<li><strong>relying on the provider</strong>: consider well which functionalities should be delegated to the cloud provider (AWS, in this case, offers a lot) or should be managed internally; for example S3 is not a distributed filesystem, and in some cases an RDS instance won’t have the same performance as database installed on an EC2 instance</li>
<li><strong>test application compliance, not hardware failure</strong>: instead of focusing on stress tests, you should focus first on functionality tests to ensure every part of te application is behaving as expected; hardware failure are easily handled in the cloud, that’s the primary purpose of IaaS. What is not handled by the cloud is that the application’s features will work on it!</li>
<li><strong>use a checklist</strong>: this may seem obvious, but having a clear and well written to-do list with a time table and activities’ details will help you analyze if anything is missing or needs to be done in advance</li>
</ul>
<p>Aside of this technical considerations, having the support of your coworkers and managers it is what really makes the difference: it keeps you focused in every step and at the same time helps if any problem comes up. That’s why my boss decided to take several videos with his phone and produced a “movie”,  hope you like it 😀</p>

</div>

  
<footer class='entry-footer'>
  <div class='container sep-before'><div class='categories'><svg class='icon' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 24 24' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' aria-hidden='true'>
    
    
    <path d=""M22,19a2,2,0,0,1-2,2H4a2,2,0,0,1-2-2V5A2,2,0,0,1,4,3H9l2,3h9a2,2,0,0,1,2,2Z""/>

</svg>
<span class='screen-reader-text'>Categories: </span><a class='category' href='/categories/tech/'>tech</a></div>

  </div>
</footer>


</article>

<nav class='entry-nav'>
  <div class='container'><div class='prev-entry sep-before'>
      <a href='/2013/11/11/2013-11-11-backup-and-restore-crontabs/'>
        <span aria-hidden='true'><svg class='icon' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 24 24' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' aria-hidden='true'>
    
    
  <line x1=""20"" y1=""12"" x2=""4"" y2=""12""/>
  <polyline points=""10 18 4 12 10 6""/>

</svg>
 Previous</span>
        <span class='screen-reader-text'>Previous post: </span>Backup and restore crontabs</a>
    </div><div class='next-entry sep-before'>
      <a href='/2014/12/11/2014-12-11-happy-birthday-server/'>
        <span class='screen-reader-text'>Next post: </span>Happy birthday server!<span aria-hidden='true'>Next <svg class='icon' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 24 24' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' aria-hidden='true'>
    
    
  <line x1=""4"" y1=""12"" x2=""20"" y2=""12""/>
  <polyline points=""14 6 20 12 14 18""/>

</svg>
</span>
      </a>
    </div></div>
</nav>


<section id='comments' class='comments'>
  <div class='container sep-before'>
    <div class='comments-area'><div id=""disqus_thread""></div>
<script type=""application/javascript"">
    var disqus_config = function () {
    
    
    
    };
    (function() {
        if ([""localhost"", ""127.0.0.1""].indexOf(window.location.hostname) != -1) {
            document.getElementById('disqus_thread').innerHTML = 'Disqus comments not available by default when the website is previewed locally.';
            return;
        }
        var d = document, s = d.createElement('script'); s.async = true;
        s.src = '//' + ""inge4pres"" + '.disqus.com/embed.js';
        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href=""https://disqus.com/?ref_noscript"">comments powered by Disqus.</a></noscript>
<a href=""https://disqus.com"" class=""dsq-brlink"">comments powered by <span class=""logo-disqus"">Disqus</span></a>
</div>
  </div>
</section>

      </main>

      <footer id='footer' class='footer'>
        <div class='container sep-before'><section class='widget widget-social_menu sep-after'><header>
    <h4 class='title widget-title'>Stay Tuned</h4>
  </header><nav aria-label='Social Menu'>
    <ul><li>
        <a href='https://github.com/inge4pres' target='_blank' rel='noopener me'>
          <span class='screen-reader-text'>Open Github account in new tab</span><svg class='icon' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 24 24' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' aria-hidden='true'>
    
    
      <path d=""M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22""/>

</svg>
</a>
      </li><li>
        <a href='https://gitlab.com/inge4pres' target='_blank' rel='noopener me'>
          <span class='screen-reader-text'>Open Gitlab account in new tab</span><svg class='icon' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 24 24' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' aria-hidden='true'>
    
    <title>GitLab icon</title>  <path d=""M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z""/>
</svg>
</a>
      </li><li>
        <a href='https://twitter.com/inge4pres' target='_blank' rel='noopener me'>
          <span class='screen-reader-text'>Open Twitter account in new tab</span><svg class='icon' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 24 24' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' aria-hidden='true'>
    
    
  <title>Twitter icon</title>
  <path d=""M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z""></path>

</svg>
</a>
      </li><li>
        <a href='mailto:fgualazzi@gmail.com' target='_blank' rel='noopener me'>
          <span class='screen-reader-text'>Contact via Email</span><svg class='icon' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 24 24' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' aria-hidden='true'>
    
    <path d=""M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z""></path><polyline points=""22,6 12,13 2,6""></polyline>
</svg>
</a>
      </li><li>
        <a href='https://linkedin.com/in/francescogualazzi' target='_blank' rel='noopener me'>
          <span class='screen-reader-text'>Open Linkedin account in new tab</span><svg class='icon' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 24 24' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' aria-hidden='true'>
    
    <path d=""M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z""></path><rect x=""2"" y=""9"" width=""4"" height=""12""></rect><circle cx=""4"" cy=""4"" r=""2""></circle>
</svg>
</a>
      </li><li>
        <a href='https://instagram.com/inge4pres' target='_blank' rel='noopener me'>
          <span class='screen-reader-text'>Open Instagram account in new tab</span><svg class='icon' xmlns='http://www.w3.org/2000/svg' viewbox='0 0 24 24' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' aria-hidden='true'>
    
    <rect x=""2"" y=""2"" width=""20"" height=""20"" rx=""5"" ry=""5""></rect><path d=""M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z""></path><line x1=""17.5"" y1=""6.5"" x2=""17.51"" y2=""6.5""></line>
</svg>
</a>
      </li></ul>
  </nav>
</section><div class='copyright'>
  <p>inge4pres &copy; 2012-2021 Francesco Gualazzi </p>
</div>

        </div>
      </footer>

    </div>
  </div><script>window.__assets_js_src=""/assets/js/""</script>

<script src='/assets/js/main.c3bcf2df.js'></script>

</body>

</html>

",HTML
"{{ _(""test1"") }}

{{ _('test2') }}

{{ _ 'test3' }}

{{ _ ""test3.1"" _ 'test4'   _ ""test5"" }}

<%=_(""test6"")%>

<%= _(""test7"") %>",HTML
"<!DOCTYPE html>
<html>
<head>
	<meta charset=""utf-8"">

	<title>Class Shop_currency_model</title>

	<link rel=""stylesheet"" href=""resources/bootstrap.min.css?08b23951ef4599ca9cbf1f902d0e8290c9653ddd"">
	<link rel=""stylesheet"" href=""resources/style.css?062e9e59e0b8c44fbaaded5b7ffc21f907b78669"">

</head>

<body>
	<div id=""navigation"" class=""navbar navbar-fixed-top"">
		<div class=""navbar-inner"">
			<div class=""container"">
				<a href=""index.html"" class=""brand"">Overview</a>
				<div class=""nav-collapse"">
					<ul class=""nav"">
						<li>
							<a href=""namespace-None.html"" title=""Summary of None""><span>Namespace</span></a>
						</li>
						<li class=""active"">
<span>Class</span>						</li>




					</ul>
				</div>
			</div>
		</div>
	</div>

	<div id=""left"">
	<div id=""menu"">
		<form id=""search"" class=""form-search"">
			<input type=""hidden"" name=""cx"" value="""">
			<input type=""hidden"" name=""ie"" value=""UTF-8"">
			<input type=""text"" name=""q"" class=""search-query"" placeholder=""Search"">
		</form>


		<div id=""groups"">
				<h3>Namespaces</h3>
			<ul>
					<li>
						<a href=""namespace-Nails.html"">
							Nails<span></span>
						</a>
							<ul>
					<li>
						<a href=""namespace-Nails.Admin.html"">
							Admin<span></span>
						</a>
							<ul>
					<li>
						<a href=""namespace-Nails.Admin.Admin.html"">
							Admin						</a>
							</li>
					<li>
						<a href=""namespace-Nails.Admin.Auth.html"">
							Auth						</a>
							</li>
					<li>
						<a href=""namespace-Nails.Admin.Blog.html"">
							Blog						</a>
							</li>
					<li>
						<a href=""namespace-Nails.Admin.Cdn.html"">
							Cdn						</a>
							</li>
					<li>
						<a href=""namespace-Nails.Admin.Cms.html"">
							Cms						</a>
							</li>
					<li>
						<a href=""namespace-Nails.Admin.Email.html"">
							Email						</a>
							</li>
					<li>
						<a href=""namespace-Nails.Admin.Shop.html"">
							Shop						</a>
							</li>
					<li>
						<a href=""namespace-Nails.Admin.Testimonial.html"">
							Testimonial						</a>
							</li>
								</ul></li></ul></li>
					<li class=""active"">
						<a href=""namespace-None.html"">
							None						</a>
							</li>
			</ul>
		</div>


		<div id=""elements"">
			<h3>Classes</h3>
			<ul>
				<li><a href=""class-Admin.html"">Admin</a></li>
				<li><a href=""class-Admin_changelog_model.html"">Admin_changelog_model</a></li>
				<li><a href=""class-Admin_help_model.html"">Admin_help_model</a></li>
				<li><a href=""class-Admin_model.html"">Admin_model</a></li>
				<li><a href=""class-Admin_sitelog_model.html"">Admin_sitelog_model</a></li>
				<li><a href=""class-AdminController.html"">AdminController</a></li>
				<li><a href=""class-AdminRouter.html"">AdminRouter</a></li>
				<li><a href=""class-Api.html"">Api</a></li>
				<li><a href=""class-App_notification_model.html"">App_notification_model</a></li>
				<li><a href=""class-App_setting_model.html"">App_setting_model</a></li>
				<li><a href=""class-Asset.html"">Asset</a></li>
				<li><a href=""class-Auth.html"">Auth</a></li>
				<li><a href=""class-Auth_model.html"">Auth_model</a></li>
				<li><a href=""class-Aws_local_CDN.html"">Aws_local_CDN</a></li>
				<li><a href=""class-Barcode.html"">Barcode</a></li>
				<li><a href=""class-Barcode_generator.html"">Barcode_generator</a></li>
				<li><a href=""class-Basket.html"">Basket</a></li>
				<li><a href=""class-Blank_avatar.html"">Blank_avatar</a></li>
				<li><a href=""class-Blog.html"">Blog</a></li>
				<li><a href=""class-Blog_category_model.html"">Blog_category_model</a></li>
				<li><a href=""class-Blog_model.html"">Blog_model</a></li>
				<li><a href=""class-Blog_post_model.html"">Blog_post_model</a></li>
				<li><a href=""class-Blog_skin_model.html"">Blog_skin_model</a></li>
				<li><a href=""class-Blog_tag_model.html"">Blog_tag_model</a></li>
				<li><a href=""class-Blog_widget_model.html"">Blog_widget_model</a></li>
				<li><a href=""class-Cdn.html"">Cdn</a></li>
				<li><a href=""class-Cdnapi.html"">Cdnapi</a></li>
				<li><a href=""class-Checkout.html"">Checkout</a></li>
				<li><a href=""class-CI.html"" class=""invalid"">CI</a></li>
				<li><a href=""class-CI_Model.html"">CI_Model</a></li>
				<li><a href=""class-Cms.html"">Cms</a></li>
				<li><a href=""class-Cms_block_model.html"">Cms_block_model</a></li>
				<li><a href=""class-Cms_menu_model.html"">Cms_menu_model</a></li>
				<li><a href=""class-Cms_page_model.html"">Cms_page_model</a></li>
				<li><a href=""class-Cms_slider_model.html"">Cms_slider_model</a></li>
				<li><a href=""class-Comment.html"">Comment</a></li>
				<li><a href=""class-CORE_NAILS_App.html"">CORE_NAILS_App</a></li>
				<li><a href=""class-CORE_NAILS_Calendar.html"">CORE_NAILS_Calendar</a></li>
				<li><a href=""class-CORE_NAILS_Controller.html"">CORE_NAILS_Controller</a></li>
				<li><a href=""class-CORE_NAILS_Deploy.html"">CORE_NAILS_Deploy</a></li>
				<li><a href=""class-CORE_NAILS_ErrorHandler.html"">CORE_NAILS_ErrorHandler</a></li>
				<li><a href=""class-CORE_NAILS_ErrorHandler_Rollbar.html"">CORE_NAILS_ErrorHandler_Rollbar</a></li>
				<li><a href=""class-CORE_NAILS_Exceptions.html"">CORE_NAILS_Exceptions</a></li>
				<li><a href=""class-CORE_NAILS_Form_validation.html"">CORE_NAILS_Form_validation</a></li>
				<li><a href=""class-CORE_NAILS_Hooks.html"">CORE_NAILS_Hooks</a></li>
				<li><a href=""class-CORE_NAILS_Install.html"">CORE_NAILS_Install</a></li>
				<li><a href=""class-CORE_NAILS_Lang.html"">CORE_NAILS_Lang</a></li>
				<li><a href=""class-CORE_NAILS_Loader.html"">CORE_NAILS_Loader</a></li>
				<li><a href=""class-CORE_NAILS_Log.html"">CORE_NAILS_Log</a></li>
				<li><a href=""class-CORE_NAILS_Migrate.html"">CORE_NAILS_Migrate</a></li>
				<li><a href=""class-CORE_NAILS_Model.html"">CORE_NAILS_Model</a></li>
				<li><a href=""class-CORE_NAILS_Pagination.html"">CORE_NAILS_Pagination</a></li>
				<li><a href=""class-CORE_NAILS_Profiler.html"">CORE_NAILS_Profiler</a></li>
				<li><a href=""class-CORE_NAILS_Router.html"">CORE_NAILS_Router</a></li>
				<li><a href=""class-CORE_NAILS_Session.html"">CORE_NAILS_Session</a></li>
				<li><a href=""class-CORE_NAILS_URI.html"">CORE_NAILS_URI</a></li>
				<li><a href=""class-CORE_NAILS_User_agent.html"">CORE_NAILS_User_agent</a></li>
				<li><a href=""class-Country_model.html"">Country_model</a></li>
				<li><a href=""class-Curl.html"">Curl</a></li>
				<li><a href=""class-Datetime_model.html"">Datetime_model</a></li>
				<li><a href=""class-Deploy.html"">Deploy</a></li>
				<li><a href=""class-Emailer.html"">Emailer</a></li>
				<li><a href=""class-Enquire.html"">Enquire</a></li>
				<li><a href=""class-Event.html"">Event</a></li>
				<li><a href=""class-Faux_session.html"">Faux_session</a></li>
				<li><a href=""class-Feed.html"">Feed</a></li>
				<li><a href=""class-Forgotten_Password.html"">Forgotten_Password</a></li>
				<li><a href=""class-Geo_ip.html"">Geo_ip</a></li>
				<li><a href=""class-Geo_ip_driver_Nails_ip_services.html"">Geo_ip_driver_Nails_ip_services</a></li>
				<li><a href=""class-Home.html"">Home</a></li>
				<li><a href=""class-Language_model.html"">Language_model</a></li>
				<li><a href=""class-Local_CDN.html"">Local_CDN</a></li>
				<li><a href=""class-Logger.html"">Logger</a></li>
				<li><a href=""class-Login.html"">Login</a></li>
				<li><a href=""class-Logout.html"">Logout</a></li>
				<li><a href=""class-Maintenance.html"">Maintenance</a></li>
				<li><a href=""class-Manager.html"">Manager</a></li>
				<li><a href=""class-Mfa_device.html"">Mfa_device</a></li>
				<li><a href=""class-Mfa_question.html"">Mfa_question</a></li>
				<li><a href=""class-Modules.html"">Modules</a></li>
				<li><a href=""class-Mustache.html"">Mustache</a></li>
				<li><a href=""class-MX_Config.html"">MX_Config</a></li>
				<li><a href=""class-MX_Controller.html"">MX_Controller</a></li>
				<li><a href=""class-MX_Lang.html"">MX_Lang</a></li>
				<li><a href=""class-MX_Loader.html"">MX_Loader</a></li>
				<li><a href=""class-MX_Router.html"">MX_Router</a></li>
				<li><a href=""class-NAILS_Admin.html"">NAILS_Admin</a></li>
				<li><a href=""class-NAILS_Admin_changelog_model.html"">NAILS_Admin_changelog_model</a></li>
				<li><a href=""class-NAILS_Admin_Controller.html"">NAILS_Admin_Controller</a></li>
				<li><a href=""class-NAILS_Admin_help_model.html"">NAILS_Admin_help_model</a></li>
				<li><a href=""class-NAILS_Admin_Model.html"">NAILS_Admin_Model</a></li>
				<li><a href=""class-NAILS_Admin_sitelog_model.html"">NAILS_Admin_sitelog_model</a></li>
				<li><a href=""class-NAILS_Api.html"">NAILS_Api</a></li>
				<li><a href=""class-NAILS_API_Controller.html"">NAILS_API_Controller</a></li>
				<li><a href=""class-NAILS_App_notification_model.html"">NAILS_App_notification_model</a></li>
				<li><a href=""class-NAILS_App_setting_model.html"">NAILS_App_setting_model</a></li>
				<li><a href=""class-NAILS_Auth.html"">NAILS_Auth</a></li>
				<li><a href=""class-NAILS_Auth_Controller.html"">NAILS_Auth_Controller</a></li>
				<li><a href=""class-NAILS_Auth_Mfa_Controller.html"">NAILS_Auth_Mfa_Controller</a></li>
				<li><a href=""class-NAILS_Auth_model.html"">NAILS_Auth_model</a></li>
				<li><a href=""class-NAILS_Barcode.html"">NAILS_Barcode</a></li>
				<li><a href=""class-NAILS_Basket.html"">NAILS_Basket</a></li>
				<li><a href=""class-NAILS_Blank_avatar.html"">NAILS_Blank_avatar</a></li>
				<li><a href=""class-NAILS_Blog.html"" class=""invalid"">NAILS_Blog</a></li>
				<li><a href=""class-NAILS_Blog_category_model.html"">NAILS_Blog_category_model</a></li>
				<li><a href=""class-NAILS_Blog_Controller.html"">NAILS_Blog_Controller</a></li>
				<li><a href=""class-NAILS_Blog_model.html"">NAILS_Blog_model</a></li>
				<li><a href=""class-NAILS_Blog_post_model.html"">NAILS_Blog_post_model</a></li>
				<li><a href=""class-NAILS_Blog_skin_model.html"">NAILS_Blog_skin_model</a></li>
				<li><a href=""class-NAILS_Blog_tag_model.html"">NAILS_Blog_tag_model</a></li>
				<li><a href=""class-NAILS_Blog_widget_model.html"">NAILS_Blog_widget_model</a></li>
				<li><a href=""class-NAILS_CDN_Controller.html"">NAILS_CDN_Controller</a></li>
				<li><a href=""class-NAILS_Cdnapi.html"">NAILS_Cdnapi</a></li>
				<li><a href=""class-NAILS_Checkout.html"">NAILS_Checkout</a></li>
				<li><a href=""class-NAILS_Cms.html"" class=""invalid"">NAILS_Cms</a></li>
				<li><a href=""class-NAILS_Cms_block_model.html"">NAILS_Cms_block_model</a></li>
				<li><a href=""class-NAILS_CMS_Controller.html"">NAILS_CMS_Controller</a></li>
				<li><a href=""class-NAILS_Cms_menu_model.html"">NAILS_Cms_menu_model</a></li>
				<li><a href=""class-NAILS_Cms_page_model.html"">NAILS_Cms_page_model</a></li>
				<li><a href=""class-NAILS_Cms_slider_model.html"">NAILS_Cms_slider_model</a></li>
				<li><a href=""class-Nails_CMS_Template.html"">Nails_CMS_Template</a></li>
				<li><a href=""class-Nails_CMS_Template_fullwidth.html"">Nails_CMS_Template_fullwidth</a></li>
				<li><a href=""class-NAILS_CMS_Template_redirect.html"">NAILS_CMS_Template_redirect</a></li>
				<li><a href=""class-Nails_CMS_Template_sidebar_left.html"">Nails_CMS_Template_sidebar_left</a></li>
				<li><a href=""class-Nails_CMS_Template_sidebar_right.html"">Nails_CMS_Template_sidebar_right</a></li>
				<li><a href=""class-NAILS_CMS_Widget.html"">NAILS_CMS_Widget</a></li>
				<li><a href=""class-NAILS_CMS_Widget_html.html"">NAILS_CMS_Widget_html</a></li>
				<li><a href=""class-NAILS_CMS_Widget_image.html"">NAILS_CMS_Widget_image</a></li>
				<li><a href=""class-NAILS_CMS_Widget_richtext.html"">NAILS_CMS_Widget_richtext</a></li>
				<li><a href=""class-NAILS_CMS_Widget_slider.html"">NAILS_CMS_Widget_slider</a></li>
				<li><a href=""class-NAILS_CMS_Widget_table.html"">NAILS_CMS_Widget_table</a></li>
				<li><a href=""class-NAILS_Controller.html"">NAILS_Controller</a></li>
				<li><a href=""class-NAILS_Country_model.html"">NAILS_Country_model</a></li>
				<li><a href=""class-NAILS_Cron_Controller.html"">NAILS_Cron_Controller</a></li>
				<li><a href=""class-NAILS_Datetime_model.html"">NAILS_Datetime_model</a></li>
				<li><a href=""class-NAILS_Deploy.html"">NAILS_Deploy</a></li>
				<li><a href=""class-NAILS_Email.html"">NAILS_Email</a></li>
				<li><a href=""class-NAILS_Email_Controller.html"">NAILS_Email_Controller</a></li>
				<li><a href=""class-NAILS_Enquire.html"">NAILS_Enquire</a></li>
				<li><a href=""class-NAILS_Exceptions.html"">NAILS_Exceptions</a></li>
				<li><a href=""class-NAILS_Feed.html"">NAILS_Feed</a></li>
				<li><a href=""class-NAILS_Forgotten_Password.html"">NAILS_Forgotten_Password</a></li>
				<li><a href=""class-NAILS_Geo_ip_driver.html"">NAILS_Geo_ip_driver</a></li>
				<li><a href=""class-NAILS_Hooks.html"">NAILS_Hooks</a></li>
				<li><a href=""class-NAILS_Lang.html"">NAILS_Lang</a></li>
				<li><a href=""class-NAILS_Language_model.html"">NAILS_Language_model</a></li>
				<li><a href=""class-NAILS_Loader.html"">NAILS_Loader</a></li>
				<li><a href=""class-NAILS_Log.html"">NAILS_Log</a></li>
				<li><a href=""class-NAILS_Login.html"">NAILS_Login</a></li>
				<li><a href=""class-NAILS_Logout.html"">NAILS_Logout</a></li>
				<li><a href=""class-NAILS_Logs.html"">NAILS_Logs</a></li>
				<li><a href=""class-NAILS_Maintenance.html"">NAILS_Maintenance</a></li>
				<li><a href=""class-NAILS_Manager.html"">NAILS_Manager</a></li>
				<li><a href=""class-NAILS_Mfa_device.html"">NAILS_Mfa_device</a></li>
				<li><a href=""class-NAILS_Mfa_question.html"">NAILS_Mfa_question</a></li>
				<li><a href=""class-NAILS_Model.html"">NAILS_Model</a></li>
				<li><a href=""class-NAILS_Notify.html"">NAILS_Notify</a></li>
				<li><a href=""class-NAILS_Orders.html"">NAILS_Orders</a></li>
				<li><a href=""class-NAILS_Override.html"">NAILS_Override</a></li>
				<li><a href=""class-NAILS_Pagination.html"">NAILS_Pagination</a></li>
				<li><a href=""class-NAILS_Placeholder.html"">NAILS_Placeholder</a></li>
				<li><a href=""class-NAILS_Register.html"">NAILS_Register</a></li>
				<li><a href=""class-NAILS_Render.html"">NAILS_Render</a></li>
				<li><a href=""class-NAILS_Reset_Password.html"">NAILS_Reset_Password</a></li>
				<li><a href=""class-NAILS_Router.html"">NAILS_Router</a></li>
				<li><a href=""class-NAILS_Routes_model.html"">NAILS_Routes_model</a></li>
				<li><a href=""class-NAILS_Scale.html"">NAILS_Scale</a></li>
				<li><a href=""class-NAILS_Serve.html"">NAILS_Serve</a></li>
				<li><a href=""class-NAILS_Shop.html"" class=""invalid"">NAILS_Shop</a></li>
				<li><a href=""class-NAILS_Shop_attribute_model.html"">NAILS_Shop_attribute_model</a></li>
				<li><a href=""class-NAILS_Shop_basket_model.html"">NAILS_Shop_basket_model</a></li>
				<li><a href=""class-NAILS_Shop_brand_model.html"">NAILS_Shop_brand_model</a></li>
				<li><a href=""class-NAILS_Shop_category_model.html"">NAILS_Shop_category_model</a></li>
				<li><a href=""class-NAILS_Shop_collection_model.html"">NAILS_Shop_collection_model</a></li>
				<li><a href=""class-NAILS_Shop_Controller.html"">NAILS_Shop_Controller</a></li>
				<li><a href=""class-NAILS_Shop_currency_model.html"">NAILS_Shop_currency_model</a></li>
				<li><a href=""class-NAILS_Shop_feed_model.html"">NAILS_Shop_feed_model</a></li>
				<li><a href=""class-NAILS_Shop_inform_product_available_model.html"">NAILS_Shop_inform_product_available_model</a></li>
				<li><a href=""class-NAILS_Shop_model.html"">NAILS_Shop_model</a></li>
				<li><a href=""class-NAILS_Shop_order_model.html"">NAILS_Shop_order_model</a></li>
				<li><a href=""class-NAILS_Shop_order_payment_model.html"">NAILS_Shop_order_payment_model</a></li>
				<li><a href=""class-NAILS_Shop_payment_gateway_model.html"">NAILS_Shop_payment_gateway_model</a></li>
				<li><a href=""class-NAILS_Shop_product_model.html"">NAILS_Shop_product_model</a></li>
				<li><a href=""class-NAILS_Shop_product_type_meta_model.html"">NAILS_Shop_product_type_meta_model</a></li>
				<li><a href=""class-NAILS_Shop_product_type_model.html"">NAILS_Shop_product_type_model</a></li>
				<li><a href=""class-NAILS_Shop_range_model.html"">NAILS_Shop_range_model</a></li>
				<li><a href=""class-NAILS_Shop_sale_model.html"">NAILS_Shop_sale_model</a></li>
				<li><a href=""class-NAILS_Shop_shipping_driver_model.html"">NAILS_Shop_shipping_driver_model</a></li>
				<li><a href=""class-NAILS_Shop_skin_checkout_model.html"">NAILS_Shop_skin_checkout_model</a></li>
				<li><a href=""class-NAILS_Shop_skin_front_model.html"">NAILS_Shop_skin_front_model</a></li>
				<li><a href=""class-NAILS_Shop_tag_model.html"">NAILS_Shop_tag_model</a></li>
				<li><a href=""class-NAILS_Shop_tax_rate_model.html"">NAILS_Shop_tax_rate_model</a></li>
				<li><a href=""class-NAILS_Shop_voucher_model.html"">NAILS_Shop_voucher_model</a></li>
				<li><a href=""class-NAILS_Sitemap.html"">NAILS_Sitemap</a></li>
				<li><a href=""class-NAILS_Sitemap_model.html"">NAILS_Sitemap_model</a></li>
				<li><a href=""class-NAILS_System.html"">NAILS_System</a></li>
				<li><a href=""class-NAILS_System_startup.html"">NAILS_System_startup</a></li>
				<li><a href=""class-NAILS_Testimonial_model.html"">NAILS_Testimonial_model</a></li>
				<li><a href=""class-NAILS_Thumb.html"">NAILS_Thumb</a></li>
				<li><a href=""class-NAILS_Tracker.html"">NAILS_Tracker</a></li>
				<li><a href=""class-NAILS_Unsubscribe.html"">NAILS_Unsubscribe</a></li>
				<li><a href=""class-NAILS_URI.html"">NAILS_URI</a></li>
				<li><a href=""class-NAILS_User_group_model.html"">NAILS_User_group_model</a></li>
				<li><a href=""class-NAILS_User_model.html"">NAILS_User_model</a></li>
				<li><a href=""class-NAILS_User_password_model.html"">NAILS_User_password_model</a></li>
				<li><a href=""class-NAILS_Verify.html"">NAILS_Verify</a></li>
				<li><a href=""class-NAILS_View_Online.html"">NAILS_View_Online</a></li>
				<li><a href=""class-NAILS_Zip.html"">NAILS_Zip</a></li>
				<li><a href=""class-Notify.html"">Notify</a></li>
				<li><a href=""class-Orders.html"">Orders</a></li>
				<li><a href=""class-Override.html"">Override</a></li>
				<li><a href=""class-Pdf.html"">Pdf</a></li>
				<li><a href=""class-Placeholder.html"">Placeholder</a></li>
				<li><a href=""class-Register.html"">Register</a></li>
				<li><a href=""class-Render.html"">Render</a></li>
				<li><a href=""class-Reset_Password.html"">Reset_Password</a></li>
				<li><a href=""class-Routes_model.html"">Routes_model</a></li>
				<li><a href=""class-Scale.html"">Scale</a></li>
				<li><a href=""class-Serve.html"">Serve</a></li>
				<li><a href=""class-Shop.html"" class=""invalid"">Shop</a></li>
				<li><a href=""class-Shop_attribute_model.html"">Shop_attribute_model</a></li>
				<li><a href=""class-Shop_basket_model.html"">Shop_basket_model</a></li>
				<li><a href=""class-Shop_brand_model.html"">Shop_brand_model</a></li>
				<li><a href=""class-Shop_category_model.html"">Shop_category_model</a></li>
				<li><a href=""class-Shop_collection_model.html"">Shop_collection_model</a></li>
				<li class=""active""><a href=""class-Shop_currency_model.html"">Shop_currency_model</a></li>
				<li><a href=""class-Shop_feed_model.html"">Shop_feed_model</a></li>
				<li><a href=""class-Shop_inform_product_available_model.html"">Shop_inform_product_available_model</a></li>
				<li><a href=""class-Shop_model.html"">Shop_model</a></li>
				<li><a href=""class-Shop_order_model.html"">Shop_order_model</a></li>
				<li><a href=""class-Shop_order_payment_model.html"">Shop_order_payment_model</a></li>
				<li><a href=""class-Shop_payment_gateway_model.html"">Shop_payment_gateway_model</a></li>
				<li><a href=""class-Shop_product_model.html"">Shop_product_model</a></li>
				<li><a href=""class-Shop_product_type_meta_model.html"">Shop_product_type_meta_model</a></li>
				<li><a href=""class-Shop_product_type_model.html"">Shop_product_type_model</a></li>
				<li><a href=""class-Shop_range_model.html"">Shop_range_model</a></li>
				<li><a href=""class-Shop_sale_model.html"">Shop_sale_model</a></li>
				<li><a href=""class-Shop_shipping_driver_flatrate.html"">Shop_shipping_driver_flatrate</a></li>
				<li><a href=""class-Shop_shipping_driver_model.html"">Shop_shipping_driver_model</a></li>
				<li><a href=""class-Shop_skin_checkout_model.html"">Shop_skin_checkout_model</a></li>
				<li><a href=""class-Shop_skin_front_model.html"">Shop_skin_front_model</a></li>
				<li><a href=""class-Shop_tag_model.html"">Shop_tag_model</a></li>
				<li><a href=""class-Shop_tax_rate_model.html"">Shop_tax_rate_model</a></li>
				<li><a href=""class-Shop_voucher_model.html"">Shop_voucher_model</a></li>
				<li><a href=""class-Sitemap.html"">Sitemap</a></li>
				<li><a href=""class-Sitemap_model.html"">Sitemap_model</a></li>
				<li><a href=""class-Social_signon.html"">Social_signon</a></li>
				<li><a href=""class-System.html"">System</a></li>
				<li><a href=""class-System_startup.html"">System_startup</a></li>
				<li><a href=""class-Testimonial_model.html"">Testimonial_model</a></li>
				<li><a href=""class-Thumb.html"">Thumb</a></li>
				<li><a href=""class-Tracker.html"">Tracker</a></li>
				<li><a href=""class-Unsubscribe.html"">Unsubscribe</a></li>
				<li><a href=""class-User_group_model.html"">User_group_model</a></li>
				<li><a href=""class-User_model.html"">User_model</a></li>
				<li><a href=""class-User_password_model.html"">User_password_model</a></li>
				<li><a href=""class-Verify.html"">Verify</a></li>
				<li><a href=""class-View_online.html"">View_online</a></li>
				<li><a href=""class-Zip.html"">Zip</a></li>
			</ul>

			<h3>Interfaces</h3>
			<ul>
				<li><a href=""class-Cdn_driver.html"">Cdn_driver</a></li>
				<li><a href=""class-CORE_NAILS_ErrorHandler_Interface.html"">CORE_NAILS_ErrorHandler_Interface</a></li>
				<li><a href=""class-Shop_shipping_driver.html"">Shop_shipping_driver</a></li>
			</ul>

			<h3>Traits</h3>
			<ul>
				<li><a href=""class-NAILS_COMMON_TRAIT_CACHING.html"">NAILS_COMMON_TRAIT_CACHING</a></li>
				<li><a href=""class-NAILS_COMMON_TRAIT_ERROR_HANDLING.html"">NAILS_COMMON_TRAIT_ERROR_HANDLING</a></li>
				<li><a href=""class-NAILS_COMMON_TRAIT_GETCOUNT_COMMON.html"">NAILS_COMMON_TRAIT_GETCOUNT_COMMON</a></li>
			</ul>



			<h3>Functions</h3>
			<ul>
				<li><a href=""function-_db_flush_caches.html"">_db_flush_caches</a></li>
				<li><a href=""function-_db_reset_active_record.html"">_db_reset_active_record</a></li>
				<li><a href=""function-_genderise.html"">_genderise</a></li>
				<li><a href=""function-_LOG.html"">_LOG</a></li>
				<li><a href=""function-_LOG_DUMMY_MODE.html"">_LOG_DUMMY_MODE</a></li>
				<li><a href=""function-_LOG_FILE.html"">_LOG_FILE</a></li>
				<li><a href=""function-_LOG_MUTE_OUTPUT.html"">_LOG_MUTE_OUTPUT</a></li>
				<li><a href=""function-_NAILS_ERROR.html"">_NAILS_ERROR</a></li>
				<li><a href=""function-_NAILS_GET_COMPONENTS.html"">_NAILS_GET_COMPONENTS</a></li>
				<li><a href=""function-_NAILS_GET_DRIVERS.html"">_NAILS_GET_DRIVERS</a></li>
				<li><a href=""function-_NAILS_GET_MODULES.html"">_NAILS_GET_MODULES</a></li>
				<li><a href=""function-_NAILS_GET_SKINS.html"">_NAILS_GET_SKINS</a></li>
				<li><a href=""function-_NAILS_MIN_PHP_VERSION.html"">_NAILS_MIN_PHP_VERSION</a></li>
				<li><a href=""function-active_user.html"">active_user</a></li>
				<li><a href=""function-addTrailingSlash.html"">addTrailingSlash</a></li>
				<li><a href=""function-app_notification.html"">app_notification</a></li>
				<li><a href=""function-app_notification_notify.html"">app_notification_notify</a></li>
				<li><a href=""function-app_setting.html"">app_setting</a></li>
				<li><a href=""function-array_search_multi.html"">array_search_multi</a></li>
				<li><a href=""function-array_sort_multi.html"">array_sort_multi</a></li>
				<li><a href=""function-array_unique_multi.html"">array_unique_multi</a></li>
				<li><a href=""function-blog_latest_posts.html"">blog_latest_posts</a></li>
				<li><a href=""function-blog_posts_with_association.html"">blog_posts_with_association</a></li>
				<li><a href=""function-blog_posts_with_category.html"">blog_posts_with_category</a></li>
				<li><a href=""function-blog_posts_with_tag.html"">blog_posts_with_tag</a></li>
				<li><a href=""function-calculate_age.html"">calculate_age</a></li>
				<li><a href=""function-camelcase_to_underscore.html"">camelcase_to_underscore</a></li>
				<li><a href=""function-cdn_avatar.html"">cdn_avatar</a></li>
				<li><a href=""function-cdn_blank_avatar.html"">cdn_blank_avatar</a></li>
				<li><a href=""function-cdn_expiring_url.html"">cdn_expiring_url</a></li>
				<li><a href=""function-cdn_placeholder.html"">cdn_placeholder</a></li>
				<li><a href=""function-cdn_scale.html"">cdn_scale</a></li>
				<li><a href=""function-cdn_serve.html"">cdn_serve</a></li>
				<li><a href=""function-cdn_serve_zipped.html"">cdn_serve_zipped</a></li>
				<li><a href=""function-cdn_thumb.html"">cdn_thumb</a></li>
				<li><a href=""function-cdnManageUrl.html"">cdnManageUrl</a></li>
				<li><a href=""function-clean.html"">clean</a></li>
				<li><a href=""function-cmsBlock.html"">cmsBlock</a></li>
				<li><a href=""function-cmsMenu.html"">cmsMenu</a></li>
				<li><a href=""function-cmsSlider.html"">cmsSlider</a></li>
				<li><a href=""function-create_event.html"">create_event</a></li>
				<li><a href=""function-datepicker.html"">datepicker</a></li>
				<li><a href=""function-dropdown_days.html"">dropdown_days</a></li>
				<li><a href=""function-dropdown_hours.html"">dropdown_hours</a></li>
				<li><a href=""function-dropdown_minutes.html"">dropdown_minutes</a></li>
				<li><a href=""function-dropdown_months.html"">dropdown_months</a></li>
				<li><a href=""function-dropdown_years.html"">dropdown_years</a></li>
				<li><a href=""function-dump.html"">dump</a></li>
				<li><a href=""function-dumpanddie.html"">dumpanddie</a></li>
				<li><a href=""function-form_email.html"">form_email</a></li>
				<li><a href=""function-form_field.html"">form_field</a></li>
				<li><a href=""function-form_field_boolean.html"">form_field_boolean</a></li>
				<li><a href=""function-form_field_checkbox.html"">form_field_checkbox</a></li>
				<li><a href=""function-form_field_date.html"">form_field_date</a></li>
				<li><a href=""function-form_field_datetime.html"">form_field_datetime</a></li>
				<li><a href=""function-form_field_dropdown.html"">form_field_dropdown</a></li>
				<li><a href=""function-form_field_dropdown_multiple.html"">form_field_dropdown_multiple</a></li>
				<li><a href=""function-form_field_email.html"">form_field_email</a></li>
				<li><a href=""function-form_field_mm.html"">form_field_mm</a></li>
				<li><a href=""function-form_field_mm_image.html"">form_field_mm_image</a></li>
				<li><a href=""function-form_field_multiimage.html"">form_field_multiimage</a></li>
				<li><a href=""function-form_field_password.html"">form_field_password</a></li>
				<li><a href=""function-form_field_radio.html"">form_field_radio</a></li>
				<li><a href=""function-form_field_submit.html"">form_field_submit</a></li>
				<li><a href=""function-form_field_text.html"">form_field_text</a></li>
				<li><a href=""function-form_field_textarea.html"">form_field_textarea</a></li>
				<li><a href=""function-form_field_wysiwyg.html"">form_field_wysiwyg</a></li>
				<li><a href=""function-form_open.html"">form_open</a></li>
				<li><a href=""function-format_bytes.html"">format_bytes</a></li>
				<li><a href=""function-genderise.html"">genderise</a></li>
				<li><a href=""function-get_basket.html"">get_basket</a></li>
				<li><a href=""function-get_basket_count.html"">get_basket_count</a></li>
				<li><a href=""function-get_basket_total.html"">get_basket_total</a></li>
				<li><a href=""function-get_ext_from_mime.html"">get_ext_from_mime</a></li>
				<li><a href=""function-get_mime_from_ext.html"">get_mime_from_ext</a></li>
				<li><a href=""function-get_mime_from_file.html"">get_mime_from_file</a></li>
				<li><a href=""function-get_userobject.html"">get_userobject</a></li>
				<li><a href=""function-getControllerData.html"">getControllerData</a></li>
				<li><a href=""function-getDomainFromUrl.html"">getDomainFromUrl</a></li>
				<li><a href=""function-getRelativePath.html"">getRelativePath</a></li>
				<li><a href=""function-gravatar.html"">gravatar</a></li>
				<li><a href=""function-here.html"">here</a></li>
				<li><a href=""function-img.html"">img</a></li>
				<li><a href=""function-in_array_multi.html"">in_array_multi</a></li>
				<li><a href=""function-is_clean.html"">is_clean</a></li>
				<li><a href=""function-isIpInRange.html"">isIpInRange</a></li>
				<li><a href=""function-isModuleEnabled.html"">isModuleEnabled</a></li>
				<li><a href=""function-isPageSecure.html"">isPageSecure</a></li>
				<li><a href=""function-keyValueSection.html"">keyValueSection</a></li>
				<li><a href=""function-lang.html"">lang</a></li>
				<li><a href=""function-last_query.html"">last_query</a></li>
				<li><a href=""function-lastquery.html"">lastquery</a></li>
				<li><a href=""function-link_tag.html"">link_tag</a></li>
				<li><a href=""function-list_first_last.html"">list_first_last</a></li>
				<li><a href=""function-map.html"">map</a></li>
				<li><a href=""function-niceTime.html"">niceTime</a></li>
				<li><a href=""function-possessionise.html"">possessionise</a></li>
				<li><a href=""function-readFileChunked.html"">readFileChunked</a></li>
				<li><a href=""function-redirect.html"">redirect</a></li>
				<li><a href=""function-return_bytes.html"">return_bytes</a></li>
				<li><a href=""function-secure_site_url.html"">secure_site_url</a></li>
				<li><a href=""function-sendDeveloperMail.html"">sendDeveloperMail</a></li>
				<li><a href=""function-set_app_setting.html"">set_app_setting</a></li>
				<li><a href=""function-setControllerData.html"">setControllerData</a></li>
				<li><a href=""function-show_401.html"">show_401</a></li>
				<li><a href=""function-showFatalError.html"">showFatalError</a></li>
				<li><a href=""function-site_url.html"">site_url</a></li>
				<li><a href=""function-special_chars.html"">special_chars</a></li>
				<li><a href=""function-str_lreplace.html"">str_lreplace</a></li>
				<li><a href=""function-stringToBoolean.html"">stringToBoolean</a></li>
				<li><a href=""function-tel.html"">tel</a></li>
				<li><a href=""function-title_case.html"">title_case</a></li>
				<li><a href=""function-toNailsDate.html"">toNailsDate</a></li>
				<li><a href=""function-toNailsDatetime.html"">toNailsDatetime</a></li>
				<li><a href=""function-toUserDate.html"">toUserDate</a></li>
				<li><a href=""function-toUserDatetime.html"">toUserDatetime</a></li>
				<li><a href=""function-unauthorised.html"">unauthorised</a></li>
				<li><a href=""function-underscore_to_camelcase.html"">underscore_to_camelcase</a></li>
				<li><a href=""function-userHasPermission.html"">userHasPermission</a></li>
				<li><a href=""function-valid_email.html"">valid_email</a></li>
			</ul>
		</div>
	</div>
</div>

<div id=""splitter""></div>

<div id=""right"">
	<div id=""rightInner"">
<div id=""content"" class=""class"">
	<h1>Class Shop_currency_model</h1>


	<div class=""description"">
	<p>OVERLOADING NAILS' MODELS</p>

<p>Note the name of this class; done like this to allow apps to extend this class.
Read full explanation at the bottom of this file.</p>
	</div>

	<dl class=""tree well"">
		<dd style=""padding-left:0px"">
			<a href=""class-CI_Model.html""><span>CI_Model</span></a>
			
			
			
		</dd>
		<dd style=""padding-left:30px"">
			<img src=""resources/inherit.png"" alt=""Extended by"">
			<a href=""class-CORE_NAILS_Model.html""><span>CORE_NAILS_Model</span></a>
			
			
			 uses 
					<a href=""class-NAILS_COMMON_TRAIT_ERROR_HANDLING.html""><span>NAILS_COMMON_TRAIT_ERROR_HANDLING</span></a>, 
			
					<a href=""class-NAILS_COMMON_TRAIT_CACHING.html""><span>NAILS_COMMON_TRAIT_CACHING</span></a>, 
			
					<a href=""class-NAILS_COMMON_TRAIT_GETCOUNT_COMMON.html""><span>NAILS_COMMON_TRAIT_GETCOUNT_COMMON</span></a>
			
		</dd>
		<dd style=""padding-left:60px"">
			<img src=""resources/inherit.png"" alt=""Extended by"">
			<a href=""class-NAILS_Model.html""><span>NAILS_Model</span></a>
			
			
			
		</dd>
		<dd style=""padding-left:90px"">
			<img src=""resources/inherit.png"" alt=""Extended by"">
			<a href=""class-NAILS_Shop_currency_model.html""><span>NAILS_Shop_currency_model</span></a>
			
			
			
		</dd>
		<dd style=""padding-left:120px"">
			<img src=""resources/inherit.png"" alt=""Extended by"">
<b><span>Shop_currency_model</span></b>			
			
			
		</dd>
	</dl>








	<div class=""alert alert-info"">
		
		
		
		

			<b>Located at</b> <a href=""source-class-Shop_currency_model.html#730-732"" title=""Go to source code"">module-shop/shop/models/shop_currency_model.php</a>
		<br>
	</div>



		<h2>Methods summary</h2>

		<h3>Methods inherited from <a href=""class-NAILS_Shop_currency_model.html#methods"">NAILS_Shop_currency_model</a></h3>
		<p class=""elementList"">
			<code><a href=""class-NAILS_Shop_currency_model.html#___construct"">__construct()</a></code>, 
			<code><a href=""class-NAILS_Shop_currency_model.html#_convert"">convert()</a></code>, 
			<code><a href=""class-NAILS_Shop_currency_model.html#_convert_base_to_user"">convert_base_to_user()</a></code>, 
			<code><a href=""class-NAILS_Shop_currency_model.html#_format"">format()</a></code>, 
			<code><a href=""class-NAILS_Shop_currency_model.html#_format_base"">format_base()</a></code>, 
			<code><a href=""class-NAILS_Shop_currency_model.html#_format_user"">format_user()</a></code>, 
			<code><a href=""class-NAILS_Shop_currency_model.html#_get_all"">get_all()</a></code>, 
			<code><a href=""class-NAILS_Shop_currency_model.html#_get_all_flat"">get_all_flat()</a></code>, 
			<code><a href=""class-NAILS_Shop_currency_model.html#_get_all_supported"">get_all_supported()</a></code>, 
			<code><a href=""class-NAILS_Shop_currency_model.html#_get_all_supported_flat"">get_all_supported_flat()</a></code>, 
			<code><a href=""class-NAILS_Shop_currency_model.html#_get_by_code"">get_by_code()</a></code>, 
			<code><a href=""class-NAILS_Shop_currency_model.html#_get_exchange_rate"">get_exchange_rate()</a></code>, 
			<code><a href=""class-NAILS_Shop_currency_model.html#_sync"">sync()</a></code>
		</p>
		<h3>Methods inherited from <a href=""class-CORE_NAILS_Model.html#methods"">CORE_NAILS_Model</a></h3>
		<p class=""elementList"">
			<code><a href=""class-CORE_NAILS_Model.html#___destruct"">__destruct()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#__format_object"">_format_object()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#__generate_slug"">_generate_slug()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#_count_all"">count_all()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#_create"">create()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#_delete"">delete()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#_destroy"">destroy()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#_get_by_id"">get_by_id()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#_get_by_id_or_slug"">get_by_id_or_slug()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#_get_by_ids"">get_by_ids()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#_get_by_slug"">get_by_slug()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#_get_by_slugs"">get_by_slugs()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#_get_property_table"">get_property_table()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#_get_property_table_prefix"">get_property_table_prefix()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#_restore"">restore()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#_setUserObject"">setUserObject()</a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#_update"">update()</a></code>
		</p>

		<h3>Methods used from <a href=""class-NAILS_COMMON_TRAIT_ERROR_HANDLING.html#methods"">NAILS_COMMON_TRAIT_ERROR_HANDLING</a></h3>
		<p class=""elementList"">
			<code><a href=""class-NAILS_COMMON_TRAIT_ERROR_HANDLING.html#__set_error"">_set_error()</a></code>, 
			<code><a href=""class-NAILS_COMMON_TRAIT_ERROR_HANDLING.html#_clear_errors"">clear_errors()</a></code>, 
			<code><a href=""class-NAILS_COMMON_TRAIT_ERROR_HANDLING.html#_clear_last_error"">clear_last_error()</a></code>, 
			<code><a href=""class-NAILS_COMMON_TRAIT_ERROR_HANDLING.html#_get_errors"">get_errors()</a></code>, 
			<code><a href=""class-NAILS_COMMON_TRAIT_ERROR_HANDLING.html#_last_error"">last_error()</a></code>
		</p>
		<h3>Methods used from <a href=""class-NAILS_COMMON_TRAIT_CACHING.html#methods"">NAILS_COMMON_TRAIT_CACHING</a></h3>
		<p class=""elementList"">
			<code><a href=""class-NAILS_COMMON_TRAIT_CACHING.html#__cache_prefix"">_cache_prefix()</a></code>, 
			<code><a href=""class-NAILS_COMMON_TRAIT_CACHING.html#__get_cache"">_get_cache()</a></code>, 
			<code><a href=""class-NAILS_COMMON_TRAIT_CACHING.html#__set_cache"">_set_cache()</a></code>, 
			<code><a href=""class-NAILS_COMMON_TRAIT_CACHING.html#__unset_cache"">_unset_cache()</a></code>
		</p>
		<h3>Methods used from <a href=""class-NAILS_COMMON_TRAIT_GETCOUNT_COMMON.html#methods"">NAILS_COMMON_TRAIT_GETCOUNT_COMMON</a></h3>
		<p class=""elementList"">
			<code><a href=""class-NAILS_COMMON_TRAIT_GETCOUNT_COMMON.html#__getcount_common"">_getcount_common()</a></code>, 
			<code><a href=""class-NAILS_COMMON_TRAIT_GETCOUNT_COMMON.html#__getcount_common_parse_sort"">_getcount_common_parse_sort()</a></code>
		</p>

		<h3>Magic methods summary</h3>








		<h2>Properties summary</h2>

		<h3>Properties inherited from <a href=""class-NAILS_Shop_currency_model.html#properties"">NAILS_Shop_currency_model</a></h3>
		<p class=""elementList"">
			<code><a href=""class-NAILS_Shop_currency_model.html#$_oer_url""><var>$_oer_url</var></a></code>, 
			<code><a href=""class-NAILS_Shop_currency_model.html#$_rates""><var>$_rates</var></a></code>
		</p>
		<h3>Properties inherited from <a href=""class-CORE_NAILS_Model.html#properties"">CORE_NAILS_Model</a></h3>
		<p class=""elementList"">
			<code><a href=""class-CORE_NAILS_Model.html#$_deleted_flag""><var>$_deleted_flag</var></a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#$_destructive_delete""><var>$_destructive_delete</var></a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#$_per_page""><var>$_per_page</var></a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#$_table""><var>$_table</var></a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#$_table_auto_set_timestamps""><var>$_table_auto_set_timestamps</var></a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#$_table_id_column""><var>$_table_id_column</var></a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#$_table_label_column""><var>$_table_label_column</var></a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#$_table_prefix""><var>$_table_prefix</var></a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#$_table_slug_column""><var>$_table_slug_column</var></a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#$data""><var>$data</var></a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#$user""><var>$user</var></a></code>, 
			<code><a href=""class-CORE_NAILS_Model.html#$user_model""><var>$user_model</var></a></code>
		</p>

		<h3>Properties used from <a href=""class-NAILS_COMMON_TRAIT_ERROR_HANDLING.html#properties"">NAILS_COMMON_TRAIT_ERROR_HANDLING</a></h3>
		<p class=""elementList"">
			<code><a href=""class-NAILS_COMMON_TRAIT_ERROR_HANDLING.html#$_errors""><var>$_errors</var></a></code>
		</p>
		<h3>Properties used from <a href=""class-NAILS_COMMON_TRAIT_CACHING.html#properties"">NAILS_COMMON_TRAIT_CACHING</a></h3>
		<p class=""elementList"">
			<code><a href=""class-NAILS_COMMON_TRAIT_CACHING.html#$_cache_keys""><var>$_cache_keys</var></a></code>, 
			<code><a href=""class-NAILS_COMMON_TRAIT_CACHING.html#$_cache_method""><var>$_cache_method</var></a></code>, 
			<code><a href=""class-NAILS_COMMON_TRAIT_CACHING.html#$_cache_values""><var>$_cache_values</var></a></code>
		</p>




</div>
	</div>

	<div id=""footer"">
		 API documentation generated by <a href=""http://apigen.org"">ApiGen</a>
	</div>
</div>
<script src=""resources/combined.js""></script>
<script src=""elementlist.js""></script>
</body>
</html>
",HTML
"<!DOCTYPE html >
<html>
        <head>
          <title></title>
          <meta name=""description"" content="""" />
          <meta name=""keywords"" content="""" />
          <meta http-equiv=""content-type"" content=""text/html; charset=UTF-8"" />
          
      <link href=""../lib/ref-index.css"" media=""screen"" type=""text/css"" rel=""stylesheet"" />
      <script type=""text/javascript"" src=""../lib/jquery.js""></script>
    
        </head>
        <body><div class=""entry"">
      <div class=""name"">ReversibleScaler</div>
      <div class=""occurrences""><a href=""../io/github/mandar2812/dynaml/pipes/package.html"" class=""extype"" name=""io.github.mandar2812.dynaml.pipes"">pipes</a> </div>
    </div><div class=""entry"">
      <div class=""name"">run</div>
      <div class=""occurrences""><a href=""../io/github/mandar2812/dynaml/pipes/DataPipe.html"" class=""extype"" name=""io.github.mandar2812.dynaml.pipes.DataPipe"">DataPipe</a> <a href=""../io/github/mandar2812/dynaml/pipes/StreamDataPipe.html"" class=""extype"" name=""io.github.mandar2812.dynaml.pipes.StreamDataPipe"">StreamDataPipe</a> <a href=""../io/github/mandar2812/dynaml/pipes/StreamFilterPipe.html"" class=""extype"" name=""io.github.mandar2812.dynaml.pipes.StreamFilterPipe"">StreamFilterPipe</a> <a href=""../io/github/mandar2812/dynaml/pipes/StreamMapPipe.html"" class=""extype"" name=""io.github.mandar2812.dynaml.pipes.StreamMapPipe"">StreamMapPipe</a> <a href=""../io/github/mandar2812/dynaml/pipes/StreamPartitionPipe.html"" class=""extype"" name=""io.github.mandar2812.dynaml.pipes.StreamPartitionPipe"">StreamPartitionPipe</a> <a href=""../io/github/mandar2812/dynaml/pipes/StreamSideEffectPipe.html"" class=""extype"" name=""io.github.mandar2812.dynaml.pipes.StreamSideEffectPipe"">StreamSideEffectPipe</a> </div>
    </div></body>
      </html>
",HTML
"{% from ""components/table.html"" import list_table, field, right_aligned_field_heading, row_heading, notification_status_field %}
{% from ""components/page-footer.html"" import page_footer %}

<div class=""ajax-block-container"" aria-labelledby='pill-selected-item'>
  <div class=""dashboard-table bottom-gutter-3-2"">

  {% call(item, row_number) list_table(
    [notification],
    caption=None,
    caption_visible=False,
    empty_message=None,
    field_headings=[
      'Recipient',
      'Status'
    ],
    field_headings_visible=False
  ) %}
    {% call row_heading() %}
      <p class=""govuk-body"">{{ item.to }}</p>
    {% endcall %}
    {{ notification_status_field(item) }}
  {% endcall %}

  {% if more_than_one_page %}
    <p class=""table-show-more-link"">
      Only showing the first 50 rows
    </p>
  {% endif %}

  </div>
</div>
",HTML
"<!DOCTYPE html>
<html lang=""en"">
    <head>
        {{ bokeh_css }}
        {{ bokeh_js }}
        <style>
             {% include 'styles.css' %}
        </style>
        <meta charset=""utf-8"">
        <title>MolExplorer</title>
    </head>
    <body>
    <div>
        <h1>Vizard</h1>
        {{ plot_div|indent(8) }}
    </div>
        {{ plot_script|indent(8) }}
    </body>
</html>
",HTML
"<!DOCTYPE html>
<html>
<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
<script type=""text/javascript"" src=""http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.js""></script>
<!-- [Dependencies[ -->
<script src=""transform.js""></script>
<!-- ]] -->

<style type=""text/css"">
body {
	background: #00406c;
	padding: 60px 10px 20px 20px;
}
div {
	padding: 10px;
	margin: 10px;
	background: #fff;
	float: left;
}
</style>
</head>
<body>

<div id=""test1"">
	Click to transform (rotate)
</div>

<div id=""test2"">
	Click for transition (opacity)
</div>

<div id=""test3"">
	Click for transform-transtion
</div>

</body>
</html>",HTML
"<!DOCTYPE html>
<html>
  <head>
  <title>Zefu Li</title>

  <link rel=""stylesheet"" type=""text/css"" href=""official.css"">
  <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">
   <script src=""official.js""></script>
</head>
<body>
  <ul>
    <li><a href=""#home"">Home</a></li>
    <li><a href=""#about"">About</a></li>
    <li><a href=""#blog"">Blog</a></li>
    <li><a href=""#contact"">Contact</a></li>

  </ul>



        <header class=""header"">
          <div id=""home""><a href=""home""></a>Home</div>
          <div id=""text"">Hi, I am Zefu Li</marquee></div>




          <img class=""human""src=""http://www.newdesignfile.com/postpic/2016/04/human-head-silhouette-vector_396827.png"" width=""600px"" height=""600px"">


<div class=""wifi""><i class=""fa fa-feed"" aria-hidden=""true""></i></div>
<div class=""questionmark""><i class=""fa fa-question"" aria-hidden=""true""></i></div>
<div class=""exclamationmark""><i class=""fa fa-exclamation"" aria-hidden=""true""></i></div>
</header>





      <div id=""about""><a href=""about""></a>About
      <p>I am currently a senior at Oakland Charter High School. I am passionate about technology especially when it comes to computer science, I also like to solve problems and I will keep thinking about the solutions unless I solved them, I guess I am a little stubborn. Information Technology has started a significant revolution and influenced the world over a decade, therefore I decided to pursue a computer science degree. Technology will keep changing the world and moving us forward, that’s what I believe and I am so glad that I am part of the next generation of tech talent. </p></div>

      <div id=""blog""><a href=""blog""></a>Blog
      <h1>My Journey In dev/Mission</h1>
<h2>Coming Soon</h2>
    </div>

      <div id=""contact""><a href=""contact""></a>Contact

              <a id=""Linkedin"" href=""https://www.linkedin.com/in/zefu-li-23866b140/""><img src=""https://upload.wikimedia.org/wikipedia/commons/thumb/c/ca/LinkedIn_logo_initials.png/768px-LinkedIn_logo_initials.png"" height=""30"" width=""30""></a>
              <a id=""github"" href=""https://github.com/seriouswork/seriouswork.github.io""><img  src=""https://image.flaticon.com/icons/svg/25/25231.svg"" height=""30"" width=""30""></a>
            </div>








      </body>
</html>
",HTML
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!-- NewPage -->
<html lang=""en"">
<head>
<!-- Generated by javadoc (1.8.0_60) on Fri Dec 11 10:08:00 MST 2015 -->
<title>ca.ualberta.cs.xpertsapp.UITests.FriendTests</title>
<meta name=""date"" content=""2015-12-11"">
<link rel=""stylesheet"" type=""text/css"" href=""../../../../../../stylesheet.css"" title=""Style"">
<script type=""text/javascript"" src=""../../../../../../script.js""></script>
</head>
<body>
<script type=""text/javascript""><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title=""ca.ualberta.cs.xpertsapp.UITests.FriendTests"";
        }
    }
    catch(err) {
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class=""topNav""><a name=""navbar.top"">
<!--   -->
</a>
<div class=""skipNav""><a href=""#skip.navbar.top"" title=""Skip navigation links"">Skip navigation links</a></div>
<a name=""navbar.top.firstrow"">
<!--   -->
</a>
<ul class=""navList"" title=""Navigation"">
<li><a href=""../../../../../../overview-summary.html"">Overview</a></li>
<li class=""navBarCell1Rev"">Package</li>
<li>Class</li>
<li><a href=""package-tree.html"">Tree</a></li>
<li><a href=""../../../../../../deprecated-list.html"">Deprecated</a></li>
<li><a href=""../../../../../../index-files/index-1.html"">Index</a></li>
<li><a href=""../../../../../../help-doc.html"">Help</a></li>
</ul>
</div>
<div class=""subNav"">
<ul class=""navList"">
<li><a href=""../../../../../../ca/ualberta/cs/xpertsapp/UITests/BrowseTests/package-summary.html"">Prev&nbsp;Package</a></li>
<li><a href=""../../../../../../ca/ualberta/cs/xpertsapp/UITests/InventoryTests/package-summary.html"">Next&nbsp;Package</a></li>
</ul>
<ul class=""navList"">
<li><a href=""../../../../../../index.html?ca/ualberta/cs/xpertsapp/UITests/FriendTests/package-summary.html"" target=""_top"">Frames</a></li>
<li><a href=""package-summary.html"" target=""_top"">No&nbsp;Frames</a></li>
</ul>
<ul class=""navList"" id=""allclasses_navbar_top"">
<li><a href=""../../../../../../allclasses-noframe.html"">All&nbsp;Classes</a></li>
</ul>
<div>
<script type=""text/javascript""><!--
  allClassesLink = document.getElementById(""allclasses_navbar_top"");
  if(window==top) {
    allClassesLink.style.display = ""block"";
  }
  else {
    allClassesLink.style.display = ""none"";
  }
  //-->
</script>
</div>
<a name=""skip.navbar.top"">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class=""header"">
<h1 title=""Package"" class=""title"">Package&nbsp;ca.ualberta.cs.xpertsapp.UITests.FriendTests</h1>
</div>
<div class=""contentContainer"">
<ul class=""blockList"">
<li class=""blockList"">
<table class=""typeSummary"" border=""0"" cellpadding=""3"" cellspacing=""0"" summary=""Class Summary table, listing classes, and an explanation"">
<caption><span>Class Summary</span><span class=""tabEnd"">&nbsp;</span></caption>
<tr>
<th class=""colFirst"" scope=""col"">Class</th>
<th class=""colLast"" scope=""col"">Description</th>
</tr>
<tbody>
<tr class=""altColor"">
<td class=""colFirst""><a href=""../../../../../../ca/ualberta/cs/xpertsapp/UITests/FriendTests/ProfileControllerTest.html"" title=""class in ca.ualberta.cs.xpertsapp.UITests.FriendTests"">ProfileControllerTest</a></td>
<td class=""colLast"">
<div class=""block"">Created by kmbaker on 11/3/15.</div>
</td>
</tr>
<tr class=""rowColor"">
<td class=""colFirst""><a href=""../../../../../../ca/ualberta/cs/xpertsapp/UITests/FriendTests/ViewFriendProfileTest.html"" title=""class in ca.ualberta.cs.xpertsapp.UITests.FriendTests"">ViewFriendProfileTest</a></td>
<td class=""colLast"">
<div class=""block"">Created by kmbaker on 11/3/15.</div>
</td>
</tr>
</tbody>
</table>
</li>
</ul>
</div>
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class=""bottomNav""><a name=""navbar.bottom"">
<!--   -->
</a>
<div class=""skipNav""><a href=""#skip.navbar.bottom"" title=""Skip navigation links"">Skip navigation links</a></div>
<a name=""navbar.bottom.firstrow"">
<!--   -->
</a>
<ul class=""navList"" title=""Navigation"">
<li><a href=""../../../../../../overview-summary.html"">Overview</a></li>
<li class=""navBarCell1Rev"">Package</li>
<li>Class</li>
<li><a href=""package-tree.html"">Tree</a></li>
<li><a href=""../../../../../../deprecated-list.html"">Deprecated</a></li>
<li><a href=""../../../../../../index-files/index-1.html"">Index</a></li>
<li><a href=""../../../../../../help-doc.html"">Help</a></li>
</ul>
</div>
<div class=""subNav"">
<ul class=""navList"">
<li><a href=""../../../../../../ca/ualberta/cs/xpertsapp/UITests/BrowseTests/package-summary.html"">Prev&nbsp;Package</a></li>
<li><a href=""../../../../../../ca/ualberta/cs/xpertsapp/UITests/InventoryTests/package-summary.html"">Next&nbsp;Package</a></li>
</ul>
<ul class=""navList"">
<li><a href=""../../../../../../index.html?ca/ualberta/cs/xpertsapp/UITests/FriendTests/package-summary.html"" target=""_top"">Frames</a></li>
<li><a href=""package-summary.html"" target=""_top"">No&nbsp;Frames</a></li>
</ul>
<ul class=""navList"" id=""allclasses_navbar_bottom"">
<li><a href=""../../../../../../allclasses-noframe.html"">All&nbsp;Classes</a></li>
</ul>
<div>
<script type=""text/javascript""><!--
  allClassesLink = document.getElementById(""allclasses_navbar_bottom"");
  if(window==top) {
    allClassesLink.style.display = ""block"";
  }
  else {
    allClassesLink.style.display = ""none"";
  }
  //-->
</script>
</div>
<a name=""skip.navbar.bottom"">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
",HTML
"<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <title>coqffi: Not compatible 👼</title>
    <link rel=""shortcut icon"" type=""image/png"" href=""../../../../../favicon.png"" />
    <link href=""../../../../../bootstrap.min.css"" rel=""stylesheet"">
    <link href=""../../../../../bootstrap-custom.css"" rel=""stylesheet"">
    <link href=""//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"" rel=""stylesheet"">
    <script src=""../../../../../moment.min.js""></script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src=""https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js""></script>
      <script src=""https://oss.maxcdn.com/respond/1.4.2/respond.min.js""></script>
    <![endif]-->
  </head>
  <body>
    <div class=""container"">
      <div class=""navbar navbar-default"" role=""navigation"">
        <div class=""container-fluid"">
          <div class=""navbar-header"">
            <a class=""navbar-brand"" href=""../../../../..""><i class=""fa fa-lg fa-flag-checkered""></i> Coq bench</a>
          </div>
          <div id=""navbar"" class=""collapse navbar-collapse"">
            <ul class=""nav navbar-nav"">
              <li><a href=""../.."">clean / released</a></li>
              <li class=""active""><a href="""">8.8.1 / coqffi - 1.0.0~beta7</a></li>
            </ul>
          </div>
        </div>
      </div>
      <div class=""article"">
        <div class=""row"">
          <div class=""col-md-12"">
            <a href=""../.."">« Up</a>
            <h1>
              coqffi
              <small>
                1.0.0~beta7
                <span class=""label label-info"">Not compatible 👼</span>
              </small>
            </h1>
            <p>📅 <em><script>document.write(moment(""2021-12-20 02:39:21 +0000"", ""YYYY-MM-DD HH:mm:ss Z"").fromNow());</script> (2021-12-20 02:39:21 UTC)</em><p>
            <h2>Context</h2>
            <pre># Packages matching: installed
# Name              # Installed # Synopsis
base-bigarray       base
base-num            base        Num library distributed with the OCaml compiler
base-threads        base
base-unix           base
camlp5              7.14        Preprocessor-pretty-printer of OCaml
conf-findutils      1           Virtual package relying on findutils
conf-perl           1           Virtual package relying on perl
coq                 8.8.1       Formal proof management system
num                 0           The Num library for arbitrary-precision integer and rational arithmetic
ocaml               4.03.0      The OCaml compiler (virtual package)
ocaml-base-compiler 4.03.0      Official 4.03.0 release
ocaml-config        1           OCaml Switch Configuration
ocamlfind           1.9.1       A library manager for OCaml
# opam file:
opam-version: &quot;2.0&quot;
maintainer: &quot;lthms@soap.coffee&quot;
homepage: &quot;https://github.com/coq-community/coqffi&quot;
dev-repo: &quot;git+https://github.com/coq-community/coqffi.git&quot;
bug-reports: &quot;https://github.com/coq-community/coqffi/issues&quot;
license: &quot;MIT&quot;
synopsis: &quot;Tool for generating Coq FFI bindings to OCaml libraries&quot;
description: &quot;&quot;&quot;
`coqffi` generates the necessary Coq boilerplate to use OCaml functions in a
Coq development, and configures the Coq extraction mechanism accordingly.&quot;&quot;&quot;
build: [
  [&quot;./src-prepare.sh&quot;]
  [&quot;dune&quot; &quot;build&quot; &quot;-p&quot; name &quot;-j&quot; jobs]
]
depends: [
  &quot;ocaml&quot; {&gt;= &quot;4.08&quot; &amp; &lt; &quot;4.13~&quot; }
  &quot;dune&quot; {&gt;= &quot;2.5&quot;}
  &quot;coq&quot; {(&gt;= &quot;8.12&quot; &amp; &lt; &quot;8.14~&quot;) | = &quot;dev&quot;}
  &quot;cmdliner&quot; {&gt;= &quot;1.0.4&quot;}
  &quot;sexplib&quot; {&gt;= &quot;0.14&quot;}
]
tags: [
  &quot;category:Miscellaneous/Coq Extensions&quot;
  &quot;keyword:foreign function interface&quot;
  &quot;keyword:extraction&quot;
  &quot;keyword:OCaml&quot;
  &quot;logpath:CoqFFI&quot;
]
authors: [
  &quot;Thomas Letan&quot;
  &quot;Li-yao Xia&quot;
  &quot;Yann Régis-Gianas&quot;
  &quot;Yannick Zakowski&quot;
]
url {
  src: &quot;https://github.com/coq-community/coqffi/archive/1.0.0-beta7.tar.gz&quot;
  checksum: &quot;sha512=0f9d2893f59f8d09caec83f8476a2e7a511a7044516d639e4283b4187a86cf1563e60f1647cd12ae06e7e395bbc5dfedf5d798af3eb6baf81c0c2e482e14507b&quot;
}
</pre>
            <h2>Lint</h2>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>true</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
            </dl>
            <h2>Dry install 🏜️</h2>
            <p>Dry install with the current Coq version:</p>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>opam install -y --show-action coq-coqffi.1.0.0~beta7 coq.8.8.1</code></dd>
              <dt>Return code</dt>
              <dd>5120</dd>
              <dt>Output</dt>
              <dd><pre>[NOTE] Package coq is already installed (current version is 8.8.1).
The following dependencies couldn&#39;t be met:
  - coq-coqffi -&gt; ocaml &gt;= 4.08
      base of this switch (use `--unlock-base&#39; to force)
No solution found, exiting
</pre></dd>
            </dl>
            <p>Dry install without Coq/switch base, to test if the problem was incompatibility with the current Coq/OCaml version:</p>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>opam remove -y coq; opam install -y --show-action --unlock-base coq-coqffi.1.0.0~beta7</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
            </dl>
            <h2>Install dependencies</h2>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>true</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
              <dt>Duration</dt>
              <dd>0 s</dd>
            </dl>
            <h2>Install 🚀</h2>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>true</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
              <dt>Duration</dt>
              <dd>0 s</dd>
            </dl>
            <h2>Installation size</h2>
            <p>No files were installed.</p>
            <h2>Uninstall 🧹</h2>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>true</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
              <dt>Missing removes</dt>
              <dd>
                none
              </dd>
              <dt>Wrong removes</dt>
              <dd>
                none
              </dd>
            </dl>
          </div>
        </div>
      </div>
      <hr/>
      <div class=""footer"">
        <p class=""text-center"">
          Sources are on <a href=""https://github.com/coq-bench"">GitHub</a> © Guillaume Claret 🐣
        </p>
      </div>
    </div>
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js""></script>
    <script src=""../../../../../bootstrap.min.js""></script>
  </body>
</html>
",HTML
"{% extends 'layout.server.view.html' %}

{% block content %}
	<div ui-view></div>
{% endblock %}
",HTML
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_27) on Wed Nov 21 16:03:26 EST 2012 -->
<TITLE>
ResourceXmlPropertyEmitterInterface
</TITLE>

<META NAME=""date"" CONTENT=""2012-11-21"">

<LINK REL =""stylesheet"" TYPE=""text/css"" HREF=""../../../../stylesheet.css"" TITLE=""Style"">

<SCRIPT type=""text/javascript"">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title=""ResourceXmlPropertyEmitterInterface"";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR=""white"" onload=""windowTitle();"">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME=""navbar_top""><!-- --></A>
<A HREF=""#skip-navbar_top"" title=""Skip navigation links""></A>
<TABLE BORDER=""0"" WIDTH=""100%"" CELLPADDING=""1"" CELLSPACING=""0"" SUMMARY="""">
<TR>
<TD COLSPAN=2 BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">
<A NAME=""navbar_top_firstrow""><!-- --></A>
<TABLE BORDER=""0"" CELLPADDING=""0"" CELLSPACING=""3"" SUMMARY="""">
  <TR ALIGN=""center"" VALIGN=""top"">
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../../overview-summary.html""><FONT CLASS=""NavBarFont1""><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""package-summary.html""><FONT CLASS=""NavBarFont1""><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#FFFFFF"" CLASS=""NavBarCell1Rev""> &nbsp;<FONT CLASS=""NavBarFont1Rev""><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""class-use/ResourceXmlPropertyEmitterInterface.html""><FONT CLASS=""NavBarFont1""><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""package-tree.html""><FONT CLASS=""NavBarFont1""><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../../deprecated-list.html""><FONT CLASS=""NavBarFont1""><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../../index-files/index-1.html""><FONT CLASS=""NavBarFont1""><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../../help-doc.html""><FONT CLASS=""NavBarFont1""><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN=""right"" VALIGN=""top"" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR=""white"" CLASS=""NavBarCell2""><FONT SIZE=""-2"">
&nbsp;<A HREF=""../../../../org/pentaho/di/resource/ResourceUtil.html"" title=""class in org.pentaho.di.resource""><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF=""../../../../org/pentaho/di/resource/SequenceResourceNaming.html"" title=""class in org.pentaho.di.resource""><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR=""white"" CLASS=""NavBarCell2""><FONT SIZE=""-2"">
  <A HREF=""../../../../index.html?org/pentaho/di/resource/ResourceXmlPropertyEmitterInterface.html"" target=""_top""><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF=""ResourceXmlPropertyEmitterInterface.html"" target=""_top""><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type=""text/javascript"">
  <!--
  if(window==top) {
    document.writeln('<A HREF=""../../../../allclasses-noframe.html""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF=""../../../../allclasses-noframe.html""><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN=""top"" CLASS=""NavBarCell3""><FONT SIZE=""-2"">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF=""#method_summary"">METHOD</A></FONT></TD>
<TD VALIGN=""top"" CLASS=""NavBarCell3""><FONT SIZE=""-2"">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF=""#method_detail"">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME=""skip-navbar_top""></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE=""-1"">
org.pentaho.di.resource</FONT>
<BR>
Interface ResourceXmlPropertyEmitterInterface</H2>
<HR>
<DL>
<DT><PRE>public interface <B>ResourceXmlPropertyEmitterInterface</B></DL>
</PRE>

<P>
<HR>

<P>

<!-- ========== METHOD SUMMARY =========== -->

<A NAME=""method_summary""><!-- --></A>
<TABLE BORDER=""1"" WIDTH=""100%"" CELLPADDING=""3"" CELLSPACING=""0"" SUMMARY="""">
<TR BGCOLOR=""#CCCCFF"" CLASS=""TableHeadingColor"">
<TH ALIGN=""left"" COLSPAN=""2""><FONT SIZE=""+2"">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR=""white"" CLASS=""TableRowColor"">
<TD ALIGN=""right"" VALIGN=""top"" WIDTH=""1%""><FONT SIZE=""-1"">
<CODE>&nbsp;<A HREF=""http://java.sun.com/j2se/1.5.0/docs/api/java/lang/String.html?is-external=true"" title=""class or interface in java.lang"">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF=""../../../../org/pentaho/di/resource/ResourceXmlPropertyEmitterInterface.html#getExtraResourceProperties(org.pentaho.di.resource.ResourceHolderInterface, int)"">getExtraResourceProperties</A></B>(<A HREF=""../../../../org/pentaho/di/resource/ResourceHolderInterface.html"" title=""interface in org.pentaho.di.resource"">ResourceHolderInterface</A>&nbsp;ref,
                           int&nbsp;indention)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Allows injection of additional relevant properties in the
 to-xml of the Resource Reference.</TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ METHOD DETAIL ========== -->

<A NAME=""method_detail""><!-- --></A>
<TABLE BORDER=""1"" WIDTH=""100%"" CELLPADDING=""3"" CELLSPACING=""0"" SUMMARY="""">
<TR BGCOLOR=""#CCCCFF"" CLASS=""TableHeadingColor"">
<TH ALIGN=""left"" COLSPAN=""1""><FONT SIZE=""+2"">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME=""getExtraResourceProperties(org.pentaho.di.resource.ResourceHolderInterface, int)""><!-- --></A><H3>
getExtraResourceProperties</H3>
<PRE>
<A HREF=""http://java.sun.com/j2se/1.5.0/docs/api/java/lang/String.html?is-external=true"" title=""class or interface in java.lang"">String</A> <B>getExtraResourceProperties</B>(<A HREF=""../../../../org/pentaho/di/resource/ResourceHolderInterface.html"" title=""interface in org.pentaho.di.resource"">ResourceHolderInterface</A>&nbsp;ref,
                                  int&nbsp;indention)</PRE>
<DL>
<DD>Allows injection of additional relevant properties in the
 to-xml of the Resource Reference.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ref</CODE> - The Resource Reference Holder (a step, or a job entry)<DD><CODE>indention</CODE> - If -1, then no indenting, otherwise, it's the indent level to indent the XML strings
<DT><B>Returns:</B><DD>String of injected XML</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME=""navbar_bottom""><!-- --></A>
<A HREF=""#skip-navbar_bottom"" title=""Skip navigation links""></A>
<TABLE BORDER=""0"" WIDTH=""100%"" CELLPADDING=""1"" CELLSPACING=""0"" SUMMARY="""">
<TR>
<TD COLSPAN=2 BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">
<A NAME=""navbar_bottom_firstrow""><!-- --></A>
<TABLE BORDER=""0"" CELLPADDING=""0"" CELLSPACING=""3"" SUMMARY="""">
  <TR ALIGN=""center"" VALIGN=""top"">
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../../overview-summary.html""><FONT CLASS=""NavBarFont1""><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""package-summary.html""><FONT CLASS=""NavBarFont1""><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#FFFFFF"" CLASS=""NavBarCell1Rev""> &nbsp;<FONT CLASS=""NavBarFont1Rev""><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""class-use/ResourceXmlPropertyEmitterInterface.html""><FONT CLASS=""NavBarFont1""><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""package-tree.html""><FONT CLASS=""NavBarFont1""><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../../deprecated-list.html""><FONT CLASS=""NavBarFont1""><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../../index-files/index-1.html""><FONT CLASS=""NavBarFont1""><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../../help-doc.html""><FONT CLASS=""NavBarFont1""><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN=""right"" VALIGN=""top"" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR=""white"" CLASS=""NavBarCell2""><FONT SIZE=""-2"">
&nbsp;<A HREF=""../../../../org/pentaho/di/resource/ResourceUtil.html"" title=""class in org.pentaho.di.resource""><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF=""../../../../org/pentaho/di/resource/SequenceResourceNaming.html"" title=""class in org.pentaho.di.resource""><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR=""white"" CLASS=""NavBarCell2""><FONT SIZE=""-2"">
  <A HREF=""../../../../index.html?org/pentaho/di/resource/ResourceXmlPropertyEmitterInterface.html"" target=""_top""><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF=""ResourceXmlPropertyEmitterInterface.html"" target=""_top""><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type=""text/javascript"">
  <!--
  if(window==top) {
    document.writeln('<A HREF=""../../../../allclasses-noframe.html""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF=""../../../../allclasses-noframe.html""><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN=""top"" CLASS=""NavBarCell3""><FONT SIZE=""-2"">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF=""#method_summary"">METHOD</A></FONT></TD>
<TD VALIGN=""top"" CLASS=""NavBarCell3""><FONT SIZE=""-2"">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF=""#method_detail"">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME=""skip-navbar_bottom""></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
",HTML
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!-- NewPage -->
<html lang=""en"">
<head>
<!-- Generated by javadoc (version 1.6.0_18) on Thu Dec 18 17:18:41 PST 2014 -->
<title>Uses of Class javax.swing.plaf.basic.BasicFileChooserUI.UpdateAction (Java Platform SE 7 )</title>
<meta name=""date"" content=""2014-12-18"">
<link rel=""stylesheet"" type=""text/css"" href=""../../../../../stylesheet.css"" title=""Style"">
</head>
<body>
<script type=""text/javascript""><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title=""Uses of Class javax.swing.plaf.basic.BasicFileChooserUI.UpdateAction (Java Platform SE 7 )"";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class=""topNav""><a name=""navbar_top"">
<!--   -->
</a><a href=""#skip-navbar_top"" title=""Skip navigation links""></a><a name=""navbar_top_firstrow"">
<!--   -->
</a>
<ul class=""navList"" title=""Navigation"">
<li><a href=""../../../../../overview-summary.html"">Overview</a></li>
<li><a href=""../package-summary.html"">Package</a></li>
<li><a href=""../../../../../javax/swing/plaf/basic/BasicFileChooserUI.UpdateAction.html"" title=""class in javax.swing.plaf.basic"">Class</a></li>
<li class=""navBarCell1Rev"">Use</li>
<li><a href=""../package-tree.html"">Tree</a></li>
<li><a href=""../../../../../deprecated-list.html"">Deprecated</a></li>
<li><a href=""../../../../../index-files/index-1.html"">Index</a></li>
<li><a href=""../../../../../help-doc.html"">Help</a></li>
</ul>
<div class=""aboutLanguage""><em><strong>Java&trade;&nbsp;Platform<br>Standard&nbsp;Ed.&nbsp;7</strong></em></div>
</div>
<div class=""subNav"">
<ul class=""navList"">
<li>Prev</li>
<li>Next</li>
</ul>
<ul class=""navList"">
<li><a href=""../../../../../index.html?javax/swing/plaf/basic/class-use/BasicFileChooserUI.UpdateAction.html"" target=""_top"">Frames</a></li>
<li><a href=""BasicFileChooserUI.UpdateAction.html"" target=""_top"">No Frames</a></li>
</ul>
<ul class=""navList"" id=""allclasses_navbar_top"">
<li><a href=""../../../../../allclasses-noframe.html"">All Classes</a></li>
</ul>
<div>
<script type=""text/javascript""><!--
  allClassesLink = document.getElementById(""allclasses_navbar_top"");
  if(window==top) {
    allClassesLink.style.display = ""block"";
  }
  else {
    allClassesLink.style.display = ""none"";
  }
  //-->
</script>
</div>
<a name=""skip-navbar_top"">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class=""header"">
<h2 title=""Uses of Class javax.swing.plaf.basic.BasicFileChooserUI.UpdateAction"" class=""title"">Uses of Class<br>javax.swing.plaf.basic.BasicFileChooserUI.UpdateAction</h2>
</div>
<div class=""classUseContainer"">No usage of javax.swing.plaf.basic.BasicFileChooserUI.UpdateAction</div>
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class=""bottomNav""><a name=""navbar_bottom"">
<!--   -->
</a><a href=""#skip-navbar_bottom"" title=""Skip navigation links""></a><a name=""navbar_bottom_firstrow"">
<!--   -->
</a>
<ul class=""navList"" title=""Navigation"">
<li><a href=""../../../../../overview-summary.html"">Overview</a></li>
<li><a href=""../package-summary.html"">Package</a></li>
<li><a href=""../../../../../javax/swing/plaf/basic/BasicFileChooserUI.UpdateAction.html"" title=""class in javax.swing.plaf.basic"">Class</a></li>
<li class=""navBarCell1Rev"">Use</li>
<li><a href=""../package-tree.html"">Tree</a></li>
<li><a href=""../../../../../deprecated-list.html"">Deprecated</a></li>
<li><a href=""../../../../../index-files/index-1.html"">Index</a></li>
<li><a href=""../../../../../help-doc.html"">Help</a></li>
</ul>
<div class=""aboutLanguage""><em><strong>Java&trade;&nbsp;Platform<br>Standard&nbsp;Ed.&nbsp;7</strong></em></div>
</div>
<div class=""subNav"">
<ul class=""navList"">
<li>Prev</li>
<li>Next</li>
</ul>
<ul class=""navList"">
<li><a href=""../../../../../index.html?javax/swing/plaf/basic/class-use/BasicFileChooserUI.UpdateAction.html"" target=""_top"">Frames</a></li>
<li><a href=""BasicFileChooserUI.UpdateAction.html"" target=""_top"">No Frames</a></li>
</ul>
<ul class=""navList"" id=""allclasses_navbar_bottom"">
<li><a href=""../../../../../allclasses-noframe.html"">All Classes</a></li>
</ul>
<div>
<script type=""text/javascript""><!--
  allClassesLink = document.getElementById(""allclasses_navbar_bottom"");
  if(window==top) {
    allClassesLink.style.display = ""block"";
  }
  else {
    allClassesLink.style.display = ""none"";
  }
  //-->
</script>
</div>
<a name=""skip-navbar_bottom"">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
<p class=""legalCopy""><small><font size=""-1""> <a href=""http://bugreport.sun.com/bugreport/"">Submit a bug or feature</a> <br>For further API reference and developer documentation, see <a href=""http://docs.oracle.com/javase/7/docs/index.html"" target=""_blank"">Java SE Documentation</a>. That documentation contains more detailed, developer-targeted descriptions, with conceptual overviews, definitions of terms, workarounds, and working code examples.<br> <a href=""../../../../../../legal/cpyr.html"">Copyright</a> &#x00a9; 1993, 2015, Oracle and/or its affiliates.  All rights reserved. </font></small></p>
</body>
</html>
",HTML
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""
   ""http://www.w3.org/TR/html4/loose.dtd"">
<!-- UASR: Unified Approach to Speech Synthesis and Recognition
<    - Documentation home page
<   
<    AUTHOR : Matthias Wolff
<    PACKAGE: n/a
<   
<    Copyright 2013 UASR contributors (see COPYRIGHT file)
<    - Chair of System Theory and Speech Technology, TU Dresden
<    - Chair of Communications Engineering, BTU Cottbus
<   
<    This file is part of UASR.
<   
<    UASR is free software: you can redistribute it and/or modify it under the
<    terms of the GNU Lesser General Public License as published by the Free
<    Software Foundation, either version 3 of the License, or (at your option)
<    any later version.
<   
<    UASR is distributed in the hope that it will be useful, but WITHOUT ANY
<    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
<    FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for 
<    more details.
<   
<    You should have received a copy of the GNU Lesser General Public License
<    along with UASR. If not, see [http://www.gnu.org/licenses/].
  -->
<html>
<head>
   <link rel=stylesheet type=""text/css"" href=""toc.css"">
</head>
<script type=""text/javascript"">
  if (top==self)
    top.location = ""index.html"";
</script>
<script type=""text/javascript"" src=""default.js""></script>
<body onload=""void(__tocInit('tocRoot'));"">
  <h2 class=""CONT"">Manual</h2>
  <noscript><div class=""noscript"">
    JavaScript is not enabled.
  </div></noscript>
  <div class=""tocRoot"" id=""tocRoot"">
    <div class=""tocLeaf""><a class=""toc"" href=""home.html"" target=""contFrame"" title=""Database DocumentationHome Page"">Home</a></div>
    <div class=""tocNode"" id=""tocPackageDocumentation"">
      <a class=""toc"" href=""javascript:__tocToggle('tocPackageDocumentation');"">[&minus;]</a>&nbsp;<img src=""resources/book_obj.gif"" class=""tocIcon"">&nbsp;Scripts
      <!--{{ TOC -->

        <div class=""tocLeaf""><a href=""automatic/vau.itp.html"" target=""contFrame"" title=""Voice authentication database plug-in. ""
          ><img src=""resources/blank_stc.gif"" class=""tocIcon"">&nbsp;<img src=""resources/lib_obj.gif"" class=""tocIcon"">&nbsp;vau.itp</a></div>
      <!--}} TOC -->
    </div>
  </div>
</body>
</html>
",HTML
"{{{
  ""bodyClass"" : ""bg-white"",
  ""screenshot"" : {
    ""background-size"" : ""contain""
  }
}}}

<div class=""cf"">
  <div class=""fl w-50 w-20-ns tc pv5 bg-black-05"">
    1
  </div>
  <div class=""fl w-50 w-20-ns tc pv5 bg-black-10"">
    2
  </div>
  <div class=""fl w-100 w-20-ns tc pv5 bg-black-20"">
    3
  </div>
  <div class=""fl w-50 w-20-ns tc pv5 bg-black-10"">
    4
  </div>
  <div class=""fl w-50 w-20-ns tc pv5 bg-black-05"">
    5
  </div>
</div>
",HTML
"<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <title>ott: 31 s 🏆</title>
    <link rel=""shortcut icon"" type=""image/png"" href=""../../../../../favicon.png"" />
    <link href=""../../../../../bootstrap.min.css"" rel=""stylesheet"">
    <link href=""../../../../../bootstrap-custom.css"" rel=""stylesheet"">
    <link href=""//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"" rel=""stylesheet"">
    <script src=""../../../../../moment.min.js""></script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src=""https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js""></script>
      <script src=""https://oss.maxcdn.com/respond/1.4.2/respond.min.js""></script>
    <![endif]-->
  </head>
  <body>
    <div class=""container"">
      <div class=""navbar navbar-default"" role=""navigation"">
        <div class=""container-fluid"">
          <div class=""navbar-header"">
            <a class=""navbar-brand"" href=""../../../../..""><i class=""fa fa-lg fa-flag-checkered""></i> Coq bench</a>
          </div>
          <div id=""navbar"" class=""collapse navbar-collapse"">
            <ul class=""nav navbar-nav"">
              <li><a href=""../.."">clean / released</a></li>
              <li class=""active""><a href="""">8.9.1 / ott - 0.29</a></li>
            </ul>
          </div>
        </div>
      </div>
      <div class=""article"">
        <div class=""row"">
          <div class=""col-md-12"">
            <a href=""../.."">« Up</a>
            <h1>
              ott
              <small>
                0.29
                <span class=""label label-success"">31 s 🏆</span>
              </small>
            </h1>
            <p>📅 <em><script>document.write(moment(""2022-01-31 22:04:34 +0000"", ""YYYY-MM-DD HH:mm:ss Z"").fromNow());</script> (2022-01-31 22:04:34 UTC)</em><p>
            <h2>Context</h2>
            <pre># Packages matching: installed
# Name              # Installed # Synopsis
base-bigarray       base
base-threads        base
base-unix           base
camlp5              7.14        Preprocessor-pretty-printer of OCaml
conf-findutils      1           Virtual package relying on findutils
conf-perl           2           Virtual package relying on perl
coq                 8.9.1       Formal proof management system
num                 1.4         The legacy Num library for arbitrary-precision integer and rational arithmetic
ocaml               4.08.1      The OCaml compiler (virtual package)
ocaml-base-compiler 4.08.1      Official release 4.08.1
ocaml-config        1           OCaml Switch Configuration
ocamlfind           1.9.3       A library manager for OCaml
# opam file:
opam-version: &quot;2.0&quot;
maintainer: &quot;palmskog@gmail.com&quot;
homepage: &quot;http://www.cl.cam.ac.uk/~pes20/ott/&quot;
dev-repo: &quot;git+https://github.com/ott-lang/ott.git&quot;
bug-reports: &quot;https://github.com/ott-lang/ott/issues&quot;
license: &quot;BSD-3-Clause&quot;
synopsis: &quot;Auxiliary Coq library for Ott, a tool for writing definitions of programming languages and calculi&quot;
description: &quot;&quot;&quot;
Ott takes as input a definition of a language syntax and semantics, in a concise
and readable ASCII notation that is close to what one would write in informal
mathematics. It can then generate a Coq version of the definition, which requires
this library.
&quot;&quot;&quot;
build: [make &quot;-j%{jobs}%&quot; &quot;-C&quot; &quot;coq&quot;]
install: [make &quot;-C&quot; &quot;coq&quot; &quot;install&quot;]
depends: [
  &quot;coq&quot; {&gt;= &quot;8.5&quot; &amp; &lt; &quot;8.11~&quot;}
]
tags: [
  &quot;category:Computer Science/Semantics and Compilation/Semantics&quot;
  &quot;keyword:abstract syntax&quot;
  &quot;logpath:Ott&quot;
  &quot;date:2019-08-01&quot;
]
authors: [
  &quot;Peter Sewell&quot;
  &quot;Francesco Zappa Nardelli&quot;
  &quot;Scott Owens&quot;
]
url {
  src: &quot;https://github.com/ott-lang/ott/archive/0.29.tar.gz&quot;
  checksum: &quot;sha512=2ffc10e5d6290b5a737add419e5441b85a60fda7a9c4544f91bcfd8cd69e318d465787b2500003109186cc3945c3dcb5661371a419c3ef117adff9fc2d8f3e5b&quot;
}
</pre>
            <h2>Lint</h2>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>true</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
            </dl>
            <h2>Dry install 🏜️</h2>
            <p>Dry install with the current Coq version:</p>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>opam install -y --show-action coq-ott.0.29 coq.8.9.1</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
            </dl>
            <p>Dry install without Coq/switch base, to test if the problem was incompatibility with the current Coq/OCaml version:</p>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>true</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
            </dl>
            <h2>Install dependencies</h2>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>opam list; echo; ulimit -Sv 4000000; timeout 4h opam install -y --deps-only coq-ott.0.29 coq.8.9.1</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
              <dt>Duration</dt>
              <dd>12 s</dd>
            </dl>
            <h2>Install 🚀</h2>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>opam list; echo; ulimit -Sv 16000000; timeout 4h opam install -y -v coq-ott.0.29 coq.8.9.1</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
              <dt>Duration</dt>
              <dd>31 s</dd>
            </dl>
            <h2>Installation size</h2>
            <p>Total: 746 K</p>
            <ul>
              <li>82 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_predicate.vo</code></li>
              <li>68 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_takedrop.vo</code></li>
              <li>58 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_nth.vo</code></li>
              <li>56 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_distinct.vo</code></li>
              <li>54 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_base.vo</code></li>
              <li>48 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_mem.vo</code></li>
              <li>37 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_flat_map.vo</code></li>
              <li>36 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_predicate.glob</code></li>
              <li>35 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_repeat.vo</code></li>
              <li>31 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_support.vo</code></li>
              <li>26 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_takedrop.glob</code></li>
              <li>24 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list.vo</code></li>
              <li>19 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_nth.glob</code></li>
              <li>19 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_distinct.glob</code></li>
              <li>18 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_core.vo</code></li>
              <li>17 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_base.glob</code></li>
              <li>17 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_eq_dec.vo</code></li>
              <li>16 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_mem.glob</code></li>
              <li>13 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_predicate.v</code></li>
              <li>10 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_takedrop.v</code></li>
              <li>8 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_flat_map.glob</code></li>
              <li>6 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_core.glob</code></li>
              <li>6 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_base.v</code></li>
              <li>6 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_distinct.v</code></li>
              <li>6 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_nth.v</code></li>
              <li>6 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_repeat.glob</code></li>
              <li>5 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_mem.v</code></li>
              <li>5 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_support.glob</code></li>
              <li>3 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_eq_dec.glob</code></li>
              <li>3 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_flat_map.v</code></li>
              <li>2 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_core.v</code></li>
              <li>2 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_repeat.v</code></li>
              <li>2 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_eq_dec.v</code></li>
              <li>1 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list.v</code></li>
              <li>1 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list_support.v</code></li>
              <li>1 K <code>../ocaml-base-compiler.4.08.1/lib/coq/user-contrib/Ott/ott_list.glob</code></li>
            </ul>
            <h2>Uninstall 🧹</h2>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>opam remove -y coq-ott.0.29</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
              <dt>Missing removes</dt>
              <dd>
                none
              </dd>
              <dt>Wrong removes</dt>
              <dd>
                none
              </dd>
            </dl>
          </div>
        </div>
      </div>
      <hr/>
      <div class=""footer"">
        <p class=""text-center"">
          Sources are on <a href=""https://github.com/coq-bench"">GitHub</a> © Guillaume Claret 🐣
        </p>
      </div>
    </div>
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js""></script>
    <script src=""../../../../../bootstrap.min.js""></script>
  </body>
</html>
",HTML
"<!DOCTYPE html>
<html lang=""es"">
  <head>
    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">

    <meta name=""description"" content=""Spincommerce Guía de Estilos"">
    <meta name=""keywords"" content="""">
    <meta name=""author"" content=""Spincommerce"">
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700,300,600,400italic' rel='stylesheet' type='text/css'>

    <title>
      Scaffolding &middot; Spincommerce
    </title>

    <link rel=""stylesheet"" href=""/spincommerce-style-guide/docs.css"">

    <!-- Favicons -->
    <link rel=""apple-touch-icon-precomposed"" href=""/spincommerce-style-guide/img/apple-touch-icon-precomposed.png"">
    <link rel=""icon"" href=""/spincommerce-style-guide/favicon.ico"">
  </head>
  <body>

    <header class=""masthead"">
      <div class=""row"">
        <a href=""/spincommerce-style-guide/"" class=""masthead-logo"">
          <span class=""isotype""></span>
          SpinCommerce
        </a>

        <nav class=""masthead-nav"">
          <a  href=""/spincommerce-style-guide/scaffolding"">Docs</a>
          <a  href=""/spincommerce-style-guide/about"">About</a>
          <a href=""https://github.com/Corpspin/spincommerce-style-guide"" target=""_blank"">GitHub</a>
        </nav>
      </div>
    </header>

    

    <div class=""row"">
      <div class=""docs-layout"">
  <div class=""medium-3 column"">
    
      <nav class=""menu docs-menu"">
  <a class=""menu-item selected"" href=""/spincommerce-style-guide/scaffolding/"">
    Scaffolding
  </a>
  <a class=""menu-item "" href=""/spincommerce-style-guide/layout/"">
    Layout
  </a>
  <a class=""menu-item "" href=""/spincommerce-style-guide/type/"">
    Type
  </a>
  <a class=""menu-item "" href=""/spincommerce-style-guide/buttons/"">
    Buttons
  </a>
  <a class=""menu-item "" href=""/spincommerce-style-guide/icons/"">
    Icons
  </a>
  <a class=""menu-item "" href=""/spincommerce-style-guide/utilities/"">
    Utilities
  </a>
   <a class=""menu-item "" href=""/spincommerce-style-guide/guidelines/"">
    Code guidelines
  </a>
</nav>

<nav class=""menu docs-menu"">
  <a class=""menu-item "" href=""/spincommerce-style-guide/branding/"">
    Branding
  </a>
  <a class=""menu-item "" href=""/spincommerce-style-guide/colors/"">
    Colors
  </a>
  <a class=""menu-item "" href=""/spincommerce-style-guide/fonts/"">
   Fonts
  </a>

</nav>

    
  </div>
  <div class=""medium-9 column markdown-body"">
    <h1 class=""page-title"">
      Scaffolding
    </h1>
    <div class=""markdown-body"">
      <p>Scaffolding refers to the global resets and dependencies that SpinCommerce is built upon.</p>

<h2 id=""contents"">Contents</h2>

<ul id=""markdown-toc"">
  <li><a href=""#contents"" id=""markdown-toc-contents"">Contents</a></li>
  <li><a href=""#html5-doctype"" id=""markdown-toc-html5-doctype"">HTML5 doctype</a></li>
  <li><a href=""#box-sizing"" id=""markdown-toc-box-sizing"">Box-sizing</a></li>
  <li><a href=""#built-on-normalize"" id=""markdown-toc-built-on-normalize"">Built on Normalize</a></li>
  <li><a href=""#based-on-foundation-5"" id=""markdown-toc-based-on-foundation-5"">Based on Foundation 5</a></li>
</ul>

<h2 id=""html5-doctype"">HTML5 doctype</h2>

<p>SpinCommerce makes use of certain HTML elements and CSS properties that <strong>require</strong> the use of the HTML5 doctype. Include it at the beginning of all your pages.</p>

<figure class=""highlight""><pre><code class=""language-html"" data-lang=""html""><span class=""cp"">&lt;!DOCTYPE html&gt;</span>
<span class=""nt"">&lt;html</span> <span class=""na"">lang=</span><span class=""s"">""es""</span><span class=""nt"">&gt;</span>
  ...
<span class=""nt"">&lt;/html&gt;</span></code></pre></figure>

<h2 id=""box-sizing"">Box-sizing</h2>

<p>We reset <code class=""highlighter-rouge"">box-sizing</code> to <code class=""highlighter-rouge"">border-box</code> for every element in SpinCommerce. This allows us to more easily assign widths to elements that also have <code class=""highlighter-rouge"">padding</code> and <code class=""highlighter-rouge"">border</code>s.</p>

<h2 id=""built-on-normalize"">Built on Normalize</h2>

<p>For improved cross-browser rendering, we use <a href=""http://necolas.github.io/normalize.css/"">Normalize.css</a> to correct small inconsistencies across browsers and devices.</p>

<h2 id=""based-on-foundation-5"">Based on Foundation 5</h2>

<p>SpinCommerce is based on Foundation 5. <a href=""http://foundation.zurb.com/sites/docs/v/5.5.3/"">Read Docs</a>.</p>

    </div>
  </div>
</div>


      <footer class=""footer column small-12"">
        Copyright SpinCommerce 2016.<br>
        Created and maintained by SpinCommerce team. <strong>Currently v0.1.</strong>
      </footer>
    </div>

    <script src=""/spincommerce-style-guide/js/anchor.min.js""></script>
    <script>
      var selector = '.markdown-body h2, .markdown-body h3';
      anchors.options = {
        placement: 'left',
        class: 'anchor-link'
      };
      anchors.add(selector);
    </script>
  </body>
</html>
",HTML
"<div id=""page-wrapper"">

            <div class=""row"">
                <div class=""col-lg-12"">
                    <h1 class=""page-header"">Reservation's</h1>
                </div>
                <!-- /.col-lg-12 -->
            </div>
            <div class=""row"">
    <div class=""col-lg-12"">
        <?php if($this->session->flashdata('approved_success')): ?>
            <?= ""<div class='alert alert-success'>"". $this->session->flashdata(""approved_success""). ""</div>""; ?>
        <?php endif; ?>
        <?php if($this->session->flashdata('approved_failed')): ?>
            <?= ""<div class='alert alert-danger'>"". $this->session->flashdata(""approved_failed""). ""</div>""; ?>
        <?php endif; ?>

         <?php if($this->session->flashdata('reject_success')): ?>
            <?= ""<div class='alert alert-success'>"". $this->session->flashdata(""reject_success""). ""</div>""; ?>
        <?php endif; ?>
        <?php if($this->session->flashdata('invoice_ok')): ?>
            <?= ""<div class='alert alert-success'>"". $this->session->flashdata(""invoice_ok""). ""</div>""; ?>
        <?php endif; ?>
        <?php if($this->session->flashdata('invoice_cancel')): ?>
            <?= ""<div class='alert alert-success'>"". $this->session->flashdata(""invoice_cancel""). ""</div>""; ?>
        <?php endif; ?>
        <?php if($this->session->flashdata('reject_failed')): ?>
            <?= ""<div class='alert alert-danger'>"". $this->session->flashdata(""reject_failed""). ""</div>""; ?>
        <?php endif; ?>

    </div>
</div>
            <!-- /.row -->
             <div class=""row"">
                <div class=""col-lg-12"">
                    <div class=""panel panel-default"">
                        <div class=""panel-heading"">
                            User Appointement's
                        </div>
                        <!-- /.panel-heading -->
                        <div class=""panel-body"">
                            <table width=""100%"" class=""table table-striped table-bordered table-hover"" id=""dataTables-example"">
                                <thead>
                                    <tr>
                                        <th>SNo</th>
                                        <th>Invoice</th>
                                        <th>Appartment</th>
                                        <th>Owner</th>
                                        <th>Buy User</th>
                                        <th>Appointment Ok</th>
                                        <th>Appointemnt Cencel</th>
                                        <th>Invoice Date</th>

                                    </tr>
                                </thead>
                                <tbody>
                                <?php $i = 1; ?>
                                   <?php foreach($book as $app): ?>
                                    <?php $app->invoice_date;
                                          

                                     ?>
                                    <?php 

                                    $current = strtotime(date('m/d/Y'));
                                    $invoice_date = strtotime($app->invoice_date);
                                    $sub = $invoice_date-$current;
                                    $days = floor($sub/(60*60*24));
                                    $result = explode(""-"",$days);


                                     ?>
                                    <tr>
                                <td><?php echo $i++; ?></td>
                                <td><?= $app->invoice; ?></td>
                                <td><a href=""<?php echo base_url('admin/admin_controller/appartment_details/'.$app->appartement_id.'');?>"">Appartment Details</a></td>
                                <td><a href=""<?php echo base_url('admin/admin_controller/user_details/'.$app->owner_id.'');?>"">Owner Details</a></td>
                                <td><a href=""<?php echo base_url('admin/admin_controller/user_details/'.$app->buy_user_id.'');?>"">Buy User Details</a></td>
                                <td><a href=""<?php echo base_url('admin/admin_controller/invoice_ok/'.$app->appartement_id.'');?>"" class=""btn btn-success""><span class=""glyphicon glyphicon-ok""></span></a></td>
                                <td><a href=""<?php echo base_url('admin/admin_controller/invoice_cancel/'.$app->appartement_id.'');?>"" class=""btn btn-danger""><span class=""glyphicon glyphicon-remove""></span></a></td>
                                <?php if($days == 1): ?>
                                    <td><?php echo ""Today""; ?></td>
                                <?php else: ?>
                                <td><?php echo $result[1]."" Days""; ?></td>
                            <?php endif; ?>
                                </tr>
                                   <?php endforeach; ?>
                                </tbody>
                            </table>
                            <!-- /.table-responsive -->
                           
                        </div>
                        <!-- /.panel-body -->
                    </div>
                    <!-- /.panel -->
                </div>
                <!-- /.col-lg-12 -->
            </div>",PHP
"<?php
namespace WindowsAzure\DistributionBundle\Deployment;


/**
 * @author Stéphane Escandell <stephane.escandell@gmail.com>
 */
interface CustomIteratorInterface
{
    /**
     * @param array $dirs
     * @param array $subdirs
     */
    public function getIterator(array $dirs, array $subdirs);
}",PHP
"<?php
class Ressource extends Thing {
	var $name;
	var $url;
	var $schemaDefinition;
	
	
	function __construct($url = null) {
		if ($url) $this->url = $this->preparePath($url);
	}
	function preparePath($path) {
		$path = str_replace("" "", ""+"", $path);
	
		return $path;
	}
	function getFileName() {
		if (strpos($this->ressource_url, ""/"") !== false) {
			$slash_explode = explode(""/"", $this->ressource_url);
			
			return $slash_explode[count($slash_explode) - 1] . "".pdf"";
		}
		
		return ""fuckit"";
	}
	function load($noDownload = false, $enforcedType = null) {
		error_reporting(E_ALL & ~E_NOTICE);
		
		$finfo = new finfo(FILEINFO_MIME);
		$fio = new FileIO();
		
		if (!$this->is_connected() || $noDownload) {
		    //$this->content = file_get_contents('data/temp/structure/processing/processed.html');
		    $this->content = file_get_contents($this->url);
			
			if ($enforcedType) {
				$this->Type = $enforcedType;
			} else {
				$this->Type = $finfo->buffer($this->content);
			}
			
			$this->size = strlen($this->content);
			
			if ($this->Type == ""application/pdf; charset=binary"" || $this->Type == ""application/octet-stream; charset=binary"") {
				//$filetime = $fio->filemtime_remote('../data/temp/structure/processing/processed.html');
			    $filetime = $fio->filemtime_remote($this->url);
				$this->modificationTime = date (""F d Y H:i:s."", $filetime);
			}
		} else {
			$this->content = $fio->loadFile($this->url);
			
			$this->Type = $finfo->buffer($this->content);
			if ($this->Type === ""text/plain; charset=us-ascii"") {
				if ($this->isJson($this->content)) {
					$this->Type = ""application/json; charset=utf-8"";
				}
			}
			$this->size = strlen($this->content);
			
			if ($this->Type == ""application/pdf; charset=binary"" || $this->Type == ""application/octet-stream; charset=binary"") {
				$filetime = $fio->filemtime_remote($this->url);
				$this->modificationTime = date (""F d Y H:i:s."", $filetime);
			}
		}
	}
	function isJson($string) {
		json_decode($string);
		return (json_last_error() == JSON_ERROR_NONE);
	}
}
?>
",PHP
"<?php
namespace Mapbender\ActivityIndicatorBundle\Element;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

/**
 * 
 */
class ActivityIndicatorAdminType extends AbstractType
{

    /**
     * @inheritdoc
     */
    public function getName()
    {
        return 'activityindicator';
    }

    /**
     * @inheritdoc
     */
    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'application' => null
        ));
    }

    /**
     * @inheritdoc
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder->add('tooltip', 'text', array('required' => false))
            ->add('activityClass', 'text', array('required' => false))
            ->add('ajaxActivityClass', 'text', array('required' => false))
            ->add('tileActivityClass', 'text', array('required' => false));
    }

}
",PHP
"<!-- START REVOLUTION SLIDER 5.0 -->
<div id=""slider_container"" class=""rev_slider_wrapper"">
    <div id=""rev-slider"" class=""rev_slider""  data-version=""5.0"">
        <ul>
            <li data-transition=""slideremovedown"">
                <!-- MAIN IMAGE -->
                <img src=""<?php echo $this->common->theme_link(); ?>img/slider/revolution/slider01.jpg""  alt=""""  width=""1920"" height=""600"">
                <!-- LAYER NR. 1 -->
                <div class=""tp-caption captionHeadline3 text-shadow""
                    id=""slide-51-layer-1""
                    data-x=""['left','left','left','left']"" data-hoffset=""['80','80','80','80']""
                    data-y=""['top','top','top','top']"" data-voffset=""['180','180','180','180']""
                    data-width=""504""
                    data-height=""133""
                    data-whitespace=""normal""
                    data-transform_idle=""o:1;""
                    data-transform_in=""y:[100%];z:0;rX:0deg;rY:0;rZ:0;sX:1;sY:1;skX:0;skY:0;s:1500;e:Power3.easeInOut;""
                    data-transform_out=""y:[100%];s:1000;s:1000;""
                    data-mask_in=""x:0px;y:0px;s:inherit;e:inherit;""
                    data-mask_out=""x:inherit;y:inherit;s:inherit;e:inherit;""
                    data-start=""500""
                    data-splitin=""none""
                    data-splitout=""none""
                    data-responsive_offset=""on""
                    style=""z-index: 5; white-space: normal;"">
                    Lulusan dijamin Kerja
                </div>
                <!-- LAYER NR. 2 -->

                <div class=""tp-caption captionButtonlink""
                    id=""slide-400-layer-3""
                    data-x=""['left','left','left','left']"" data-hoffset=""['85','85','85','85']""
                    data-y=""['top','top','top','top']"" data-voffset=""['355','355','355','355']""
                    data-width=""['auto','auto','auto','auto']""
                    data-height=""['auto','auto','auto','auto']""
                    data-transform_idle=""o:1;""
                    data-transform_in=""x:right;s:2000;e:Power4.easeInOut;""
                    data-transform_out=""s:1000;e:Power2.easeInOut;s:1000;e:Power2.easeInOut;""
                    data-start=""700""
                    data-splitin=""none""
                    data-splitout=""none""
                    data-responsive_offset=""on""
                    style=""z-index: 6; white-space: nowrap;""><a href=""#"" class=""btn btn-primary btn-icon"">Learn more <i class=""fa fa-link""></i></a>
                </div>
              <!--  <div class=""tp-caption""
                    id=""slide-400-layer-4""
                    data-x=""['right','right','right','right']"" data-hoffset=""['200','200','150','200']""
                    data-y=""['bottom','bottom','bottom','bottom']"" data-voffset=""['0','0','0','0']""
                    data-transform_idle=""o:1;""
                    data-transform_in=""y:[100%];z:0;rX:0deg;rY:0;rZ:0;sX:1;sY:1;skX:0;skY:0;s:1500;e:Power3.easeInOut;""
                    data-transform_out=""y:[100%];s:1000;s:1000;""
                    data-start=""2500""
                    data-splitin=""none""
                    data-splitout=""none""
                    data-responsive_offset=""on""
                    style=""z-index: 6; white-space: nowrap;"">
                    <img src=""<?php echo $this->common->theme_link(); ?>img/slider/revolution/workerno1.png"" class=""img-Construction"" width=""400"" alt="""">
                </div> -->
            </li>
            <li data-transition=""slideremovedown"">
                <!-- MAIN IMAGE -->
                <img src=""<?php echo $this->common->theme_link(); ?>img/slider/revolution/slider02.jpg""  alt=""""  width=""1920"" height=""600"">
                <!-- LAYER NR. 1 -->
                <div class=""tp-caption captionHeadline3 text-shadow""
                    id=""slide-51-layer-1""
                    data-x=""['left','left','left','left']"" data-hoffset=""['80','80','80','80']""
                    data-y=""['top','top','top','top']"" data-voffset=""['180','180','180','180']""
                    data-width=""700""
                    data-height=""133""
                    data-whitespace=""normal""
                    data-transform_idle=""o:1;""
                    data-transform_in=""y:[100%];z:0;rX:0deg;rY:0;rZ:0;sX:1;sY:1;skX:0;skY:0;s:1500;e:Power3.easeInOut;""
                    data-transform_out=""y:[100%];s:1000;s:1000;""
                    data-mask_in=""x:0px;y:0px;s:inherit;e:inherit;""
                    data-mask_out=""x:inherit;y:inherit;s:inherit;e:inherit;""
                    data-start=""500""
                    data-splitin=""none""
                    data-splitout=""none""
                    data-responsive_offset=""on""
                    style=""z-index: 5; white-space: normal;"">
                    Fasilitas belajar lengkap
                </div>
                <!-- LAYER NR. 2 -->
                <div class=""tp-caption captionButtonlink""
                    id=""slide-400-layer-3""
                    data-x=""['left','left','left','left']"" data-hoffset=""['85','85','85','85']""
                    data-y=""['top','top','top','top']"" data-voffset=""['355','355','355','355']""
                    data-width=""['auto','auto','auto','auto']""
                    data-height=""['auto','auto','auto','auto']""
                    data-transform_idle=""o:1;""
                    data-transform_in=""x:right;s:2000;e:Power4.easeInOut;""
                    data-transform_out=""s:1000;e:Power2.easeInOut;s:1000;e:Power2.easeInOut;""
                    data-start=""700""
                    data-splitin=""none""
                    data-splitout=""none""
                    data-responsive_offset=""on""
                    style=""z-index: 6; white-space: nowrap;""><a href=""#"" class=""btn btn-primary btn-icon"">Learn more <i class=""fa fa-link""></i></a>
                </div>
                <div class=""tp-caption""
                    id=""slide-400-layer-4""
                    data-x=""['right','right','right','right']"" data-hoffset=""['200','200','150','200']""
                    data-y=""['bottom','bottom','bottom','bottom']"" data-voffset=""['0','0','0','0']""
                    data-transform_idle=""o:1;""
                    data-transform_in=""y:[100%];z:0;rX:0deg;rY:0;rZ:0;sX:1;sY:1;skX:0;skY:0;s:1500;e:Power3.easeInOut;""
                    data-transform_out=""y:[100%];s:1000;s:1000;""
                    data-start=""2500""
                    data-splitin=""none""
                    data-splitout=""none""
                    data-responsive_offset=""on""
                    style=""z-index: 6; white-space: nowrap;"">
                    <img src=""<?php echo $this->common->theme_link(); ?>img/slider/revolution/fitur01.png"" class=""img-Construction"" width=""400"" alt="""">
                </div>
            </li>
            <li data-transition=""slideremovedown"">
                <!-- MAIN IMAGE -->
                <img src=""<?php echo $this->common->theme_link(); ?>img/slider/revolution/slider03.jpg""  alt=""""  width=""1920"" height=""600"">
                <!-- LAYER NR. 1 -->
                <div class=""tp-caption captionHeadline3 text-shadow""
                    id=""slide-51-layer-1""
                    data-x=""['left','left','left','left']"" data-hoffset=""['80','80','80','80']""
                    data-y=""['top','top','top','top']"" data-voffset=""['180','180','180','180']""
                    data-width=""700""
                    data-height=""133""
                    data-whitespace=""normal""
                    data-transform_idle=""o:1;""
                    data-transform_in=""y:[100%];z:0;rX:0deg;rY:0;rZ:0;sX:1;sY:1;skX:0;skY:0;s:1500;e:Power3.easeInOut;""
                    data-transform_out=""y:[100%];s:1000;s:1000;""
                    data-mask_in=""x:0px;y:0px;s:inherit;e:inherit;""
                    data-mask_out=""x:inherit;y:inherit;s:inherit;e:inherit;""
                    data-start=""500""
                    data-splitin=""none""
                    data-splitout=""none""
                    data-responsive_offset=""on""
                    style=""z-index: 5; white-space: normal;"">
                    Agen Langsung Cruiseline
                </div>
                <!-- LAYER NR. 2 -->
                <div class=""tp-caption captionButtonlink""
                    id=""slide-400-layer-3""
                    data-x=""['left','left','left','left']"" data-hoffset=""['85','85','85','85']""
                    data-y=""['top','top','top','top']"" data-voffset=""['355','355','355','355']""
                    data-width=""['auto','auto','auto','auto']""
                    data-height=""['auto','auto','auto','auto']""
                    data-transform_idle=""o:1;""
                    data-transform_in=""x:right;s:2000;e:Power4.easeInOut;""
                    data-transform_out=""s:1000;e:Power2.easeInOut;s:1000;e:Power2.easeInOut;""
                    data-start=""700""
                    data-splitin=""none""
                    data-splitout=""none""
                    data-responsive_offset=""on""
                    style=""z-index: 6; white-space: nowrap;""><a href=""#"" class=""btn btn-primary btn-icon"">Learn more <i class=""fa fa-link""></i></a>
                </div>
                <div class=""tp-caption""
                    id=""slide-400-layer-4""
                    data-x=""['right','right','right','right']"" data-hoffset=""['200','200','150','200']""
                    data-y=""['bottom','bottom','bottom','bottom']"" data-voffset=""['0','0','0','0']""
                    data-transform_idle=""o:1;""
                    data-transform_in=""y:[100%];z:0;rX:0deg;rY:0;rZ:0;sX:1;sY:1;skX:0;skY:0;s:1500;e:Power3.easeInOut;""
                    data-transform_out=""y:[100%];s:1000;s:1000;""
                    data-start=""2500""
                    data-splitin=""none""
                    data-splitout=""none""
                    data-responsive_offset=""on""
                    style=""z-index: 6; white-space: nowrap;"">
                    <img src=""<?php echo $this->common->theme_link(); ?>img/slider/revolution/fitur02.png"" class=""img-Construction"" width=""400"" alt="""">
                </div>
            </li>

        </ul>
    </div><!-- END REVOLUTION SLIDER -->
</div>
<!-- END OF SLIDER WRAPPER -->

<!-- Start contain wrapp -->
<div class=""contain-wrapp gray-container padding-clear margin-mintop85 feature-Construction"">
    <div class=""container"">
        <div class=""icon-wrapp"">
            <div class=""icon-boxline"">
                <i class=""fa fa-home fa-3x fa-primary""></i>
                <h5>Lulusan Dijamin Siap Kerja</h5>
                <p>
                    Dengan dididik dan dilatih oleh instruktur berpengalaman luas di dalam dan luar negeri serta didukung oleh sarana yang lengkap serya kurikulum yang up to date dalam menjamin lulusan bosssignalfx siap kerja.
                </p>
            </div>

            <div class=""icon-boxline"">
                <i class=""fa fa-wrench fa-3x fa-primary""></i>
                <h5>Recruitmen Supporting Cruiseline</h5>
                <p>
                Poltenkas Denpasar adalah salah satu kampus yang ditunjuk sebagai Rekruitmen Supporting Partner untuk Royal Carribean Cruiseline, Carnival Cruiseline, dan MSC Cruiseline.
                </p>
            </div>

            <div class=""icon-boxline"">
                <i class=""fa fa-group fa-3x fa-primary""></i>
                <h5>Pendidikan Berkualitas dengan Harga Terjangkau</h5>
                <p>
                Dengan biaya kuliah yang terjangkau dan transparan. bosssignalfx mampu memberikan pendidikan bermutu tinggi dan tambahan keahlian seperti Fruit Carving, Bar Flair, Barista, Winecology, Banquet Service, Pastry Bakery, Event Organizer, E-Commerce.
                </p>
            </div>
        </div>
    </div>
</div>
<!-- End contain wrapp -->

<div class=""clearfix""></div>

<!-- Start contain wrapp -->
<div class=""contain-wrapp gray-container padding-bot40"">
<div class=""container"">
  <div class=""row"">
    <div class=""col-md-8 col-md-offset-2"">
      <div class=""section-heading"">
        <h3>Build Your Future with Us!</h3>
        <p>Doctus salutatus est ea, postea doming veritus in nec, sanctus fierent antiopam no pro</p>
        <i class=""fa fa-rocket""></i>
      </div>
    </div>
  </div>
  <div class=""row marginbot30"">
    <div class=""col-md-8 col-md-offset-2 text-center"">
      <p>
      Quod assum persecuti ne eum. Et eam paulo menandri dissentiet. Mei eu altera offendit accusamus. Mel te sint verear deseruisse, cu graece disputando quo. Zril putent mel et, eam quot accusam ea. Quo voluptatibus signiferumque te, in partem argumentum honestatis duo.
      </p>
      <p><a href=""#"" class=""btn btn-default"">View our profile</a> <a href=""#"" class=""btn btn-primary"">View our services</a></p>
    </div>
  </div>
  <div class=""row"">
    <div class=""col-md-10 col-md-offset-1 text-center"">
      <img src=""<?php echo $this->common->theme_link(); ?>img/group.png"" class=""img-responsive"" alt="""" />
      <div class=""divider margintop-clear""></div>
    </div>
  </div>
  <div class=""row"">
    <div class=""col-md-3 col-sm-6"">
      <div class=""col-icon centered"">
        <i class=""fa fa-tablet fa-2x icon-circle icon-bordered""></i>
        <h5>Responsive</h5>
        <p>
        Cu nec salutandi voluptat teros definitionem ad ius, ut eam unumiunanios.
        </p>
      </div>
    </div>
    <div class=""col-md-3 col-sm-6"">
      <div class=""col-icon centered"">
        <i class=""fa fa-magic fa-2x icon-circle icon-bordered""></i>
        <h5>Clean</h5>
        <p>
        Cu nec salutandi voluptat teros definitionem ad ius, ut eam unumiunanios.
        </p>
      </div>
    </div>
    <div class=""col-md-3 col-sm-6"">
      <div class=""col-icon centered"">
        <i class=""fa fa-flask fa-2x icon-circle icon-bordered""></i>
        <h5>Bootstrap3</h5>
        <p>
        Cu nec salutandi voluptat teros definitionem ad ius, ut eam unumiunanios.
        </p>
      </div>
    </div>
    <div class=""col-md-3 col-sm-6"">
      <div class=""col-icon centered"">
        <i class=""fa fa-code fa-2x icon-circle icon-bordered""></i>
        <h5>Valid code</h5>
        <p>
        Cu nec salutandi voluptat teros definitionem ad ius, ut eam unumiunanios.
        </p>
      </div>
    </div>
  </div>
</div>
</div>
<!-- End contain wrapp -->

<div class=""clearfix""></div>

<!-- Start contain wrapp -->
<div id=""portfolio"" class=""contain-wrapp paddingbot-clear"">
<div class=""container"">
  <div class=""row"">
    <div class=""col-md-8 col-md-offset-2"">
      <div class=""section-heading"">
        <h3>Galeri Kami</h3>
        <p>Adhuc doming placerat sea ut, graeci perfecto scriptorem nam</p>
        <i class=""fa fa-image""></i>
      </div>
    </div>
  </div>
  <div class=""row"">
    <div class=""col-md-12"">
      <!-- Start gallery filter  -->
      <ul class=""filter-items"">
        <li><a href=""#"" data-filter="""" class=""active"">All</a></li>
        <li><a href=""#"" data-filter=""web"">Kampus Activity</a></li>
        <li><a href=""#"" data-filter=""graphic"">Fasilitas</a></li>
        <li><a href=""#"" data-filter=""logo"">Belajar Mengajar</a></li>
      </ul>
      <!-- End gallery filter -->
    </div>
  </div>
</div>
<!-- Start Images Gallery -->
<div class=""fullwidth"">
  <div id=""gallery"" class=""masonry gallery"">
    <div class=""grid-sizer col-md-3 col-sm-6 col-xs-6""></div>
    <!-- Start Gallery 01 -->
    <div data-filter=""web"" class=""grid-item col-md-3 col-sm-6 col-xs-6"">
      <div class=""img-wrapper"">
        <div class=""img-caption capZoomIn"">
          <a href=""img/gallery/zoom980x980.jpg"" data-pretty=""prettyPhoto"" class=""zoomer""><i class=""fa fa-search""></i></a>
          <h5><a href=""portfolio-detail.html"">Vituperatoribus</a></h5>
          <a href=""#"" class=""img-categorie"">Web design</a>
        </div>
        <img src=""<?php echo $this->common->theme_link(); ?>img/gallery/380x380/img13.jpg"" class=""img-fullwidth"" alt="""" />
      </div>
    </div>
    <!-- End Gallery 01 -->

    <!-- Star Gallery 02 -->
    <div data-filter=""graphic"" class=""grid-item col-md-3 col-sm-6 col-xs-6"">
      <div class=""img-wrapper"">
        <div class=""img-caption capZoomIn"">
          <a href=""img/gallery/zoom980x980.jpg"" data-pretty=""prettyPhoto"" class=""zoomer""><i class=""fa fa-search""></i></a>
          <h5><a href=""portfolio-detail.html"">Vituperatoribus</a></h5>
          <a href=""#"" class=""img-categorie"">Web design</a>
        </div>
        <img src=""<?php echo $this->common->theme_link(); ?>img/gallery/380x380/img14.jpg"" class=""img-fullwidth"" alt="""" />
      </div>
    </div>
    <!-- End Gallery 02 -->

    <!-- Start Gallery 03 -->
    <div data-filter=""app"" class=""grid-item col-md-3 col-sm-6 col-xs-6"">
      <div class=""img-wrapper"">
        <div class=""img-caption capZoomIn"">
          <a href=""img/gallery/zoom980x980.jpg"" data-pretty=""prettyPhoto"" class=""zoomer""><i class=""fa fa-search""></i></a>
          <h5><a href=""portfolio-detail.html"">Persequeris</a></h5>
          <a href=""#"" class=""img-categorie"">App design</a>
        </div>
        <img src=""<?php echo $this->common->theme_link(); ?>img/gallery/380x380/img15.jpg"" class=""img-fullwidth"" alt="""" />
      </div>
    </div>
    <!-- End Gallery 03 -->

    <!-- Start Gallery 04 -->
    <div data-filter=""logo"" class=""grid-item col-md-3 col-sm-6 col-xs-6"">
      <div class=""img-wrapper"">
        <div class=""img-caption capZoomIn"">
          <a href=""img/gallery/zoom980x980.jpg"" data-pretty=""prettyPhoto"" class=""zoomer""><i class=""fa fa-search""></i></a>
          <h5><a href=""portfolio-detail.html"">An ancillae</a></h5>
          <a href=""#"" class=""img-categorie"">logo design</a>
        </div>
        <img src=""<?php echo $this->common->theme_link(); ?>img/gallery/380x380/img16.jpg"" class=""img-fullwidth"" alt="""" />
      </div>
    </div>
    <!-- End Gallery 04 -->

    <!-- Start Gallery 05 -->
    <div data-filter=""logo"" class=""grid-item col-md-3 col-sm-6 col-xs-6"">
      <div class=""img-wrapper"">
        <div class=""img-caption capZoomIn"">
          <a href=""img/gallery/zoom980x980.jpg"" data-pretty=""prettyPhoto"" class=""zoomer""><i class=""fa fa-search""></i></a>
          <h5><a href=""portfolio-detail.html"">Viris copiosae</a></h5>
          <a href=""#"" class=""img-categorie"">logo design</a>
        </div>
        <img src=""<?php echo $this->common->theme_link(); ?>img/gallery/380x380/img17.jpg"" class=""img-fullwidth"" alt="""" />
      </div>
    </div>
    <!-- End Gallery 05 -->

    <!-- Start Gallery 06 -->
    <div data-filter=""web"" class=""grid-item col-md-3 col-sm-6 col-xs-6"">
      <div class=""img-wrapper"">
        <div class=""img-caption capZoomIn"">
          <a href=""img/gallery/zoom980x980.jpg"" data-pretty=""prettyPhoto"" class=""zoomer""><i class=""fa fa-search""></i></a>
          <h5><a href=""portfolio-detail.html"">Reprimique</a></h5>
          <a href=""#"" class=""img-categorie"">Web design</a>
        </div>
        <img src=""<?php echo $this->common->theme_link(); ?>img/gallery/380x380/img18.jpg"" class=""img-fullwidth"" alt="""" />
      </div>
    </div>
    <!-- End Gallery 06 -->

    <!-- Start Gallery 07 -->
    <div data-filter=""graphic"" class=""grid-item col-md-3 col-sm-6 col-xs-6"">
      <div class=""img-wrapper"">
        <div class=""img-caption capZoomIn"">
          <a href=""img/gallery/zoom980x980.jpg"" data-pretty=""prettyPhoto"" class=""zoomer""><i class=""fa fa-search""></i></a>
          <h5><a href=""portfolio-detail.html"">Simul labitur</a></h5>
          <a href=""#"" class=""img-categorie"">Graphic design</a>
        </div>
        <img src=""<?php echo $this->common->theme_link(); ?>img/gallery/380x380/img19.jpg"" class=""img-fullwidth"" alt="""" />
      </div>
    </div>
    <!-- End Gallery 07 -->

    <!-- Start Gallery 08 -->
    <div data-filter=""app"" class=""grid-item col-md-3 col-sm-6 col-xs-6"">
      <div class=""img-wrapper"">
        <div class=""img-caption capZoomIn"">
          <a href=""img/gallery/zoom980x980.jpg"" data-pretty=""prettyPhoto"" class=""zoomer""><i class=""fa fa-search""></i></a>
          <h5><a href=""portfolio-detail.html"">Consetetur</a></h5>
          <a href=""#"" class=""img-categorie"">App design</a>
        </div>
        <img src=""<?php echo $this->common->theme_link(); ?>img/gallery/380x380/img20.jpg"" class=""img-fullwidth"" alt="""" />
      </div>
    </div>
    <!-- End Gallery 08 -->
  </div>
  <div class=""row"">
    <div class=""col-md-12"">
      <a href=""portfolio-alt1.html"" class=""btn btn-primary btn-lg btn-block"">View more Gallery</a>
    </div>
  </div>
</div>
<!-- End Images Gallery -->

<!-- End contain wrapp -->

<div class=""clearfix""></div>

<!-- Start parallax -->
<div class=""parallax parallax-two bg3"">
<div class=""parallax-container padding-bot30"">
  <div class=""container"">
    <div class=""row"">
      <div class=""col-md-8 col-md-offset-2 owl-column-wrapp"">
        <div id=""testimoni"" class=""owl-carousel"">
          <div class=""item"">
            <div class=""testimoni-single"">
              <blockquote class=""centered"">
              Kemampuan Alumni bosssignalfx Dalam Bekerja Tidak Perlu Diragukan Lagi Karena Selain Cekatan Juga Fast Learner, Saya Mencari Staf Yang Seperti Itu Dan Itulah Yang Dibutuhkan Industri Saat Ini.
            </blockquote>
              <span class=""block""><a href=""#"">Tusan Aryasa</a> - Housekeeper Estate Como Shambhala Executive </span>
              <img src=""<?php echo $this->common->theme_link(); ?>img/testimoni/tusan.jpg"" class=""img-circle testimoni-avatar"" alt="""" />
            </div>
          </div>
          <div class=""item"">
            <div class=""testimoni-single"">
              <blockquote class=""centered"">
                Saya Merekomendasi bosssignalfx Sebagai Tempat Anda Kuliah Perhotelan Karena Terbukti Dari Mahasiswa Yang On The Job Training Di Tempat Kami Menunjukkan Sikap Yang Loyal & Hardworker.
              </blockquote>
              <span class=""block""><a href=""#"">Sukarmajaya</a> - Executive Chef The Villas, Seminyak </span>
              <img src=""<?php echo $this->common->theme_link(); ?>img/testimoni/sukarmajaya.jpg"" class=""img-circle testimoni-avatar"" alt="""" />
            </div>
          </div>
          <div class=""item"">
            <div class=""testimoni-single"">
              <blockquote class=""centered"">
                Dari Berbagai Kampus Yang Mahasiswanya On The Job Trainng Di Tempat Kami bosssignalfx Selalu Memberikan Mahasiswa Yang Terbaik Dalam Hal Disiplin & Teamwork. Thank’s bosssignalfx.

              </blockquote>
              <span class=""block""><a href=""#"">Ni Made Restiti</a> - Personnel Manager UN'S Hotel & Restaurant,  Legian - Kuta</span>
              <img src=""<?php echo $this->common->theme_link(); ?>img/testimoni/restiti.jpg"" class=""img-circle testimoni-avatar"" alt="""" />
            </div>
          </div>
          <div class=""item"">
            <div class=""testimoni-single"">
              <blockquote class=""centered"">
              Saya Ucapkan Terima Kasih Yang Banyak Kepada bosssignalfx Yang Telah  Memberikan Tenaga Training  Handal Dan Cepat Beradaptasi Dengan Pola Kerja High Speed Di Beach Club Kami.  </blockquote>
              <span class=""block""><a href=""#""> I Made Dwi Artha Pradnya</a> - Asst. Restaurant Manager Potato Head Beach Club Seminyak- Kuta</span>
              <img src=""<?php echo $this->common->theme_link(); ?>img/testimoni/dwi.jpg"" class=""img-circle testimoni-avatar"" alt="""" />
            </div>
          </div>
          <div class=""item"">
            <div class=""testimoni-single"">
              <blockquote class=""centered"">
              bosssignalfx Selalu Mensupport Untuk Tenaga Training Di Hotel Kami, Kami Pilih bosssignalfx Karena Tenaganya Siap Pakai, Disiplin & Memiliki Positive Attitude.  </blockquote>
              <span class=""block""><a href=""#"">I Made Wirta</a> - Executive  Housekeeper Amarterra Villas Bali  By Accor, Nusa Dua</span>
              <img src=""<?php echo $this->common->theme_link(); ?>img/testimoni/wirta.jpg"" class=""img-circle testimoni-avatar"" alt="""" />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
</div>
<!-- End parallax -->

<div class=""clearfix""></div>
<!-- Start cta primary -->
<div class=""cta-wrapper cta-primary"">
<div class=""container"">
  <div class=""row"">
    <div class=""col-md-12"">
      <h4>Ayo Daftar Sekarang</h4>
      <p>Mari bergabung dengan ratusan alumni lain.</p>
      <a class=""btn"" href=""#"">Daftar Sekarang!</a>
    </div>
  </div>
</div>
</div>
<!-- End cta primary -->

<div class=""clearfix""></div>
",PHP
"<?php

namespace SCL\ZF2\Currency\Form\Fieldset;

use Zend\Form\Fieldset;

class TaxedPrice extends Fieldset
{
    const AMOUNT_LABEL = 'Amount';
    const TAX_LABEL    = 'Tax';

    public function init()
    {
        $this->add([
            'name' => 'amount',
            'type' => 'text',
            'options' => [
                'label' => self::AMOUNT_LABEL,
            ]
        ]);

        $this->add([
            'name' => 'tax',
            'type' => 'text',
            'options' => [
                'label' => self::TAX_LABEL,
            ]
        ]);
    }
}
",PHP
"<?php

declare(strict_types=1);

namespace DiContainerBenchmarks\Fixture\C;

class FixtureC846
{
    public function __construct(FixtureC845 $dependency)
    {
    }
}
",PHP
"<?php

namespace App;

use Illuminate\Database\Eloquent\Model;

class Department extends Model
{
    protected $fillable =['name'];
}
",PHP
"<?php

/*
 * This file is part of the Beloop package.
 *
 * Copyright (c) 2016 AHDO Studio B.V.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * Feel free to edit as you please, and have fun.
 *
 * @author Arkaitz Garro <arkaitz.garro@gmail.com>
 */

namespace Beloop\Bundle\InstagramBundle;

use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\HttpKernel\KernelInterface;

use Beloop\Bundle\CoreBundle\Abstracts\AbstractBundle;
use Beloop\Bundle\InstagramBundle\CompilerPass\MappingCompilerPass;
use Beloop\Bundle\InstagramBundle\DependencyInjection\BeloopInstagramExtension;

/**
 * BeloopInstagramBundle Bundle.
 */
class BeloopInstagramBundle extends AbstractBundle
{
    /**
     * @param ContainerBuilder $container
     */
    public function build(ContainerBuilder $container)
    {
        parent::build($container);

        $container->addCompilerPass(new MappingCompilerPass());
    }

    /**
     * Returns the bundle's container extension.
     *
     * @return ExtensionInterface The container extension
     */
    public function getContainerExtension()
    {
        return new BeloopInstagramExtension();
    }

    /**
     * Create instance of current bundle, and return dependent bundle namespaces.
     *
     * @param KernelInterface $kernel
     * @return array Bundle instances
     */
    public static function getBundleDependencies(KernelInterface $kernel)
    {
        return [
            'Beloop\Bundle\CoreBundle\BeloopCoreBundle',
            'Beloop\Bundle\CoreBundle\BeloopUserBundle',
        ];
    }
}
",PHP
"<?php

namespace MyApplication\Navigation\Navigation;

interface NavigationControlFactory
{
    /**
     * @return NavigationControl
     */
    function create();
}
",PHP
"<?php

declare(strict_types=1);

/**
 * This file is part of phpDocumentor.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @link http://phpdoc.org
 */

namespace phpDocumentor\Descriptor;

use Mockery\Adapter\Phpunit\MockeryTestCase;
use stdClass;

/**
 * Tests the functionality for the Collection class.
 *
 * @coversDefaultClass \phpDocumentor\Descriptor\Collection
 */
final class CollectionTest extends MockeryTestCase
{
    /** @var Collection $fixture */
    private $fixture;

    /**
     * Creates a new (empty) fixture object.
     */
    protected function setUp() : void
    {
        $this->fixture = new Collection();
    }

    /**
     * @covers ::__construct
     */
    public function testInitialize() : void
    {
        $fixture = new Collection();

        $this->assertEmpty($fixture->getAll());
    }

    /**
     * @covers ::__construct
     */
    public function testInitializeWithExistingArray() : void
    {
        $expected = [1, 2];
        $fixture = new Collection($expected);

        $this->assertEquals($expected, $fixture->getAll());
    }

    /**
     * @covers ::add
     */
    public function testAddNewItem() : void
    {
        $expected = ['abc'];
        $expectedSecondRun = ['abc', 'def'];

        $this->fixture->add('abc');

        $this->assertEquals($expected, $this->fixture->getAll());

        $this->fixture->add('def');

        $this->assertEquals($expectedSecondRun, $this->fixture->getAll());
    }

    /**
     * @covers ::set
     * @covers ::offsetSet
     */
    public function testSetItemsWithKey() : void
    {
        $expected = ['z' => 'abc'];
        $expectedSecondRun = ['z' => 'abc', 'y' => 'def'];

        $this->assertEquals([], $this->fixture->getAll());

        $this->fixture->set('z', 'abc');

        $this->assertEquals($expected, $this->fixture->getAll());

        $this->fixture->set('y', 'def');

        $this->assertEquals($expectedSecondRun, $this->fixture->getAll());
    }

    /**
     * @covers ::set
     */
    public function testSetItemsWithEmptyKeyShouldThrowException() : void
    {
        $this->expectException('InvalidArgumentException');
        $this->fixture->set('', 'abc');
    }

    /**
     * @covers ::offsetSet
     */
    public function testSetItemsUsingOffsetSetWithEmptyKeyShouldThrowException() : void
    {
        $this->expectException('InvalidArgumentException');
        $this->fixture->offsetSet('', 'abc');
    }

    /**
     * @covers ::get
     * @covers ::__get
     * @covers ::offsetGet
     */
    public function testRetrievalOfItems() : void
    {
        $this->fixture['a'] = 'abc';
        $this->assertEquals('abc', $this->fixture->__get('a'));
        $this->assertEquals('abc', $this->fixture['a']);
        $this->assertEquals('abc', $this->fixture->get('a'));
        $this->assertCount(1, $this->fixture);

        $this->assertEquals('def', $this->fixture->fetch(1, 'def'));
        $this->assertCount(2, $this->fixture);
    }

    /**
     * @covers ::getAll
     */
    public function testRetrieveAllItems() : void
    {
        $this->fixture['a'] = 'abc';
        $this->assertSame(['a' => 'abc'], $this->fixture->getAll());
    }

    /**
     * @covers ::getIterator
     */
    public function testGetIterator() : void
    {
        $this->fixture['a'] = 'abc';
        $this->assertInstanceOf('ArrayIterator', $this->fixture->getIterator());
        $this->assertSame(['a' => 'abc'], $this->fixture->getIterator()->getArrayCopy());
    }

    /**
     * @covers ::count
     * @covers ::offsetUnset
     */
    public function testCountReturnsTheNumberOfElements() : void
    {
        $this->assertCount(0, $this->fixture);
        $this->assertEquals(0, $this->fixture->count());

        $this->fixture[0] = 'abc';

        $this->assertCount(1, $this->fixture);
        $this->assertEquals(1, $this->fixture->count());

        $this->fixture[1] = 'def';

        $this->assertCount(2, $this->fixture);
        $this->assertEquals(2, $this->fixture->count());

        unset($this->fixture[0]);

        $this->assertCount(1, $this->fixture);
        $this->assertEquals(1, $this->fixture->count());
    }

    /**
     * @covers ::clear
     */
    public function testClearingTheCollection() : void
    {
        $this->fixture[1] = 'a';
        $this->fixture[2] = 'b';

        $this->assertCount(2, $this->fixture);

        $this->fixture->clear();

        $this->assertCount(0, $this->fixture);
    }

    /**
     * @covers ::offsetExists
     */
    public function testIfExistingElementsAreDetected() : void
    {
        $this->assertArrayNotHasKey(0, $this->fixture);
        $this->assertFalse($this->fixture->offsetExists(0));

        $this->fixture[0] = 'abc';

        $this->assertArrayHasKey(0, $this->fixture);
        $this->assertTrue($this->fixture->offsetExists(0));
    }

    /**
     * @covers ::merge
     */
    public function testIfAfterMergeCollectionContainsAllItems() : void
    {
        $expected = [0 => 'a', 1 => 'b', 2 => 'c'];
        $this->fixture[1] = 'a';
        $this->fixture[2] = 'b';

        $collection2 = new Collection();
        $collection2[4] = 'c';

        $result = $this->fixture->merge($collection2);

        $this->assertSame($expected, $result->getAll());
    }

    /**
     * @covers ::filter
     */
    public function testFilterReturnsOnlyInstancesOfCertainType() : void
    {
        $expected = [0 => new stdClass()];

        $this->fixture[0] = new stdClass();
        $this->fixture[1] = false;
        $this->fixture[2] = 'string';

        $result = $this->fixture->filter(stdClass::class)->getAll();

        $this->assertEquals($expected, $result);
    }
}
",PHP
"<?php

/**
 * Craft by Pixel & Tonic
 *
 * @package   Craft
 * @author    Pixel & Tonic, Inc.
 * @copyright Copyright (c) 2014, Pixel & Tonic, Inc.
 * @license   http://buildwithcraft.com/license Craft License Agreement
 * @link      http://buildwithcraft.com
 */

// Define path constants
defined('CRAFT_BASE_PATH')         || define('CRAFT_BASE_PATH', str_replace('\\', '/', realpath(dirname(__FILE__).'/../../')).'/');
defined('CRAFT_APP_PATH')          || define('CRAFT_APP_PATH',          CRAFT_BASE_PATH.'app/');
defined('CRAFT_CONFIG_PATH')       || define('CRAFT_CONFIG_PATH',       CRAFT_BASE_PATH.'config/');
defined('CRAFT_PLUGINS_PATH')      || define('CRAFT_PLUGINS_PATH',      CRAFT_BASE_PATH.'plugins/');
defined('CRAFT_STORAGE_PATH')      || define('CRAFT_STORAGE_PATH',      CRAFT_BASE_PATH.'storage/');
defined('CRAFT_TEMPLATES_PATH')    || define('CRAFT_TEMPLATES_PATH',    CRAFT_BASE_PATH.'templates/');
defined('CRAFT_TRANSLATIONS_PATH') || define('CRAFT_TRANSLATIONS_PATH', CRAFT_BASE_PATH.'translations/');
defined('CRAFT_ENVIRONMENT')       || define('CRAFT_ENVIRONMENT',       'craft.dev');

define('YII_ENABLE_EXCEPTION_HANDLER', false);
define('YII_ENABLE_ERROR_HANDLER', false);
define('YII_DEBUG', true);


$_SERVER['DOCUMENT_ROOT']   = '/some/path/to/craft.dev';
$_SERVER['HTTP_HOST']       = 'craft.dev';
$_SERVER['HTTPS']           = 'off';
$_SERVER['PHP_SELF']        = '/index.php';
$_SERVER['REQUEST_URI']     = '/index.php';
$_SERVER['SERVER_PORT']     = 80;
$_SERVER['SCRIPT_FILENAME'] = '/some/path/to/craft.dev/index.php';
$_SERVER['SCRIPT_NAME']     = '/index.php';

function craft_createFolder($path)
{
	// Code borrowed from IOHelper...
	if (!is_dir($path))
	{
		$oldumask = umask(0);

		if (!mkdir($path, 0755, true))
		{
			exit('Tried to create a folder at '.$path.', but could not.');
		}

		// Because setting permission with mkdir is a crapshoot.
		chmod($path, 0755);
		umask($oldumask);
	}
}

function craft_ensureFolderIsReadable($path, $writableToo = false)
{
	$realPath = realpath($path);

	// !@file_exists('/.') is a workaround for the terrible is_executable()
	if ($realPath === false || !is_dir($realPath) || !@file_exists($realPath.'/.'))
	{
		exit (($realPath !== false ? $realPath : $path).' doesn\'t exist or isn\'t writable by PHP. Please fix that.');
	}

	if ($writableToo)
	{
		if (!is_writable($realPath))
		{
			exit ($realPath.' isn\'t writable by PHP. Please fix that.');
		}
	}
}

// Validate permissions on craft/config/ and craft/storage/
craft_ensureFolderIsReadable(CRAFT_CONFIG_PATH);
craft_ensureFolderIsReadable(CRAFT_STORAGE_PATH, true);

// Create the craft/storage/runtime/ folder if it doesn't already exist
craft_createFolder(CRAFT_STORAGE_PATH.'runtime/');
craft_ensureFolderIsReadable(CRAFT_STORAGE_PATH.'runtime/', true);

// change the following paths if necessary
$yiit   = CRAFT_APP_PATH.'framework/yiit.php';
$config = CRAFT_APP_PATH.'etc/config/test.php';

require_once($yiit);
require_once CRAFT_APP_PATH.'Craft.php';
require_once CRAFT_APP_PATH.'etc/web/WebApp.php';
require_once CRAFT_APP_PATH.'tests/TestApplication.php';

new Craft\TestApplication($config);
",PHP
"<?php

/*
 * This file is part of the Sonata project.
 *
 * (c) Thomas Rabaix <thomas.rabaix@sonata-project.org>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Sonata\MediaBundle\Tests\Validator;

use Sonata\MediaBundle\Provider\Pool;
use Sonata\MediaBundle\Validator\Constraints\ValidMediaFormat;
use Sonata\MediaBundle\Validator\FormatValidator;

class FormatValidatorTest extends \PHPUnit_Framework_TestCase
{
    public function testValidate()
    {
        $pool = new Pool('defaultContext');
        $pool->addContext('test', array(), array('format1' => array()));

        $gallery = $this->getMock('Sonata\MediaBundle\Model\GalleryInterface');
        $gallery->expects($this->once())->method('getDefaultFormat')->will($this->returnValue('format1'));
        $gallery->expects($this->once())->method('getContext')->will($this->returnValue('test'));

        // Prefer the Symfony 2.5+ API if available
        if (class_exists('Symfony\Component\Validator\Context\ExecutionContext')) {
            $contextClass = 'Symfony\Component\Validator\Context\ExecutionContext';
        } else {
            $contextClass = 'Symfony\Component\Validator\ExecutionContext';
        }

        $context = $this->getMock($contextClass, array(), array(), '', false);
        $context->expects($this->never())->method('addViolation');

        $validator = new FormatValidator($pool);
        $validator->initialize($context);

        $validator->validate($gallery, new ValidMediaFormat());
    }

    public function testValidateWithValidContext()
    {
        $pool = new Pool('defaultContext');
        $pool->addContext('test');

        $gallery = $this->getMock('Sonata\MediaBundle\Model\GalleryInterface');
        $gallery->expects($this->once())->method('getDefaultFormat')->will($this->returnValue('format1'));
        $gallery->expects($this->once())->method('getContext')->will($this->returnValue('test'));

        // Prefer the Symfony 2.5+ API if available
        if (class_exists('Symfony\Component\Validator\Context\ExecutionContext')) {
            $contextClass = 'Symfony\Component\Validator\Context\ExecutionContext';
        } else {
            $contextClass = 'Symfony\Component\Validator\ExecutionContext';
        }

        $context = $this->getMock($contextClass, array(), array(), '', false);
        $context->expects($this->once())->method('addViolation');

        $validator = new FormatValidator($pool);
        $validator->initialize($context);

        $validator->validate($gallery, new ValidMediaFormat());
    }
}
",PHP
"<?php

/**
 * This file is part of gh-dashboard.
 *
 * (c) Daniel Londero <daniel.londero@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

function includeIfExists($file)
{
    return file_exists($file) ? include $file : false;
}

if ((!$loader = includeIfExists(__DIR__.'/../vendor/autoload.php')) && (!$loader = includeIfExists(__DIR__.'/../../../autoload.php'))) {
    echo ""Cannot find an autoload.php file, have you executed composer install command?"" . PHP_EOL;
    exit(1);
}

return $loader;
",PHP
"<?php

use Illuminate\Http\Request;

/*
|--------------------------------------------------------------------------
| API Routes
|--------------------------------------------------------------------------
|
| Here is where you can register API routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| is assigned the ""api"" middleware group. Enjoy building your API!
|
*/

//Route::middleware('auth:api')->get('/user', function (Request $request) {
//    return $request->user();
//});

//Route::get('wechat/index', 'WechatController@index');
",PHP
"<?php
session_start();
require_once('../php/conexion.php');
$conect = connect::conn();
$user = $_SESSION['usuario'];
if($_SERVER['REQUEST_METHOD'] == 'POST'){
   $sql = ""insert into cotidiano (dir_origen,dir_destino,semana,hora,usuario,estado) values (?,?,?,?,?,?);"";
    $favo = sqlsrv_query($conect,$sql,array($_POST['Dir_o'],$_POST['Dir_d'],$_POST['semana'],$_POST['reloj'],$user['usuario'],1));
    if($favo){
        echo 'Inserccion correcta';
    }
    else{
        if( ($errors = sqlsrv_errors() ) != null) {
            foreach( $errors as $error ) {
                echo ""SQLSTATE: "".$error[ 'SQLSTATE'].""<br />"";
                echo ""code: "".$error[ 'code'].""<br />"";
                echo ""message: "".$error[ 'message'].""<br />"";
            }
        }
    }
}else{
    print ""aqui la estabas cagando"";
}
?>
",PHP
"<?php

namespace GFire\InvoiceBundle\Entity\Interfaces;

interface InvoiceInterface{

}",PHP
"<?php

namespace Zycon42\Security\Application;

use Nette;
use Nette\Application\Request;
use Nette\Reflection\ClassType;
use Nette\Reflection\Method;
use Symfony\Component\ExpressionLanguage\Expression;

class PresenterRequirementsChecker extends Nette\Object {

    /**
     * @var ExpressionEvaluator
     */
    private $expressionEvaluator;

    private $failedExpression;

    public function __construct(ExpressionEvaluator $expressionEvaluator) {
        $this->expressionEvaluator = $expressionEvaluator;
    }

    /**
     * @param ClassType|Method $element
     * @param Request $request
     * @return bool
     * @throws \InvalidArgumentException
     */
    public function checkRequirement($element, Request $request) {
        if ($element instanceof ClassType) {
            $expressions = $this->getClassExpressionsToEvaluate($element);
        } else if ($element instanceof Method) {
            $expressions = $this->getMethodExpressionsToEvaluate($element);
        } else
            throw new \InvalidArgumentException(""Argument 'element' must be instanceof Nette\\Reflection\\ClassType or Nette\\Reflection\\Method"");

        if (!empty($expressions)) {
            foreach ($expressions as $expression) {
                $result = $this->expressionEvaluator->evaluate($expression, $request);
                if (!$result) {
                    $this->failedExpression = $expression;
                    return false;
                }
            }
        }
        return true;
    }

    public function getFailedExpression() {
        return $this->failedExpression;
    }

    private function getClassExpressionsToEvaluate(ClassType $classType) {
        $expressions = [];
        $this->walkClassHierarchy($classType, $expressions);
        return $expressions;
    }

    private function walkClassHierarchy(ClassType $classType, &$expressions) {
        $parentClass = $classType->getParentClass();
        if ($parentClass)
            $this->walkClassHierarchy($parentClass, $expressions);

        $annotation = $classType->getAnnotation('Security');
        if ($annotation) {
            if (!is_string($annotation)) {
                throw new \InvalidArgumentException('Security annotation must be simple string with expression.');
            }

            $expressions[] = new Expression($annotation);
        }
    }

    private function getMethodExpressionsToEvaluate(Method $method) {
        $annotation = $method->getAnnotation('Security');
        if ($annotation) {
            if (!is_string($annotation)) {
                throw new \InvalidArgumentException('Security annotation must be simple string with expression.');
            }
            return [new Expression($annotation)];
        }
        return [];
    }
}
",PHP
"<?php

/*
 * This file is part of the Black package.
 *
 * (c) Alexandre Balmes <albalmes@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Black\Bundle\MenuBundle\Model;

/**
 * Class MenuInterface
 *
 * @package Black\Bundle\MenuBundle\Model
 * @author  Alexandre Balmes <albalmes@gmail.com>
 * @license http://opensource.org/licenses/mit-license.php MIT
 */
interface MenuInterface
{
    /**
     * @return mixed
     */
    public function getId();

    /**
     * @return mixed
     */
    public function getName();

    /**
     * @return mixed
     */
    public function getSlug();

    /**
     * @return mixed
     */
    public function getDescription();

    /**
     * @return mixed
     */
    public function getItems();
}
",PHP
"<?php
require_once __DIR__.'/../../../vendor/autoload.php';
require 'templates/base.php';
session_start();

$client = new Google_Client();
$client->setApplicationName(""Slide-Summarizer"");
if ($credentials_file = getOAuthCredentialsFile()) {
    // 	set the location manually
    $client->setAuthConfig($credentials_file);
    $credentials_json = json_decode(file_get_contents($credentials_file));
}
else {
    echo missingServiceAccountDetailsWarning();
    return;
}
$client->setRedirectUri('https://' . $_SERVER['HTTP_HOST'] . '/oauth2callback');
$client->addScope(Google_Service_Drive::DRIVE_READONLY);

if (! isset($_GET['code'])) {
    $auth_url = $client->createAuthUrl();
    header('Location: ' . filter_var($auth_url, FILTER_SANITIZE_URL));
} else {
    $client->authenticate($_GET['code']);
    $_SESSION['access_token'] = $client->getAccessToken();
    $redirect_uri = 'https://' . $_SERVER['HTTP_HOST'] . '/';
    header('Location: ' . filter_var($redirect_uri, FILTER_SANITIZE_URL));
}",PHP
"<?php

ini_set('display_errors', 1);
ini_set('error_reporting', -1);

$loader = require __DIR__ . '/../vendor/autoload.php';
$loader->add('ThisPageCannotBeFound', __DIR__);
",PHP
"<?php

namespace Koalamon\IntegrationBundle\Integration;

class Integration
{
    private $name;
    private $image;
    private $description;
    private $url;
    private $activeElements;
    private $totalElements;

    /**
     * Integration constructor.
     *
     * @param $name
     * @param $image
     * @param $description
     * @param $url
     */
    public function __construct($name, $image, $description, $url = null, $activeElements = null, $totalElements = null)
    {
        $this->name = $name;
        $this->image = $image;
        $this->description = $description;
        $this->url = $url;
        $this->activeElements = $activeElements;
        $this->totalElements = $totalElements;
    }

    /**
     * @return mixed
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * @return mixed
     */
    public function getImage()
    {
        return $this->image;
    }

    /**
     * @return mixed
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * @return mixed
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * @return null
     */
    public function getActiveElements()
    {
        return $this->activeElements;
    }

    /**
     * @return null
     */
    public function getTotalElements()
    {
        return $this->totalElements;
    }

    /**
     * @param null $activeElements
     */
    public function setActiveElements($activeElements)
    {
        $this->activeElements = $activeElements;
    }

    public function setUrl($url)
    {
        $this->url = $url;
    }
}",PHP
"<?php

/*
 * This file is part of the MopaBootstrapBundle.
 *
 * (c) Philipp A. Mohrenweiser <phiamo@googlemail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Mopa\Bundle\BootstrapBundle\Menu\Factory;

use Knp\Menu\Factory\ExtensionInterface;
use Knp\Menu\ItemInterface;

/**
 * Extension for integrating Bootstrap Menus into KnpMenu.
 */
class MenuExtension implements ExtensionInterface
{
    /**
     * Builds a menu item based.
     *
     * @param ItemInterface $item
     * @param array         $options
     */
    public function buildItem(ItemInterface $item, array $options)
    {
        if ($options['navbar']) {
            $item->setChildrenAttribute('class', 'nav navbar-nav');
        }

        if ($options['pills']) {
            $item->setChildrenAttribute('class', 'nav nav-pills');
        }

        if ($options['stacked']) {
            $class = $item->getChildrenAttribute('class');
            $item->setChildrenAttribute('class', $class . ' nav-stacked');
        }

        if ($options['dropdown-header']) {
            $item
            ->setAttribute('role', 'presentation')
            ->setAttribute('class', 'dropdown-header')
            ->setUri(null);
        }

        if ($options['list-group']) {
            $item->setChildrenAttribute('class', 'list-group');
            $item->setAttribute('class', 'list-group-item');
        }

        if ($options['list-group-item']) {
            $item->setAttribute('class', 'list-group-item');
        }

        if ($options['dropdown']) {
            $item
                ->setUri('#')
                ->setAttribute('class', 'dropdown')
                ->setLinkAttribute('class', 'dropdown-toggle')
                ->setLinkAttribute('data-toggle', 'dropdown')
                ->setChildrenAttribute('class', 'dropdown-menu')
                ->setChildrenAttribute('role', 'menu');

            if ($options['caret']) {
                $item->setExtra('caret', 'true');
            }
        }

        if ($options['divider']) {
            $item
                ->setLabel('')
                ->setUri(null)
                ->setAttribute('role', 'presentation')
                ->setAttribute('class', 'divider');
        }

        if ($options['pull-right']) {
            $className = $options['navbar'] ? 'navbar-right' : 'pull-right';
            $class = $item->getChildrenAttribute('class', '');
            $item->setChildrenAttribute('class', $class . ' ' . $className);
        }

        if ($options['icon']) {
            $item->setExtra('icon', $options['icon']);
        }
    }

    /**
     * Builds the options for extension.
     *
     * @param array $options
     *
     * @return array $options
     */
    public function buildOptions(array $options)
    {
        return array_merge(array(
            'navbar' => false,
            'pills' => false,
            'stacked' => false,
            'dropdown-header' => false,
            'dropdown' => false,
            'list-group' => false,
            'list-group-item' => false,
            'caret' => false,
            'pull-right' => false,
            'icon' => false,
            'divider' => false,
        ), $options);
    }
}
",PHP
"<?php

/*
 * This file is part of the Integrated package.
 *
 * (c) e-Active B.V. <integrated@e-active.nl>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Integrated\Bundle\AssetBundle\Tests\Manager;

use Integrated\Bundle\AssetBundle\Manager\AssetManager;

/**
 * @author Ger Jan van den Bosch <gerjan@e-active.nl>
 */
class AssetManagerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var AssetManager
     */
    private $manager;

    /**
     */
    protected function setUp()
    {
        $this->manager = new AssetManager();
    }

    /**
     */
    public function testDuplicateFunction()
    {
        $this->manager->add('script.js');
        $this->manager->add('script2.js');
        $this->manager->add('script.js');

        $this->assertCount(2, $this->manager->getAssets());
    }

    /**
     */
    public function testInlineFunction()
    {
        $inline = 'html { color: red; }';

        $this->manager->add($inline, true);

        $asset = $this->manager->getAssets()[0];

        $this->assertTrue($asset->isInline());
        $this->assertEquals($inline, $asset->getContent());
    }

    /**
     */
    public function testExceptionFunction()
    {
        $this->setExpectedException('\InvalidArgumentException');

        $this->manager->add('script.js', false, 'invalid');
    }

    /**
     */
    public function testPrependFunction()
    {
        $this->manager->add('script2.js');
        $this->manager->add('script3.js', false, AssetManager::MODE_APPEND);
        $this->manager->add('script1.js', false, AssetManager::MODE_PREPEND);

        $assets = $this->manager->getAssets();

        $this->assertEquals('script1.js', $assets[0]->getContent());
        $this->assertEquals('script2.js', $assets[1]->getContent());
        $this->assertEquals('script3.js', $assets[2]->getContent());
    }
}
",PHP
"<!DOCTYPE html>
<!--[if IE 8]>          <html class=""ie ie8""> <![endif]-->
<!--[if IE 9]>          <html class=""ie ie9""> <![endif]-->
<!--[if gt IE 9]><!-->  <html> <!--<![endif]-->
<head>

    <!-- Basic -->
    <meta charset=""utf-8"">
    <title>VirUCA</title>       
    <meta name=""keywords"" content="""" />
    <meta name=""description"" content="""">
    <meta name=""author"" content="""">
    <!-- Mobile Metas -->
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <!-- Web Fonts  -->
    <link href=""http://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800%7CShadows+Into+Light"" rel=""stylesheet"" type=""text/css"">

    <!-- Libs CSS -->
    <link rel=""stylesheet"" href=""<?=base_url()?>vendor/bootstrap/css/bootstrap.css"">
    <link rel=""stylesheet"" href=""<?=base_url()?>vendor/font-awesome/css/font-awesome.css"">
    <link rel=""stylesheet"" href=""<?=base_url()?>vendor/owl-carousel/owl.carousel.css"" media=""screen"">
    <link rel=""stylesheet"" href=""<?=base_url()?>vendor/owl-carousel/owl.theme.css"" media=""screen"">
    <link rel=""stylesheet"" href=""<?=base_url()?>vendor/magnific-popup/magnific-popup.css"" media=""screen"">
    <link rel=""stylesheet"" href=""<?=base_url()?>vendor/isotope/jquery.isotope.css"" media=""screen"">
    <link rel=""stylesheet"" href=""<?=base_url()?>vendor/mediaelement/mediaelementplayer.css"" media=""screen"">
    <!-- Theme CSS -->
    <link rel=""stylesheet"" href=""<?=base_url()?>css/theme.css"">
    <link rel=""stylesheet"" href=""<?=base_url()?>css/theme-elements.css"">
    <link rel=""stylesheet"" href=""<?=base_url()?>css/theme-blog.css"">
    <link rel=""stylesheet"" href=""<?=base_url()?>css/theme-shop.css"">
    <link rel=""stylesheet"" href=""<?=base_url()?>css/theme-animate.css"">
    <link rel=""stylesheet"" href=""<?=base_url()?>css/panel.css?id=124"">
    <link rel=""stylesheet"" href=""<?=base_url()?>css/tooltip.css"">

    <!-- Responsive CSS -->
    <link rel=""stylesheet"" href=""<?=base_url()?>css/theme-responsive.css"" />

    <!-- Skin CSS -->
    <link rel=""stylesheet"" href=""<?=base_url()?>css/skins/default.css"">

    <!-- Custom CSS -->
    <link rel=""stylesheet"" href=""<?=base_url()?>css/custom.css"">
    <!-- Custom Loader -->
    <link rel=""stylesheet"" href=""<?=base_url()?>css/loader.css"">

    <!-- Libs -->
    <script src=""<?=base_url()?>vendor/jquery.js""></script>
        
    <!-- Custom JS -->
    <script src=""<?=base_url()?>js/custom.js""></script>


    <!-- Head Libs -->
    <script src=""<?=base_url()?>vendor/modernizr.js""></script>

    <!--[if IE]>
        <link rel=""stylesheet"" href=""css/ie.css"">
    <![endif]-->

    <!--[if lte IE 8]>
        <script src=""vendor/respond.js""></script>
    <![endif]-->
    <script type=""text/javascript"">
        function AddFicha(idDiv, Texto) {
            document.getElementById(idDiv).innerHTML += Texto;
        }
    </script>
</head>

<body>
    <div id=""preloader""><div id=""loader"">&nbsp;</div></div>

    <div class=""body"">
        <?php $this->load->view('menuj_view');?>
        <div role=""main"" class=""main"">       
            <div class=""container"">
               
                <!-- Errores de inserción. -->



                <?php if($this->session->flashdata('respuesta_ok')) { ?>
                     <div class=""modal"">
                        <div class=""ventana"">
                            <div class=""alert alert-success"">
                                <?php echo $this->session->flashdata('respuesta_ok');?>
                            </div>
                            <span class=""cerrar"">Cerrar</span>
                        </div>
                    </div>
                <?php } ?>

                <?php if($this->session->flashdata('respuesta_ko')) { ?>
                    <div class=""modal"">
                        <div class=""ventana"">
                            <div class=""alert alert-danger"">
                                <?php echo $this->session->flashdata('respuesta_ko'); ?>
                                <span class=""cerrar"">Cerrar</span>
                            </div>
                        </div>
                    </div>
                <?php } ?>
                <!-- Fin errores -->
                    
                <!-- Información de la partida -->
                <?php 
                    foreach ($partida as $jugador) {
                            $nJugadores = $jugador->nGrupos;
                            $iId_Partida = $jugador->iId;
                            $iTurno = $jugador->iTurno;
                            $iId_Panel = $jugador->iId_Panel;
                            $bFinalizada = $jugador->bFinalizada;
                        }
                ?>

                <?php if ($bFinalizada) {
                    echo ""<br><blockquote><strong>La partida ha finalizado</strong>. En la siguiente tabla puedes ver cómo han quedado los grupos</blockquote>"";
                    }
                ?>

                <div class=""featured-box featured-box-primary"">
                     <div class=""box-content"">
                        <?php
                            
                        echo ""<div>"";
                        // Hay que restablecer la partida.
                        foreach ($resumen as $equipo) {
                            echo ""<div style='float:left; padding-left:30px;'>"";
                            if ($equipo->iGrupo == $iTurno)
                                echo ""<span class='rojo'><b>Grupo "".$equipo->iGrupo.""</b></span><br>"";
                            else 
                                echo ""<span>Grupo "".$equipo->iGrupo.""</span><br>"";
                            echo ""<img src='"".base_url().""/assets/img/"".$equipo->iGrupo."".png' aling='center'><br>"";
                            if ($equipo->iCasilla == 0)
                                echo ""Inicio"";
                            else {
                                // Comprobamos si hay que poner las medallas y regalos.
                                echo ""<div style='padding-top:5px;''>"";
                                switch ($equipo->iPosJuego) {
                                    case '1':
                                        echo ""<img src='"".base_url().""/assets/img/gold.png' aling='center'><br>"";
                                        break;
                                    case '2':
                                        echo ""<img src='"".base_url().""/assets/img/silver.png' aling='center'><br>"";
                                        break;
                                    case '3':
                                        echo ""<img src='"".base_url().""/assets/img/bronze.png' aling='center'><br>"";
                                        break;
                                    default:
                                        if ($equipo->iPosJuego != 0)
                                            echo ""<img src='"".base_url().""/assets/img/gift.png' aling='center'><br>"";
                                        break;
                                }
                                echo ""</div>"";
                                if ($equipo->iPosJuego == 0)
                                    echo $equipo->iCasilla;
                            }
                            echo ""</div>"";
                        }
                        echo ""</div>"";
                        ?>
                        <br class=""clear"">
                    </div>
                </div>

                <!-- panel -->
                 
                <?php
                    // Botones
                    if ($bFinalizada == 0) { ?>
                    <input type=""hidden"" data-bb=""pregunta"">
                    <input type=""button"" class=""btn btn-warning"" 
                        data-bb=""confirm"" 
                        data-pn=""<?=$iId_Panel;?>""
                        data-id=""<?=$iId_Partida;?>""
                        data-gr=""<?=$iTurno;?>""
                        value=""Tirar Dado"">

                    <input type=""button"" class=""btn btn-warning"" 
                        data-bb=""confirm2"" 
                        data-id=""<?=$iId_Partida;?>""
                        value=""Finalizar partida"">

                    <input type=""button"" class=""btn btn-warning"" value=""Salir"" 
                        onclick=""location.href='<?=base_url()?>index.php/jugar/salir/<?=$iId_Partida?>'"">
                    <?php } else { ?>
                    <input type=""button"" class=""btn btn-warning"" value=""Listado de partidas"" 
                        onclick=""location.href='<?=base_url()?>index.php/partidas'"">
                    <?php } 

                    if (!$bFinalizada) {

                    // Pintamos el panel     
                    $contCasilla = 1;
                    echo ""<br class='clear'><br><div data-toggle='tooltip' title='Inicio' class='test fade' style='float:left;'>
                        <img src='"".base_url().""/assets/img/inicio.png' aling='center'></div>"";
                    
                    foreach ($casillas as $casilla) {
                        // Pinto la casilla.
                        echo ""<div data-toggle='tooltip' title='"".$casilla->sCategoria.""' id='casilla"".$contCasilla.""' class='test circulo fade' style='background:"".$casilla->sColor.""; border: 1px dotted black;'>"";
                        echo ""<h4 style='margin:0 !important;' class='fuego'><b>"".$contCasilla.""</b></h4>"";
                        
                        // Dependiendo de la función de la casilla, pintaremos esa función.

                        switch ($casilla->eFuncion) {
                            case 'Viento':
                                echo ""<div style='padding-left:30px;'><img src='"".base_url().""/assets/img/wind.png' aling='center'></div>"";
                                break;
                            case 'Retroceder':
                                echo ""<div style='padding-left:30px;'><img src='"".base_url().""/assets/img/syringe.png' aling='center'></div>"";
                                
                            default:
                                # code...
                                break;
                        }

                        echo ""</div>"";
                        $contCasilla++;
                    } 

                    echo ""<div data-toggle='tooltip' title='Meta!' class='test fade' style='float:left;'>
                        <img src='"".base_url().""/assets/img/meta.png' aling='center'></div>"";
                    
                    // Ahora colocamos las fichas en sus celdas.
                    
                    echo ""<div>"";
                    
                    // Hay que restablecer la partida.
                    
                    foreach ($resumen as $equipo) {
                        if ($equipo->iCasilla != 0) {
                            // Hay que colocar la ficha en la celda.
                            $ficha = '<div class=ficha><img src='.base_url().'assets/img/'.$equipo->iGrupo.'.png?id=6></div>';
                            echo ""<script>"";
                            echo ""AddFicha('casilla$equipo->iCasilla', '$ficha')"";
                            echo ""</script>"";
                        }
                    }
                    
                    // Fin de colocación de fichas.
                ?>
                
                <br class=""clear"">
                <hr class=""short"">
                
                <!-- Leyenda -->
                
                <blockquote>
                    <h4>Leyenda.</h4>
                    <ul>
                        <li><img src=""<?=base_url()?>assets/img/6.png"" align=""middle"">&nbsp;&nbsp;Indica, según tu color, la posición en la que estás en el juego.</li>
                        <li><img src=""<?=base_url()?>assets/img/syringe.png"" align=""middle"">&nbsp;&nbsp;Si aciertas la pregunta, guardas la posición, si no la aciertas vuelves a la casilla de <b>inicio</b></li>
                        <li><img src=""<?=base_url()?>assets/img/wind.png"" align=""middle"">&nbsp;&nbsp;Si aciertas la pregunta, vas a la siguiente casilla de <b>viento</b>. Si no aciertas, vuelves a la casilla anterior.</li>
                    </ul>
                </blockquote>

                <!-- Resumen de la partida -->

                <?php 
                }   // Cierra el if de la partida finalizada.

                if ($bFinalizada == 0) { ?>
                <input type=""hidden"" data-bb=""pregunta"">
                <input type=""button"" class=""btn btn-warning"" 
                        data-bb=""confirm"" 
                        data-pn=""<?=$iId_Panel;?>""
                        data-id=""<?=$iId_Partida;?>""
                        data-gr=""<?=$iTurno;?>""
                        value=""Tirar Dado"">

                <input type=""button"" class=""btn btn-warning"" 
                        data-bb=""confirm2"" 
                        data-id=""<?=$iId_Partida;?>""
                        value=""Finalizar partida"">

                <input type=""button"" class=""btn btn-warning"" value=""Salir"" 
                        onclick=""location.href='<?=base_url()?>index.php/jugar/salir/<?=$iId_Partida?>'"">
                <?php } else { ?>
                <input type=""button"" class=""btn btn-warning"" value=""Listado de partidas"" 
                        onclick=""location.href='<?=base_url()?>index.php/partidas'"">
                <?php } ?>
                   
            </div>
                
        </div>
        <?php $this->load->view('footer');?>
    </div>

    <script src=""<?=base_url()?>vendor/jquery.appear.js""></script>
    <script src=""<?=base_url()?>vendor/jquery.easing.js""></script>
    <script src=""<?=base_url()?>vendor/jquery.cookie.js""></script>
    <script src=""<?=base_url()?>vendor/bootstrap/js/bootstrap.js""></script>

    <?php if ($this->session->flashdata('respuesta_ok') || $this->session->flashdata('respuesta_ko')) { 
        echo ""<script type='text/javascript'>"";
        echo ""$(document).ready(function(){"";
        echo ""$('.modal').fadeIn();"";
        echo ""$('.cerrar').click(function(){"";
        echo ""$('.modal').fadeOut(300);"";
        echo ""});});"";
        echo ""</script>"";
    }
    ?>
        
    <script type=""text/javascript"">
        $(window).load(function() {
            $('#preloader').fadeOut('slow');
            $('body').css({'overflow':'visible'});
        });
        $(document).ready(function(){
            $('[data-toggle=""tooltip""]').tooltip();   
        });
    </script>

    <!-- BOOT BOX -->
    <script src=""<?=base_url()?>js/bootbox/boot.activate.js""></script>
    <script src=""<?=base_url()?>js/bootbox/bootbox.min.js""></script>
        
    <script type=""text/javascript"">

        function aleatorio(a,b) {return Math.round(Math.random()*(b-a)+parseInt(a));}

        bootbox.setDefaults({
          locale: ""es""
        });

        $(function() {
            var cajas = {};
            var forzar = {};

            $(document).on(""click"", ""input[data-bb]"", function(e) {
                e.preventDefault();
                var type = $(this).data(""bb"");
                // Partida en curso
                var iId_Partida = $(this).data(""id"");
                // Grupo que tiene el turno
                var iId_Grupo = $(this).data(""gr"");
                // Panel
                var iId_Panel = $(this).data(""pn"");
                
                if (typeof cajas[type] === 'function') {
                    cajas[type](iId_Partida, iId_Grupo, iId_Panel);
                } else {
                    if (typeof forzar[type] === 'function') 
                    forzar[type](iId_Partida, iId_Grupo, iId_Panel);
                } 
            });

            cajas.confirm = function(id, gr, pn) {
                var tirada = aleatorio(1,6);
                //var tirada = 1;
                var innerTxt = """";

                innerTxt = innerTxt + '<div style=""float:left; padding-left:5px; width:150px;""><img src=""'
                        + '<?=base_url()?>' + 'assets/img/dado'+tirada+'.png' + '""></div>';
                innerTxt = innerTxt + '<div style=""float:left; padding-left:10px; width:300px;""><blockquote><b>Grupo '+ gr +'</b>, has avanzado <b>'+tirada+'</b> posicion/es, a continuación vamos a formularte una pregunta ... ¿Preparado? </blockquote></div>';
            
                innerTxt += ""<br class='clear'>"";
                // Si confirma la tirada de dado, vamos a la página de preguntas.
                bootbox.confirm(innerTxt, function(result) {
                    if (result == true) {
                        location.href = '<?=base_url()?>index.php/jugar/'
                            + id
                            + '/'
                            + pn 
                            + '/'
                            + gr
                            + '/'
                            + tirada;
                    }
                });
            };

            cajas.confirm2 = function(id, gr, pn) {
                var innerTxt = ""Si finalizas la partida, no podrás volver a jugarla, el ranking de los jugadores quedará como hasta ahora. ¿Estás seguro/a que desea finalizar la partida de todos modos?"";
            
                innerTxt += ""<br class='clear'>"";
                // Si confirma la tirada de dado, vamos a la página de preguntas.
                bootbox.confirm(innerTxt, function(result) {
                    if (result == true) {
                        location.href = '<?=base_url()?>index.php/jugar/finalizar/'
                            + id;
                    }
                });
            };
        });
        </script>
        <!-- FIN BOOT -->
        
    </body>
</html>
",PHP
"﻿// The MIT License (MIT)
//
// Copyright (c) 2015 Rasmus Mikkelsen
// https://github.com/rasmus/EventFlow
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the ""Software""), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

using EventFlow.Core;
using EventFlow.Jobs;
using EventFlow.Logs;
using Hangfire;
using System;
using System.Threading;
using System.Threading.Tasks;

namespace EventFlow.Hangfire.Integration
{
    public class HangfireJobScheduler : IJobScheduler
    {
        private readonly IBackgroundJobClient _backgroundJobClient;
        private readonly IJobDefinitionService _jobDefinitionService;
        private readonly IJsonSerializer _jsonSerializer;
        private readonly ILog _log;

        public HangfireJobScheduler(
            ILog log,
            IJsonSerializer jsonSerializer,
            IBackgroundJobClient backgroundJobClient,
            IJobDefinitionService jobDefinitionService)
        {
            _log = log;
            _jsonSerializer = jsonSerializer;
            _backgroundJobClient = backgroundJobClient;
            _jobDefinitionService = jobDefinitionService;
        }

        public Task<IJobId> ScheduleNowAsync(IJob job, CancellationToken cancellationToken)
        {
            return ScheduleAsync(job, (c, d, j) => _backgroundJobClient.Enqueue<IJobRunner>(r => r.Execute(d.Name, d.Version, j)));
        }

        public Task<IJobId> ScheduleAsync(IJob job, DateTimeOffset runAt, CancellationToken cancellationToken)
        {
            return ScheduleAsync(job, (c, d, j) => _backgroundJobClient.Schedule<IJobRunner>(r => r.Execute(d.Name, d.Version, j), runAt));
        }

        public Task<IJobId> ScheduleAsync(IJob job, TimeSpan delay, CancellationToken cancellationToken)
        {
            return ScheduleAsync(job, (c, d, j) => _backgroundJobClient.Schedule<IJobRunner>(r => r.Execute(d.Name, d.Version, j), delay));
        }

        private Task<IJobId> ScheduleAsync(IJob job, Func<IBackgroundJobClient, JobDefinition, string, string> schedule)
        {
            var jobDefinition = _jobDefinitionService.GetJobDefinition(job.GetType());
            var json = _jsonSerializer.Serialize(job);

            var id = schedule(_backgroundJobClient, jobDefinition, json);

            _log.Verbose($""Scheduled job '{id}' in Hangfire"");

            return Task.FromResult<IJobId>(new HangfireJobId(id));
        }
    }
}",C#
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(""03. Rage Quit"")]
[assembly: AssemblyDescription("""")]
[assembly: AssemblyConfiguration("""")]
[assembly: AssemblyCompany("""")]
[assembly: AssemblyProduct(""03. Rage Quit"")]
[assembly: AssemblyCopyright(""Copyright ©  2017"")]
[assembly: AssemblyTrademark("""")]
[assembly: AssemblyCulture("""")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid(""102e97e8-a5dc-4989-9bff-d9818c2cabbf"")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(""1.0.*"")]
[assembly: AssemblyVersion(""1.0.0.0"")]
[assembly: AssemblyFileVersion(""1.0.0.0"")]
",C#
"﻿namespace XHTMLClassLibrary.AttributeDataTypes
{
    /// <summary>
    ///     One or more digits.
    /// </summary>
    public class Number : IAttributeDataType
    {
        private int? _number = null;

        public string Value
        {
            get
            {
                if (_number.HasValue)
                {
                    return _number.ToString();
                }
                return string.Empty;
            }

            set
            {
                _number = null;
                int temp;
                if(int.TryParse(value, out temp))
                {
                    _number = temp;
                }
            }
        }
    }
}
",C#
"﻿// // Copyright (c) Microsoft. All rights reserved.
// // Licensed under the MIT license. See LICENSE file in the project root for full license information.

using System;
using System.Windows;
using System.Windows.Forms;
using System.Windows.Forms.Integration;
using System.Windows.Media;
using WPFControls;

namespace FormsApp
{
    partial class Form1 : Form
    {
        private ElementHost _ctrlHost;
        private SolidColorBrush _initBackBrush;
        private FontFamily _initFontFamily;
        private double _initFontSize;
        private FontStyle _initFontStyle;
        private FontWeight _initFontWeight;
        private SolidColorBrush _initForeBrush;
        private MyControl _wpfAddressCtrl;

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            _ctrlHost = new ElementHost {Dock = DockStyle.Fill};
            panel1.Controls.Add(_ctrlHost);
            _wpfAddressCtrl = new MyControl();
            _wpfAddressCtrl.InitializeComponent();
            _ctrlHost.Child = _wpfAddressCtrl;

            _wpfAddressCtrl.OnButtonClick +=
                avAddressCtrl_OnButtonClick;
            _wpfAddressCtrl.Loaded += avAddressCtrl_Loaded;
        }

        private void avAddressCtrl_Loaded(object sender, EventArgs e)
        {
            _initBackBrush = _wpfAddressCtrl.MyControlBackground;
            _initForeBrush = _wpfAddressCtrl.MyControlForeground;
            _initFontFamily = _wpfAddressCtrl.MyControlFontFamily;
            _initFontSize = _wpfAddressCtrl.MyControlFontSize;
            _initFontWeight = _wpfAddressCtrl.MyControlFontWeight;
            _initFontStyle = _wpfAddressCtrl.MyControlFontStyle;
        }

        private void avAddressCtrl_OnButtonClick(
            object sender,
            MyControlEventArgs args)
        {
            if (args.IsOk)
            {
                lblAddress.Text = @""Street Address: "" + args.MyStreetAddress;
                lblCity.Text = @""City: "" + args.MyCity;
                lblName.Text = ""Name: "" + args.MyName;
                lblState.Text = ""State: "" + args.MyState;
                lblZip.Text = ""Zip: "" + args.MyZip;
            }
            else
            {
                lblAddress.Text = ""Street Address: "";
                lblCity.Text = ""City: "";
                lblName.Text = ""Name: "";
                lblState.Text = ""State: "";
                lblZip.Text = ""Zip: "";
            }
        }

        private void radioBackgroundOriginal_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlBackground = _initBackBrush;
        }

        private void radioBackgroundLightGreen_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlBackground = new SolidColorBrush(Colors.LightGreen);
        }

        private void radioBackgroundLightSalmon_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlBackground = new SolidColorBrush(Colors.LightSalmon);
        }

        private void radioForegroundOriginal_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlForeground = _initForeBrush;
        }

        private void radioForegroundRed_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlForeground = new SolidColorBrush(Colors.Red);
        }

        private void radioForegroundYellow_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlForeground = new SolidColorBrush(Colors.Yellow);
        }

        private void radioFamilyOriginal_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlFontFamily = _initFontFamily;
        }

        private void radioFamilyTimes_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlFontFamily = new FontFamily(""Times New Roman"");
        }

        private void radioFamilyWingDings_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlFontFamily = new FontFamily(""WingDings"");
        }

        private void radioSizeOriginal_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlFontSize = _initFontSize;
        }

        private void radioSizeTen_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlFontSize = 10;
        }

        private void radioSizeTwelve_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlFontSize = 12;
        }

        private void radioStyleOriginal_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlFontStyle = _initFontStyle;
        }

        private void radioStyleItalic_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlFontStyle = FontStyles.Italic;
        }

        private void radioWeightOriginal_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlFontWeight = _initFontWeight;
        }

        private void radioWeightBold_CheckedChanged(object sender, EventArgs e)
        {
            _wpfAddressCtrl.MyControlFontWeight = FontWeights.Bold;
        }
    }
}

// </snippet1>",C#
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SetupEnviroment
{
    class Application
    {
        public static void Main(string[] args)
        {
            NameSelector.DoExample();

            //IdSelector.Main();

            //NoSuchElement.DoExample();

            Console.ReadKey();
        }
    }
}
",C#
"//---------------------------------------------------------------------------
//
// Copyright (C) Microsoft Corporation.  All rights reserved.
//
//---------------------------------------------------------------------------

using System;
using System.Windows.Automation.Peers;
using System.Windows.Media;
using System.Windows.Threading;
using MS.Internal.KnownBoxes;

namespace System.Windows.Controls.Primitives
{
    /// <summary>
    /// StatusBar is a visual indicator of the operational status of an application and/or
    /// its components running in a window.  StatusBar control consists of a series of zones
    /// on a band that can display text, graphics, or other rich content. The control can
    /// group items within these zones to emphasize relational similarities or functional
    /// connections. The StatusBar can accommodate multiple sets of UI or functionality that
    /// can be chosen even within the same application.
    /// </summary>
    [StyleTypedProperty(Property = ""ItemContainerStyle"", StyleTargetType = typeof(StatusBarItem))]
    public class StatusBar : ItemsControl
    {
        //-------------------------------------------------------------------
        //
        //  Constructors
        //
        //-------------------------------------------------------------------

        #region Constructors

        static StatusBar()
        {
            DefaultStyleKeyProperty.OverrideMetadata(typeof(StatusBar), new FrameworkPropertyMetadata(typeof(StatusBar)));
            _dType = DependencyObjectType.FromSystemTypeInternal(typeof(StatusBar));

            IsTabStopProperty.OverrideMetadata(typeof(StatusBar), new FrameworkPropertyMetadata(BooleanBoxes.FalseBox));

            ItemsPanelTemplate template = new ItemsPanelTemplate(new FrameworkElementFactory(typeof(DockPanel)));
            template.Seal();
            ItemsPanelProperty.OverrideMetadata(typeof(StatusBar), new FrameworkPropertyMetadata(template));
        }

        #endregion

        #region Public Properties

        /// <summary>
        ///     DependencyProperty for ItemContainerTemplateSelector property.
        /// </summary>
        public static readonly DependencyProperty ItemContainerTemplateSelectorProperty =
            MenuBase.ItemContainerTemplateSelectorProperty.AddOwner(
                typeof(StatusBar),
                new FrameworkPropertyMetadata(new DefaultItemContainerTemplateSelector()));

        /// <summary>
        ///     DataTemplateSelector property which provides the DataTemplate to be used to create an instance of the ItemContainer.
        /// </summary>
        public ItemContainerTemplateSelector ItemContainerTemplateSelector
        {
            get { return (ItemContainerTemplateSelector)GetValue(ItemContainerTemplateSelectorProperty); }
            set { SetValue(ItemContainerTemplateSelectorProperty, value); }
        }

        /// <summary>
        ///     DependencyProperty for UsesItemContainerTemplate property.
        /// </summary>
        public static readonly DependencyProperty UsesItemContainerTemplateProperty =
            MenuBase.UsesItemContainerTemplateProperty.AddOwner(typeof(StatusBar));

        /// <summary>
        ///     UsesItemContainerTemplate property which says whether the ItemContainerTemplateSelector property is to be used.
        /// </summary>
        public bool UsesItemContainerTemplate
        {
            get { return (bool)GetValue(UsesItemContainerTemplateProperty); }
            set { SetValue(UsesItemContainerTemplateProperty, value); }
        }

        #endregion

        //-------------------------------------------------------------------
        //
        //  Protected Methods
        //
        //-------------------------------------------------------------------

        #region Protected Methods

        private object _currentItem;

        /// <summary>
        /// Return true if the item is (or is eligible to be) its own ItemUI
        /// </summary>
        protected override bool IsItemItsOwnContainerOverride(object item)
        {
            bool ret = (item is StatusBarItem) || (item is Separator);
            if (!ret)
            {
                _currentItem = item;
            }

            return ret;
        }

        protected override DependencyObject GetContainerForItemOverride()
        {
            object currentItem = _currentItem;
            _currentItem = null;

            if (UsesItemContainerTemplate)
            {
                DataTemplate itemContainerTemplate = ItemContainerTemplateSelector.SelectTemplate(currentItem, this);
                if (itemContainerTemplate != null)
                {
                    object itemContainer = itemContainerTemplate.LoadContent();
                    if (itemContainer is StatusBarItem || itemContainer is Separator)
                    {
                        return itemContainer as DependencyObject;
                    }
                    else
                    {
                        throw new InvalidOperationException(SR.Get(SRID.InvalidItemContainer, this.GetType().Name, typeof(StatusBarItem).Name, typeof(Separator).Name, itemContainer));
                    }
                }
            }

            return new StatusBarItem();
        }
        /// <summary>
        /// Prepare the element to display the item.  This may involve
        /// applying styles, setting bindings, etc.
        /// </summary>
        protected override void PrepareContainerForItemOverride(DependencyObject element, object item)
        {
            base.PrepareContainerForItemOverride(element, item);

            Separator separator = element as Separator;
            if (separator != null)
            {
                bool hasModifiers;
                BaseValueSourceInternal vs = separator.GetValueSource(StyleProperty, null, out hasModifiers);
                if (vs <= BaseValueSourceInternal.ImplicitReference)
                    separator.SetResourceReference(StyleProperty, SeparatorStyleKey);
                separator.DefaultStyleKey = SeparatorStyleKey;
            }
        }

        /// <summary>
        /// Determine whether the ItemContainerStyle/StyleSelector should apply to the container
        /// </summary>
        /// <returns>false if item is a Separator, otherwise return true</returns>
        protected override bool ShouldApplyItemContainerStyle(DependencyObject container, object item)
        {
            if (item is Separator)
            {
                return false;
            }
            else
            {
                return base.ShouldApplyItemContainerStyle(container, item);
            }
        }

        #endregion

        #region Accessibility

        /// <summary>
        /// Creates AutomationPeer (<see cref=""UIElement.OnCreateAutomationPeer""/>)
        /// </summary>
        protected override AutomationPeer OnCreateAutomationPeer()
        {
            return new StatusBarAutomationPeer(this);
        }

        #endregion

        #region DTypeThemeStyleKey

        // Returns the DependencyObjectType for the registered ThemeStyleKey's default
        // value. Controls will override this method to return approriate types.
        internal override DependencyObjectType DTypeThemeStyleKey
        {
            get { return _dType; }
        }

        private static DependencyObjectType _dType;

        #endregion DTypeThemeStyleKey

        #region ItemsStyleKey

        /// <summary>
        ///     Resource Key for the SeparatorStyle
        /// </summary>
        public static ResourceKey SeparatorStyleKey
        {
            get
            {
                return SystemResourceKey.StatusBarSeparatorStyleKey;
            }
        }

        #endregion
    }

}

",C#
"using OpenTK;
using OpenTK.Graphics.OpenGL;

namespace p_1
{
	class Spritebatch
	{
		public static void DrawSprite(Texture2D texture, RectangleF rectangle)
		{
			DrawSprite(texture, new Vector2(rectangle.X, rectangle.Y), new Vector2(rectangle.Width / texture.Width, rectangle.Height / texture.Height), Color.White, Vector2.Zero);
		}
		public static void DrawSprite(Texture2D texture, RectangleF rectangle, Color color, RectangleF? sourceRec = null)
		{
			DrawSprite(texture, new Vector2(rectangle.X, rectangle.Y), new Vector2(rectangle.Width / texture.Width, rectangle.Height / texture.Height), color, Vector2.Zero, sourceRec);
		}
		public static void DrawSprite(Texture2D texture, Vector2 position)
		{
			DrawSprite(texture, position, Vector2.One, Color.White, Vector2.Zero);
		}
		public static void DrawSprite(Texture2D texture, Vector2 position, Vector2 scale)
		{
			DrawSprite(texture, position, scale, Color.White, Vector2.Zero);
		}
		public static void DrawSprite(Texture2D texture, Vector2 position, Vector2 scale, Color color)
		{
			DrawSprite(texture, position, scale, color, Vector2.Zero);
		}
		public static void DrawSprite(Texture2D texture, Vector2 position, Vector2 scale, Color color, Vector2 origin, RectangleF? sourceRec = null)
		{
			Vector2[] verts = new Vector2[4] 
			{
				new Vector2(0, 0),
				new Vector2(1, 0),
				new Vector2(1, 1),
				new Vector2(0, 1),
			};

			GL.BindTexture(TextureTarget.Texture2D, texture.ID);

			GL.Begin(PrimitiveType.Quads);
			for (int i = 0; i < 4; i++)
			{
				GL.Color3(color);
				if (sourceRec == null)
				{
					GL.TexCoord2(verts[i].X, verts[i].Y);
				}
				else
				{
					GL.TexCoord2(
						(sourceRec.Value.X + verts[i].X * sourceRec.Value.Width) / (float)texture.Width,
						(sourceRec.Value.Y + verts[i].Y * sourceRec.Value.Height) / (float)texture.Height);
				}

				verts[i].X *= texture.Width;
				verts[i].Y *= texture.Height;
				verts[i] -= origin;
				verts[i] *= scale;
				verts[i] += position;

				GL.Vertex2(verts[i]);
			}
			GL.End();
		}

		public static void Begin(GameWindow window)
		{
			GL.MatrixMode(MatrixMode.Projection);
			GL.LoadIdentity();
			GL.Ortho(-window.ClientSize.Width / 2f, window.ClientSize.Width / 2f, window.ClientSize.Height / 2f, -window.ClientSize.Height / 2f, 0, 1);
		}
	}
}
",C#
"/* **********************************************************************************************************
 * The MIT License (MIT)																					*
 * 																											*
 * Copyright (c) 2016 Hypermediasystems Ges. f. Software mbH										*
 * Web: http://www.hypermediasystems.de																		*
 * This file is part of hmssp																			*
 * 																											*
 * Permission is hereby granted, free of charge, to any person obtaining a copy								*
 * of this software and associated documentation files (the ""Software""), to deal							*
 * in the Software without restriction, including without limitation the rights								*
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell								*
 * copies of the Software, and to permit persons to whom the Software is									*
 * furnished to do so, subject to the following conditions:													*
 * 																											*
 * The above copyright notice and this permission notice shall be included in								*
 * all copies or substantial portions of the Software.														*
 * 																											*
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR								*
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,									*
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE								*
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER									*
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,							*
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN								*
 * THE SOFTWARE.																							*
 ************************************************************************************************************ */ 
using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Reflection;
using Newtonsoft.Json;
namespace HMS.SP{
    /// <summary>
    /// <para>https://msdn.microsoft.com/en-us/library/office/jj850797.aspx#properties</para>
    /// </summary>
    public class ServerSettings : SPBase{
        [JsonProperty(""__HMSError"")]
        public HMS.Util.__HMSError __HMSError_ { set; get; }
        [JsonProperty(""__status"")]
        public SP.__status __status_ { set; get; }
        [JsonProperty(""__deferred"")]
        public SP.__deferred __deferred_ { set; get; }
        [JsonProperty(""__metadata"")]
        public SP.__metadata __metadata_ { set; get; }
        public Dictionary<string, string> __rest;
        // no properties found
        /// <summary>
        /// <para> Endpoints </para>
        /// </summary>
        static string[] endpoints = {
        };

        public ServerSettings(ExpandoObject expObj)
        {
             try
             {
                var use_EO = ((dynamic)expObj).entry.content.properties;
                HMS.SP.SPUtil.expando2obj(use_EO, this, typeof(ServerSettings));
             }
             catch (Exception ex)
             {
             
             }
        
        }
        // used by Newtonsoft.JSON 
        public  ServerSettings()
        {
        }
        public  ServerSettings(string json)
        {
            if( json == String.Empty )
                return;
            dynamic jobject = Newtonsoft.Json.JsonConvert.DeserializeObject(json);            
            dynamic refObj = jobject;
            if (jobject.d != null)
                refObj = jobject.d;
            string errInfo = """";
            if (refObj.results != null)
            {
                if (refObj.results.Count > 1)
                    errInfo = ""Result is Collection, only 1. entry displayed."";
                refObj = refObj.results[0];
            }
            List<string> usedFields = new List<string>();
                usedFields.Add(""__HMSError"");
            HMS.SP.SPUtil.dyn_ValueSet(""__HMSError"", refObj, this);
                usedFields.Add(""__deferred"");
            this.__deferred_ = new SP.__deferred(HMS.SP.SPUtil.dyn_toString(refObj.__deferred));
                usedFields.Add(""__metadata"");
            this.__metadata_ = new SP.__metadata(HMS.SP.SPUtil.dyn_toString(refObj.__metadata));
            this.__rest = new Dictionary<string, string>();
            var dyn = ((Newtonsoft.Json.Linq.JContainer)refObj).First;
            while (dyn != null)
            {
                string Name = ((Newtonsoft.Json.Linq.JProperty)dyn).Name;
                string Value = ((Newtonsoft.Json.Linq.JProperty)dyn).Value.ToString();
                if ( !usedFields.Contains( Name ))
                    this.__rest.Add( Name, Value);
                dyn = dyn.Next;
            }
            if( errInfo != """")
                this.__HMSError_.info = errInfo;
        }
    }
}
",C#
"// FriendlyNameAttribute.cs created with MonoDevelop
// User: ben at 1:31 P 19/03/2008
//
// To change standard headers go to Edit->Preferences->Coding->Standard Headers
//

using System;

namespace EmergeTk.Model
{
	
	public class FriendlyNameAttribute : Attribute
	{
		string name;
		
		public string Name {
			get {
				return name;
			}
			set {
				name = value;
			}
		}

		public string[] FieldNames {
			get {
				return fieldNames;
			}
			set {
				fieldNames = value;
			}
		}
		
		//field names are used for generating friendly names for vector types, such as enums.
		
		string[] fieldNames;
		
		public FriendlyNameAttribute()
		{
		}
		
		
		public FriendlyNameAttribute( string name )
		{
			this.name = name;
		}
	}
}
",C#
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(""17.July.02.Harvest"")]
[assembly: AssemblyDescription("""")]
[assembly: AssemblyConfiguration("""")]
[assembly: AssemblyCompany("""")]
[assembly: AssemblyProduct(""17.July.02.Harvest"")]
[assembly: AssemblyCopyright(""Copyright ©  2016"")]
[assembly: AssemblyTrademark("""")]
[assembly: AssemblyCulture("""")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid(""b8294d81-675a-43f5-bf13-a79537f648ad"")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(""1.0.*"")]
[assembly: AssemblyVersion(""1.0.0.0"")]
[assembly: AssemblyFileVersion(""1.0.0.0"")]
",C#
"﻿using UnityEngine;
using UnityEditor;
using CreateThis.Factory.VR.UI.Button;

namespace MMVR.Factory.UI.Button {
    [CustomEditor(typeof(FileManagerSaveButtonFactory))]
    [CanEditMultipleObjects]
    public class FileManagerSaveButtonFactoryEditor : MomentaryButtonFactoryEditor {
        SerializedProperty fileManager;

        protected override void OnEnable() {
            base.OnEnable();
            fileManager = serializedObject.FindProperty(""fileManager"");
        }

        protected override void BuildGenerateButton() {
            if (GUILayout.Button(""Generate"")) {
                if (target.GetType() == typeof(FileManagerSaveButtonFactory)) {
                    FileManagerSaveButtonFactory buttonFactory = (FileManagerSaveButtonFactory)target;
                    buttonFactory.Generate();
                }
            }
        }

        protected override void AdditionalProperties() {
            base.AdditionalProperties();
            EditorGUILayout.PropertyField(fileManager);
        }
    }
}",C#
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using ProjectData;
using Tools;
using ProjectBLL;
using System.Data;
using Approve.RuleCenter;
using System.Text;
using System.Collections;
using Approve.RuleApp;
public partial class JSDW_DesignDoc_Report : Page
{
    ProjectDB db = new ProjectDB();
    RCenter rc = new RCenter();
    protected void Page_Load(object sender, EventArgs e)
    {
        pageTool tool = new pageTool(this.Page);
        tool.ExecuteScript(""tab();"");
        if (Session[""FIsApprove""] != null && Session[""FIsApprove""].ToString() == ""1"")
        {
            this.RegisterStartupScript(Guid.NewGuid().ToString(), ""<script>FIsApprove();</script>"");
        }
        if (!IsPostBack)
        {
            btnSave.Attributes[""onclick""] = ""return checkInfo();"";
            BindControl();
            showInfo();
        }
    }

    //绑定
    private void BindControl()
    {
        //备案部门
        string deptId = ComFunction.GetDefaultDept();
        StringBuilder sb = new StringBuilder();
        sb.Append(""select case FLevel when 1 then FFullName when 2 then FName when 3 then FName end FName,"");
        sb.Append(""FNumber from cf_Sys_ManageDept "");
        sb.Append(""where fnumber like '"" + deptId + ""%' "");
        sb.Append(""and fname<>'市辖区' "");
        sb.Append(""order by left(FNumber,4),flevel"");
        DataTable dt = rc.GetTable(sb.ToString());
        p_FManageDeptId.DataSource = dt;
        p_FManageDeptId.DataSource = dt;
        p_FManageDeptId.DataTextField = ""FName"";
        p_FManageDeptId.DataValueField = ""FNumber"";
        p_FManageDeptId.DataBind();
    }

    //显示
    private void showInfo()
    {
        string FAppId = EConvert.ToString(Session[""FAppId""]);
        var app = (from t in db.CF_App_List
                   where t.FId == FAppId
                   select new
                   {
                       t.FName,
                       t.FYear,
                       t.FLinkId,
                       t.FBaseName,
                       t.FPrjId,
                       t.FState,
                   }).FirstOrDefault();
        pageTool tool = new pageTool(this.Page, ""p_"");
        if (app != null)
        {
            t_FName.Text = app.FName;
            //已提交不能修改
            if (app.FState == 1 || app.FState == 6)
            {
                tool.ExecuteScript(""btnEnable();"");
            }
            //显示工程信息
            CF_Prj_BaseInfo prj = db.CF_Prj_BaseInfo.Where(t => t.FId == app.FPrjId).FirstOrDefault();
            if (prj != null)
            {
                tool.fillPageControl(prj);
            }
        }
    }
    /// <summary>
    /// 验证附件是否上传
    /// </summary>
    /// <returns></returns>
    bool IsUploadFile(int? FMTypeId, string FAppId)
    {
        CF_Prj_BaseInfo prj = (from p in db.CF_Prj_BaseInfo
                               join a in db.CF_App_List on p.FId equals a.FPrjId
                               where a.FId == FAppId
                               select p).FirstOrDefault();
        var v =false ;
        if (prj != null)
        {
             v = db.CF_Sys_PrjList.Count(t => t.FIsMust == 1
          && t.FManageType == FMTypeId && t.FIsPrjType.Contains(prj.FType.ToString())
          && db.CF_AppPrj_FileOther.Count(o => o.FPrjFileId == t.FId
              && o.FAppId == FAppId) < 1) > 0;
        }

      
        return v;
    }
    public void Report()
    {
        RCenter rc = new RCenter();


        pageTool tool = new pageTool(this.Page);
        string fDeptNumber = ComFunction.GetDefaultDept();
        if (fDeptNumber == null || fDeptNumber == """")
        {
            tool.showMessage(""系统出错,请配置默认管理部门"");
            return;
        }
        string FAppId = EConvert.ToString(Session[""FAppId""]);
        var app = (from t in db.CF_App_List
                   where t.FId == FAppId
                   select t).FirstOrDefault();
        SortedList[] sl = new SortedList[1];
        if (app != null)
        {

            //验证必需的附件是否上传
            if (IsUploadFile(app.FManageTypeId, FAppId))
            {
                tool.showMessage(""“上传行政批文、上传设计文件”菜单中存在未上传的附件(必需上传的)，请先上传！"");
                return;
            }
            CF_Prj_BaseInfo prj = db.CF_Prj_BaseInfo.Where(t => t.FId == app.FPrjId).FirstOrDefault();
            if (prj != null)
            {
                sl[0] = new SortedList();
                sl[0].Add(""FID"", app.FId);
                sl[0].Add(""FAppId"", app.FId);
                sl[0].Add(""FBaseInfoId"", app.FBaseinfoId);
                sl[0].Add(""FManageTypeId"", app.FManageTypeId);
                sl[0].Add(""FListId"", ""19301"");
                sl[0].Add(""FTypeId"", ""1930100"");
                sl[0].Add(""FLevelId"", ""1930100"");
                sl[0].Add(""FIsPrime"", 0);

                //sl.Add(""FAppDeptId"", row[""FAppDeptId""].ToString());
                //sl.Add(""FAppDeptName"", row[""FAppDeptName""].ToString());
                sl[0].Add(""FAppTime"", DateTime.Now);
                sl[0].Add(""FIsNew"", 0);
                sl[0].Add(""FIsBase"", 0);
                sl[0].Add(""FIsTemp"", 0);
                sl[0].Add(""FUpDept"", p_FManageDeptId.SelectedValue);
                sl[0].Add(""FEmpId"", prj.FId);

                sl[0].Add(""FEmpName"", prj.FPrjName);
                //存设计单位
                var s = (from t in db.CF_Prj_Ent
                         join a in db.CF_App_List on t.FAppId equals a.FId
                         where a.FPrjId == app.FPrjId && a.FManageTypeId == 291 && t.FEntType == 155 && a.FState == 6
                         select new
                         {
                             t.FId,
                             t.FBaseInfoId,
                             t.FName,
                             t.FLevelName,
                             t.FCertiNo,
                             t.FMoney,
                             t.FPlanDate,
                             t.FAppId
                         }).FirstOrDefault();
                if (s != null)
                {
                    sl[0].Add(""FLeadId"", s.FBaseInfoId);
                    sl[0].Add(""FLeadName"", s.FName);
                }
                StringBuilder sb = new StringBuilder();

                sb.Append(""update CF_App_List set FUpDeptId="" + p_FManageDeptId.SelectedValue + "","");
                sb.Append(""ftime=getdate() where fid = '"" + FAppId + ""'"");
                rc.PExcute(sb.ToString());

                string fsystemid = CurrentEntUser.SystemId;


                RApp ra = new RApp();
                if (ra.EntStartProcessKCSJ(app.FBaseinfoId, FAppId, app.FYear.ToString(), DateTime.Now.Month.ToString(), fsystemid, fDeptNumber, p_FManageDeptId.SelectedValue, sl))
                {
                    sb.Remove(0, sb.Length);

                    this.Session[""FIsApprove""] = 1;
                    tool.showMessageAndRunFunction(""上报成功！"", ""location.href=location.href"");
                }
            }
        }
    }
    //保存按钮
    protected void btnSave_Click(object sender, EventArgs e)
    {
        Report();
    }
}
",C#
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MotoBotCore.Interfaces
{
    public interface IChannel
    {
        string Name { get; set; }
        string Motd { get; set; }
    }
}
",C#
"﻿// Copyright (c) Simple Injector Contributors. All rights reserved.
// Licensed under the MIT License. See LICENSE file in the project root for license information.

namespace SimpleInjector.Diagnostics
{
    using System;
    using System.Diagnostics;
    using SimpleInjector.Advanced;

    /// <summary>
    /// Diagnostic result for a warning about a
    /// component that depends on a service with a lifestyle that is shorter than that of the component.
    /// For more information, see: https://simpleinjector.org/dialm.
    /// </summary>
    [DebuggerDisplay(""{"" + nameof(DebuggerDisplay) + "", nq}"")]
    public class LifestyleMismatchDiagnosticResult : DiagnosticResult
    {
        internal LifestyleMismatchDiagnosticResult(
            Type serviceType, string description, KnownRelationship relationship)
            : base(
                serviceType,
                description,
                DiagnosticType.LifestyleMismatch,
                DiagnosticSeverity.Warning,
                relationship)
        {
            this.Relationship = relationship;
        }

        /// <summary>Gets the object that describes the relationship between the component and its dependency.</summary>
        /// <value>A <see cref=""KnownRelationship""/> instance.</value>
        public KnownRelationship Relationship { get; }
    }
}",C#
"﻿using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using log4net;
using Newtonsoft.Json;
using RoboticsTxt.Lib.Contracts;
using RoboticsTxt.Lib.Contracts.Configuration;

namespace RoboticsTxt.Lib.Components.Sequencer
{
    internal class PositionStorageAccessor
    {
        private readonly ApplicationConfiguration applicationConfiguration;

        private readonly ILog logger = LogManager.GetLogger(typeof(PositionStorageAccessor));

        public PositionStorageAccessor(ApplicationConfiguration applicationConfiguration)
        {
            this.applicationConfiguration = applicationConfiguration;
        }

        private const string FileNamePattern = ""Positions_{0}.json"";

        public bool WritePositionsToFile(IEnumerable<Position> positions)
        {
            try
            {
                var positionsJson = JsonConvert.SerializeObject(positions, Formatting.Indented);

                var fileName = string.Format(FileNamePattern, applicationConfiguration.ApplicationName);

                var stream = new FileStream(fileName, FileMode.Create);
                var streamWriter = new StreamWriter(stream);

                streamWriter.Write(positionsJson);
                streamWriter.Flush();

                this.logger.Info($""{positions.Count()} positions written to file {fileName}."");
            }
            catch (Exception exception)
            {
                this.logger.Error(exception);
                return false;
            }

            return true;
        }

        public List<Position> LoadPositionsFromFile()
        {
            var positions = new List<Position>();

            var fileName = string.Format(FileNamePattern, applicationConfiguration.ApplicationName);

            if (!File.Exists(fileName))
                return positions;

            try
            {
                var stream = new FileStream(fileName, FileMode.Open);
                var streamReader = new StreamReader(stream);

                var positionsJson = streamReader.ReadToEnd();

                positions = JsonConvert.DeserializeObject<List<Position>>(positionsJson);

                this.logger.Info($""{positions.Count} positions loaded from file {fileName}."");
            }
            catch (Exception exception)
            {
                this.logger.Error(exception);
            }

            return positions;
        }
    }
}
",C#
"/*
Copyright (C) 2013-2015 MetaMorph Software, Inc

Permission is hereby granted, free of charge, to any person obtaining a
copy of this data, including any software or models in source or binary
form, as well as any drawings, specifications, and documentation
(collectively ""the Data""), to deal in the Data without restriction,
including without limitation the rights to use, copy, modify, merge,
publish, distribute, sublicense, and/or sell copies of the Data, and to
permit persons to whom the Data is furnished to do so, subject to the
following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Data.

THE DATA IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS, SPONSORS, DEVELOPERS, CONTRIBUTORS, OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE DATA OR THE USE OR OTHER DEALINGS IN THE DATA.  

=======================
This version of the META tools is a fork of an original version produced
by Vanderbilt University's Institute for Software Integrated Systems (ISIS).
Their license statement:

Copyright (C) 2011-2014 Vanderbilt University

Developed with the sponsorship of the Defense Advanced Research Projects
Agency (DARPA) and delivered to the U.S. Government with Unlimited Rights
as defined in DFARS 252.227-7013.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this data, including any software or models in source or binary
form, as well as any drawings, specifications, and documentation
(collectively ""the Data""), to deal in the Data without restriction,
including without limitation the rights to use, copy, modify, merge,
publish, distribute, sublicense, and/or sell copies of the Data, and to
permit persons to whom the Data is furnished to do so, subject to the
following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Data.

THE DATA IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS, SPONSORS, DEVELOPERS, CONTRIBUTORS, OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE DATA OR THE USE OR OTHER DEALINGS IN THE DATA.  
*/

using System;
using System.Runtime.InteropServices;
using GME.Util;
using GME.MGA;

namespace GME.CSharp
{
    
    abstract class ComponentConfig
    {
        // Set paradigm name. Provide * if you want to register it for all paradigms.
		public const string paradigmName = ""CyPhyML"";
		
		// Set the human readable name of the interpreter. You can use white space characters.
        public const string componentName = ""CyPhyPrepareIFab"";
        
		// Specify an icon path
        public const string iconName = ""CyPhyPrepareIFab.ico"";
        
		public const string tooltip = ""CyPhyPrepareIFab"";

		// If null, updated with the assembly path + the iconName dynamically on registration
        public static string iconPath = null; 
        
		// Uncomment the flag if your component is paradigm independent.
		public static componenttype_enum componentType = componenttype_enum.COMPONENTTYPE_INTERPRETER;
				
        public const regaccessmode_enum registrationMode = regaccessmode_enum.REGACCESS_SYSTEM;
        public const string progID = ""MGA.Interpreter.CyPhyPrepareIFab"";
        public const string guid = ""D3B4ECEE-36EC-4753-9B10-312084B48F2A"";
    }
}
",C#
"﻿using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows;
using System.Windows.Markup;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(""RapidPliant.App.EarleyDebugger"")]
[assembly: AssemblyDescription("""")]
[assembly: AssemblyConfiguration("""")]
[assembly: AssemblyCompany("""")]
[assembly: AssemblyProduct(""RapidPliant.App.EarleyDebugger"")]
[assembly: AssemblyCopyright(""Copyright ©  2016"")]
[assembly: AssemblyTrademark("""")]
[assembly: AssemblyCulture("""")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

//In order to begin building localizable applications, set 
//<UICulture>CultureYouAreCodingWith</UICulture> in your .csproj file
//inside a <PropertyGroup>.  For example, if you are using US english
//in your source files, set the <UICulture> to en-US.  Then uncomment
//the NeutralResourceLanguage attribute below.  Update the ""en-US"" in
//the line below to match the UICulture setting in the project file.

//[assembly: NeutralResourcesLanguage(""en-US"", UltimateResourceFallbackLocation.Satellite)]


[assembly:ThemeInfo(
    ResourceDictionaryLocation.None, //where theme specific resource dictionaries are located
                             //(used if a resource is not found in the page, 
                             // or application resource dictionaries)
    ResourceDictionaryLocation.SourceAssembly //where the generic resource dictionary is located
                                      //(used if a resource is not found in the page, 
                                      // app, or any theme specific resource dictionaries)
)]


// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(""1.0.*"")]
[assembly: AssemblyVersion(""1.0.0.0"")]
[assembly: AssemblyFileVersion(""1.0.0.0"")]

[assembly: XmlnsDefinition(""http://schemas.microsoft.com/winfx/2006/xaml/presentation"", ""RapidPliant.App.EarleyDebugger.Views"")]

",C#
"// <auto-generated />
namespace Surplus.Migrations
{
    using System.CodeDom.Compiler;
    using System.Data.Entity.Migrations;
    using System.Data.Entity.Migrations.Infrastructure;
    using System.Resources;
    
    [GeneratedCode(""EntityFramework.Migrations"", ""6.1.3-40302"")]
    public sealed partial class EstValueMaxMin : IMigrationMetadata
    {
        private readonly ResourceManager Resources = new ResourceManager(typeof(EstValueMaxMin));
        
        string IMigrationMetadata.Id
        {
            get { return ""201504291914587_EstValueMaxMin""; }
        }
        
        string IMigrationMetadata.Source
        {
            get { return null; }
        }
        
        string IMigrationMetadata.Target
        {
            get { return Resources.GetString(""Target""); }
        }
    }
}
",C#
"using UnityEngine;

public class Crouch : MonoBehaviour {
	
	public float crouchColliderProportion = 0.75f;
	
	private bool crouching;
	private float colliderCenterY, centerOffsetY;
	private ChipmunkBoxShape box;
	private Jump jump;
	private Sneak sneak;
	private WalkAbs move;
	private AnimateTiledConfig crouchAC;
	
	void Awake () {
		crouching = false;
		
		// take the collider and some useful values
		box = GetComponent<ChipmunkBoxShape>();
		colliderCenterY = box.center.y;
		centerOffsetY = ((1f - crouchColliderProportion)*0.5f) * box.size.y;
		
		jump = GetComponent<Jump>();
		sneak = GetComponent<Sneak>();
		move = GetComponent<WalkAbs>();
		crouchAC = AnimateTiledConfig.getByName(gameObject, EnumAnimateTiledName.Crouch, true);
	}
	
	// Update is called once per frame
	public void crouch () {
		// is it jumping?
		bool jumping = false;
		if (jump != null && jump.isJumping())
			jumping = true;
		// is it moving?
		bool moving = false;
		if (move != null && move.isWalking())
			moving = true;
		
		// if crouching then update accordingly
		if (sneak != null && crouching) {
			// while in the air we can't sneak
			if (jumping) {
				if (sneak.isSneaking()) {
					sneak.stopSneaking();
					crouchAC.setupAndPlay();
				}
			}
			// if not jumping and not moving and sneaking: stop sneaking and do crouch
			else if (!moving) {
				if (sneak.isSneaking()) {
					sneak.stopSneaking();
					crouchAC.setupAndPlay();
				}
			}
			// if not jumping and moving: sneak
			else
				sneak.sneak();
		}
		
		// don't update
		if (crouching || jumping)
			return;
		
		crouching = true;
		
		// resize the collider
		Vector3 theSize = box.size;
		theSize.y *= crouchColliderProportion;
		box.size = theSize;
		// transform the collider
		Vector3 theCenter = box.center;
		theCenter.y -= centerOffsetY;
		box.center = theCenter;
		
		// set the correct sprite animation
		crouchAC.setupAndPlay();
	}
	
	public void noCrouch () {
		
		if (sneak != null)
			sneak.stopSneaking();
		
		if (!crouching)
			return;
		
		move.stop(); // this force the reset of the sprite animation
		crouchAC.stop();
		crouching = false;
		
		// transform the collider
		Vector3 theCenter = box.center;
		theCenter.y = colliderCenterY;
		box.center = theCenter;
		// resize the collider
		Vector3 theSize = box.size;
		theSize.y /= crouchColliderProportion;
		box.size = theSize;
	}
	
	public bool isCrouching () {
		return crouching;
	}
}
",C#
"using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Xna.Framework;

namespace TrueSync.Physics2D
{
    // Original Code by Steven Lu - see http://www.box2d.org/forum/viewtopic.php?f=3&t=1688
    // Ported to Farseer 3.0 by Nicolás Hormazábal

    internal struct ShapeData
    {
        public Body Body;
        public FP Max;
        public FP Min; // absolute angles
    }

    /// <summary>
    /// This is a comprarer used for 
    /// detecting angle difference between rays
    /// </summary>
    internal class RayDataComparer : IComparer<FP>
    {
        #region IComparer<FP> Members

        int IComparer<FP>.Compare(FP a, FP b)
        {
            FP diff = (a - b);
            if (diff > 0)
                return 1;
            if (diff < 0)
                return -1;
            return 0;
        }

        #endregion
    }

    /* Methodology:
     * Force applied at a ray is inversely proportional to the square of distance from source
     * AABB is used to query for shapes that may be affected
     * For each RIGID BODY (not shape -- this is an optimization) that is matched, loop through its vertices to determine
     *		the extreme points -- if there is structure that contains outlining polygon, use that as an additional optimization
     * Evenly cast a number of rays against the shape - number roughly proportional to the arc coverage
     *		- Something like every 3 degrees should do the trick although this can be altered depending on the distance (if really close don't need such a high density of rays)
     *		- There should be a minimum number of rays (3-5?) applied to each body so that small bodies far away are still accurately modeled
     *		- Be sure to have the forces of each ray be proportional to the average arc length covered by each.
     * For each ray that actually intersects with the shape (non intersections indicate something blocking the path of explosion):
     *		- Apply the appropriate force dotted with the negative of the collision normal at the collision point
     *		- Optionally apply linear interpolation between aforementioned Normal force and the original explosion force in the direction of ray to simulate ""surface friction"" of sorts
     */

    /// <summary>
    /// Creates a realistic explosion based on raycasting. Objects in the open will be affected, but objects behind
    /// static bodies will not. A body that is half in cover, half in the open will get half the force applied to the end in
    /// the open.
    /// </summary>
    public sealed class RealExplosion : PhysicsLogic
    {
        /// <summary>
        /// Two degrees: maximum angle from edges to first ray tested
        /// </summary>
        private static readonly FP MaxEdgeOffset = FP.Pi / 90;

        /// <summary>
        /// Ratio of arc length to angle from edges to first ray tested.
        /// Defaults to 1/40.
        /// </summary>
        public FP EdgeRatio = 1.0f / 40.0f;

        /// <summary>
        /// Ignore Explosion if it happens inside a shape.
        /// Default value is false.
        /// </summary>
        public bool IgnoreWhenInsideShape = false;

        /// <summary>
        /// Max angle between rays (used when segment is large).
        /// Defaults to 15 degrees
        /// </summary>
        public FP MaxAngle = FP.Pi / 15;

        /// <summary>
        /// Maximum number of shapes involved in the explosion.
        /// Defaults to 100
        /// </summary>
        public int MaxShapes = 100;

        /// <summary>
        /// How many rays per shape/body/segment.
        /// Defaults to 5
        /// </summary>
        public int MinRays = 5;

        private List<ShapeData> _data = new List<ShapeData>();
        private RayDataComparer _rdc;

        public RealExplosion(World world)
            : base(world, PhysicsLogicType.Explosion)
        {
            _rdc = new RayDataComparer();
            _data = new List<ShapeData>();
        }

        /// <summary>
        /// Activate the explosion at the specified position.
        /// </summary>
        /// <param name=""pos"">The position where the explosion happens </param>
        /// <param name=""radius"">The explosion radius </param>
        /// <param name=""maxForce"">The explosion force at the explosion point (then is inversely proportional to the square of the distance)</param>
        /// <returns>A list of bodies and the amount of force that was applied to them.</returns>
        public Dictionary<Fixture, TSVector2> Activate(TSVector2 pos, FP radius, FP maxForce)
        {
            AABB aabb;
            aabb.LowerBound = pos + new TSVector2(-radius, -radius);
            aabb.UpperBound = pos + new TSVector2(radius, radius);
            Fixture[] shapes = new Fixture[MaxShapes];

            // More than 5 shapes in an explosion could be possible, but still strange.
            Fixture[] containedShapes = new Fixture[5];
            bool exit = false;

            int shapeCount = 0;
            int containedShapeCount = 0;

            // Query the world for overlapping shapes.
            World.QueryAABB(
                fixture =>
                {
                    if (fixture.TestPoint(ref pos))
                    {
                        if (IgnoreWhenInsideShape)
                        {
                            exit = true;
                            return false;
                        }

                        containedShapes[containedShapeCount++] = fixture;
                    }
                    else
                    {
                        shapes[shapeCount++] = fixture;
                    }

                    // Continue the query.
                    return true;
                }, ref aabb);

            if (exit)
                return new Dictionary<Fixture, TSVector2>();

            Dictionary<Fixture, TSVector2> exploded = new Dictionary<Fixture, TSVector2>(shapeCount + containedShapeCount);

            // Per shape max/min angles for now.
            FP[] vals = new FP[shapeCount * 2];
            int valIndex = 0;
            for (int i = 0; i < shapeCount; ++i)
            {
                PolygonShape ps;
                CircleShape cs = shapes[i].Shape as CircleShape;
                if (cs != null)
                {
                    // We create a ""diamond"" approximation of the circle
                    Vertices v = new Vertices();
                    TSVector2 vec = TSVector2.zero + new TSVector2(cs.Radius, 0);
                    v.Add(vec);
                    vec = TSVector2.zero + new TSVector2(0, cs.Radius);
                    v.Add(vec);
                    vec = TSVector2.zero + new TSVector2(-cs.Radius, cs.Radius);
                    v.Add(vec);
                    vec = TSVector2.zero + new TSVector2(0, -cs.Radius);
                    v.Add(vec);
                    ps = new PolygonShape(v, 0);
                }
                else
                    ps = shapes[i].Shape as PolygonShape;

                if ((shapes[i].Body.BodyType == BodyType.Dynamic) && ps != null)
                {
                    TSVector2 toCentroid = shapes[i].Body.GetWorldPoint(ps.MassData.Centroid) - pos;
                    FP angleToCentroid = FP.Atan2(toCentroid.y, toCentroid.x);
                    FP min = FP.MaxValue;
                    FP max = FP.MinValue;
                    FP minAbsolute = 0.0f;
                    FP maxAbsolute = 0.0f;

                    for (int j = 0; j < ps.Vertices.Count; ++j)
                    {
                        TSVector2 toVertex = (shapes[i].Body.GetWorldPoint(ps.Vertices[j]) - pos);
                        FP newAngle = FP.Atan2(toVertex.y, toVertex.x);
                        FP diff = (newAngle - angleToCentroid);

                        diff = (diff - FP.Pi) % (2 * FP.Pi);
                        // the minus pi is important. It means cutoff for going other direction is at 180 deg where it needs to be

                        if (diff < 0.0f)
                            diff += 2 * FP.Pi; // correction for not handling negs

                        diff -= FP.Pi;

                        if (FP.Abs(diff) > FP.Pi)
                            continue; // Something's wrong, point not in shape but exists angle diff > 180

                        if (diff > max)
                        {
                            max = diff;
                            maxAbsolute = newAngle;
                        }
                        if (diff < min)
                        {
                            min = diff;
                            minAbsolute = newAngle;
                        }
                    }

                    vals[valIndex] = minAbsolute;
                    ++valIndex;
                    vals[valIndex] = maxAbsolute;
                    ++valIndex;
                }
            }

            Array.Sort(vals, 0, valIndex, _rdc);
            _data.Clear();
            bool rayMissed = true;

            for (int i = 0; i < valIndex; ++i)
            {
                Fixture fixture = null;
                FP midpt;

                int iplus = (i == valIndex - 1 ? 0 : i + 1);
                if (vals[i] == vals[iplus])
                    continue;

                if (i == valIndex - 1)
                {
                    // the single edgecase
                    midpt = (vals[0] + FP.PiTimes2 + vals[i]);
                }
                else
                {
                    midpt = (vals[i + 1] + vals[i]);
                }

                midpt = midpt / 2;

                TSVector2 p1 = pos;
                TSVector2 p2 = radius * new TSVector2(FP.Cos(midpt), FP.Sin(midpt)) + pos;

                // RaycastOne
                bool hitClosest = false;
                World.RayCast((f, p, n, fr) =>
                                  {
                                      Body body = f.Body;

                                      if (!IsActiveOn(body))
                                          return 0;

                                      hitClosest = true;
                                      fixture = f;
                                      return fr;
                                  }, p1, p2);

                //draws radius points
                if ((hitClosest) && (fixture.Body.BodyType == BodyType.Dynamic))
                {
                    if ((_data.Any()) && (_data.Last().Body == fixture.Body) && (!rayMissed))
                    {
                        int laPos = _data.Count - 1;
                        ShapeData la = _data[laPos];
                        la.Max = vals[iplus];
                        _data[laPos] = la;
                    }
                    else
                    {
                        // make new
                        ShapeData d;
                        d.Body = fixture.Body;
                        d.Min = vals[i];
                        d.Max = vals[iplus];
                        _data.Add(d);
                    }

                    if ((_data.Count > 1)
                        && (i == valIndex - 1)
                        && (_data.Last().Body == _data.First().Body)
                        && (_data.Last().Max == _data.First().Min))
                    {
                        ShapeData fi = _data[0];
                        fi.Min = _data.Last().Min;
                        _data.RemoveAt(_data.Count - 1);
                        _data[0] = fi;
                        while (_data.First().Min >= _data.First().Max)
                        {
                            fi.Min -= FP.PiTimes2;
                            _data[0] = fi;
                        }
                    }

                    int lastPos = _data.Count - 1;
                    ShapeData last = _data[lastPos];
                    while ((_data.Count > 0)
                           && (_data.Last().Min >= _data.Last().Max)) // just making sure min<max
                    {
                        last.Min = _data.Last().Min - FP.PiTimes2;
                        _data[lastPos] = last;
                    }
                    rayMissed = false;
                }
                else
                {
                    rayMissed = true; // raycast did not find a shape
                }
            }

            for (int i = 0; i < _data.Count; ++i)
            {
                if (!IsActiveOn(_data[i].Body))
                    continue;

                FP arclen = _data[i].Max - _data[i].Min;

                FP first = TSMath.Min(MaxEdgeOffset, EdgeRatio * arclen);
                int insertedRays = FP.Ceiling((((arclen - 2.0f * first) - (MinRays - 1) * MaxAngle) / MaxAngle)).AsInt();

                if (insertedRays < 0)
                    insertedRays = 0;

                FP offset = (arclen - first * 2.0f) / ((FP)MinRays + insertedRays - 1);

                //Note: This loop can go into infinite as it operates on FPs.
                //Added FPEquals with a large epsilon.
                for (FP j = _data[i].Min + first;
                     j < _data[i].Max || MathUtils.FPEquals(j, _data[i].Max, 0.0001f);
                     j += offset)
                {
                    TSVector2 p1 = pos;
                    TSVector2 p2 = pos + radius * new TSVector2(FP.Cos(j), FP.Sin(j));
                    TSVector2 hitpoint = TSVector2.zero;
                    FP minlambda = FP.MaxValue;

                    List<Fixture> fl = _data[i].Body.FixtureList;
                    for (int x = 0; x < fl.Count; x++)
                    {
                        Fixture f = fl[x];
                        RayCastInput ri;
                        ri.Point1 = p1;
                        ri.Point2 = p2;
                        ri.MaxFraction = 50f;

                        RayCastOutput ro;
                        if (f.RayCast(out ro, ref ri, 0))
                        {
                            if (minlambda > ro.Fraction)
                            {
                                minlambda = ro.Fraction;
                                hitpoint = ro.Fraction * p2 + (1 - ro.Fraction) * p1;
                            }
                        }

                        // the force that is to be applied for this particular ray.
                        // offset is angular coverage. lambda*length of segment is distance.
                        FP impulse = (arclen / (MinRays + insertedRays)) * maxForce * 180.0f / FP.Pi * (1.0f - TrueSync.TSMath.Min(FP.One, minlambda));

                        // We Apply the impulse!!!
                        TSVector2 vectImp = TSVector2.Dot(impulse * new TSVector2(FP.Cos(j), FP.Sin(j)), -ro.Normal) * new TSVector2(FP.Cos(j), FP.Sin(j));
                        _data[i].Body.ApplyLinearImpulse(ref vectImp, ref hitpoint);

                        // We gather the fixtures for returning them
                        if (exploded.ContainsKey(f))
                            exploded[f] += vectImp;
                        else
                            exploded.Add(f, vectImp);

                        if (minlambda > 1.0f)
                            hitpoint = p2;
                    }
                }
            }

            // We check contained shapes
            for (int i = 0; i < containedShapeCount; ++i)
            {
                Fixture fix = containedShapes[i];

                if (!IsActiveOn(fix.Body))
                    continue;

                FP impulse = MinRays * maxForce * 180.0f / FP.Pi;
                TSVector2 hitPoint;

                CircleShape circShape = fix.Shape as CircleShape;
                if (circShape != null)
                {
                    hitPoint = fix.Body.GetWorldPoint(circShape.Position);
                }
                else
                {
                    PolygonShape shape = fix.Shape as PolygonShape;
                    hitPoint = fix.Body.GetWorldPoint(shape.MassData.Centroid);
                }

                TSVector2 vectImp = impulse * (hitPoint - pos);

                fix.Body.ApplyLinearImpulse(ref vectImp, ref hitPoint);

                if (!exploded.ContainsKey(fix))
                    exploded.Add(fix, vectImp);
            }

            return exploded;
        }
    }
}",C#
"﻿using System;
using CommandLine;
using System.IO;
using Nancy.Hosting.Self;
using SeudoBuild.Core;
using SeudoBuild.Core.FileSystems;
using SeudoBuild.Pipeline;
using SeudoBuild.Net;

namespace SeudoBuild.Agent
{
    class Program
    {
        private const string Header = @""
                _     _       _ _   _ 
  ___ ___ _ _ _| |___| |_ _ _|_| |_| |
 |_ -| -_| | | . | . | . | | | | | . |
 |___|___|___|___|___|___|___|_|_|___|
                                      
"";

        private static ILogger _logger;

        [Verb(""build"", HelpText = ""Create a local build."")]
        private class BuildSubOptions
        {
            [Option('t', ""build-target"", HelpText = ""Name of the build target as specified in the project configuration file. If no build target is specified, the first target will be used."")]
            public string BuildTarget { get; set; }

            [Option('o', ""output-folder"", HelpText = ""Path to the build output folder."")]
            public string OutputPath { get; set; }

            [Value(0, MetaName = ""project"", HelpText = ""Path to a project configuration file."", Required = true)]
            public string ProjectConfigPath { get; set; }
        }

        [Verb(""scan"", HelpText = ""List build agents found on the local network."")]
        private class ScanSubOptions
        {
        }

        [Verb(""submit"", HelpText = ""Submit a build request for a remote build agent to fulfill."")]
        private class SubmitSubOptions
        {
            [Option('p', ""project-config"", HelpText = ""Path to a project configuration file."", Required = true)]
            public string ProjectConfigPath { get; set; }

            [Option('t', ""build-target"", HelpText = ""Name of the target to build as specified in the project configuration file."")]
            public string BuildTarget { get; set; }

            [Option('a', ""agent-name"", HelpText = ""The unique name of a specific build agent. If not set, the job will be broadcast to all available agents."")]
            public string AgentName { get; set; }
        }

        [Verb(""queue"", HelpText = ""Queue build requests received over the network."")]
        private class QueueSubOptions
        {
            [Option('n', ""agent-name"", HelpText = ""A unique name for the build agent. If not set, a name will be generated."")]
            public string AgentName { get; set; }

            [Option('p', ""port"", HelpText = ""Port on which to listen for build queue messages."")]
            public int? Port { get; set; }
        }

        [Verb(""deploy"", HelpText = ""Listen for deployment messages."")]
        private class DeploySubOptions
        {
        }

        [Verb(""name"", Hidden = true)]
        private class NameSubOptions
        {
            [Option('r', ""random"")]
            public bool Random { get; set; }
        }

        public static void Main(string[] args)
        {
            _logger = new Logger();

            Console.Title = ""SeudoBuild"";

            Parser.Default.ParseArguments<BuildSubOptions, ScanSubOptions, SubmitSubOptions, QueueSubOptions, DeploySubOptions, NameSubOptions>(args)
                .MapResult(
                    (BuildSubOptions opts) => Build(opts),
                    (ScanSubOptions opts) => Scan(opts),
                    (SubmitSubOptions opts) => Submit(opts),
                    (QueueSubOptions opts) => Queue(opts),
                    (DeploySubOptions opts) => Deploy(opts),
                    (NameSubOptions opts) => ShowAgentName(opts),
                    errs => 1
                );
        }

        /// <summary>
        /// Build a single target, then exit.
        /// </summary>
        private static int Build(BuildSubOptions opts)
        {
            Console.Title = ""SeudoBuild • Build"";
            Console.WriteLine(Header);

            // Load pipeline modules
            var factory = new ModuleLoaderFactory();
            IModuleLoader moduleLoader = factory.Create(_logger);

            // Load project config
            ProjectConfig projectConfig = null;
            try
            {
                var fs = new WindowsFileSystem();
                var serializer = new Serializer(fs);
                var converters = moduleLoader.Registry.GetJsonConverters();
                projectConfig = serializer.DeserializeFromFile<ProjectConfig>(opts.ProjectConfigPath, converters);
            }
            catch (Exception e)
            {
                Console.WriteLine(""Can't parse project config:"");
                Console.WriteLine(e.Message);
                return 1;
            }

            // Execute build
            var builder = new Builder(moduleLoader, _logger);

            var parentDirectory = opts.OutputPath;
            if (string.IsNullOrEmpty(parentDirectory))
            {
                // Config file's directory
                parentDirectory = new FileInfo(opts.ProjectConfigPath).Directory?.FullName;
            }

            var pipeline = new PipelineRunner(new PipelineConfig { BaseDirectory = parentDirectory }, _logger);
            bool success = builder.Build(pipeline, projectConfig, opts.BuildTarget);

            return success ? 0 : 1;
        }

        /// <summary>
        /// Discover build agents on the network.
        /// </summary>
        private static int Scan(ScanSubOptions opts)
        {
            Console.Title = ""SeudoBuild • Scan"";
            Console.WriteLine(Header);

            Console.WriteLine(""Looking for build agents. Press any key to exit."");
            // FIXME fill in port from command line argument
            var locator = new AgentLocator(5511);
            try
            {
                locator.Start();
            }
            catch
            {
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine(""Could not start build agent discovery client"");
                Console.ResetColor();
                return 1;
            }
            // FIXME don't hard-code port
            locator.AgentFound += (agent) =>
            {
                _logger.Write($""{agent.AgentName} ({agent.Address})"", LogType.Bullet);
            };
            locator.AgentLost += (agent) =>
            {
                _logger.Write($""Lost agent: {agent.AgentName} ({agent.Address})"", LogType.Bullet);
            };
            Console.WriteLine();
            Console.ReadKey();
            return 0;
        }

        /// <summary>
        /// Submit a build job to another agent.
        /// </summary>
        private static int Submit(SubmitSubOptions opts)
        {
            Console.Title = ""SeudoBuild • Submit"";
            Console.WriteLine(Header);

            string configJson = null;
            try
            {
                configJson = File.ReadAllText(opts.ProjectConfigPath);
            }
            catch
            {
                _logger.Write(""Project could not be read from "" + opts.ProjectConfigPath, LogType.Failure);
                return 1;
            }

            var buildSubmitter = new BuildSubmitter(_logger);
            try
            {
                // Find agent on the network, with timeout
                var discoveryClient = new UdpDiscoveryClient();
                buildSubmitter.Submit(discoveryClient, configJson, opts.BuildTarget, opts.AgentName);
            }
            catch (Exception e)
            {
                _logger.Write(""Could not submit job: "" + e.Message, LogType.Failure);
                return 1;
            }

            return 0;
        }

        /// <summary>
        /// Receive build jobs from other agents or clients, queue them, and execute them.
        /// Continue listening until user exits.
        /// </summary>
        private static int Queue(QueueSubOptions opts)
        {
            Console.Title = ""SeudoBuild • Queue"";
            Console.WriteLine(Header);

            //string agentName = string.IsNullOrEmpty(opts.AgentName) ? AgentName.GetUniqueAgentName() : opts.AgentName;
            // FIXME pull port from command line argument, and incorporate into ServerBeacon object
            int port = 5511;
            if (opts.Port.HasValue)
            {
                port = opts.Port.Value;
            }

            // Starting the Nancy server will automatically execute the Bootstrapper class
            var uri = new Uri($""http://localhost:{port}"");
            using (var host = new NancyHost(uri))
            {
                _logger.Write("""");
                try
                {
                    host.Start();

                    _logger.Write(""Build Queue"", LogType.Header);
                    _logger.Write("""");
                    _logger.Write(""Started build agent server: "" + uri, LogType.Bullet);

                    try
                    {
                        // FIXME configure the port from a command line argument
                        var serverInfo = new UdpDiscoveryBeacon { Port = 5511 };
                        var discovery = new UdpDiscoveryServer(serverInfo);
                        discovery.Start();
                        _logger.Write(""Build agent discovery beacon started"", LogType.Bullet);
                    }
                    catch
                    {
                        _logger.Write(""Could not initialize build agent discovery beacon"", LogType.Alert);
                    }
                }
                catch (Exception e)
                {
                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.WriteLine(""Could not start build server: "" + e.Message);
                    Console.ResetColor();
                    return 1;
                }
                Console.WriteLine("""");
                Console.WriteLine(""Press any key to exit."");
                Console.ReadKey();
            }

            return 0;
        }

        /// <summary>
        /// Deploy a build product on the local machine.
        /// </summary>
        private static int Deploy(DeploySubOptions opts)
        {
            return 0;
        }

        /// <summary>
        /// Display the unique name for this agent.
        /// </summary>
        private static int ShowAgentName(NameSubOptions opts)
        {
            string name;
            name = opts.Random ? AgentName.GetRandomName() : AgentName.GetUniqueAgentName();
            Console.WriteLine();
            Console.WriteLine(name);
            Console.WriteLine();
            return 0;
        }
    }
}
",C#
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(""SendGrid Webhook Example"")]
[assembly: AssemblyDescription("""")]
[assembly: AssemblyConfiguration("""")]
[assembly: AssemblyCompany(""Stack Solutions - www.stack-solutions.com"")]
[assembly: AssemblyProduct("""")]
[assembly: AssemblyCopyright(""Copyright ©  2013"")]
[assembly: AssemblyTrademark("""")]
[assembly: AssemblyCulture("""")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid(""5e2f0c44-ee9f-43b9-815e-c862ed19a18b"")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:
[assembly: AssemblyVersion(""1.0.0.0"")]
[assembly: AssemblyFileVersion(""1.0.0.0"")]
",C#
"﻿using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class UIButton : MonoBehaviour {

    [SerializeField] private GameObject targetObject;
    [SerializeField] private string targetMessage;

    public Color highlightColor = Color.cyan;

    public void OnMouseOver() {
        SpriteRenderer sprite = GetComponent<SpriteRenderer>();
        if (sprite != null) {
            sprite.color = highlightColor;
        }
    }

    public void OnMouseExit() {
        SpriteRenderer sprite = GetComponent<SpriteRenderer>();
        if (sprite != null) {
            sprite.color = Color.white;
        }
    }

    public void OnMouseDown() {
        transform.localScale *= 1.1f;
    }

    public void OnMouseUp() {
        transform.localScale = Vector3.one;
        if (targetObject != null) {
            targetObject.SendMessage(targetMessage);
        }
    }
}
",C#
"﻿using SolrExpress.Search.Parameter;
using System;
using System.Globalization;
using System.Linq;
using System.Text;

namespace SolrExpress.Utility
{
    /// <summary>
    /// Helper class used to extract information inside parameters
    /// </summary>
    internal static class ParameterUtil
    {
        /// <summary>
        /// Get the sort type and direction
        /// </summary>
        /// <param name=""solrFacetSortType"">Type used in match</param>
        /// <param name=""typeName"">Type name</param>
        /// <param name=""sortName"">Sort direction</param>
        public static void GetFacetSort(FacetSortType solrFacetSortType, out string typeName, out string sortName)
        {
            switch (solrFacetSortType)
            {
                case FacetSortType.IndexAsc:
                    typeName = ""index"";
                    sortName = ""asc"";
                    break;
                case FacetSortType.IndexDesc:
                    typeName = ""index"";
                    sortName = ""desc"";
                    break;
                case FacetSortType.CountAsc:
                    typeName = ""count"";
                    sortName = ""asc"";
                    break;
                case FacetSortType.CountDesc:
                    typeName = ""count"";
                    sortName = ""desc"";
                    break;
                default:
                    throw new ArgumentException(nameof(solrFacetSortType));
            }
        }

        /// <summary>
        /// Calculate and returns spatial formule
        /// </summary>
        /// <param name=""fieldName"">Field name</param>
        /// <param name=""functionType"">Function used in spatial filter</param>
        /// <param name=""centerPoint"">Center point to spatial filter</param>
        /// <param name=""distance"">Distance from center point</param>
        /// <returns>Spatial formule</returns>
        internal static string GetSpatialFormule(string fieldName, SpatialFunctionType functionType, GeoCoordinate centerPoint, decimal distance)
        {
            var functionTypeStr = functionType.ToString().ToLower();
            var latitude = centerPoint.Latitude.ToString(""G"", CultureInfo.InvariantCulture);
            var longitude = centerPoint.Longitude.ToString(""G"", CultureInfo.InvariantCulture);
            var distanceStr = distance.ToString(""G"", CultureInfo.InvariantCulture);

            return $""{{!{functionTypeStr} sfield={fieldName} pt={latitude},{longitude} d={distanceStr}}}"";
        }

        /// <summary>
        /// Get the field with excludes
        /// </summary>
        /// <param name=""excludes"">Excludes tags</param>
        /// <param name=""aliasName"">Alias name</param>
        /// <param name=""fieldName"">Field name</param>
        internal static string GetFacetName(string[] excludes, string aliasName, string fieldName)
        {
            var sb = new StringBuilder();
            var needsBraces = (excludes?.Any() ?? false) || !string.IsNullOrWhiteSpace(aliasName);

            if (needsBraces)
            {
                sb.Append(""{!"");
            }

            if (excludes?.Any() ?? false)
            {
                sb.Append($""ex={string.Join("","", excludes)}"");
            }

            if (sb.Length > 2)
            {
                sb.Append("" "");
            }

            if (!string.IsNullOrWhiteSpace(aliasName))
            {
                sb.Append($""key={aliasName}"");
            }

            if (needsBraces)
            {
                sb.Append(""}"");
            }

            sb.Append(fieldName);

            return sb.ToString();
        }

        /// <summary>
        /// Get the filter with tag
        /// </summary>
        /// <param name=""query"">Query value</param>
        /// <param name=""aliasName"">Alias name</param>
        public static string GetFilterWithTag(string query, string aliasName)
        {
            return !string.IsNullOrWhiteSpace(aliasName) ? $""{{!tag={aliasName}}}{query}"" : query;
        }
    }
}
",C#
"﻿namespace gView.Plugins.DbTools.Relates
{
    partial class TableRelationsDialog
    {
        /// <summary>
        /// Erforderliche Designervariable.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// Verwendete Ressourcen bereinigen.
        /// </summary>
        /// <param name=""disposing"">True, wenn verwaltete Ressourcen gelöscht werden sollen; andernfalls False.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Vom Windows Form-Designer generierter Code

        /// <summary>
        /// Erforderliche Methode für die Designerunterstützung.
        /// Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
        /// </summary>
        private void InitializeComponent()
        {
            this.btnRemove = new System.Windows.Forms.Button();
            this.btnEdit = new System.Windows.Forms.Button();
            this.btnAdd = new System.Windows.Forms.Button();
            this.btnClose = new System.Windows.Forms.Button();
            this.lstRelates = new System.Windows.Forms.ListBox();
            this.SuspendLayout();
            // 
            // btnRemove
            // 
            this.btnRemove.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right)));
            this.btnRemove.Enabled = false;
            this.btnRemove.Location = new System.Drawing.Point(323, 60);
            this.btnRemove.Name = ""btnRemove"";
            this.btnRemove.Size = new System.Drawing.Size(125, 23);
            this.btnRemove.TabIndex = 9;
            this.btnRemove.Text = ""Remove"";
            this.btnRemove.UseVisualStyleBackColor = true;
            this.btnRemove.Click += new System.EventHandler(this.btnRemove_Click);
            // 
            // btnEdit
            // 
            this.btnEdit.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right)));
            this.btnEdit.Enabled = false;
            this.btnEdit.Location = new System.Drawing.Point(323, 31);
            this.btnEdit.Name = ""btnEdit"";
            this.btnEdit.Size = new System.Drawing.Size(125, 23);
            this.btnEdit.TabIndex = 8;
            this.btnEdit.Text = ""Edit..."";
            this.btnEdit.UseVisualStyleBackColor = true;
            this.btnEdit.Click += new System.EventHandler(this.btnEdit_Click);
            // 
            // btnAdd
            // 
            this.btnAdd.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right)));
            this.btnAdd.Location = new System.Drawing.Point(323, 2);
            this.btnAdd.Name = ""btnAdd"";
            this.btnAdd.Size = new System.Drawing.Size(125, 23);
            this.btnAdd.TabIndex = 7;
            this.btnAdd.Text = ""Add..."";
            this.btnAdd.UseVisualStyleBackColor = true;
            this.btnAdd.Click += new System.EventHandler(this.btnAdd_Click);
            // 
            // btnClose
            // 
            this.btnClose.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right)));
            this.btnClose.DialogResult = System.Windows.Forms.DialogResult.OK;
            this.btnClose.Location = new System.Drawing.Point(323, 180);
            this.btnClose.Name = ""btnClose"";
            this.btnClose.Size = new System.Drawing.Size(125, 23);
            this.btnClose.TabIndex = 6;
            this.btnClose.Text = ""Close"";
            this.btnClose.UseVisualStyleBackColor = true;
            // 
            // lstRelates
            // 
            this.lstRelates.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)
                        | System.Windows.Forms.AnchorStyles.Left)
                        | System.Windows.Forms.AnchorStyles.Right)));
            this.lstRelates.FormattingEnabled = true;
            this.lstRelates.Location = new System.Drawing.Point(2, 2);
            this.lstRelates.Name = ""lstRelates"";
            this.lstRelates.Size = new System.Drawing.Size(315, 199);
            this.lstRelates.TabIndex = 5;
            this.lstRelates.SelectedIndexChanged += new System.EventHandler(this.lstRelates_SelectedIndexChanged);
            // 
            // TableRelatesDialog
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.ClientSize = new System.Drawing.Size(450, 206);
            this.Controls.Add(this.btnRemove);
            this.Controls.Add(this.btnEdit);
            this.Controls.Add(this.btnAdd);
            this.Controls.Add(this.btnClose);
            this.Controls.Add(this.lstRelates);
            this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.SizableToolWindow;
            this.Name = ""TableRelatesDialog"";
            this.Text = ""Relates Dialog"";
            this.ResumeLayout(false);

        }

        #endregion

        private System.Windows.Forms.Button btnRemove;
        private System.Windows.Forms.Button btnEdit;
        private System.Windows.Forms.Button btnAdd;
        private System.Windows.Forms.Button btnClose;
        private System.Windows.Forms.ListBox lstRelates;
    }
}",C#
"package fyskam.fyskamssngbok;


import android.app.Activity;
import android.app.ActionBar;
import android.app.Fragment;
import android.support.v4.app.ActionBarDrawerToggle;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.content.SharedPreferences;
import android.content.res.Configuration;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

/**
 * Fragment used for managing interactions for and presentation of a navigation drawer.
 * See the <a href=""https://developer.android.com/design/patterns/navigation-drawer.html#Interaction"">
 * design guidelines</a> for a complete explanation of the behaviors implemented here.
 */
public class NavigationDrawerFragment extends Fragment {

    /**
     * Remember the position of the selected item.
     */
    private static final String STATE_SELECTED_POSITION = ""selected_navigation_drawer_position"";

    /**
     * Per the design guidelines, you should show the drawer on launch until the user manually
     * expands it. This shared preference tracks this.
     */
    private static final String PREF_USER_LEARNED_DRAWER = ""navigation_drawer_learned"";

    /**
     * A pointer to the current callbacks instance (the Activity).
     */
    private NavigationDrawerCallbacks mCallbacks;

    /**
     * Helper component that ties the action bar to the navigation drawer.
     */
    private ActionBarDrawerToggle mDrawerToggle;

    private DrawerLayout mDrawerLayout;
    private ListView mDrawerListView;
    private View mFragmentContainerView;

    private int mCurrentSelectedPosition = 0;
    private boolean mFromSavedInstanceState;
    private boolean mUserLearnedDrawer;

    public NavigationDrawerFragment() {
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // Read in the flag indicating whether or not the user has demonstrated awareness of the
        // drawer. See PREF_USER_LEARNED_DRAWER for details.
        SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
        mUserLearnedDrawer = sp.getBoolean(PREF_USER_LEARNED_DRAWER, false);

        if (savedInstanceState != null) {
            mCurrentSelectedPosition = savedInstanceState.getInt(STATE_SELECTED_POSITION);
            mFromSavedInstanceState = true;
        }

        // Select either the default item (0) or the last selected item.
        selectItem(mCurrentSelectedPosition);
    }

    @Override
    public void onActivityCreated (Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        // Indicate that this fragment would like to influence the set of actions in the action bar.
        setHasOptionsMenu(true);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
            Bundle savedInstanceState) {
        mDrawerListView = (ListView) inflater.inflate(
                R.layout.fragment_navigation_drawer, container, false);
        mDrawerListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                selectItem(position);
            }
        });
        mDrawerListView.setAdapter(new ArrayAdapter<String>(
                getActionBar().getThemedContext(),
                android.R.layout.simple_list_item_activated_1,
                android.R.id.text1,
                new String[]{
                        getString(R.string.title_section1),
                        getString(R.string.title_section2),
                        getString(R.string.title_section3),
                }));
        mDrawerListView.setItemChecked(mCurrentSelectedPosition, true);
        return mDrawerListView;
    }

    public boolean isDrawerOpen() {
        return mDrawerLayout != null && mDrawerLayout.isDrawerOpen(mFragmentContainerView);
    }

    /**
     * Users of this fragment must call this method to set up the navigation drawer interactions.
     *
     * @param fragmentId   The android:id of this fragment in its activity's layout.
     * @param drawerLayout The DrawerLayout containing this fragment's UI.
     */
    public void setUp(int fragmentId, DrawerLayout drawerLayout) {
        mFragmentContainerView = getActivity().findViewById(fragmentId);
        mDrawerLayout = drawerLayout;

        // set a custom shadow that overlays the main content when the drawer opens
        mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow, GravityCompat.START);
        // set up the drawer's list view with items and click listener

        ActionBar actionBar = getActionBar();
        actionBar.setDisplayHomeAsUpEnabled(true);
        actionBar.setHomeButtonEnabled(true);

        // ActionBarDrawerToggle ties together the the proper interactions
        // between the navigation drawer and the action bar app icon.
        mDrawerToggle = new ActionBarDrawerToggle(
                getActivity(),                    /* host Activity */
                mDrawerLayout,                    /* DrawerLayout object */
                R.drawable.ic_drawer,             /* nav drawer image to replace 'Up' caret */
                R.string.navigation_drawer_open,  /* ""open drawer"" description for accessibility */
                R.string.navigation_drawer_close  /* ""close drawer"" description for accessibility */
        ) {
            @Override
            public void onDrawerClosed(View drawerView) {
                super.onDrawerClosed(drawerView);
                if (!isAdded()) {
                    return;
                }

                getActivity().invalidateOptionsMenu(); // calls onPrepareOptionsMenu()
            }

            @Override
            public void onDrawerOpened(View drawerView) {
                super.onDrawerOpened(drawerView);
                if (!isAdded()) {
                    return;
                }

                if (!mUserLearnedDrawer) {
                    // The user manually opened the drawer; store this flag to prevent auto-showing
                    // the navigation drawer automatically in the future.
                    mUserLearnedDrawer = true;
                    SharedPreferences sp = PreferenceManager
                            .getDefaultSharedPreferences(getActivity());
                    sp.edit().putBoolean(PREF_USER_LEARNED_DRAWER, true).apply();
                }

                getActivity().invalidateOptionsMenu(); // calls onPrepareOptionsMenu()
            }
        };

        // If the user hasn't 'learned' about the drawer, open it to introduce them to the drawer,
        // per the navigation drawer design guidelines.
        if (!mUserLearnedDrawer && !mFromSavedInstanceState) {
            mDrawerLayout.openDrawer(mFragmentContainerView);
        }

        // Defer code dependent on restoration of previous instance state.
        mDrawerLayout.post(new Runnable() {
            @Override
            public void run() {
                mDrawerToggle.syncState();
            }
        });

        mDrawerLayout.setDrawerListener(mDrawerToggle);
    }

    private void selectItem(int position) {
        mCurrentSelectedPosition = position;
        if (mDrawerListView != null) {
            mDrawerListView.setItemChecked(position, true);
        }
        if (mDrawerLayout != null) {
            mDrawerLayout.closeDrawer(mFragmentContainerView);
        }
        if (mCallbacks != null) {
            mCallbacks.onNavigationDrawerItemSelected(position);
        }
    }

    @Override
    public void onAttach(Activity activity) {
        super.onAttach(activity);
        try {
            mCallbacks = (NavigationDrawerCallbacks) activity;
        } catch (ClassCastException e) {
            throw new ClassCastException(""Activity must implement NavigationDrawerCallbacks."");
        }
    }

    @Override
    public void onDetach() {
        super.onDetach();
        mCallbacks = null;
    }

    @Override
    public void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        outState.putInt(STATE_SELECTED_POSITION, mCurrentSelectedPosition);
    }

    @Override
    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);
        // Forward the new configuration the drawer toggle component.
        mDrawerToggle.onConfigurationChanged(newConfig);
    }

    @Override
    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
        // If the drawer is open, show the global app actions in the action bar. See also
        // showGlobalContextActionBar, which controls the top-left area of the action bar.
        if (mDrawerLayout != null && isDrawerOpen()) {
            inflater.inflate(R.menu.global, menu);
            showGlobalContextActionBar();
        }
        super.onCreateOptionsMenu(menu, inflater);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        if (mDrawerToggle.onOptionsItemSelected(item)) {
            return true;
        }

        if (item.getItemId() == R.id.action_example) {
            Toast.makeText(getActivity(), ""Example action."", Toast.LENGTH_SHORT).show();
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    /**
     * Per the navigation drawer design guidelines, updates the action bar to show the global app
     * 'context', rather than just what's in the current screen.
     */
    private void showGlobalContextActionBar() {
        ActionBar actionBar = getActionBar();
        actionBar.setDisplayShowTitleEnabled(true);
        actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);
        actionBar.setTitle(R.string.app_name);
    }

    private ActionBar getActionBar() {
        return getActivity().getActionBar();
    }

    /**
     * Callbacks interface that all activities using this fragment must implement.
     */
    public static interface NavigationDrawerCallbacks {
        /**
         * Called when an item in the navigation drawer is selected.
         */
        void onNavigationDrawerItemSelected(int position);
    }
}
",Java
"package com.carlisle.incubators.PopupWindow;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import com.carlisle.incubators.R;

/**
 * Created by chengxin on 11/24/16.
 */

public class PopupWindowActivity extends AppCompatActivity {

    private PopupView popupView;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_popup_window);

        popupView = new PopupView(this);
    }

    public void onButtonClick(View view) {
        //popupView.showAsDropDown(view);
        popupView.showAsDropUp(view);
    }
}
",Java
"package com.agileEAP.workflow.definition;


/** 
 活动类型
 
*/
public enum ActivityType
{
	/** 
	 开始活动
	 
	*/
//C# TO JAVA CONVERTER TODO TASK: Java annotations will not correspond to .NET attributes:
	//[Remark(""开始活动"")]
	StartActivity(1),

	/** 
	 人工活动
	 
	*/
//C# TO JAVA CONVERTER TODO TASK: Java annotations will not correspond to .NET attributes:
	//[Remark(""人工活动"")]
	ManualActivity(2),

	/** 
	 路由活动
	 
	*/
//C# TO JAVA CONVERTER TODO TASK: Java annotations will not correspond to .NET attributes:
	//[Remark(""路由活动"")]
	RouterActivity(3),

	/** 
	 子流程活动
	 
	*/
//C# TO JAVA CONVERTER TODO TASK: Java annotations will not correspond to .NET attributes:
	//[Remark(""子流程活动"")]
	SubflowActivity(4),
	/** 
	 自动活动
	 
	*/
//C# TO JAVA CONVERTER TODO TASK: Java annotations will not correspond to .NET attributes:
	//[Remark(""自动活动"")]
	AutoActivity(5),

	/** 
	 结束活动
	 
	*/
//C# TO JAVA CONVERTER TODO TASK: Java annotations will not correspond to .NET attributes:
	//[Remark(""结束活动"")]
	EndActivity(6),

	/** 
	 处理活动
	 
	*/
//C# TO JAVA CONVERTER TODO TASK: Java annotations will not correspond to .NET attributes:
	//[Remark(""处理活动"")]
	ProcessActivity(7);

	private int intValue;
	private static java.util.HashMap<Integer, ActivityType> mappings;
	private synchronized static java.util.HashMap<Integer, ActivityType> getMappings()
	{
		if (mappings == null)
		{
			mappings = new java.util.HashMap<Integer, ActivityType>();
		}
		return mappings;
	}

	private ActivityType(int value)
	{
		intValue = value;
		ActivityType.getMappings().put(value, this);
	}

	public int getValue()
	{
		return intValue;
	}

	public static ActivityType forValue(int value)
	{
		return getMappings().get(value);
	}
}",Java
"/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package config;

import interfaces.*;
import java.sql.*;
import java.util.logging.*;
import javax.swing.*;

/**
 *
 * @author Luis G
 */
public class Connector {

    public Connector() {

    }

    protected boolean getData(String query, Callback callback) {
        ResultSet rs = null;
        Connection conn = null;
        Statement stmt = null;
        boolean isNull = false;
        try {
            connect();
            conn = DriverManager.getConnection(""jdbc:mysql://localhost:3306/escuela"", ""root"", """");
            stmt = conn.createStatement();
            rs = stmt.executeQuery(query);
            for (int i = 0; rs.next(); i++) {
                callback.callback(rs, i);
            }
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(Connector.class.getName()).log(Level.SEVERE, null, ex);
        }
        return isNull;
    }

    protected ResultSet getData(String query) {
        ResultSet rs = null;
        Connection conn = null;
        Statement stmt = null;
        try {
            connect();
            conn = DriverManager.getConnection(""jdbc:mysql://localhost:3306/escuela"", ""root"", """");
            stmt = conn.createStatement();
            rs = stmt.executeQuery(query);
        } catch (Exception e) {
            System.out.println(e);
        }
        return rs;
    }

    protected int executeQuery(String query) {
        int id = -1;
        try {
            connect();
            Connection conn = DriverManager.getConnection(""jdbc:mysql://localhost:3306/escuela"", ""root"", """");
            Statement stmt = conn.createStatement();
            id = stmt.executeUpdate(query, Statement.RETURN_GENERATED_KEYS);
            ResultSet rs = stmt.getGeneratedKeys();
            if (rs.next()) {
                id = rs.getInt(1);
            }
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            Logger.getLogger(Connector.class.getName()).log(Level.SEVERE, null, e);
            switch (e.getErrorCode()) {
                case 1062:
                    JOptionPane.showMessageDialog(null, ""Ese correo ya esta registrado"", ""error"", 0);
                    break;
                case 1054:
                    JOptionPane.showMessageDialog(null, ""El registro no existe"", ""error"", 0);
                    break;
                default:
                    JOptionPane.showMessageDialog(null, ""A ocurrido un error "" + e, ""error"", 0);
                    System.out.println(e);
                    break;
            }
        }
        return id;
    }

    private void connect() {
        try {
            Class.forName(""com.mysql.jdbc.Driver"");
        } catch (Exception e) {
        }
    }

}
",Java
"//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href=""http://java.sun.com/xml/jaxb"">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.02 at 01:00:06 PM UYT 
//


package dgi.classes.respuestas.reporte;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for RSAKeyValueType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name=""RSAKeyValueType"">
 *   &lt;complexContent>
 *     &lt;restriction base=""{http://www.w3.org/2001/XMLSchema}anyType"">
 *       &lt;sequence>
 *         &lt;element name=""Modulus"" type=""{http://www.w3.org/2000/09/xmldsig#}CryptoBinary""/>
 *         &lt;element name=""Exponent"" type=""{http://www.w3.org/2000/09/xmldsig#}CryptoBinary""/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = ""RSAKeyValueType"", propOrder = {
    ""modulus"",
    ""exponent""
})
public class RSAKeyValueType {

    @XmlElement(name = ""Modulus"", required = true)
    protected byte[] modulus;
    @XmlElement(name = ""Exponent"", required = true)
    protected byte[] exponent;

    /**
     * Gets the value of the modulus property.
     * 
     * @return
     *     possible object is
     *     byte[]
     */
    public byte[] getModulus() {
        return modulus;
    }

    /**
     * Sets the value of the modulus property.
     * 
     * @param value
     *     allowed object is
     *     byte[]
     */
    public void setModulus(byte[] value) {
        this.modulus = value;
    }

    /**
     * Gets the value of the exponent property.
     * 
     * @return
     *     possible object is
     *     byte[]
     */
    public byte[] getExponent() {
        return exponent;
    }

    /**
     * Sets the value of the exponent property.
     * 
     * @param value
     *     allowed object is
     *     byte[]
     */
    public void setExponent(byte[] value) {
        this.exponent = value;
    }

}
",Java
"package org.eggermont.hm.cluster;

import cern.colt.matrix.DoubleFactory1D;
import cern.colt.matrix.DoubleMatrix1D;
import cern.colt.matrix.DoubleMatrix2D;

public class ClusterFactory {

    private final DoubleMatrix2D x;

    private final DoubleMatrix1D blocks;

    private final DoubleMatrix1D vMin;

    private final DoubleMatrix1D vMax;

    private final int ndof;

    public ClusterFactory(int d, int nidx, int ndof) {
        this.ndof = ndof;
        this.blocks = DoubleFactory1D.dense.make(d * nidx);
        this.x = blocks.like2D(nidx, d);
        this.vMin = DoubleFactory1D.dense.make(d);
        this.vMax = DoubleFactory1D.dense.make(d);
    }

}
",Java
"package eu.hgross.blaubot.android.views;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.os.Handler;
import android.os.Looper;
import android.util.AttributeSet;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.List;
import java.util.Map.Entry;
import java.util.Set;

import eu.hgross.blaubot.admin.AbstractAdminMessage;
import eu.hgross.blaubot.admin.CensusMessage;
import eu.hgross.blaubot.android.R;
import eu.hgross.blaubot.core.Blaubot;
import eu.hgross.blaubot.core.IBlaubotConnection;
import eu.hgross.blaubot.core.State;
import eu.hgross.blaubot.core.acceptor.IBlaubotConnectionManagerListener;
import eu.hgross.blaubot.core.statemachine.IBlaubotConnectionStateMachineListener;
import eu.hgross.blaubot.core.statemachine.states.IBlaubotState;
import eu.hgross.blaubot.messaging.IBlaubotAdminMessageListener;
import eu.hgross.blaubot.ui.IBlaubotDebugView;

/**
 * Android view to display informations about the StateMachine's state.
 * 
 * Add this view to a blaubot instance like this: stateView.registerBlaubotInstance(blaubot);
 * 
 * @author Henning Gross {@literal (mail.to@henning-gross.de)}
 * 
 */
public class KingdomView extends LinearLayout implements IBlaubotDebugView {
	private Handler mUiHandler;
	private Blaubot mBlaubot;
    private Context mContext;

    public KingdomView(Context context, AttributeSet attrs) {
		super(context, attrs);
		initView(context);
	}

	public KingdomView(Context context, AttributeSet attrs, int defStyle) {
		super(context, attrs, defStyle);
		initView(context);
	}

	private void initView(Context context) {
        this.mContext = context;
		mUiHandler = new Handler(Looper.getMainLooper());
	}

    private final static String NO_CENSUS_MESSAGE_SO_FAR_TEXT = ""Got no census message so far"";
	private void updateUI(final CensusMessage censusMessage) {
		mUiHandler.post(new Runnable() {
			@Override
			public void run() {
                final List<View> stateItems = new ArrayList<>();

                if(censusMessage != null) {
                    final Set<Entry<String, State>> entries = censusMessage.getDeviceStates().entrySet();
                    for(Entry<String, State> entry : entries) {
                        final String uniqueDeviceId = entry.getKey();
                        final State state = entry.getValue();
						View item = createKingdomViewListItem(mContext, state, uniqueDeviceId);
						stateItems.add(item);
                    }
                }

                // Never got a message
                if(stateItems.isEmpty()) {
                    TextView tv = new TextView(mContext);
                    tv.setText(NO_CENSUS_MESSAGE_SO_FAR_TEXT);
                    stateItems.add(tv);
                }

                removeAllViews();
                for(View v : stateItems) {
                    addView(v);
                }
			}
		});
	}

	/**
	 * Creates a kingdom view list item
	 * 
	 * @param context the context
	 * @param state the state of the device to visualize
	 * @param uniqueDeviceId the unique device id
	 * @return the constructed view
	 */
	public static View createKingdomViewListItem(Context context, State state, String uniqueDeviceId) {
		final Drawable icon = ViewUtils.getDrawableForBlaubotState(context, state);
		View item = inflate(context, R.layout.blaubot_kingdom_view_list_item, null);
		TextView uniqueDeviceIdTextView = (TextView) item.findViewById(R.id.uniqueDeviceIdLabel);
		TextView stateTextView = (TextView) item.findViewById(R.id.stateLabel);
		ImageView iconImageView = (ImageView) item.findViewById(R.id.stateIcon);
		iconImageView.setImageDrawable(icon);
		uniqueDeviceIdTextView.setText(uniqueDeviceId);
		stateTextView.setText(state.toString());
		return item;
	}


	private IBlaubotConnectionManagerListener mConnectionManagerListener = new IBlaubotConnectionManagerListener() {
		
		@Override
		public void onConnectionClosed(IBlaubotConnection connection) {
		}
		
		@Override
		public void onConnectionEstablished(IBlaubotConnection connection) {
		}
	};
	
	private IBlaubotConnectionStateMachineListener mBlaubotConnectionStateMachineListener = new IBlaubotConnectionStateMachineListener() {
		
		
		@Override
		public void onStateChanged(IBlaubotState oldState, final IBlaubotState state) {
			if(State.getStateByStatemachineClass(state.getClass()) == State.Free) {
				updateUI(null);
			}
		}

		@Override
		public void onStateMachineStopped() {
			updateUI(null);
		}

		@Override
		public void onStateMachineStarted() {
		}
	};
	
	private IBlaubotAdminMessageListener connectionLayerAdminMessageListener = new IBlaubotAdminMessageListener() {
		
		@Override
		public void onAdminMessage(AbstractAdminMessage adminMessage) {
        if(adminMessage instanceof CensusMessage) {
            updateUI((CensusMessage) adminMessage);
        }
		}
	};

	/**
	 * Register this view with the given blaubot instance
	 * 
	 * @param blaubot
	 *            the blaubot instance to connect with
	 */
    @Override
	public void registerBlaubotInstance(Blaubot blaubot) {
		if (mBlaubot != null) {
			unregisterBlaubotInstance();
		}
		this.mBlaubot = blaubot;
		this.mBlaubot.getConnectionStateMachine().addConnectionStateMachineListener(mBlaubotConnectionStateMachineListener);
		this.mBlaubot.getChannelManager().addAdminMessageListener(connectionLayerAdminMessageListener);
		this.mBlaubot.getConnectionManager().addConnectionListener(mConnectionManagerListener);

        // update
        updateUI(null);
	}

    @Override
    public void unregisterBlaubotInstance() {
        if(mBlaubot != null) {
            this.mBlaubot.getConnectionStateMachine().removeConnectionStateMachineListener(mBlaubotConnectionStateMachineListener);
            this.mBlaubot.getChannelManager().removeAdminMessageListener(connectionLayerAdminMessageListener);
            this.mBlaubot.getConnectionManager().removeConnectionListener(mConnectionManagerListener);
        }
        // force some updates
        updateUI(null);
    }

}",Java
"package com.ov3rk1ll.kinocast.ui.util.glide;

import com.ov3rk1ll.kinocast.data.ViewModel;


public class ViewModelGlideRequest {
    private ViewModel viewModel;
    private int screenWidthPx;
    private String type;

    public ViewModelGlideRequest(ViewModel viewModel, int screenWidthPx, String type) {
        this.viewModel = viewModel;
        this.screenWidthPx = screenWidthPx;
        this.type = type;
    }

    ViewModel getViewModel() {
        return viewModel;
    }

    int getScreenWidthPx() {
        return screenWidthPx;
    }

    public String getType() {
        return type;
    }
}",Java
"package org.apache.shiro.grails.annotations;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import org.apache.shiro.authz.Permission;

@Target({ElementType.FIELD, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
public @interface PermissionRequired {
    Class<? extends Permission> type();

    /**
     * The name of the role required to be granted this authorization.
     */
    String target() default ""*"";

    String actions() default """";
}
",Java
"/*
 * Copyright (c) 2020 by Stefan Schubert under the MIT License (MIT).
 * See project LICENSE file for the detailed terms and conditions.
 */

package de.bluewhale.sabi.webclient.rest.exceptions;


import de.bluewhale.sabi.exception.ExceptionCode;
import de.bluewhale.sabi.exception.MessageCode;
import de.bluewhale.sabi.exception.TankExceptionCodes;

/**
 * MessageCodes that may arise by using the Tank Restservice
 *
 * @author schubert
 */
public enum TankMessageCodes implements MessageCode {

    NO_SUCH_TANK(TankExceptionCodes.TANK_NOT_FOUND_OR_DOES_NOT_BELONG_TO_USER);

// ------------------------------ FIELDS ------------------------------

    private TankExceptionCodes exceptionCode;

// --------------------------- CONSTRUCTORS ---------------------------

    TankMessageCodes() {
        exceptionCode = null;
    }

    TankMessageCodes(TankExceptionCodes pExceptionCode) {
        exceptionCode = pExceptionCode;
    }

// --------------------- GETTER / SETTER METHODS ---------------------

    @Override
    public ExceptionCode getExceptionCode() {
        return exceptionCode;
    }
}
",Java
"import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.LinkedList;



//this code contains the output assembly code that the program outputs.
//will have at least three functions:
//add(string, string, string, string) <- adds an assembly code line
//optimise(int) <- optimises the output code, wherever possible
//write(string) <- writes the code to the desired filename
public class ASMCode {
	LinkedList<String> lines = new LinkedList<String>();
	LinkedList<String> data = new LinkedList<String>();
	
	HashMap<String, String> stringMap = new HashMap<String, String>();
	LinkedList<lineWrapper> functionLines = new LinkedList<lineWrapper>();
	boolean hasFCall;
	
	
	private interface lineWrapper {
		String compile(int stacksize, boolean funcCall);
	}
	
	private class stdLineWrapper implements lineWrapper {
		private String line;
		@Override
		public String compile(int stacksize, boolean funcCall) {
			return line;
		}
		public stdLineWrapper(String s) {
			line = s;
		}
	}
	
	private class functionReturnWrapper implements lineWrapper {
		@Override
		public String compile(int stacksize, boolean funcCall) {
			StringBuilder s = new StringBuilder();
			if(stacksize != 0) {
				s.append(""\tmov\tsp, fp"");
				s.append(System.getProperty(""line.separator""));//system independent newline
				s.append(""\tpop\tfp"");
				s.append(System.getProperty(""line.separator""));
			}
			if(hasFCall) {
				s.append(""\tpop\tra"");
				s.append(System.getProperty(""line.separator""));
			}
			s.append(""\tjmpr\tra"");
			return s.toString();
		}
	}
	
	public void add(String inst, String reg1, String reg2, String reg3) {
		if(deadCode) return;
		String newInst = ""\t""+inst;
		if(reg1 != null) {
			newInst = newInst + ""\t"" + reg1;
			if(reg2 != null) {
				newInst = newInst + "", "" + reg2;
				if(reg3 != null) {
					newInst = newInst + "", "" + reg3;
				}
			}
		}
		functionLines.addLast(new stdLineWrapper(newInst));
	}
	
	public void add(String inst, String reg1, String reg2) {
		add(inst, reg1, reg2, null);
	}
	public void add(String inst, String reg1) {
		add(inst, reg1, null, null);
	}
	public void add(String inst) {
		add(inst, null, null, null);
	}
	
	int labIndex = 0;
	
	public String addString(String s) {
		//makes sure we don't have duplicate strings in memory
		if(stringMap.containsKey(s)) return stringMap.get(s);
		//generate a label
		String label = ""string"" + labIndex++;
		data.addLast(label+"":"");
		data.addLast(""#string "" +s);
		stringMap.put(s, label);
		return label;
	}
	
	public void addGlobal(String data, String label) {
		//generate a label
		this.data.addLast(label+"":"");
		this.data.addLast(data);
	}
	
	public void put(String s) {
		if(!deadCode)
			functionLines.addLast(new stdLineWrapper(s));
	}
	
	private String fname;
	public void beginFunction(String name) {
		functionLines = new LinkedList<lineWrapper>();
		fname = name;
		hasFCall = false;
	}
	
	public void endFunction(int varCount) {
		lines.addLast(""#global "" + fname);
		lines.addLast(fname+"":"");
		if(hasFCall) {
			lines.addLast(""\tpush\tra"");
		}
		if(varCount != 0) {
			lines.addLast(""\tpush\tfp"");
			lines.addLast(""\tmov\tfp, sp"");
			lines.addLast(""\taddi\tsp, sp, "" + varCount);
		}
		for(lineWrapper w : functionLines) {
			lines.addLast(w.compile(varCount, hasFCall));
		}
	}
	
	public void setHasFCall() {
		if(deadCode) return;
		hasFCall = true;
	}
	
	public void functionReturn() {
		if(deadCode) return;
		functionLines.addLast(new functionReturnWrapper());
	}
	
	public void write(String filename) {
		//System.out.println("".text"");
		//for(String s : lines) {
		//	System.out.println(s);
		//}
		//System.out.println("".data"");
		//for(String s : data) {
		//	System.out.println(s);
		//}
		
		System.out.println(""Compilation successful!"");
		System.out.println(""Writing..."");
		try {
			PrintWriter out = new PrintWriter(new FileWriter(filename+"".asm""));
			out.println("".text"");
			for(String s : lines) {
				out.println(s);
			}
			out.println("".data"");
			for(String s : data) {
				out.println(s);
			}
			out.close();
		} catch(IOException e) {
			System.out.println(""Writing failed"");
			return;
		}
		System.out.println(""Program created!"");
	}
	
	boolean deadCode;
	public void deadCode(boolean codeIsDead) {
		deadCode = codeIsDead;
		
	}
}
",Java
"package com.ruenzuo.weatherapp.adapters;

import android.app.Activity;
import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.TextView;

import com.ruenzuo.weatherapp.R;
import com.ruenzuo.weatherapp.models.City;

/**
 * Created by ruenzuo on 08/05/14.
 */
public class CitiesAdapter extends ArrayAdapter<City> {

    private int resourceId;

    public CitiesAdapter(Context context, int resource) {
        super(context, resource);
        resourceId = resource;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        if (convertView == null) {
            LayoutInflater inflater = ((Activity)getContext()).getLayoutInflater();
            convertView = inflater.inflate(resourceId, null);
        }
        City country = getItem(position);
        TextView txtViewCityName = (TextView) convertView.findViewById(R.id.txtViewCityName);
        txtViewCityName.setText(country.getName());
        return convertView;
    }

}",Java
"package nl.ulso.sprox.json.spotify;

import nl.ulso.sprox.Node;

import java.time.LocalDate;
import java.util.List;

/**
 * Sprox processor for Spotify API album data. This is a very simple processor that ignores most data.
 * <p>
 * This implementation creates an Artist object for each and every artist in the response. But only the first one on
 * album level is kept in the end.
 * </p>
 */
public class AlbumFactory {

    @Node(""album"")
    public Album createAlbum(@Node(""name"") String name, @Node(""release_date"") LocalDate releaseDate, Artist artist,
                             List<Track> tracks) {
        return new Album(name, releaseDate, artist, tracks);
    }

    @Node(""artists"")
    public Artist createArtist(@Node(""name"") String name) {
        return new Artist(name);
    }

    @Node(""items"")
    public Track createTrack(@Node(""track_number"") Integer trackNumber, @Node(""name"") String name) {
        return new Track(trackNumber, name);
    }
}
",Java
"package gradebookdata;

/**
 * Represents one row of the course table in the GradeBook database
 * 
 * @author Eric Carlton
 * 
 */
public class Course {

	private String name;
	private int weight;
	private int ID;

	/**
	 * Create a course with all fields filled
	 * 
	 * @param name
	 *            name of course
	 * @param weight
	 *            credit hours ( or weight ) of course
	 * @param ID
	 *            course_ID in course table
	 */
	public Course(String name, int weight, int ID) {
		this.name = name;
		this.weight = weight;
		this.ID = ID;
	}

	/**
	 * Create a generic course
	 */
	public Course() {
		this(""no name"", 0, -1);
	}

	public String getName() {
		return name;
	}

	public Integer getWeight() {
		return weight;
	}

	public Integer getID() {
		return ID;
	}

	/**
	 * Returns a string formatted as:
	 * course_name
	 * course_weight hour(s)
	 */
	@Override
	public String toString() {
		String result = name + ""\n"" + weight;
		if (weight == 1)
			result = result + "" hour"";
		else
			result = result + "" hours"";
		return result;
	}

}
",Java
"package org.vitrivr.cineast.core.util.audio.pitch.tracking;

import java.util.LinkedList;
import java.util.List;
import org.apache.commons.math3.stat.descriptive.SummaryStatistics;
import org.vitrivr.cineast.core.util.audio.pitch.Pitch;

/**
 * This is a helper class for pitch tracking. It represents a pitch contour, that is, a candidate for a melody fragment. The contour has a fixed length and each slot in the sequence represents a specific timeframe (e.g. belonging to a FFT bin in the underlying STFT).
 * <p>
 * The intention behind this class is the simplification of comparison between different pitch contours, either on a frame-by-frame basis but also as an entity. In addition to the actual pitch information, the pitch contour class also provides access to pitch contour statistics related to salience and pitch frequency.
 *
 * @see PitchTracker
 */
public class PitchContour {

  /**
   * The minimum frequency in Hz on the (artifical) cent-scale.
   */
  private static final float CENT_SCALE_MINIMUM = 55.0f;

  /**
   * Entity that keeps track of salience related contour statistics.
   */
  private SummaryStatistics salienceStatistics = new SummaryStatistics();

  /**
   * Entity that keeps track of frequency related contour statistics.
   */
  private SummaryStatistics frequencyStatistics = new SummaryStatistics();

  /**
   * Sequence of pitches that form the PitchContour.
   */
  private final List<Pitch> contour = new LinkedList<>();

  /**
   * Indicates that the PitchContour statistics require recalculation.
   */
  private boolean dirty = true;

  /**
   * The start frame-index of the pitch-contour. Marks beginning in time.
   */
  private int start;

  /**
   * The end frame-index of the pitch-contour. Marks ending in time.
   */
  private int end;

  /**
   * Constructor for PitchContour.
   *
   * @param start Start-index of the contour.
   * @param pitch Pitch that belongs to the start-index.
   */
  public PitchContour(int start, Pitch pitch) {
    this.start = start;
    this.end = start;
    this.contour.add(pitch);
  }

  /**
   * Sets the pitch at the given index if the index is within the bounds of the PitchContour.
   *
   * @param p Pitch to append.
   */
  public void append(Pitch p) {
    this.contour.add(p);
    this.end += 1;
    this.dirty = true;
  }

  /**
   * Sets the pitch at the given index if the index is within the bounds of the PitchContour.
   *
   * @param p Pitch to append.
   */
  public void prepend(Pitch p) {
    this.contour.add(0, p);
    this.start -= 1;
    this.dirty = true;
  }

  /**
   * Returns the pitch at the given index or null, if the index is out of bounds. Note that even if the index is within bounds, the Pitch can still be null.
   *
   * @param i Index for which to return a pitch.
   */
  public Pitch getPitch(int i) {
    if (i >= this.start && i <= this.end) {
      return this.contour.get(i - this.start);
    } else {
      return null;
    }
  }

  /**
   * Getter for start.
   *
   * @return Start frame-index.
   */
  public final int getStart() {
    return start;
  }

  /**
   * Getter for end.
   *
   * @return End frame-index.
   */
  public final int getEnd() {
    return end;
  }


  /**
   * Size of the pitch-contour. This number also includes empty slots.
   *
   * @return Size of the contour.
   */
  public final int size() {
    return this.contour.size();
  }

  /**
   * Returns the mean of all pitches in the melody.
   *
   * @return Pitch mean
   */
  public final double pitchMean() {
    if (this.dirty) {
      this.calculate();
    }
    return this.frequencyStatistics.getMean();
  }

  /**
   * Returns the standard-deviation of all pitches in the melody.
   *
   * @return Pitch standard deviation
   */
  public final double pitchDeviation() {
    if (this.dirty) {
      this.calculate();
    }
    return this.frequencyStatistics.getStandardDeviation();
  }

  /**
   * Returns the mean-salience of all pitches in the contour.
   *
   * @return Salience mean
   */
  public final double salienceMean() {
    if (this.dirty) {
      this.calculate();
    }
    return this.salienceStatistics.getMean();
  }

  /**
   * Returns the salience standard deviation of all pitches in the contour.
   *
   * @return Salience standard deviation.
   */
  public final double salienceDeviation() {
    if (this.dirty) {
      this.calculate();
    }
    return this.salienceStatistics.getStandardDeviation();
  }

  /**
   * Returns the sum of all salience values in the pitch contour.
   */
  public final double salienceSum() {
    if (this.dirty) {
      this.calculate();
    }
    return this.salienceStatistics.getSum();
  }

  /**
   * Calculates the overlap between the given pitch-contours.
   *
   * @return Size of the overlap between two pitch-contours.
   */
  public final int overlap(PitchContour contour) {
    return Math.max(0, Math.min(this.end, contour.end) - Math.max(this.start, contour.start));
  }

  /**
   * Determines if two PitchContours overlap and returns true of false.
   *
   * @return true, if two PitchContours  overlap and falseotherwise.
   */
  public final boolean overlaps(PitchContour contour) {
    return this.overlap(contour) > 0;
  }

  /**
   * Re-calculates the PitchContour statistics.
   */
  private void calculate() {
    this.salienceStatistics.clear();
    this.frequencyStatistics.clear();
    for (Pitch pitch : this.contour) {
      if (pitch != null) {
        this.salienceStatistics.addValue(pitch.getSalience());
        this.frequencyStatistics.addValue(pitch.distanceCents(CENT_SCALE_MINIMUM));
      }
    }
    this.dirty = false;
  }
}
",Java
"import static org.junit.Assert.*;

import java.util.List;

import org.junit.Test;


public class IdParserTest {

	@Test
	public void testListParser() {
		String testMedList = ""{1;3;9}"";
		List<Integer> ids = IdParser.parse(testMedList);
		assertEquals(3, ids.size());
		assertEquals(new Integer(1), ids.get(0));
		assertEquals(new Integer(3), ids.get(1));
		assertEquals(new Integer(9), ids.get(2));
	}
	
	@Test
	public void testEmptyListParser() {
		String testMedList = ""{}"";
		List<Integer> ids = IdParser.parse(testMedList);
		assertEquals(0, ids.size());
	}
	@Test
	public void testSingletonListParser() {
		String testMedList = ""{1}"";
		List<Integer> ids = IdParser.parse(testMedList);
		assertEquals(1, ids.size());
		assertEquals(new Integer(1), ids.get(0));
	}

}
",Java
"package pp.iloc.model;

import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import pp.iloc.model.Num.NumKind;
import pp.iloc.model.Operand.Type;
import pp.iloc.parse.FormatException;

/** ILOC program.
 * @author Arend Rensink
 */
public class Program {
	/** Indexed list of all instructions in the program. */
	private final List<Instr> instrList;
	/**
	 * Indexed list of all operations in the program.
	 * This is the flattened list of instructions.
	 */
	private final List<Op> opList;
	/** Mapping from labels defined in the program to corresponding
	 * index locations.
	 */
	private final Map<Label, Integer> labelMap;
	/** (Partial) mapping from symbolic constants used in the program
	 * to corresponding numeric values. */
	private final Map<Num, Integer> symbMap;

	/** Creates a program with an initially empty instruction list. */
	public Program() {
		this.instrList = new ArrayList<>();
		this.opList = new ArrayList<>();
		this.labelMap = new LinkedHashMap<>();
		this.symbMap = new LinkedHashMap<>();
	}

	/** Adds an instruction to the instruction list of this program.
	 * @throws IllegalArgumentException if the instruction has a known label 
	 */
	public void addInstr(Instr instr) {
		instr.setProgram(this);
		instr.setLine(this.opList.size());
		if (instr.hasLabel()) {
			registerLabel(instr);
		}
		this.instrList.add(instr);
		for (Op op : instr) {
			this.opList.add(op);
		}
	}

	/** Registers the label of a given instruction. */
	void registerLabel(Instr instr) {
		Label label = instr.getLabel();
		Integer loc = this.labelMap.get(label);
		if (loc != null) {
			throw new IllegalArgumentException(String.format(
					""Label %s already occurred at location %d"", label, loc));
		}
		this.labelMap.put(label, instr.getLine());
	}

	/** Returns the current list of instructions of this program. */
	public List<Instr> getInstr() {
		return Collections.unmodifiableList(this.instrList);
	}

	/** Returns the operation at a given line number. */
	public Op getOpAt(int line) {
		return this.opList.get(line);
	}

	/** Returns the size of the program, in number of operations. */
	public int size() {
		return this.opList.size();
	}

	/**
	 * Returns the location at which a given label is defined, if any.
	 * @return the location of an instruction with the label, or {@code -1}
	 * if the label is undefined
	 */
	public int getLine(Label label) {
		Integer result = this.labelMap.get(label);
		return result == null ? -1 : result;
	}

	/** Assigns a fixed numeric value to a symbolic constant.
	 * It is an error to assign to the same constant twice.
	 * @param name constant name, without preceding '@'
	 */
	public void setSymb(Num symb, int value) {
		if (this.symbMap.containsKey(symb)) {
			throw new IllegalArgumentException(""Constant '"" + symb
					+ ""' already assigned"");
		}
		this.symbMap.put(symb, value);
	}

	/** 
	 * Returns the value with which a given symbol has been
	 * initialised, if any.
	 */
	public Integer getSymb(Num symb) {
		return this.symbMap.get(symb);
	}

	/** 
	 * Returns the value with which a given named symbol has been
	 * initialised, if any.
	 * @param name name of the symbol, without '@'-prefix
	 */
	public Integer getSymb(String name) {
		return getSymb(new Num(name));
	}

	/**
	 * Checks for internal consistency, in particular whether
	 * all used labels are defined.
	 */
	public void check() throws FormatException {
		List<String> messages = new ArrayList<>();
		for (Instr instr : getInstr()) {
			for (Op op : instr) {
				messages.addAll(checkOpnds(op.getLine(), op.getArgs()));
			}
		}
		if (!messages.isEmpty()) {
			throw new FormatException(messages);
		}
	}

	private List<String> checkOpnds(int loc, List<Operand> opnds) {
		List<String> result = new ArrayList<>();
		for (Operand opnd : opnds) {
			if (opnd instanceof Label) {
				if (getLine((Label) opnd) < 0) {
					result.add(String.format(""Line %d: Undefined label '%s'"",
							loc, opnd));
				}
			}
		}
		return result;
	}

	/**
	 * Returns a mapping from registers to line numbers
	 * in which they appear.
	 */
	public Map<String, Set<Integer>> getRegLines() {
		Map<String, Set<Integer>> result = new LinkedHashMap<>();
		for (Op op : this.opList) {
			for (Operand opnd : op.getArgs()) {
				if (opnd.getType() == Type.REG) {
					Set<Integer> ops = result.get(((Reg) opnd).getName());
					if (ops == null) {
						result.put(((Reg) opnd).getName(),
								ops = new LinkedHashSet<>());
					}
					ops.add(op.getLine());
				}
			}
		}
		return result;
	}

	/**
	 * Returns a mapping from (symbolic) variables to line numbers
	 * in which they appear.
	 */
	public Map<String, Set<Integer>> getSymbLines() {
		Map<String, Set<Integer>> result = new LinkedHashMap<>();
		for (Op op : this.opList) {
			for (Operand opnd : op.getArgs()) {
				if (!(opnd instanceof Num)) {
					continue;
				}
				if (((Num) opnd).getKind() != NumKind.SYMB) {
					continue;
				}
				String name = ((Num) opnd).getName();
				Set<Integer> lines = result.get(name);
				if (lines == null) {
					result.put(name, lines = new LinkedHashSet<>());
				}
				lines.add(op.getLine());
			}
		}
		return result;
	}

	/** Returns a line-by-line printout of this program. */
	@Override
	public String toString() {
		StringBuilder result = new StringBuilder();
		for (Map.Entry<Num, Integer> symbEntry : this.symbMap.entrySet()) {
			result.append(String.format(""%s <- %d%n"", symbEntry.getKey()
					.getName(), symbEntry.getValue()));
		}
		for (Instr instr : getInstr()) {
			result.append(instr.toString());
			result.append('\n');
		}
		return result.toString();
	}

	@Override
	public int hashCode() {
		return this.instrList.hashCode();
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (!(obj instanceof Program)) {
			return false;
		}
		Program other = (Program) obj;
		if (!this.instrList.equals(other.instrList)) {
			return false;
		}
		return true;
	}

	/** Returns a string consisting of this program in a nice layout.
	 */
	public String prettyPrint() {
		StringBuilder result = new StringBuilder();
		// first print the symbolic declaration map
		int idSize = 0;
		for (Num symb : this.symbMap.keySet()) {
			idSize = Math.max(idSize, symb.getName().length());
		}
		for (Map.Entry<Num, Integer> symbEntry : this.symbMap.entrySet()) {
			result.append(String.format(""%-"" + idSize + ""s <- %d%n"", symbEntry
					.getKey().getName(), symbEntry.getValue()));
		}
		if (idSize > 0) {
			result.append('\n');
		}
		// then print the instructions
		int labelSize = 0;
		int sourceSize = 0;
		int targetSize = 0;
		for (Instr i : getInstr()) {
			labelSize = Math.max(labelSize, i.toLabelString().length());
			if (i instanceof Op && ((Op) i).getOpCode() != OpCode.out) {
				Op op = (Op) i;
				sourceSize = Math.max(sourceSize, op.toSourceString().length());
				targetSize = Math.max(targetSize, op.toTargetString().length());
			}
		}
		for (Instr i : getInstr()) {
			result.append(i.prettyPrint(labelSize, sourceSize, targetSize));
		}
		return result.toString();
	}
}
",Java
"package engine;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Point;

public class CircleShape extends Shape {

    double radius; //radius of shape

    public CircleShape(double rad, Vector2D v, double r, double d, Color c) {
        super(v, r, d, c);
        radius = rad;
    }

    @Override
    public void calculateInertia() {
        mass = radius * radius * Math.PI * density;
        inertia = radius * radius * mass;
    }

    @Override
    public void paint(Graphics2D g) {
        super.paint(g);
        vector.readyPoint();
        g.fillOval((int) (x - radius), (int) (y - radius), (int) radius * 2, (int) radius * 2);
        g.drawOval((int) (x - radius), (int) (y - radius), (int) radius * 2, (int) radius * 2);
        g.setColor(Color.BLACK);
        g.drawLine((int) (x), (int) (y), (int) (x + Math.cos(rotation) * radius), (int) (y + Math.sin(rotation) * radius));
    }

    @Override
    public boolean contains(Point.Double p) {
        return p.distanceSq(x, y) < radius * radius;
    }

}
",Java
"package net.spy.digg.parsers;

import java.io.IOException;

import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import net.spy.digg.Story;

/**
 * Parse a stories response.
 */
public class StoriesParser extends TimePagedItemParser<Story> {

	@Override
	protected String getRootElementName() {
		return ""stories"";
	}

	@Override
	protected void handleDocument(Document doc)
		throws SAXException, IOException {
		parseCommonFields(doc);

		final NodeList nl=doc.getElementsByTagName(""story"");
		for(int i=0; i<nl.getLength(); i++) {
			addItem(new StoryImpl(nl.item(i)));
		}
	}
}
",Java
"package org.squirrel;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;

import org.squirrel.managers.PrisonerControllor;
import org.squirrel.managers.inputManager;
import org.squirrel.objects.Player;
import org.squirrel.ui.Hud;
import org.squirrel.world.World;

public class Game extends JPanel implements ActionListener{

	private static final long serialVersionUID = -8805039320208612585L;
	public static String name = JOptionPane.showInputDialog(null,""What is your name?"",""Welcome to Prison Survival"", JOptionPane.QUESTION_MESSAGE);
	Timer gameLoop;
	Player player;
	PrisonerControllor prict;
	Hud hud;
	World world1;
	
	public Game(){
		setFocusable(true);
		
		gameLoop = new Timer(10, this);
		gameLoop.start();
		
		player = new Player(300, 300);
		prict = new PrisonerControllor();
		hud = new Hud();
		world1 = new World();
		addKeyListener(new inputManager(player));
	}
	
	public void paint(Graphics g){
		super.paint(g);
		Graphics2D g2d = (Graphics2D) g;

		//Camera
		int offsetMaxX = 1600 - 800;
		int offsetMaxY = 1200 - 600;
		int offsetMinX = 0;
		int offsetMinY = 0;
		
		int camX = player.getxPos() - 800 /2;
		int camY = player.getyPos() - 600 /2;
		
		//if (camX > offsetMaxX){
		//    camX = offsetMaxX;
		//}
		//else if (camX < offsetMinX){
		//    camX = offsetMinX;
		//}		
		//if (camY > offsetMaxY){
		//    camY = offsetMaxY;
		//}
		//else if (camY < offsetMinY){
		//    camY = offsetMinY;
		//}

		g2d.translate(-camX, -camY);
		// Render everything
		world1.draw(g2d);
		hud.draw(g2d);
		prict.draw(g2d);
		player.draw(g2d);
		g.translate(camX, camY);
		
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		try {
			player.update();
			hud.update();
			prict.update();
			world1.update();
			repaint();
		} catch (Exception e1) {
			e1.printStackTrace();
		}

	}

}
",Java
"
package ru.lanbilling.webservice.wsdl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base=""{http://www.w3.org/2001/XMLSchema}anyType""&gt;
 *       &lt;sequence&gt;
 *         &lt;element name=""ret"" type=""{urn:api3}soapDocument"" maxOccurs=""unbounded""/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = """", propOrder = {
    ""ret""
})
@XmlRootElement(name = ""getClientDocumentsResponse"")
@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2015-10-25T05:29:34+06:00"", comments = ""JAXB RI v2.2.11"")
public class GetClientDocumentsResponse {

    @XmlElement(required = true)
    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2015-10-25T05:29:34+06:00"", comments = ""JAXB RI v2.2.11"")
    protected List<SoapDocument> ret;

    /**
     * Gets the value of the ret property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ret property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRet().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SoapDocument }
     * 
     * 
     */
    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2015-10-25T05:29:34+06:00"", comments = ""JAXB RI v2.2.11"")
    public List<SoapDocument> getRet() {
        if (ret == null) {
            ret = new ArrayList<SoapDocument>();
        }
        return this.ret;
    }

}
",Java
"package com.lht.dot.ui.view;

import android.content.Context;
import android.support.annotation.Nullable;
import android.support.v7.widget.RecyclerView;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.view.View;

import com.bumptech.glide.Glide;

/**
 * Created by lht-Mac on 2017/7/11.
 */

public class PhotoShotRecyclerView extends RecyclerView {

    View mDispatchToView;

    public PhotoShotRecyclerView(Context context) {
        super(context);
        init();
    }

    public PhotoShotRecyclerView(Context context, @Nullable AttributeSet attrs) {
        super(context, attrs);
        init();
    }

    private void init() {
        setOnScrollListener(new RecyclerView.OnScrollListener() {
            @Override
            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
                super.onScrollStateChanged(recyclerView, newState);
                switch (newState) {
                    case RecyclerView.SCROLL_STATE_SETTLING:
                        Glide.with(getContext()).pauseRequests();
                        break;
                    case RecyclerView.SCROLL_STATE_DRAGGING:
                    case RecyclerView.SCROLL_STATE_IDLE:
                        Glide.with(getContext()).resumeRequests();
                        break;
                }
            }
        });
    }

    @Override
    public boolean dispatchTouchEvent(MotionEvent event) {
        if(mDispatchToView==null){
            return super.dispatchTouchEvent(event);
        }else{
            return mDispatchToView.dispatchTouchEvent(event);
        }
    }

    public View getDispatchToView() {
        return mDispatchToView;
    }

    public void setDispatchToView(View dispatchToView) {
        this.mDispatchToView = dispatchToView;
    }

    public void clearDispatchToView() {
        setDispatchToView(null);
    }
}
",Java
"package redes3.proyecto.nagiosalert;

import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;


public class InfoServiceActivity extends Activity  {
	
	String nombre;
	int status;
	String duracion;
	String revision;
	String info;
	ImageView image     ;
	TextView tvNombre   ;
	TextView tvStatus   ;
	TextView tvDuracion ;
	TextView tvRevision ;
	TextView tvInfo     ;
	
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_info_service);
    	nombre     = new String();
    	status     = 0 ;
    	duracion   = new String();
    	revision   = new String();
    	info       = new String();
    	image      = (ImageView) findViewById(R.id.image);
    	tvNombre   = (TextView)this.findViewById(R.id.tvNombreServicio);
    	tvStatus   = (TextView)this.findViewById(R.id.status);
    	tvDuracion = (TextView)this.findViewById(R.id.duracion);
    	tvRevision = (TextView)this.findViewById(R.id.revision);
    	tvInfo     = (TextView)this.findViewById(R.id.info);

        Bundle extras = getIntent().getExtras();
        
        nombre = extras.getString(""nombre"");
        status = extras.getInt(""status"");
        duracion = extras.getString(""duracion"");
        revision = extras.getString(""revision"");
        info = extras.getString(""info"");
        
		tvNombre.setText(nombre);

		tvDuracion.setText(""Duracion : \n""+duracion);
		tvRevision.setText(""Revision : \n""+revision);
		tvInfo.setText(""Descripción : \n""+info);
		
		if(status== 0){
			tvStatus.setText(""Estado : \nOk"");
			image.setImageResource(R.drawable.fine);	
		}else if(status== 1){
			tvStatus.setText(""Estado : \nFail"");
			image.setImageResource(R.drawable.fail);	
		}if(status== 2){
			tvStatus.setText(""Estado : \nWarning"");
			image.setImageResource(R.drawable.warning);	
		}if(status== 3){
			tvStatus.setText(""Estado : \nUnknown"");
			image.setImageResource(R.drawable.unknown);	
		}
        
        
    }
	

}",Java
"package me.august.lumen.data;

import me.august.lumen.compile.resolve.data.ClassData;
import me.august.lumen.compile.resolve.lookup.DependencyManager;
import org.junit.Assert;
import org.junit.Test;

public class DataTest {

    @Test
    public void testClassData() {
        ClassData data = ClassData.fromClass(String.class);

        Assert.assertEquals(
                String.class.getName(),
                data.getName()
        );

        String[] expected = new String[]{
                ""java.io.Serializable"", ""java.lang.Comparable"",
                ""java.lang.CharSequence""
        };
        Assert.assertArrayEquals(
                expected,
                data.getInterfaces()
        );
    }

    @Test
    public void testAssignableTo() {
        DependencyManager deps = new DependencyManager();
        ClassData data;

        data = ClassData.fromClass(String.class);

        Assert.assertTrue(
                ""Expected String to be assignable to String"",
                data.isAssignableTo(""java.lang.String"", deps)
        );

        Assert.assertTrue(
                ""Expected String to be assignable to Object"",
                data.isAssignableTo(""java.lang.Object"", deps)
        );

        Assert.assertTrue(
                ""Expected String to be assignable to CharSequence"",
                data.isAssignableTo(""java.lang.CharSequence"", deps)
        );

        data = ClassData.fromClass(Object.class);

        Assert.assertFalse(
                ""Expected Object to not be assignable to String"",
                data.isAssignableTo(""java.lang.String"", deps)
        );

        data = ClassData.fromClass(CharSequence.class);

        Assert.assertTrue(
                ""Expected CharSequence to be assignable to Object"",
                data.isAssignableTo(""java.lang.Object"", deps)
        );
    }

}
",Java
"/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ons;

import ons.util.WeightedGraph;

import org.w3c.dom.*;

/**
 * The physical topology of a network refers to he physical layout of devices on
 * a network, or to the way that the devices on a network are arranged and how
 * they communicate with each other.
 *
 * @author andred
 */
public abstract class PhysicalTopology {

    protected int nodes;
    protected int links;
    protected OXC[] nodeVector;
    protected Link[] linkVector;
    protected Link[][] adjMatrix;

    /**
     * Creates a new PhysicalTopology object. Takes the XML file containing all
     * the information about the simulation environment and uses it to populate
     * the PhysicalTopology object. The physical topology is basically composed
     * of nodes connected by links, each supporting different wavelengths.
     *
     * @param xml file that contains the simulation environment information
     */
    public PhysicalTopology(Element xml) {
        try {
            if (Simulator.verbose) {
                System.out.println(xml.getAttribute(""name""));
            }
        } catch (Throwable t) {
            t.printStackTrace();
        }
    }

    /**
     * Retrieves the number of nodes in a given PhysicalTopology.
     *
     * @return the value of the PhysicalTopology's nodes attribute
     */
    public int getNumNodes() {
        return nodes;
    }

    /**
     * Retrieves the number of links in a given PhysicalTopology.
     *
     * @return number of items in the PhysicalTopology's linkVector attribute
     */
    public int getNumLinks() {
        return linkVector.length;
    }

    /**
     * Retrieves a specific node in the PhysicalTopology object.
     *
     * @param id the node's unique identifier
     * @return specified node from the PhysicalTopology's nodeVector
     */
    public OXC getNode(int id) {
        return nodeVector[id];
    }

    /**
     * Retrieves a specific link in the PhysicalTopology object, based on its
     * unique identifier.
     *
     * @param linkid the link's unique identifier
     * @return specified link from the PhysicalTopology's linkVector
     */
    public Link getLink(int linkid) {
        return linkVector[linkid];
    }

    /**
     * Retrieves a specific link in the PhysicalTopology object, based on its
     * source and destination nodes.
     *
     * @param src the link's source node
     * @param dst the link's destination node
     * @return the specified link from the PhysicalTopology's adjMatrix
     */
    public Link getLink(int src, int dst) {
        return adjMatrix[src][dst];
    }

    /**
     * Retrives a given PhysicalTopology's adjancency matrix, which contains the
     * links between source and destination nodes.
     *
     * @return the PhysicalTopology's adjMatrix
     */
    public Link[][] getAdjMatrix() {
        return adjMatrix;
    }

    /**
     * Says whether exists or not a link between two given nodes.
     *
     * @param node1 possible link's source node
     * @param node2 possible link's destination node
     * @return true if the link exists in the PhysicalTopology's adjMatrix
     */
    public boolean hasLink(int node1, int node2) {
        if (adjMatrix[node1][node2] != null) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * Checks if a path made of links makes sense by checking its continuity
     *
     * @param links to be checked
     * @return true if the link exists in the PhysicalTopology's adjMatrix
     */
    public boolean checkLinkPath(int links[]) {
        for (int i = 0; i < links.length - 1; i++) {
            if (!(getLink(links[i]).dst == getLink(links[i + 1]).src)) {
                return false;
            }
        }
        return true;
    }

    /**
     * Returns a weighted graph with vertices, edges and weights representing
     * the physical network nodes, links and weights implemented by this class
     * object.
     *
     * @return an WeightedGraph class object
     */
    public WeightedGraph getWeightedGraph() {
        WeightedGraph g = new WeightedGraph(nodes);
        for (int i = 0; i < nodes; i++) {
            for (int j = 0; j < nodes; j++) {
                if (hasLink(i, j)) {
                    g.addEdge(i, j, getLink(i, j).getWeight());
                }
            }
        }
        return g;
    }

    /**
     *
     *
     */
    public void printXpressInputFile() {

        // Edges
        System.out.println(""EDGES: ["");
        for (int i = 0; i < this.getNumNodes(); i++) {
            for (int j = 0; j < this.getNumNodes(); j++) {
                if (this.hasLink(i, j)) {
                    System.out.println(""("" + Integer.toString(i + 1) + "" "" + Integer.toString(j + 1) + "") 1"");
                } else {
                    System.out.println(""("" + Integer.toString(i + 1) + "" "" + Integer.toString(j + 1) + "") 0"");
                }
            }
        }
        System.out.println(""]"");
        System.out.println();

        // SD Pairs
        System.out.println(""TRAFFIC: ["");
        for (int i = 0; i < this.getNumNodes(); i++) {
            for (int j = 0; j < this.getNumNodes(); j++) {
                if (i != j) {
                    System.out.println(""("" + Integer.toString(i + 1) + "" "" + Integer.toString(j + 1) + "") 1"");
                } else {
                    System.out.println(""("" + Integer.toString(i + 1) + "" "" + Integer.toString(j + 1) + "") 0"");
                }
            }
        }
        System.out.println(""]"");
    }

    /**
     * Prints all nodes and links between them in the PhysicalTopology object.
     *
     * @return string containing the PhysicalTopology's adjMatrix values
     */
    @Override
    public String toString() {
        String topo = """";
        for (int i = 0; i < nodes; i++) {
            for (int j = 0; j < nodes; j++) {
                if (adjMatrix[i][j] != null) {
                    topo += adjMatrix[i][j].toString() + ""\n\n"";
                }
            }
        }
        return topo;
    }

    public abstract void createPhysicalLightpath(LightPath lp);

    public abstract void removePhysicalLightpath(LightPath lp);

    public abstract boolean canCreatePhysicalLightpath(LightPath lp);
    
    public abstract double getBW(LightPath lp);

    public abstract double getBWAvailable(LightPath lp);

    public abstract boolean canAddFlow(Flow flow, LightPath lightpath);

    public abstract void addFlow(Flow flow, LightPath lightpath);
    
    public abstract void addBulkData(BulkData bulkData, LightPath lightpath);

    public abstract void removeFlow(Flow flow, LightPath lightpath);

    public abstract boolean canAddBulkData(BulkData bulkData, LightPath lightpath); 
    
}
",Java
"require 'spec_helper'

describe Character do
  before do
    @character = Character.new(name: ""Walder Frey"", page: 'index.html')
  end

  subject { @character}
  it { should respond_to(:name)}
  it { should respond_to(:icon)}
  it { should respond_to(:page)}
  it { should respond_to(:degrees)}
  it { should respond_to(:all_relationships)}
  it { should respond_to(:children)}
  it { should respond_to(:parents)}
  it { should respond_to(:relationships)}
  it { should respond_to(:reverse_relationships)}

  it { should be_valid}

  describe ""when name is not present"" do
    before {@character.name = nil}
    it {should_not be_valid}
  end

  describe ""when page is not present"" do
    before {@character.page = nil}
    it {should_not be_valid}
  end

  describe ""character with page already exists"" do
    before do 
        character_with_same_page = @character.dup
        character_with_same_page.page.upcase!
        character_with_same_page.save
    end

    it { should_not be_valid}
  end

  describe ""character relationships"" do
    before{ @character.save}
    let!(:child_character) do
      FactoryGirl.create(:character)
    end

    let!(:relationship) { @character.relationships.build(:child_id => child_character.id)}

    it ""should display for both"" do
      expect(@character.all_relationships.to_a).to eq child_character.all_relationships.to_a
    end

    it ""should destroy relationships"" do
      relationships = @character.relationships.to_a
      @character.destroy

      expect(relationships).not_to be_empty
      relationships.each do |relationship|
        expect(Relationship.where(:id => relationship.id)).to be_empty
      end
    end
  end

end
",Ruby
"require 'spec_helper'

describe MWS::Report do
  describe "".method_missing"" do
    describe "".get_report_list"" do
      let(:valid_args){
        {
          key: ""ThisIsSigningKey"",
          endpoint: ""mws.amazonservices.com"",
          params: {
            ""AWSAccessKeyId"" => ""AccessKeyIdString"",
            ""SellerId"" => ""SellerIdString"",
            ""ReportTypeList"" => [""_GET_FLAT_FILE_ORDERS_DATA_""],
            ""Acknowledged"" => false,
            ""MaxCount"" => 100
          }
        }
      }

      before do
        response = double(""request"")
        expect(response).to receive(:body).and_return(""BodyString"")
        request = double(""request"")
        expect(request).to receive(:execute).and_return(response)
        expect(MWS::Request).to receive(:new).and_return(request)
      end

      subject { described_class.get_report_list(valid_args) }
      it { is_expected.to be_a String }
    end
  end
end
",Ruby
"require File.dirname(__FILE__) + '/../spec_helper'

describe ""Standard Tags"" do
  dataset :users_and_pages, :file_not_found, :snippets

  it '<r:page> should allow access to the current page' do
    page(:home)
    page.should render('<r:page:title />').as('Home')
    page.should render(%{<r:find url=""/radius""><r:title /> | <r:page:title /></r:find>}).as('Radius | Home')
  end

  [:breadcrumb, :slug, :title, :url].each do |attr|
    it ""<r:#{attr}> should render the '#{attr}' attribute"" do
      value = page.send(attr)
      page.should render(""<r:#{attr} />"").as(value.to_s)
    end
  end

  it ""<r:url> with a nil relative URL root should scope to the relative root of /"" do
    ActionController::Base.relative_url_root = nil
    page(:home).should render(""<r:url />"").as(""/"")
  end

  it '<r:url> with a relative URL root should scope to the relative root' do
    page(:home).should render(""<r:url />"").with_relative_root(""/foo"").as(""/foo/"")
  end

  it '<r:parent> should change the local context to the parent page' do
    page(:parent)
    page.should render('<r:parent><r:title /></r:parent>').as(pages(:home).title)
    page.should render('<r:parent><r:children:each by=""title""><r:title /></r:children:each></r:parent>').as(page_eachable_children(pages(:home)).collect(&:title).join(""""))
    page.should render('<r:children:each><r:parent:title /></r:children:each>').as(@page.title * page.children.count)
  end

  it '<r:if_parent> should render the contained block if the current page has a parent page' do
    page.should render('<r:if_parent>true</r:if_parent>').as('true')
    page(:home).should render('<r:if_parent>true</r:if_parent>').as('')
  end

  it '<r:unless_parent> should render the contained block unless the current page has a parent page' do
    page.should render('<r:unless_parent>true</r:unless_parent>').as('')
    page(:home).should render('<r:unless_parent>true</r:unless_parent>').as('true')
  end

  it '<r:if_children> should render the contained block if the current page has child pages' do
    page(:home).should render('<r:if_children>true</r:if_children>').as('true')
    page(:childless).should render('<r:if_children>true</r:if_children>').as('')
  end

  it '<r:unless_children> should render the contained block if the current page has no child pages' do
    page(:home).should render('<r:unless_children>true</r:unless_children>').as('')
    page(:childless).should render('<r:unless_children>true</r:unless_children>').as('true')
  end

  describe ""<r:children:each>"" do
    it ""should iterate through the children of the current page"" do
      page(:parent)
      page.should render('<r:children:each><r:title /> </r:children:each>').as('Child Child 2 Child 3 ')
      page.should render('<r:children:each><r:page><r:slug />/<r:child:slug /> </r:page></r:children:each>').as('parent/child parent/child-2 parent/child-3 ')
      page(:assorted).should render(page_children_each_tags).as('a b c d e f g h i j ')
    end

    it 'should not list draft pages' do
      page.should render('<r:children:each by=""title""><r:slug /> </r:children:each>').as('a b c d e f g h i j ')
    end

    it 'should include draft pages with status=""all""' do
      page.should render('<r:children:each status=""all"" by=""slug""><r:slug /> </r:children:each>').as('a b c d draft e f g h i j ')
    end

    it ""should include draft pages by default on the dev host"" do
      page.should render('<r:children:each by=""slug""><r:slug /> </r:children:each>').as('a b c d draft e f g h i j ').on('dev.site.com')
    end

    it 'should not list draft pages on dev.site.com when Radiant::Config[""dev.host""] is set to something else' do
      Radiant::Config['dev.host'] = 'preview.site.com'
      page.should render('<r:children:each by=""title""><r:slug /> </r:children:each>').as('a b c d e f g h i j ').on('dev.site.com')
    end

    it 'should paginate results when ""paginated"" attribute is ""true""' do
      page.pagination_parameters = {:page => 1, :per_page => 10}
      page.should render('<r:children:each paginated=""true"" per_page=""10""><r:slug /> </r:children:each>').as('a b c d e f g h i j ')
      page.should render('<r:children:each paginated=""true"" per_page=""2""><r:slug /> </r:children:each>').matching(/div class=""pagination""/)
    end

    it 'should error with invalid ""limit"" attribute' do
      message = ""`limit' attribute of `each' tag must be a positive number between 1 and 4 digits""
      page.should render(page_children_each_tags(%{limit=""a""})).with_error(message)
      page.should render(page_children_each_tags(%{limit=""-10""})).with_error(message)
      page.should render(page_children_each_tags(%{limit=""50000""})).with_error(message)
    end

    it 'should error with invalid ""offset"" attribute' do
      message = ""`offset' attribute of `each' tag must be a positive number between 1 and 4 digits""
      page.should render(page_children_each_tags(%{offset=""a""})).with_error(message)
      page.should render(page_children_each_tags(%{offset=""-10""})).with_error(message)
      page.should render(page_children_each_tags(%{offset=""50000""})).with_error(message)
    end

    it 'should error with invalid ""by"" attribute' do
      message = ""`by' attribute of `each' tag must be set to a valid field name""
      page.should render(page_children_each_tags(%{by=""non-existant-field""})).with_error(message)
    end

    it 'should error with invalid ""order"" attribute' do
      message = %{`order' attribute of `each' tag must be set to either ""asc"" or ""desc""}
      page.should render(page_children_each_tags(%{order=""asdf""})).with_error(message)
    end

    it ""should limit the number of children when given a 'limit' attribute"" do
      page.should render(page_children_each_tags(%{limit=""5""})).as('a b c d e ')
    end

    it ""should limit and offset the children when given 'limit' and 'offset' attributes"" do
      page.should render(page_children_each_tags(%{offset=""3"" limit=""5""})).as('d e f g h ')
    end

    it ""should change the sort order when given an 'order' attribute"" do
      page.should render(page_children_each_tags(%{order=""desc""})).as('j i h g f e d c b a ')
    end

    it ""should sort by the 'by' attribute"" do
      page.should render(page_children_each_tags(%{by=""breadcrumb""})).as('f e d c b a j i h g ')
    end

    it ""should sort by the 'by' attribute according to the 'order' attribute"" do
      page.should render(page_children_each_tags(%{by=""breadcrumb"" order=""desc""})).as('g h i j a b c d e f ')
    end

    describe 'with ""status"" attribute' do
      it ""set to 'all' should list all children"" do
        page.should render(page_children_each_tags(%{status=""all""})).as(""a b c d e f g h i j draft "")
      end

      it ""set to 'draft' should list only children with 'draft' status"" do
        page.should render(page_children_each_tags(%{status=""draft""})).as('draft ')
      end

      it ""set to 'published' should list only children with 'draft' status"" do
        page.should render(page_children_each_tags(%{status=""published""})).as('a b c d e f g h i j ')
      end

      it ""set to an invalid status should render an error"" do
        page.should render(page_children_each_tags(%{status=""askdf""})).with_error(""`status' attribute of `each' tag must be set to a valid status"")
      end
    end
  end

  describe ""<r:children:each:if_first>"" do
    it ""should render for the first child"" do
      tags = '<r:children:each><r:if_first>FIRST:</r:if_first><r:slug /> </r:children:each>'
      expected = ""FIRST:article article-2 article-3 article-4 ""
      page(:news).should render(tags).as(expected)
    end
  end

  describe ""<r:children:each:unless_first>"" do
    it ""should render for all but the first child"" do
      tags = '<r:children:each><r:unless_first>NOT-FIRST:</r:unless_first><r:slug /> </r:children:each>'
      expected = ""article NOT-FIRST:article-2 NOT-FIRST:article-3 NOT-FIRST:article-4 ""
      page(:news).should render(tags).as(expected)
    end
  end

  describe ""<r:children:each:if_last>"" do
    it ""should render for the last child"" do
      tags = '<r:children:each><r:if_last>LAST:</r:if_last><r:slug /> </r:children:each>'
      expected = ""article article-2 article-3 LAST:article-4 ""
      page(:news).should render(tags).as(expected)
    end
  end

  describe ""<r:children:each:unless_last>"" do
    it ""should render for all but the last child"" do
      tags = '<r:children:each><r:unless_last>NOT-LAST:</r:unless_last><r:slug /> </r:children:each>'
      expected = ""NOT-LAST:article NOT-LAST:article-2 NOT-LAST:article-3 article-4 ""
      page(:news).should render(tags).as(expected)
    end
  end

  describe ""<r:children:each:header>"" do
    it ""should render the header when it changes"" do
      tags = '<r:children:each><r:header>[<r:date format=""%b/%y"" />] </r:header><r:slug /> </r:children:each>'
      expected = ""[Dec/00] article [Feb/01] article-2 article-3 [Mar/01] article-4 ""
      page(:news).should render(tags).as(expected)
    end

    it 'with ""name"" attribute should maintain a separate header' do
      tags = %{<r:children:each><r:header name=""year"">[<r:date format='%Y' />] </r:header><r:header name=""month"">(<r:date format=""%b"" />) </r:header><r:slug /> </r:children:each>}
      expected = ""[2000] (Dec) article [2001] (Feb) article-2 article-3 (Mar) article-4 ""
      page(:news).should render(tags).as(expected)
    end

    it 'with ""restart"" attribute set to one name should restart that header' do
      tags = %{<r:children:each><r:header name=""year"" restart=""month"">[<r:date format='%Y' />] </r:header><r:header name=""month"">(<r:date format=""%b"" />) </r:header><r:slug /> </r:children:each>}
      expected = ""[2000] (Dec) article [2001] (Feb) article-2 article-3 (Mar) article-4 ""
      page(:news).should render(tags).as(expected)
    end

    it 'with ""restart"" attribute set to two names should restart both headers' do
      tags = %{<r:children:each><r:header name=""year"" restart=""month;day"">[<r:date format='%Y' />] </r:header><r:header name=""month"" restart=""day"">(<r:date format=""%b"" />) </r:header><r:header name=""day""><<r:date format='%d' />> </r:header><r:slug /> </r:children:each>}
      expected = ""[2000] (Dec) <01> article [2001] (Feb) <09> article-2 <24> article-3 (Mar) <06> article-4 ""
      page(:news).should render(tags).as(expected)
    end
  end

  describe ""<r:children:count>"" do
    it 'should render the number of children of the current page' do
      page(:parent).should render('<r:children:count />').as('3')
    end

    it ""should accept the same scoping conditions as <r:children:each>"" do
      page.should render('<r:children:count />').as('10')
      page.should render('<r:children:count status=""all"" />').as('11')
      page.should render('<r:children:count status=""draft"" />').as('1')
      page.should render('<r:children:count status=""hidden"" />').as('0')
    end
  end

  describe ""<r:children:first>"" do
    it 'should render its contents in the context of the first child page' do
      page(:parent).should render('<r:children:first:title />').as('Child')
    end

    it 'should accept the same scoping attributes as <r:children:each>' do
      page.should render(page_children_first_tags).as('a')
      page.should render(page_children_first_tags(%{limit=""5""})).as('a')
      page.should render(page_children_first_tags(%{offset=""3"" limit=""5""})).as('d')
      page.should render(page_children_first_tags(%{order=""desc""})).as('j')
      page.should render(page_children_first_tags(%{by=""breadcrumb""})).as('f')
      page.should render(page_children_first_tags(%{by=""breadcrumb"" order=""desc""})).as('g')
    end

    it ""should render nothing when no children exist"" do
      page(:first).should render('<r:children:first:title />').as('')
    end
  end

  describe ""<r:children:last>"" do
    it 'should render its contents in the context of the last child page' do
      page(:parent).should render('<r:children:last:title />').as('Child 3')
    end

    it 'should accept the same scoping attributes as <r:children:each>' do
      page.should render(page_children_last_tags).as('j')
      page.should render(page_children_last_tags(%{limit=""5""})).as('e')
      page.should render(page_children_last_tags(%{offset=""3"" limit=""5""})).as('h')
      page.should render(page_children_last_tags(%{order=""desc""})).as('a')
      page.should render(page_children_last_tags(%{by=""breadcrumb""})).as('g')
      page.should render(page_children_last_tags(%{by=""breadcrumb"" order=""desc""})).as('f')
    end

    it ""should render nothing when no children exist"" do
      page(:first).should render('<r:children:last:title />').as('')
    end
  end

  describe ""<r:content>"" do
    it ""should render the 'body' part by default"" do
      page.should render('<r:content />').as('Assorted body.')
    end

    it ""with 'part' attribute should render the specified part"" do
      page(:home).should render('<r:content part=""extended"" />').as(""Just a test."")
    end

    it ""should prevent simple recursion"" do
      page(:recursive_parts).should render('<r:content />').with_error(""Recursion error: already rendering the `body' part."")
    end

    it ""should prevent deep recursion"" do
      page(:recursive_parts).should render('<r:content part=""one""/>').with_error(""Recursion error: already rendering the `one' part."")
      page(:recursive_parts).should render('<r:content part=""two""/>').with_error(""Recursion error: already rendering the `two' part."")
    end

    it ""should allow repetition"" do
      page(:recursive_parts).should render('<r:content part=""repeat""/>').as('xx')
    end

    it ""should not prevent rendering a part more than once in sequence"" do
      page(:home).should render('<r:content /><r:content />').as('Hello world!Hello world!')
    end

    describe ""with inherit attribute"" do
      it ""missing or set to 'false' should render the current page's part"" do
        page.should render('<r:content part=""sidebar"" />').as('')
        page.should render('<r:content part=""sidebar"" inherit=""false"" />').as('')
      end

      describe ""set to 'true'"" do
        it ""should render an ancestor's part"" do
          page.should render('<r:content part=""sidebar"" inherit=""true"" />').as('Assorted sidebar.')
        end
        it ""should render nothing when no ancestor has the part"" do
          page.should render('<r:content part=""part_that_doesnt_exist"" inherit=""true"" />').as('')
        end

        describe ""and contextual attribute"" do
          it ""set to 'true' should render the part in the context of the current page"" do
            page(:parent).should render('<r:content part=""sidebar"" inherit=""true"" contextual=""true"" />').as('Parent sidebar.')
            page(:child).should render('<r:content part=""sidebar"" inherit=""true"" contextual=""true"" />').as('Child sidebar.')
            page(:grandchild).should render('<r:content part=""sidebar"" inherit=""true"" contextual=""true"" />').as('Grandchild sidebar.')
          end

          it ""set to 'false' should render the part in the context of its containing page"" do
            page(:parent).should render('<r:content part=""sidebar"" inherit=""true"" contextual=""false"" />').as('Home sidebar.')
          end

          it ""should maintain the global page"" do
            page(:first)
            page.should render('<r:content part=""titles"" inherit=""true"" contextual=""true""/>').as('First First')
            page.should render('<r:content part=""titles"" inherit=""true"" contextual=""false""/>').as('Home First')
          end
        end
      end

      it ""set to an erroneous value should render an error"" do
        page.should render('<r:content part=""sidebar"" inherit=""weird value"" />').with_error(%{`inherit' attribute of `content' tag must be set to either ""true"" or ""false""})
      end

      it ""should render parts with respect to the current contextual page"" do
        expected = ""Child body. Child 2 body. Child 3 body. ""
        page(:parent).should render('<r:children:each><r:content /> </r:children:each>').as(expected)
      end
    end
  end

  describe ""<r:if_content>"" do

    it ""without 'part' attribute should render the contained block if the 'body' part exists"" do
      page.should render('<r:if_content>true</r:if_content>').as('true')
    end

    it ""should render the contained block if the specified part exists"" do
      page.should render('<r:if_content part=""body"">true</r:if_content>').as('true')
    end

    it ""should not render the contained block if the specified part does not exist"" do
      page.should render('<r:if_content part=""asdf"">true</r:if_content>').as('')
    end

    describe ""with more than one part given (separated by comma)"" do

      it ""should render the contained block only if all specified parts exist"" do
        page(:home).should render('<r:if_content part=""body, extended"">true</r:if_content>').as('true')
      end

      it ""should not render the contained block if at least one of the specified parts does not exist"" do
        page(:home).should render('<r:if_content part=""body, madeup"">true</r:if_content>').as('')
      end

      describe ""with inherit attribute set to 'true'"" do
        it 'should render the contained block if the current or ancestor pages have the specified parts' do
          page(:guests).should render('<r:if_content part=""favors, extended"" inherit=""true"">true</r:if_content>').as('true')
        end

        it 'should not render the contained block if the current or ancestor pages do not have all of the specified parts' do
          page(:guests).should render('<r:if_content part=""favors, madeup"" inherit=""true"">true</r:if_content>').as('')
        end
        
        describe ""with find attribute set to 'any'"" do
          it 'should render the contained block if the current or ancestor pages have any of the specified parts' do
            page(:guests).should render('<r:if_content part=""favors, madeup"" inherit=""true"" find=""any"">true</r:if_content>').as('true')
          end
          
          it 'should still render the contained block if first of the specified parts has not been found' do
            page(:guests).should render('<r:if_content part=""madeup, favors"" inherit=""true"" find=""any"">true</r:if_content>').as('true')
          end
        end
      end
      
      describe ""with inherit attribute set to 'false'"" do
        it 'should render the contained block if the current page has the specified parts' do
          page(:guests).should render('<r:if_content part=""favors, games"" inherit=""false"">true</r:if_content>').as('')
        end

        it 'should not render the contained block if the current or ancestor pages do not have all of the specified parts' do
          page(:guests).should render('<r:if_content part=""favors, madeup"" inherit=""false"">true</r:if_content>').as('')
        end
      end
      describe ""with the 'find' attribute set to 'any'"" do
        it ""should render the contained block if any of the specified parts exist"" do
          page.should render('<r:if_content part=""body, asdf"" find=""any"">true</r:if_content>').as('true')
        end
      end
      describe ""with the 'find' attribute set to 'all'"" do
        it ""should render the contained block if all of the specified parts exist"" do
          page(:home).should render('<r:if_content part=""body, sidebar"" find=""all"">true</r:if_content>').as('true')
        end

        it ""should not render the contained block if all of the specified parts do not exist"" do
          page.should render('<r:if_content part=""asdf, madeup"" find=""all"">true</r:if_content>').as('')
        end
      end
    end
  end

  describe ""<r:unless_content>"" do
    describe ""with inherit attribute set to 'true'"" do
      it 'should not render the contained block if the current or ancestor pages have the specified parts' do
        page(:guests).should render('<r:unless_content part=""favors, extended"" inherit=""true"">true</r:unless_content>').as('')
      end

      it 'should render the contained block if the current or ancestor pages do not have the specified parts' do
        page(:guests).should render('<r:unless_content part=""madeup, imaginary"" inherit=""true"">true</r:unless_content>').as('true')
      end

      it ""should not render the contained block if the specified part does not exist but does exist on an ancestor"" do
        page.should render('<r:unless_content part=""sidebar"" inherit=""true"">false</r:unless_content>').as('')
      end
      
      describe ""with find attribute set to 'any'"" do
        it 'should not render the contained block if the current or ancestor pages have any of the specified parts' do
          page(:guests).should render('<r:unless_content part=""favors, madeup"" inherit=""true"" find=""any"">true</r:unless_content>').as('')
        end
        
        it 'should still not render the contained block if first of the specified parts has not been found' do
          page(:guests).should render('<r:unless_content part=""madeup, favors"" inherit=""true"" find=""any"">true</r:unless_content>').as('')
        end
      end
    end

    it ""without 'part' attribute should not render the contained block if the 'body' part exists"" do
      page.should render('<r:unless_content>false</r:unless_content>').as('')
    end

    it ""should not render the contained block if the specified part exists"" do
      page.should render('<r:unless_content part=""body"">false</r:unless_content>').as('')
    end

    it ""should render the contained block if the specified part does not exist"" do
      page.should render('<r:unless_content part=""asdf"">false</r:unless_content>').as('false')
    end

    it ""should render the contained block if the specified part does not exist but does exist on an ancestor"" do
      page.should render('<r:unless_content part=""sidebar"">false</r:unless_content>').as('false')
    end

    describe ""with more than one part given (separated by comma)"" do

      it ""should not render the contained block if all of the specified parts exist"" do
        page(:home).should render('<r:unless_content part=""body, extended"">true</r:unless_content>').as('')
      end

      it ""should render the contained block if at least one of the specified parts exists"" do
        page(:home).should render('<r:unless_content part=""body, madeup"">true</r:unless_content>').as('true')
      end

      describe ""with the 'inherit' attribute set to 'true'"" do
        it ""should render the contained block if the current or ancestor pages have none of the specified parts"" do
          page.should render('<r:unless_content part=""imaginary, madeup"" inherit=""true"">true</r:unless_content>').as('true')
        end

        it ""should not render the contained block if all of the specified parts are present on the current or ancestor pages"" do
          page(:party).should render('<r:unless_content part=""favors, extended"" inherit=""true"">true</r:unless_content>').as('')
        end
      end

      describe ""with the 'find' attribute set to 'all'"" do
        it ""should not render the contained block if all of the specified parts exist"" do
          page(:home).should render('<r:unless_content part=""body, sidebar"" find=""all"">true</r:unless_content>').as('')
        end

        it ""should render the contained block unless all of the specified parts exist"" do
          page.should render('<r:unless_content part=""body, madeup"" find=""all"">true</r:unless_content>').as('true')
        end
      end

      describe ""with the 'find' attribute set to 'any'"" do
        it ""should not render the contained block if any of the specified parts exist"" do
          page.should render('<r:unless_content part=""body, madeup"" find=""any"">true</r:unless_content>').as('')
        end
      end
    end
  end

  describe ""<r:author>"" do
    it ""should render the author of the current page"" do
      page.should render('<r:author />').as('Admin')
    end

    it ""should render nothing when the page has no author"" do
      page(:no_user).should render('<r:author />').as('')
    end
  end

  describe ""<r:gravatar>"" do
    it ""should render the Gravatar URL of author of the current page"" do
      page.should render('<r:gravatar />').as('http://www.gravatar.com/avatar.php?gravatar_id=e64c7d89f26bd1972efa854d13d7dd61&rating=G&size=32')
    end

    it ""should render the Gravatar URL of the name user"" do
      page.should render('<r:gravatar name=""Admin"" />').as('http://www.gravatar.com/avatar.php?gravatar_id=e64c7d89f26bd1972efa854d13d7dd61&rating=G&size=32')
    end

    it ""should render the default avatar when the user has not set an email address"" do
      page.should render('<r:gravatar name=""Designer"" />').as('http://testhost.tld/images/admin/avatar_32x32.png')
    end

    it ""should render the specified size"" do
      page.should render('<r:gravatar name=""Designer"" size=""96px"" />').as('http://testhost.tld/images/admin/avatar_96x96.png')
    end

    it ""should render the specified rating"" do
      page.should render('<r:gravatar rating=""X"" />').as('http://www.gravatar.com/avatar.php?gravatar_id=e64c7d89f26bd1972efa854d13d7dd61&rating=X&size=32')
    end
  end

  describe ""<r:date>"" do
    before :each do
      page(:dated)
    end

    it ""should render the published date of the page"" do
      page.should render('<r:date />').as('Wednesday, January 11, 2006')
    end

    it ""should format the published date according to the 'format' attribute"" do
      page.should render('<r:date format=""%d %b %Y"" />').as('11 Jan 2006')
    end

    describe ""with 'for' attribute"" do
      it ""set to 'now' should render the current date in the current Time.zone"" do
        page.should render('<r:date for=""now"" />').as(Time.zone.now.strftime(""%A, %B %d, %Y""))
      end

      it ""set to 'created_at' should render the creation date"" do
        page.should render('<r:date for=""created_at"" />').as('Tuesday, January 10, 2006')
      end

      it ""set to 'updated_at' should render the update date"" do
        page.should render('<r:date for=""updated_at"" />').as('Thursday, January 12, 2006')
      end

      it ""set to 'published_at' should render the publish date"" do
        page.should render('<r:date for=""published_at"" />').as('Wednesday, January 11, 2006')
      end

      it ""set to an invalid attribute should render an error"" do
        page.should render('<r:date for=""blah"" />').with_error(""Invalid value for 'for' attribute."")
      end
    end

    it ""should use the currently set timezone"" do
      Time.zone = ""Tokyo""
      format = ""%H:%m""
      expected = page.published_at.in_time_zone(ActiveSupport::TimeZone['Tokyo']).strftime(format)
      page.should render(%Q(<r:date format=""#{format}"" />) ).as(expected)
    end
  end

  describe ""<r:link>"" do
    it ""should render a link to the current page"" do
      page.should render('<r:link />').as('<a href=""/assorted/"">Assorted</a>')
    end

    it ""should render its contents as the text of the link"" do
      page.should render('<r:link>Test</r:link>').as('<a href=""/assorted/"">Test</a>')
    end

    it ""should pass HTML attributes to the <a> tag"" do
      expected = '<a href=""/assorted/"" class=""test"" id=""assorted"">Assorted</a>'
      page.should render('<r:link class=""test"" id=""assorted"" />').as(expected)
    end

    it ""should add the anchor attribute to the link as a URL anchor"" do
      page.should render('<r:link anchor=""test"">Test</r:link>').as('<a href=""/assorted/#test"">Test</a>')
    end

    it ""should render a link for the current contextual page"" do
      expected = %{<a href=""/parent/child/"">Child</a> <a href=""/parent/child-2/"">Child 2</a> <a href=""/parent/child-3/"">Child 3</a> }
      page(:parent).should render('<r:children:each><r:link /> </r:children:each>' ).as(expected)
    end

    it ""should scope the link within the relative URL root"" do
      page(:assorted).should render('<r:link />').with_relative_root('/foo').as('<a href=""/foo/assorted/"">Assorted</a>')
    end
  end

  describe ""<r:snippet>"" do
    it ""should render the contents of the specified snippet"" do
      page.should render('<r:snippet name=""first"" />').as('test')
    end

    it ""should render an error when the snippet does not exist"" do
      page.should render('<r:snippet name=""non-existant"" />').with_error('snippet not found')
    end

    it ""should render an error when not given a 'name' attribute"" do
      page.should render('<r:snippet />').with_error(""`snippet' tag must contain `name' attribute"")
    end

    it ""should filter the snippet with its assigned filter"" do
      page.should render('<r:page><r:snippet name=""markdown"" /></r:page>').matching(%r{<p><strong>markdown</strong></p>})
    end

    it ""should maintain the global page inside the snippet"" do
      page(:parent).should render('<r:snippet name=""global_page_cascade"" />').as(""#{@page.title} "" * @page.children.count)
    end

    it ""should maintain the global page when the snippet renders recursively"" do
      page(:child).should render('<r:snippet name=""recursive"" />').as(""Great GrandchildGrandchildChild"")
    end

    it ""should render the specified snippet when called as an empty double-tag"" do
      page.should render('<r:snippet name=""first""></r:snippet>').as('test')
    end

    it ""should capture contents of a double tag, substituting for <r:yield/> in snippet"" do
      page.should render('<r:snippet name=""yielding"">inner</r:snippet>').
        as('Before...inner...and after')
    end

    it ""should do nothing with contents of double tag when snippet doesn't yield"" do
      page.should render('<r:snippet name=""first"">content disappears!</r:snippet>').
        as('test')
    end

    it ""should render nested yielding snippets"" do
      page.should render('<r:snippet name=""div_wrap""><r:snippet name=""yielding"">Hello, World!</r:snippet></r:snippet>').
      as('<div>Before...Hello, World!...and after</div>')
    end

    it ""should render double-tag snippets called from within a snippet"" do
      page.should render('<r:snippet name=""nested_yields"">the content</r:snippet>').
        as('<snippet name=""div_wrap"">above the content below</snippet>')
    end

    it ""should render contents each time yield is called"" do
      page.should render('<r:snippet name=""yielding_often"">French</r:snippet>').
        as('French is Frencher than French')
    end
  end

  it ""should do nothing when called from page body"" do
    page.should render('<r:yield/>').as("""")
  end

  it '<r:random> should render a randomly selected contained <r:option>' do
    page.should render(""<r:random> <r:option>1</r:option> <r:option>2</r:option> <r:option>3</r:option> </r:random>"").matching(/^(1|2|3)$/)
  end

  it '<r:random> should render a randomly selected, dynamically set <r:option>' do
    page(:parent).should render(""<r:random:children:each:option:title />"").matching(/^(Child|Child\ 2|Child\ 3)$/)
  end

  it '<r:comment> should render nothing it contains' do
    page.should render('just a <r:comment>small </r:comment>test').as('just a test')
  end

  describe ""<r:navigation>"" do
    it ""should render the nested <r:normal> tag by default"" do
      tags = %{<r:navigation urls=""Home: / | Assorted: /assorted/ | Parent: /parent/"">
                 <r:normal><r:title /></r:normal>
               </r:navigation>}
      expected = %{Home Assorted Parent}
      page.should render(tags).as(expected)
    end

    it ""should render the nested <r:selected> tag for URLs that match the current page"" do
      tags = %{<r:navigation urls=""Home: / | Assorted: /assorted/ | Parent: /parent/ | Radius: /radius/"">
                 <r:normal><r:title /></r:normal>
                 <r:selected><strong><r:title/></strong></r:selected>
               </r:navigation>}
      expected = %{<strong>Home</strong> Assorted <strong>Parent</strong> Radius}
      page(:parent).should render(tags).as(expected)
    end

    it ""should render the nested <r:here> tag for URLs that exactly match the current page"" do
      tags = %{<r:navigation urls=""Home: Boy: / | Assorted: /assorted/ | Parent: /parent/"">
                 <r:normal><a href=""<r:url />""><r:title /></a></r:normal>
                 <r:here><strong><r:title /></strong></r:here>
                 <r:selected><strong><a href=""<r:url />""><r:title /></a></strong></r:selected>
                 <r:between> | </r:between>
               </r:navigation>}
      expected = %{<strong><a href=""/"">Home: Boy</a></strong> | <strong>Assorted</strong> | <a href=""/parent/"">Parent</a>}
      page.should render(tags).as(expected)
    end

    it ""should render the nested <r:between> tag between each link"" do
      tags = %{<r:navigation urls=""Home: / | Assorted: /assorted/ | Parent: /parent/"">
                 <r:normal><r:title /></r:normal>
                 <r:between> :: </r:between>
               </r:navigation>}
      expected = %{Home :: Assorted :: Parent}
      page.should render(tags).as(expected)
    end

    it 'without urls should render nothing' do
      page.should render(%{<r:navigation><r:normal /></r:navigation>}).as('')
    end

    it 'without a nested <r:normal> tag should render an error' do
      page.should render(%{<r:navigation urls=""something:here""></r:navigation>}).with_error( ""`navigation' tag must include a `normal' tag"")
    end

    it 'with urls without trailing slashes should match corresponding pages' do
      tags = %{<r:navigation urls=""Home: / | Assorted: /assorted | Parent: /parent | Radius: /radius"">
                 <r:normal><r:title /></r:normal>
                 <r:here><strong><r:title /></strong></r:here>
               </r:navigation>}
      expected = %{Home <strong>Assorted</strong> Parent Radius}
      page.should render(tags).as(expected)
    end

    it 'should prune empty blocks' do
      tags = %{<r:navigation urls=""Home: Boy: / | Archives: /archive/ | Radius: /radius/ | Docs: /documentation/"">
                 <r:normal><a href=""<r:url />""><r:title /></a></r:normal>
                 <r:here></r:here>
                 <r:selected><strong><a href=""<r:url />""><r:title /></a></strong></r:selected>
                 <r:between> | </r:between>
               </r:navigation>}
      expected = %{<strong><a href=""/"">Home: Boy</a></strong> | <a href=""/archive/"">Archives</a> | <a href=""/documentation/"">Docs</a>}
      page(:radius).should render(tags).as(expected)
    end

    it 'should render text under <r:if_first> and <r:if_last> only on the first and last item, respectively' do
      tags = %{<r:navigation urls=""Home: / | Assorted: /assorted | Parent: /parent | Radius: /radius"">
                 <r:normal><r:if_first>(</r:if_first><a href=""<r:url />""><r:title /></a><r:if_last>)</r:if_last></r:normal>
                 <r:here><r:if_first>(</r:if_first><r:title /><r:if_last>)</r:if_last></r:here>
                 <r:selected><r:if_first>(</r:if_first><strong><a href=""<r:url />""><r:title /></a></strong><r:if_last>)</r:if_last></r:selected>
               </r:navigation>}
      expected = %{(<strong><a href=\""/\"">Home</a></strong> <a href=\""/assorted\"">Assorted</a> <a href=\""/parent\"">Parent</a> Radius)}
      page(:radius).should render(tags).as(expected)
    end

    it 'should render text under <r:unless_first> on every item but the first' do
      tags = %{<r:navigation urls=""Home: / | Assorted: /assorted | Parent: /parent | Radius: /radius"">
                 <r:normal><r:unless_first>&gt; </r:unless_first><a href=""<r:url />""><r:title /></a></r:normal>
                 <r:here><r:unless_first>&gt; </r:unless_first><r:title /></r:here>
                 <r:selected><r:unless_first>&gt; </r:unless_first><strong><a href=""<r:url />""><r:title /></a></strong></r:selected>
               </r:navigation>}
      expected = %{<strong><a href=\""/\"">Home</a></strong> &gt; <a href=\""/assorted\"">Assorted</a> &gt; <a href=\""/parent\"">Parent</a> &gt; Radius}
      page(:radius).should render(tags).as(expected)
    end

    it 'should render text under <r:unless_last> on every item but the last' do
      tags = %{<r:navigation urls=""Home: / | Assorted: /assorted | Parent: /parent | Radius: /radius"">
                 <r:normal><a href=""<r:url />""><r:title /></a><r:unless_last> &gt;</r:unless_last></r:normal>
                 <r:here><r:title /><r:unless_last> &gt;</r:unless_last></r:here>
                 <r:selected><strong><a href=""<r:url />""><r:title /></a></strong><r:unless_last> &gt;</r:unless_last></r:selected>
               </r:navigation>}
      expected = %{<strong><a href=\""/\"">Home</a></strong> &gt; <a href=\""/assorted\"">Assorted</a> &gt; <a href=\""/parent\"">Parent</a> &gt; Radius}
      page(:radius).should render(tags).as(expected)
    end
  end

  describe ""<r:find>"" do
    it ""should change the local page to the page specified in the 'url' attribute"" do
      page.should render(%{<r:find url=""/parent/child/""><r:title /></r:find>}).as('Child')
    end

    it ""should render an error without the 'url' attribute"" do
      page.should render(%{<r:find />}).with_error(""`find' tag must contain `url' attribute"")
    end

    it ""should render nothing when the 'url' attribute does not point to a page"" do
      page.should render(%{<r:find url=""/asdfsdf/""><r:title /></r:find>}).as('')
    end

    it ""should render nothing when the 'url' attribute does not point to a page and a custom 404 page exists"" do
      page.should render(%{<r:find url=""/gallery/asdfsdf/""><r:title /></r:find>}).as('')
    end

    it ""should scope contained tags to the found page"" do
      page.should render(%{<r:find url=""/parent/""><r:children:each><r:slug /> </r:children:each></r:find>}).as('child child-2 child-3 ')
    end

    it ""should accept a path relative to the current page"" do
      page(:great_grandchild).should render(%{<r:find url=""../../../child-2""><r:title/></r:find>}).as(""Child 2"")
    end
  end

  it '<r:escape_html> should escape HTML-related characters into entities' do
    page.should render('<r:escape_html><strong>a bold move</strong></r:escape_html>').as('&lt;strong&gt;a bold move&lt;/strong&gt;')
  end

  it '<r:rfc1123_date> should render an RFC1123-compatible date' do
    page(:dated).should render('<r:rfc1123_date />').as('Wed, 11 Jan 2006 00:00:00 GMT')
  end

  describe ""<r:breadcrumbs>"" do
    it ""should render a series of breadcrumb links separated by &gt;"" do
      expected = %{<a href=""/"">Home</a> &gt; <a href=""/parent/"">Parent</a> &gt; <a href=""/parent/child/"">Child</a> &gt; <a href=""/parent/child/grandchild/"">Grandchild</a> &gt; Great Grandchild}
      page(:great_grandchild).should render('<r:breadcrumbs />').as(expected)
    end

    it ""with a 'separator' attribute should use the separator instead of &gt;"" do
      expected = %{<a href=""/"">Home</a> :: Parent}
      page(:parent).should render('<r:breadcrumbs separator="" :: "" />').as(expected)
    end

    it ""with a 'nolinks' attribute set to 'true' should not render links"" do
      expected = %{Home &gt; Parent}
      page(:parent).should render('<r:breadcrumbs nolinks=""true"" />').as(expected)
    end

    it ""with a relative URL root should scope links to the relative root"" do
      expected = '<a href=""/foo/"">Home</a> &gt; Assorted'
      page(:assorted).should render('<r:breadcrumbs />').with_relative_root('/foo').as(expected)
    end
  end

  describe ""<r:if_url>"" do
    describe ""with 'matches' attribute"" do
      it ""should render the contained block if the page URL matches"" do
        page.should render('<r:if_url matches=""a.sorted/$"">true</r:if_url>').as('true')
      end

      it ""should not render the contained block if the page URL does not match"" do
        page.should render('<r:if_url matches=""fancypants"">true</r:if_url>').as('')
      end

      it ""set to a malformatted regexp should render an error"" do
        page.should render('<r:if_url matches=""as(sorted/$"">true</r:if_url>').with_error(""Malformed regular expression in `matches' argument of `if_url' tag: unmatched (: /as(sorted\\/$/"")
      end

      it ""without 'ignore_case' attribute should ignore case by default"" do
        page.should render('<r:if_url matches=""asSorted/$"">true</r:if_url>').as('true')
      end

      describe ""with 'ignore_case' attribute"" do
        it ""set to 'true' should use a case-insensitive match"" do
          page.should render('<r:if_url matches=""asSorted/$"" ignore_case=""true"">true</r:if_url>').as('true')
        end

        it ""set to 'false' should use a case-sensitive match"" do
          page.should render('<r:if_url matches=""asSorted/$"" ignore_case=""false"">true</r:if_url>').as('')
        end
      end
    end

    it ""with no attributes should render an error"" do
      page.should render('<r:if_url>test</r:if_url>').with_error(""`if_url' tag must contain a `matches' attribute."")
    end
  end

  describe ""<r:unless_url>"" do
    describe ""with 'matches' attribute"" do
      it ""should not render the contained block if the page URL matches"" do
        page.should render('<r:unless_url matches=""a.sorted/$"">true</r:unless_url>').as('')
      end

      it ""should render the contained block if the page URL does not match"" do
        page.should render('<r:unless_url matches=""fancypants"">true</r:unless_url>').as('true')
      end

      it ""set to a malformatted regexp should render an error"" do
        page.should render('<r:unless_url matches=""as(sorted/$"">true</r:unless_url>').with_error(""Malformed regular expression in `matches' argument of `unless_url' tag: unmatched (: /as(sorted\\/$/"")
      end

      it ""without 'ignore_case' attribute should ignore case by default"" do
        page.should render('<r:unless_url matches=""asSorted/$"">true</r:unless_url>').as('')
      end

      describe ""with 'ignore_case' attribute"" do
        it ""set to 'true' should use a case-insensitive match"" do
          page.should render('<r:unless_url matches=""asSorted/$"">true</r:unless_url>').as('')
        end

        it ""set to 'false' should use a case-sensitive match"" do
          page.should render('<r:unless_url matches=""asSorted/$"" ignore_case=""false"">true</r:unless_url>').as('true')
        end
      end
    end

    it ""with no attributes should render an error"" do
      page.should render('<r:unless_url>test</r:unless_url>').with_error(""`unless_url' tag must contain a `matches' attribute."")
    end
  end

  describe ""<r:cycle>"" do
    it ""should render passed values in succession"" do
      page.should render('<r:cycle values=""first, second"" /> <r:cycle values=""first, second"" />').as('first second')
    end

    it ""should return to the beginning of the cycle when reaching the end"" do
      page.should render('<r:cycle values=""first, second"" /> <r:cycle values=""first, second"" /> <r:cycle values=""first, second"" />').as('first second first')
    end

    it ""should use a default cycle name of 'cycle'"" do
      page.should render('<r:cycle values=""first, second"" /> <r:cycle values=""first, second"" name=""cycle"" />').as('first second')
    end

    it ""should maintain separate cycle counters"" do
      page.should render('<r:cycle values=""first, second"" /> <r:cycle values=""one, two"" name=""numbers"" /> <r:cycle values=""first, second"" /> <r:cycle values=""one, two"" name=""numbers"" />').as('first one second two')
    end

    it ""should reset the counter"" do
      page.should render('<r:cycle values=""first, second"" /> <r:cycle values=""first, second"" reset=""true""/>').as('first first')
    end

    it ""should require the values attribute"" do
      page.should render('<r:cycle />').with_error(""`cycle' tag must contain a `values' attribute."")
    end
  end

  describe ""<r:if_dev>"" do
    it ""should render the contained block when on the dev site"" do
      page.should render('-<r:if_dev>dev</r:if_dev>-').as('-dev-').on('dev.site.com')
    end

    it ""should not render the contained block when not on the dev site"" do
      page.should render('-<r:if_dev>dev</r:if_dev>-').as('--')
    end

    describe ""on an included page"" do
      it ""should render the contained block when on the dev site"" do
        page.should render('-<r:find url=""/devtags/""><r:content part=""if_dev"" /></r:find>-').as('-dev-').on('dev.site.com')
      end

      it ""should not render the contained block when not on the dev site"" do
        page.should render('-<r:find url=""/devtags/""><r:content part=""if_dev"" /></r:find>-').as('--')
      end
    end
  end

  describe ""<r:unless_dev>"" do
    it ""should not render the contained block when not on the dev site"" do
      page.should render('-<r:unless_dev>not dev</r:unless_dev>-').as('--').on('dev.site.com')
    end

    it ""should render the contained block when not on the dev site"" do
      page.should render('-<r:unless_dev>not dev</r:unless_dev>-').as('-not dev-')
    end

    describe ""on an included page"" do
      it ""should not render the contained block when not on the dev site"" do
        page.should render('-<r:find url=""/devtags/""><r:content part=""unless_dev"" /></r:find>-').as('--').on('dev.site.com')
      end

      it ""should render the contained block when not on the dev site"" do
        page.should render('-<r:find url=""/devtags/""><r:content part=""unless_dev"" /></r:find>-').as('-not dev-')
      end
    end
  end

  describe ""<r:status>"" do
    it ""should render the status of the current page"" do
      status_tag = ""<r:status/>""
      page(:a).should render(status_tag).as(""Published"")
      page(:hidden).should render(status_tag).as(""Hidden"")
      page(:draft).should render(status_tag).as(""Draft"")
    end

    describe ""with the downcase attribute set to 'true'"" do
      it ""should render the lowercased status of the current page"" do
        status_tag_lc = ""<r:status downcase='true'/>""
        page(:a).should render(status_tag_lc).as(""published"")
        page(:hidden).should render(status_tag_lc).as(""hidden"")
        page(:draft).should render(status_tag_lc).as(""draft"")
      end
    end
  end

  describe ""<r:if_ancestor_or_self>"" do
    it ""should render the tag's content when the current page is an ancestor of tag.locals.page"" do
      page(:radius).should render(%{<r:find url=""/""><r:if_ancestor_or_self>true</r:if_ancestor_or_self></r:find>}).as('true')
    end

    it ""should not render the tag's content when current page is not an ancestor of tag.locals.page"" do
      page(:parent).should render(%{<r:find url=""/radius""><r:if_ancestor_or_self>true</r:if_ancestor_or_self></r:find>}).as('')
    end
  end

  describe ""<r:unless_ancestor_or_self>"" do
    it ""should render the tag's content when the current page is not an ancestor of tag.locals.page"" do
      page(:parent).should render(%{<r:find url=""/radius""><r:unless_ancestor_or_self>true</r:unless_ancestor_or_self></r:find>}).as('true')
    end

    it ""should not render the tag's content when current page is an ancestor of tag.locals.page"" do
      page(:radius).should render(%{<r:find url=""/""><r:unless_ancestor_or_self>true</r:unless_ancestor_or_self></r:find>}).as('')
    end
  end

  describe ""<r:if_self>"" do
    it ""should render the tag's content when the current page is the same as the local contextual page"" do
      page(:home).should render(%{<r:find url=""/""><r:if_self>true</r:if_self></r:find>}).as('true')
    end

    it ""should not render the tag's content when the current page is not the same as the local contextual page"" do
      page(:radius).should render(%{<r:find url=""/""><r:if_self>true</r:if_self></r:find>}).as('')
    end
  end

  describe ""<r:unless_self>"" do
    it ""should render the tag's content when the current page is not the same as the local contextual page"" do
      page(:radius).should render(%{<r:find url=""/""><r:unless_self>true</r:unless_self></r:find>}).as('true')
    end

    it ""should not render the tag's content when the current page is the same as the local contextual page"" do
      page(:home).should render(%{<r:find url=""/""><r:unless_self>true</r:unless_self></r:find>}).as('')
    end
  end

  describe ""<r:meta>"" do
    it ""should render <meta> tags for the description and keywords"" do
      page(:home).should render('<r:meta/>').as(%{<meta name=""description"" content=""The homepage"" /><meta name=""keywords"" content=""Home, Page"" />})
    end

    it ""should render <meta> tags with escaped values for the description and keywords"" do
      page.should render('<r:meta/>').as(%{<meta name=""description"" content=""sweet &amp; harmonious biscuits"" /><meta name=""keywords"" content=""sweet &amp; harmonious biscuits"" />})
    end

    describe ""with 'tag' attribute set to 'false'"" do
      it ""should render the contents of the description and keywords"" do
        page(:home).should render('<r:meta tag=""false"" />').as(%{The homepageHome, Page})
      end

      it ""should escape the contents of the description and keywords"" do
        page.should render('<r:meta tag=""false"" />').as(""sweet &amp; harmonious biscuitssweet &amp; harmonious biscuits"")
      end
    end
  end

  describe ""<r:meta:description>"" do
    it ""should render a <meta> tag for the description"" do
      page(:home).should render('<r:meta:description/>').as(%{<meta name=""description"" content=""The homepage"" />})
    end

    it ""should render a <meta> tag with escaped value for the description"" do
      page.should render('<r:meta:description />').as(%{<meta name=""description"" content=""sweet &amp; harmonious biscuits"" />})
    end

    describe ""with 'tag' attribute set to 'false'"" do
      it ""should render the contents of the description"" do
        page(:home).should render('<r:meta:description tag=""false"" />').as(%{The homepage})
      end

      it ""should escape the contents of the description"" do
        page.should render('<r:meta:description tag=""false"" />').as(""sweet &amp; harmonious biscuits"")
      end
    end
  end

  describe ""<r:meta:keywords>"" do
    it ""should render a <meta> tag for the keywords"" do
      page(:home).should render('<r:meta:keywords/>').as(%{<meta name=""keywords"" content=""Home, Page"" />})
    end

    it ""should render a <meta> tag with escaped value for the keywords"" do
      page.should render('<r:meta:keywords />').as(%{<meta name=""keywords"" content=""sweet &amp; harmonious biscuits"" />})
    end

    describe ""with 'tag' attribute set to 'false'"" do
      it ""should render the contents of the keywords"" do
        page(:home).should render('<r:meta:keywords tag=""false"" />').as(%{Home, Page})
      end

      it ""should escape the contents of the keywords"" do
        page.should render('<r:meta:keywords tag=""false"" />').as(""sweet &amp; harmonious biscuits"")
      end
    end
  end

  private

    def page(symbol = nil)
      if symbol.nil?
        @page ||= pages(:assorted)
      else
        @page = pages(symbol)
      end
    end

    def page_children_each_tags(attr = nil)
      attr = ' ' + attr unless attr.nil?
      ""<r:children:each#{attr}><r:slug /> </r:children:each>""
    end

    def page_children_first_tags(attr = nil)
      attr = ' ' + attr unless attr.nil?
      ""<r:children:first#{attr}><r:slug /></r:children:first>""
    end

    def page_children_last_tags(attr = nil)
      attr = ' ' + attr unless attr.nil?
      ""<r:children:last#{attr}><r:slug /></r:children:last>""
    end

    def page_eachable_children(page)
      page.children.select(&:published?).reject(&:virtual)
    end
end
",Ruby
"# frozen_string_literal: true

RSpec.describe Faraday::Response::RaiseError do
  let(:conn) do
    Faraday.new do |b|
      b.response :raise_error
      b.adapter :test do |stub|
        stub.get('ok') { [200, { 'Content-Type' => 'text/html' }, '<body></body>'] }
        stub.get('bad-request') { [400, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('unauthorized') { [401, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('forbidden') { [403, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('not-found') { [404, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('proxy-error') { [407, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('conflict') { [409, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('unprocessable-entity') { [422, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('4xx') { [499, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('nil-status') { [nil, { 'X-Reason' => 'nil' }, 'fail'] }
        stub.get('server-error') { [500, { 'X-Error' => 'bailout' }, 'fail'] }
      end
    end
  end

  it 'raises no exception for 200 responses' do
    expect { conn.get('ok') }.not_to raise_error
  end

  it 'raises Faraday::BadRequestError for 400 responses' do
    expect { conn.get('bad-request') }.to raise_error(Faraday::BadRequestError) do |ex|
      expect(ex.message).to eq('the server responded with status 400')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(400)
      expect(ex.response_status).to eq(400)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::UnauthorizedError for 401 responses' do
    expect { conn.get('unauthorized') }.to raise_error(Faraday::UnauthorizedError) do |ex|
      expect(ex.message).to eq('the server responded with status 401')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(401)
      expect(ex.response_status).to eq(401)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::ForbiddenError for 403 responses' do
    expect { conn.get('forbidden') }.to raise_error(Faraday::ForbiddenError) do |ex|
      expect(ex.message).to eq('the server responded with status 403')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(403)
      expect(ex.response_status).to eq(403)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::ResourceNotFound for 404 responses' do
    expect { conn.get('not-found') }.to raise_error(Faraday::ResourceNotFound) do |ex|
      expect(ex.message).to eq('the server responded with status 404')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(404)
      expect(ex.response_status).to eq(404)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::ProxyAuthError for 407 responses' do
    expect { conn.get('proxy-error') }.to raise_error(Faraday::ProxyAuthError) do |ex|
      expect(ex.message).to eq('407 ""Proxy Authentication Required""')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(407)
      expect(ex.response_status).to eq(407)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::ConflictError for 409 responses' do
    expect { conn.get('conflict') }.to raise_error(Faraday::ConflictError) do |ex|
      expect(ex.message).to eq('the server responded with status 409')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(409)
      expect(ex.response_status).to eq(409)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::UnprocessableEntityError for 422 responses' do
    expect { conn.get('unprocessable-entity') }.to raise_error(Faraday::UnprocessableEntityError) do |ex|
      expect(ex.message).to eq('the server responded with status 422')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(422)
      expect(ex.response_status).to eq(422)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::NilStatusError for nil status in response' do
    expect { conn.get('nil-status') }.to raise_error(Faraday::NilStatusError) do |ex|
      expect(ex.message).to eq('http status could not be derived from the server response')
      expect(ex.response[:headers]['X-Reason']).to eq('nil')
      expect(ex.response[:status]).to be_nil
      expect(ex.response_status).to be_nil
      expect(ex.response_body).to eq('fail')
      expect(ex.response_headers['X-Reason']).to eq('nil')
    end
  end

  it 'raises Faraday::ClientError for other 4xx responses' do
    expect { conn.get('4xx') }.to raise_error(Faraday::ClientError) do |ex|
      expect(ex.message).to eq('the server responded with status 499')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(499)
      expect(ex.response_status).to eq(499)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::ServerError for 500 responses' do
    expect { conn.get('server-error') }.to raise_error(Faraday::ServerError) do |ex|
      expect(ex.message).to eq('the server responded with status 500')
      expect(ex.response[:headers]['X-Error']).to eq('bailout')
      expect(ex.response[:status]).to eq(500)
      expect(ex.response_status).to eq(500)
      expect(ex.response_body).to eq('fail')
      expect(ex.response_headers['X-Error']).to eq('bailout')
    end
  end

  describe 'request info' do
    let(:conn) do
      Faraday.new do |b|
        b.response :raise_error
        b.adapter :test do |stub|
          stub.post(url, request_body, request_headers) do
            [400, { 'X-Reason' => 'because' }, 'keep looking']
          end
        end
      end
    end
    let(:request_body) { JSON.generate({ 'item' => 'sth' }) }
    let(:request_headers) { { 'Authorization' => 'Basic 123' } }
    let(:url_path) { 'request' }
    let(:query_params) { 'full=true' }
    let(:url) { ""#{url_path}?#{query_params}"" }

    subject(:perform_request) do
      conn.post url do |req|
        req.headers['Authorization'] = 'Basic 123'
        req.body = request_body
      end
    end

    it 'returns the request info in the exception' do
      expect { perform_request }.to raise_error(Faraday::BadRequestError) do |ex|
        expect(ex.response[:request][:method]).to eq(:post)
        expect(ex.response[:request][:url]).to eq(URI(""http:/#{url}""))
        expect(ex.response[:request][:url_path]).to eq(""/#{url_path}"")
        expect(ex.response[:request][:params]).to eq({ 'full' => 'true' })
        expect(ex.response[:request][:headers]).to match(a_hash_including(request_headers))
        expect(ex.response[:request][:body]).to eq(request_body)
      end
    end
  end
end
",Ruby
"module ActiveWarehouse #:nodoc:
  # Class that supports prejoining a fact table with dimensions. This is useful if you need
  # to list facts along with some or all of their detail information.
  class PrejoinFact
    # The fact class that this engine instance is connected to
    attr_accessor :fact_class
    
    delegate :prejoined_table_name, 
      :connection, 
      :prejoined_fields,
      :dimension_relationships, 
      :dimension_class, 
      :table_name,
      :columns, :to => :fact_class
  
    # Initialize the engine instance
    def initialize(fact_class)
      @fact_class = fact_class
    end
  
    # Populate the prejoined fact table.
    def populate(options={})
      populate_prejoined_fact_table(options)
    end
    
    protected
    # Drop the storage table
    def drop_prejoin_fact_table
      connection.drop_table(prejoined_table_name) if connection.tables.include?(prejoined_table_name)
    end
    
    # Get foreign key names that are excluded.
    def excluded_foreign_key_names
      excluded_dimension_relations = prejoined_fields.keys.collect {|k| dimension_relationships[k]}
      excluded_dimension_relations.collect {|r| r.foreign_key}
    end
    
    # Construct the prejoined fact table.
    def create_prejoined_fact_table(options={})
      connection.transaction {
        drop_prejoin_fact_table

        connection.create_table(prejoined_table_name, :id => false) do |t|
          # get all columns except the foreign_key columns for prejoined dimensions
          columns.each do |c|
            t.column(c.name, c.type) unless excluded_foreign_key_names.include?(c.name)
          end
          #prejoined_columns
          prejoined_fields.each_pair do |key, value|
            dclass = dimension_class(key)
            dclass.columns.each do |c|
              t.column(c.name, c.type) if value.include?(c.name.to_sym) 
            end
          end
        end
      }
    end
    
    # Populate the prejoined fact table.
    def populate_prejoined_fact_table(options={})
      fact_columns_string = columns.collect {|c|
        ""#{table_name}."" + c.name unless excluded_foreign_key_names.include?(c.name)
      }.compact.join("",\n"")  
      
      prejoined_columns = []
      
      tables_and_joins = ""#{table_name}""
      
      prejoined_fields.each_pair do |key, value|
        dimension = dimension_class(key)
        tables_and_joins += ""\nJOIN #{dimension.table_name} as #{key}""
        tables_and_joins += ""\n  ON #{table_name}.#{dimension_relationships[key].foreign_key} = ""
        tables_and_joins += ""#{key}.#{dimension.primary_key}""
        prejoined_columns << value.collect {|v| ""#{key}."" + v.to_s}
      end

      if connection.support_select_into_table?
        drop_prejoin_fact_table
        sql = <<-SQL
          SELECT #{fact_columns_string}, 
            #{prejoined_columns.join("",\n"")}
          FROM #{tables_and_joins}
        SQL
        sql = connection.add_select_into_table(prejoined_table_name, sql)
      else
        create_prejoined_fact_table(options)
        sql = <<-SQL
          INSERT INTO #{prejoined_table_name}
          SELECT #{fact_columns_string}, 
            #{prejoined_columns.join("",\n"")}
          FROM #{tables_and_joins}
        SQL
      end
      connection.transaction { connection.execute(sql) }                
    end
  end
end
",Ruby
"module VhdlTestScript
  class Wait
    CLOCK_LENGTH = 2

    def initialize(length)
      @length = length
    end

    def to_vhdl
      ""wait for #{@length * CLOCK_LENGTH} ns;""
    end

    def in(ports)
      self
    end


    def origin
      self
    end
  end
end
",Ruby
"# frozen_string_literal: true

module Eve
  class AllRegionsContractsImporter
    def import
      region_ids.each do |region_id|
        Eve::RegionContractsJob.perform_later(region_id)
      end
    end

    private

    def region_ids
      @region_ids ||= Eve::Region.pluck(:region_id).sort.uniq
    end
  end
end
",Ruby
"class AddColumnToRequestSchema < ActiveRecord::Migration
  def change
    add_column :request_schemata, :name, :string, null: false, default: """"
  end
end
",Ruby
"require 'spec_helper'

describe Blogitr::Document do
  def parse text, filter=:html
    @doc = Blogitr::Document.new :text => text, :filter => filter
  end

  def should_parse_as headers, body, extended=nil
    @doc.headers.should == headers
    @doc.body.should == body
    @doc.extended.should == extended
  end

  it ""should raise an error if an unknown fitler is specified"" do
    lambda do
      parse ""foo *bar* \""baz\"""", :unknown
    end.should raise_error(Blogitr::UnknownFilterError)
  end

  it ""should parse documents with a YAML header"" do
    parse <<EOD
title: My Doc
subtitle: An Essay

foo

bar
EOD
    should_parse_as({ 'title' => ""My Doc"", 'subtitle' => 'An Essay' },
                    ""foo\n\nbar\n"")
  end

  it ""should parse documents without a YAML header"" do
    parse ""foo\nbar\nbaz""
    should_parse_as({}, ""foo\nbar\nbaz"")
  end

  it ""should parse documents with a YAML header but no body"" do
    parse ""title: My Doc""
    should_parse_as({ 'title' => ""My Doc"" }, '')
  end

  it ""should separate extended content from the main body"" do
    parse <<EOD
foo
<!--more--> 
bar
EOD
    should_parse_as({}, ""foo"", ""bar\n"")
  end

  it ""should expand macros"" do
    input = ""title: Foo\n\n<macro:example foo=\""bar\"">baz</macro:example>""
    parse input
    should_parse_as({'title' => ""Foo""},
                    ""Options: {\""foo\""=>\""bar\""}\nBody: baz"")
  end

  it ""should provide access to raw body and extended content"" do
    parse ""*foo*\n<!--more-->\n_bar_"", :textile
    @doc.raw_body.should == ""*foo*""
    @doc.raw_extended.should == ""_bar_""
  end

  describe ""with a :textile filter"" do
    it ""should filter content"" do
      parse ""foo *bar*\n<!--more-->\n\""baz\"""", :textile
      should_parse_as({}, ""<p>foo <strong>bar</strong></p>"",
                      ""<p>&#8220;baz&#8221;</p>"")
    end

    it ""should protect expanded macros from filtering"" do
      text = ""\n<macro:example>*foo*</macro:example>""
      parse text, :textile
      should_parse_as({},  ""Options: {}\nBody: *foo*"")
    end
  end

  describe ""with a :markdown filter"" do
    it ""should filter content"" do
      parse ""foo *bar* \""baz\"""", :markdown
      should_parse_as({}, ""<p>foo <em>bar</em> &ldquo;baz&rdquo;</p>\n"")
    end

    it ""should protect expanded macros from filtering"" do
      text = ""\n<macro:example>*foo*</macro:example>""
      parse text, :markdown
      should_parse_as({},
                      ""<div class=\""raw\"">Options: {}\nBody: *foo*</div>\n\n"")
    end
  end

  describe ""#to_s"" do
    def should_serialize_as headers, body, extended, serialized
      opts = { :headers => headers, :raw_body => body,
               :raw_extended => extended, :filter => :html }
      Blogitr::Document.new(opts).to_s.should == serialized
    end

    it ""should serialize documents with headers"" do
      should_serialize_as({'title' => 'Foo'}, ""_Bar_."", nil,
                          ""title: Foo\n\n_Bar_."")
    end

    it ""should serialize documents without headers"" do
      should_serialize_as({}, ""_Bar_."", nil, ""\n_Bar_."")      
    end

    it ""should serialize extended content using \\<!--more-->"" do
      should_serialize_as({}, ""Bar."", ""_Baz_."", ""\nBar.\n<!--more-->\n_Baz_."")
    end
  end
end
",Ruby
"RSpec.configure do |config|
  config.before(:suite) do
    DatabaseCleaner.clean_with(:deletion)
  end

  config.before(:each) do
    DatabaseCleaner.strategy = :transaction
  end

  config.before(:each, :js => true) do
    DatabaseCleaner.strategy = :deletion
  end

  config.before(:each) do
    DatabaseCleaner.start
  end

  config.after(:each) do
    DatabaseCleaner.clean
  end
end",Ruby
"class UsersController < ApplicationController

	def index
	end

	def show
		@user = User.find(params[:id])
	end

  def edit
    @user = User.find(params[:id])
  end

  def update
    @user = User.find(params[:id])
    if @user.update_attributes(user_params)
    @user.geocode
    else
      render 'edit'
    end
  end

private

 def user_params
   params.require(:user).permit(:city, :zip, :name)
 end

end

",Ruby
"# == Schema Information
#
# Table name: templates
#
#  id          :integer          not null, primary key
#  name        :string
#  image       :string
#  description :text
#  created_at  :datetime         not null
#  updated_at  :datetime         not null
#

require 'rails_helper'

RSpec.describe Template, type: :model do
  describe ""relationships"" do
    it { should have_many(:cards).dependent(:restrict_with_error) }
  end

  describe ""validators"" do
    it { should validate_presence_of(:name) }
    it { should validate_presence_of(:image) }
  end
end
",Ruby
"# frozen_string_literal: true

module ArrayUtil

  def self.insert_before(array, new_element, element)
    idx = array.index(element) || -1
    array.insert(idx, new_element)
  end

  def self.insert_after(array, new_element, element)
    idx = array.index(element) || -2
    array.insert(idx + 1, new_element)
  end

end
",Ruby
"require 'tilt/erb'

module May
  class Templator
    class Template
      def initialize(path)
        @file = File.open(path, 'r') if path
      end

      def path
        @file.path
      end

      def body
        return '' unless @file
        @body ||= @file.read
      end
    end

    class Generator
      def initialize(bind)
        @binding = bind
      end

      def generate(template)
        Tilt::ERBTemplate.new(template.path, { trim: '<>' }).render(@binding)
      end
    end

    def initialize(template_path, destination, bind)
      @template_path, @destination, @binding = template_path, destination, bind
    end

    def render
      template = Template.new(@template_path)
      Generator.new(@binding).generate(template)
    end

    def write
      File.open(@destination, 'w') do |f|
        f.puts render
      end
    end
  end
end
",Ruby
"require 'minitest/autorun'
require 'minitest/pride'
require 'bundler/setup'
Bundler.require(:default)
require 'active_record'
require File.dirname(__FILE__) + '/../lib/where_exists'

ActiveRecord::Base.default_timezone = :utc
ActiveRecord::Base.time_zone_aware_attributes = true

ActiveRecord::Base.establish_connection(
  :adapter => 'sqlite3',
  :database => File.dirname(__FILE__) + ""/db/test.db""
)
",Ruby
"class CreateComments < ActiveRecord::Migration
  def change
    create_table :comments do |t|
      t.references :post, index: true
      t.integer :author_id
      t.string :comment

      t.timestamps
    end
  end
end
",Ruby
"require 'delegate'

module Bizflow
  module BusinessModel
    
    class SimpleWrapper < SimpleDelegator

      def self.wrap(item)
        new item
      end

      def self.wraps(items)
        res = items.map do |item|
          new item
        end

        res
      end
    end

  end
end",Ruby
"Application.class_eval do
  
  get '/' do
    if current_user
      @sites = ABPlugin::API.sites(
        :include => {
          :envs => true,
          :categories => {
            :include => {
              :tests => {
                :include => {
                  :variants => {
                    :methods => :for_dashboard
                  }
                }
              }
            }
          }
        },
        :token => current_user.single_access_token
      )
      @sites.sort! { |a, b| a[""name""] <=> b[""name""] }
      @sites.each do |site|
        site[""categories""].sort! { |a, b| a[""name""] <=> b[""name""] }
        site[""envs""].sort! { |a, b| a[""name""] <=> b[""name""] }
        site[""categories""].each do |category|
          category[""tests""].reverse!
        end
      end
      haml :dashboard
    else
      haml :front
    end
  end
end",Ruby
"PowerdnsOnRails::Application.configure do
  # Settings specified here will take precedence over those in config/environment.rb

  # The production environment is meant for finished, ""live"" apps.
  # Code is not reloaded between requests
  config.cache_classes = true

  # Full error reports are disabled and caching is turned on
  config.consider_all_requests_local       = false
  config.action_controller.perform_caching = true

  # Specifies the header that your server uses for sending files
  config.action_dispatch.x_sendfile_header = ""X-Sendfile""

  # For nginx:
  # config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect'

  # If you have no front-end server that supports something like X-Sendfile,
  # just comment this out and Rails will serve the files

  # See everything in the log (default is :info)
  # config.log_level = :debug

  # Use a different logger for distributed setups
  # config.logger = SyslogLogger.new

  # Use a different cache store in production
  # config.cache_store = :mem_cache_store

  # Disable Rails's static asset server
  # In production, Apache or nginx will already do this
  config.serve_static_assets = false

  # Enable serving of images, stylesheets, and javascripts from an asset server
  # config.action_controller.asset_host = ""http://assets.example.com""

  # Disable delivery errors, bad email addresses will be ignored
  # config.action_mailer.raise_delivery_errors = false

  # Enable threaded mode
  # config.threadsafe!

  # Enable locale fallbacks for I18n (makes lookups for any locale fall back to
  # the I18n.default_locale when a translation can not be found)
  config.i18n.fallbacks = true

  # Send deprecation notices to registered listeners
  config.active_support.deprecation = :notify

  # Compress JavaScripts and CSS
  config.assets.compress = true

  # Don't fallback to assets pipeline if a precompiled asset is missed
  config.assets.compile = false

  # Generate digests for assets URLs
  config.assets.digest = true

  # Defaults to Rails.root.join(""public/assets"")
  # config.assets.manifest = YOUR_PATH

  # Precompile additional assets (application.js, application.css, and all non-JS/CSS are already added)
  # config.assets.precompile += %w( search.js )

  # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
  # config.force_ssl = true
end
",Ruby
"require 'spec_helper'

module Sendgrid
  module API
    module Entities
      describe Stats do
        subject { described_class.new }

        it { should respond_to(:delivered) }
        it { should respond_to(:request) }
        it { should respond_to(:unique_open) }
        it { should respond_to(:unique_click) }
        it { should respond_to(:processed) }
        it { should respond_to(:date) }
        it { should respond_to(:open) }
        it { should respond_to(:click) }
        it { should respond_to(:blocked) }
        it { should respond_to(:spamreport) }
        it { should respond_to(:drop) }
        it { should respond_to(:bounce) }
        it { should respond_to(:deferred) }
      end
    end
  end
end",Ruby
"module Storegine
  class Category
    include Mongoid::Document
    field :title, type: String
    
    has_many :products
  end
end
",Ruby
"module WoopleTheme
  class Configuration
    attr_accessor :profile_helper, :menu_helper, :impersonation_banner_helper, :layout_javascript

    def profile_helper
      @profile_helper || :profile_helper
    end

    def menu_helper
      @menu_helper || :menu_helper
    end

    def impersonation_banner_helper
      @impersonation_banner_helper || :impersonation_banner_helper
    end
  end

  class << self
    attr_accessor :configuration
  end

  def self.configure
    self.configuration ||= Configuration.new
    yield(configuration)
  end

end
",Ruby
"RSpec.describe AuthorizeIf do
  let(:controller) {
    double(:dummy_controller, controller_name: ""dummy"", action_name: ""index"").
    extend(AuthorizeIf)
  }

  describe ""#authorize_if"" do
    context ""when object is given"" do
      it ""returns true if truthy object is given"" do
        expect(controller.authorize_if(true)).to eq true
        expect(controller.authorize_if(Object.new)).to eq true
      end

      it ""raises NotAuthorizedError if falsey object is given"" do
        expect {
          controller.authorize_if(false)
        }.to raise_error(AuthorizeIf::NotAuthorizedError)

        expect {
          controller.authorize_if(nil)
        }.to raise_error(AuthorizeIf::NotAuthorizedError)
      end
    end

    context ""when object and block are given"" do
      it ""allows exception customization through the block"" do
        expect {
          controller.authorize_if(false) do |exception|
            exception.message = ""Custom Message""
            exception.context[:request_ip] = ""192.168.1.1""
          end
        }.to raise_error(AuthorizeIf::NotAuthorizedError, ""Custom Message"") do |exception|
          expect(exception.message).to eq(""Custom Message"")
          expect(exception.context[:request_ip]).to eq(""192.168.1.1"")
        end
      end
    end

    context ""when no arguments are given"" do
      it ""raises ArgumentError"" do
        expect {
          controller.authorize_if
        }.to raise_error(ArgumentError)
      end
    end
  end

  describe ""#authorize"" do
    context ""when corresponding authorization rule exists"" do
      context ""when rule does not accept parameters"" do
        it ""returns true if rule returns true"" do
          controller.define_singleton_method(:authorize_index?) { true }
          expect(controller.authorize).to eq true
        end
      end

      context ""when rule accepts parameters"" do
        it ""calls rule with given parameters"" do
          class << controller
            def authorize_index?(param_1, param_2:)
              param_1 || param_2
            end
          end

          expect(controller.authorize(false, param_2: true)).to eq true
        end
      end

      context ""when block is given"" do
        it ""passes block through to `authorize_if` method"" do
          controller.define_singleton_method(:authorize_index?) { false }

          expect {
            controller.authorize do |exception|
              exception.message = ""passed through""
            end
          }.to raise_error(AuthorizeIf::NotAuthorizedError, ""passed through"") do |exception|
            expect(exception.message).to eq(""passed through"")
          end
        end
      end
    end

    context ""when corresponding authorization rule does not exist"" do
      it ""raises MissingAuthorizationRuleError"" do
        expect {
          controller.authorize
        }.to raise_error(
          AuthorizeIf::MissingAuthorizationRuleError,
          ""No authorization rule defined for action dummy#index. Please define method #authorize_index? for #{controller.class.name}""
        )
      end
    end
  end
end
",Ruby
"require ""uri""
require ""net/http""

module JingdongFu
  module Rest
    class << self
      def get(url, hashed_vars)
        res = request(url, 'GET', hashed_vars)
        process_result(res, url)
      end

      def post(url, hashed_vars)
        res = request(url, 'POST', hashed_vars)
        process_result(res, url)
      end

      def put(url, hashed_vars)
        res = request(url, 'PUT', hashed_vars)
        process_result(res, url)
      end

      def delete(url, hashed_vars)
        res = request(url, 'DELETE', hashed_vars)
        process_result(res, url)
      end

      protected

        def request(url, method=nil, params = {})
          if !url || url.length < 1
            raise ArgumentError, 'Invalid url parameter'
          end
          if method && !['GET', 'POST', 'DELETE', 'PUT'].include?(method)
            raise NotImplementedError, 'HTTP %s not implemented' % method
          end

          if method && method == 'GET'
            url = build_get_uri(url, params)
          end
          uri = URI.parse(url)

          http = Net::HTTP.new(uri.host, uri.port)

          if method && method == 'GET'
            req = Net::HTTP::Get.new(uri.request_uri)
          elsif method && method == 'DELETE'
            req = Net::HTTP::Delete.new(uri.request_uri)
          elsif method && method == 'PUT'
            req = Net::HTTP::Put.new(uri.request_uri)
            req.set_form_data(params)
          else
            req = Net::HTTP::Post.new(uri.request_uri)
            req.set_form_data(params)
          end

          http.request(req)
        end

        def build_get_uri(uri, params)
          if params && params.length > 0
            uri += '?' unless uri.include?('?')
            uri += urlencode(params)
          end
          URI.escape(uri)
        end

        def urlencode(params)
          params.to_a.collect! { |k, v| ""#{k.to_s}=#{v.to_s}"" }.join(""&"")
        end

        def process_result(res, raw_url)
          if res.code =~ /\A2\d{2}\z/
            res.body
          elsif %w(301 302 303).include? res.code
            url = res.header['Location']
            if url !~ /^http/
              uri = URI.parse(raw_url)
              uri.path = ""/#{url}"".squeeze('/')
              url = uri.to_s
            end
            raise RuntimeError, ""Redirect #{url}""
          elsif res.code == ""304""
            raise RuntimeError, ""NotModified #{res}""
          elsif res.code == ""401""
            raise RuntimeError, ""Unauthorized #{res}""
          elsif res.code == ""404""
            raise RuntimeError, ""Resource not found #{res}""
          else
            raise RuntimeError, ""Maybe request timed out #{res}. HTTP status code #{res.code}""
          end
        end

    end
  end
end
",Ruby
"require 'spec_helper'

describe 'ssh::default' do
	let(:chef_run){ ChefSpec::SoloRunner.new(platform: 'ubuntu', version: '12.04').converge(described_recipe) }
	
	it 'should include the ssh::client recipe' do
		expect(chef_run).to include_recipe('ssh::client')
	end

	it 'should include the ssh::server recipe' do
		expect(chef_run).to include_recipe('ssh::server')
	end
end",Ruby
"#ifndef CAVALIERI_RULE_TESTER_UTIL_H
#define CAVALIERI_RULE_TESTER_UTIL_H

#include <vector>
#include <common/event.h>
#include <external/mock_external.h>

typedef std::pair<time_t, Event> mock_index_events_t;

std::vector<Event> json_to_events(const std::string json, bool & ok);

std::string results(std::vector<mock_index_events_t> index_events,
                    std::vector<external_event_t> external_events);

#endif
",C
"/***************************************************************************/
/*                                                                         */
/*  ftlist.h                                                               */
/*                                                                         */
/*    Generic list support for FreeType (specification).                   */
/*                                                                         */
/*  Copyright 1996-2018 by                                                 */
/*  David Turner, Robert Wilhelm, and Werner Lemberg.                      */
/*                                                                         */
/*  This file is part of the FreeType project, and may only be used,       */
/*  modified, and distributed under the terms of the FreeType project      */
/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */
/*  this file you indicate that you have read the license and              */
/*  understand and accept it fully.                                        */
/*                                                                         */
/***************************************************************************/


  /*************************************************************************/
  /*                                                                       */
  /*  This file implements functions relative to list processing.  Its     */
  /*  data structures are defined in `freetype.h'.                         */
  /*                                                                       */
  /*************************************************************************/


#ifndef FTLIST_H_
#define FTLIST_H_


#include ""ft2build.h""
#include FT_FREETYPE_H

#ifdef FREETYPE_H
#error ""freetype.h of FreeType 1 has been loaded!""
#error ""Please fix the directory search order for header files""
#error ""so that freetype.h of FreeType 2 is found first.""
#endif


FT_BEGIN_HEADER


  /*************************************************************************/
  /*                                                                       */
  /* <Section>                                                             */
  /*    list_processing                                                    */
  /*                                                                       */
  /* <Title>                                                               */
  /*    List Processing                                                    */
  /*                                                                       */
  /* <Abstract>                                                            */
  /*    Simple management of lists.                                        */
  /*                                                                       */
  /* <Description>                                                         */
  /*    This section contains various definitions related to list          */
  /*    processing using doubly-linked nodes.                              */
  /*                                                                       */
  /* <Order>                                                               */
  /*    FT_List                                                            */
  /*    FT_ListNode                                                        */
  /*    FT_ListRec                                                         */
  /*    FT_ListNodeRec                                                     */
  /*                                                                       */
  /*    FT_List_Add                                                        */
  /*    FT_List_Insert                                                     */
  /*    FT_List_Find                                                       */
  /*    FT_List_Remove                                                     */
  /*    FT_List_Up                                                         */
  /*    FT_List_Iterate                                                    */
  /*    FT_List_Iterator                                                   */
  /*    FT_List_Finalize                                                   */
  /*    FT_List_Destructor                                                 */
  /*                                                                       */
  /*************************************************************************/


  /*************************************************************************/
  /*                                                                       */
  /* <Function>                                                            */
  /*    FT_List_Find                                                       */
  /*                                                                       */
  /* <Description>                                                         */
  /*    Find the list node for a given listed object.                      */
  /*                                                                       */
  /* <Input>                                                               */
  /*    list :: A pointer to the parent list.                              */
  /*    data :: The address of the listed object.                          */
  /*                                                                       */
  /* <Return>                                                              */
  /*    List node.  NULL if it wasn't found.                               */
  /*                                                                       */
  FT_EXPORT( FT_ListNode )
  FT_List_Find( FT_List  list,
                void*    data );


  /*************************************************************************/
  /*                                                                       */
  /* <Function>                                                            */
  /*    FT_List_Add                                                        */
  /*                                                                       */
  /* <Description>                                                         */
  /*    Append an element to the end of a list.                            */
  /*                                                                       */
  /* <InOut>                                                               */
  /*    list :: A pointer to the parent list.                              */
  /*    node :: The node to append.                                        */
  /*                                                                       */
  FT_EXPORT( void )
  FT_List_Add( FT_List      list,
               FT_ListNode  node );


  /*************************************************************************/
  /*                                                                       */
  /* <Function>                                                            */
  /*    FT_List_Insert                                                     */
  /*                                                                       */
  /* <Description>                                                         */
  /*    Insert an element at the head of a list.                           */
  /*                                                                       */
  /* <InOut>                                                               */
  /*    list :: A pointer to parent list.                                  */
  /*    node :: The node to insert.                                        */
  /*                                                                       */
  FT_EXPORT( void )
  FT_List_Insert( FT_List      list,
                  FT_ListNode  node );


  /*************************************************************************/
  /*                                                                       */
  /* <Function>                                                            */
  /*    FT_List_Remove                                                     */
  /*                                                                       */
  /* <Description>                                                         */
  /*    Remove a node from a list.  This function doesn't check whether    */
  /*    the node is in the list!                                           */
  /*                                                                       */
  /* <Input>                                                               */
  /*    node :: The node to remove.                                        */
  /*                                                                       */
  /* <InOut>                                                               */
  /*    list :: A pointer to the parent list.                              */
  /*                                                                       */
  FT_EXPORT( void )
  FT_List_Remove( FT_List      list,
                  FT_ListNode  node );


  /*************************************************************************/
  /*                                                                       */
  /* <Function>                                                            */
  /*    FT_List_Up                                                         */
  /*                                                                       */
  /* <Description>                                                         */
  /*    Move a node to the head/top of a list.  Used to maintain LRU       */
  /*    lists.                                                             */
  /*                                                                       */
  /* <InOut>                                                               */
  /*    list :: A pointer to the parent list.                              */
  /*    node :: The node to move.                                          */
  /*                                                                       */
  FT_EXPORT( void )
  FT_List_Up( FT_List      list,
              FT_ListNode  node );


  /*************************************************************************/
  /*                                                                       */
  /* <FuncType>                                                            */
  /*    FT_List_Iterator                                                   */
  /*                                                                       */
  /* <Description>                                                         */
  /*    An FT_List iterator function that is called during a list parse    */
  /*    by @FT_List_Iterate.                                               */
  /*                                                                       */
  /* <Input>                                                               */
  /*    node :: The current iteration list node.                           */
  /*                                                                       */
  /*    user :: A typeless pointer passed to @FT_List_Iterate.             */
  /*            Can be used to point to the iteration's state.             */
  /*                                                                       */
  typedef FT_Error
  (*FT_List_Iterator)( FT_ListNode  node,
                       void*        user );


  /*************************************************************************/
  /*                                                                       */
  /* <Function>                                                            */
  /*    FT_List_Iterate                                                    */
  /*                                                                       */
  /* <Description>                                                         */
  /*    Parse a list and calls a given iterator function on each element.  */
  /*    Note that parsing is stopped as soon as one of the iterator calls  */
  /*    returns a non-zero value.                                          */
  /*                                                                       */
  /* <Input>                                                               */
  /*    list     :: A handle to the list.                                  */
  /*    iterator :: An iterator function, called on each node of the list. */
  /*    user     :: A user-supplied field that is passed as the second     */
  /*                argument to the iterator.                              */
  /*                                                                       */
  /* <Return>                                                              */
  /*    The result (a FreeType error code) of the last iterator call.      */
  /*                                                                       */
  FT_EXPORT( FT_Error )
  FT_List_Iterate( FT_List           list,
                   FT_List_Iterator  iterator,
                   void*             user );


  /*************************************************************************/
  /*                                                                       */
  /* <FuncType>                                                            */
  /*    FT_List_Destructor                                                 */
  /*                                                                       */
  /* <Description>                                                         */
  /*    An @FT_List iterator function that is called during a list         */
  /*    finalization by @FT_List_Finalize to destroy all elements in a     */
  /*    given list.                                                        */
  /*                                                                       */
  /* <Input>                                                               */
  /*    system :: The current system object.                               */
  /*                                                                       */
  /*    data   :: The current object to destroy.                           */
  /*                                                                       */
  /*    user   :: A typeless pointer passed to @FT_List_Iterate.  It can   */
  /*              be used to point to the iteration's state.               */
  /*                                                                       */
  typedef void
  (*FT_List_Destructor)( FT_Memory  memory,
                         void*      data,
                         void*      user );


  /*************************************************************************/
  /*                                                                       */
  /* <Function>                                                            */
  /*    FT_List_Finalize                                                   */
  /*                                                                       */
  /* <Description>                                                         */
  /*    Destroy all elements in the list as well as the list itself.       */
  /*                                                                       */
  /* <Input>                                                               */
  /*    list    :: A handle to the list.                                   */
  /*                                                                       */
  /*    destroy :: A list destructor that will be applied to each element  */
  /*               of the list.  Set this to NULL if not needed.           */
  /*                                                                       */
  /*    memory  :: The current memory object that handles deallocation.    */
  /*                                                                       */
  /*    user    :: A user-supplied field that is passed as the last        */
  /*               argument to the destructor.                             */
  /*                                                                       */
  /* <Note>                                                                */
  /*    This function expects that all nodes added by @FT_List_Add or      */
  /*    @FT_List_Insert have been dynamically allocated.                   */
  /*                                                                       */
  FT_EXPORT( void )
  FT_List_Finalize( FT_List             list,
                    FT_List_Destructor  destroy,
                    FT_Memory           memory,
                    void*               user );

  /* */


FT_END_HEADER

#endif /* FTLIST_H_ */


/* END */
",C
"//-*-c++-*- 

/****************************************************************/
/**
**  @file errors.h
**  @brief Header file for CHILD error-handling routines.
**
**  Created Dec. 97
**  $Id: errors.h,v 1.11 2004-01-07 10:53:25 childcvs Exp $
*/
/****************************************************************/

#ifndef ERRORS_H
#define ERRORS_H

#include ""../compiler.h""

void ReportFatalError( const char *errStr ) ATTRIBUTE_NORETURN;

void ReportWarning( const char *errstr );

#endif
",C
"//
//  RegionContainerViewController.h
//  MH4U Dex
//
//  Created by Joseph Goldberg on 3/6/15.
//  Copyright (c) 2015 Joseph Goldberg. All rights reserved.
//

#import <UIKit/UIKit.h>

@class Region;

@interface RegionContainerViewController : UIViewController

@property (nonatomic, strong) Region *region;

@end
",C
"
#include ""..\stdafx.h""

#pragma once

class CMutex
{
private:
	HANDLE m_mutex;
	bool m_isLocked;

	void Lock()
	{
		WaitForSingleObject(this->m_mutex, INFINITE);
	}

	void Unlock()
	{
		if (this->m_isLocked)
		{
			this->m_isLocked = false;
			ReleaseMutex(this->m_mutex);
		}
	}

public:
	CMutex()
	{
		this->m_mutex = CreateMutex(NULL, FALSE, NULL);
	}

	~CMutex()
	{
		CloseHandle(this->m_mutex);
	}

	friend class CMutexLock;
};

class CMutexLock
{
private:
	CMutex* m_mutexObj;
public:

	CMutexLock(CMutex* mutex)
	{
		this->m_mutexObj = mutex;
		this->m_mutexObj->Lock();
	}

	~CMutexLock()
	{
		this->m_mutexObj->Unlock();
	}
};
",C
"//
//  HomeDateContainerView.h
//  XQDemo
//
//  Created by XiangqiTu on 15-4-13.
//
//

#import <UIKit/UIKit.h>

@interface HomeDateContainerView : UIView

- (void)caculateDateWithTimestamp:(NSString *)timestamp;

@end
",C
"//
//  HNBFlowLayoutViewController.h
//  HNBKitDemo
//
//  Created by 开发 on 2017/7/21.
//  Copyright © 2017年 开发. All rights reserved.
//

#import ""HNBBaseViewController.h""

@interface HNBFlowLayoutViewController : HNBBaseViewController

@end
",C
"//
//  RCWorkspaceCache.h
//
//  Created by Mark Lilback on 12/12/11.
//  Copyright (c) 2011 . All rights reserved.
//

#import ""_RCWorkspaceCache.h""

@interface RCWorkspaceCache : _RCWorkspaceCache
//if multiple values are to be set, it best to get properties, set them, and then call setProperties
//each call to setProperties serializes a plist
@property (nonatomic, strong) NSMutableDictionary *properties;

-(id)propertyForKey:(NSString*)key;
//removes property if value is nil
-(void)setProperty:(id)value forKey:(NSString*)key;

-(BOOL)boolPropertyForKey:(NSString*)key;
-(void)setBoolProperty:(BOOL)val forKey:(NSString*)key;
@end
",C
"/*
 * The MIT License (MIT): http://opensource.org/licenses/mit-license.php
 *
 * Copyright (c) 2013-2014, Chris Behrens
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */

#define __FIL_BUILDING_LOCKING__
#include ""core/filament.h""
#include ""locking/fil_lock.h""

typedef struct _pyfil_lock {
    PyObject_HEAD
    int locked;
    FilWaiterList waiters;
} PyFilLock;

typedef struct _pyfil_rlock {
    PyFilLock lock; /* must remain first. */
    uint64_t owner;
    uint64_t count;
} PyFilRLock;


static PyFilLock *_lock_new(PyTypeObject *type, PyObject *args, PyObject *kw)
{
    PyFilLock *self = (PyFilLock *)type->tp_alloc(type, 0);

    if (self != NULL)
    {
        fil_waiterlist_init(self->waiters);
    }

    return self;
}

static int _lock_init(PyFilLock *self, PyObject *args, PyObject *kwargs)
{
    return 0;
}

static void _lock_dealloc(PyFilLock *self)
{
    assert(fil_waiterlist_empty(self->waiters));

    PyObject_Del(self);
}

static int __lock_acquire(PyFilLock *lock, int blocking, struct timespec *ts)
{
    if (!lock->locked && fil_waiterlist_empty(lock->waiters))
    {
        lock->locked = 1;
        return 0;
    }

    if (!blocking)
    {
        return 1;
    }

    int err = fil_waiterlist_wait(lock->waiters, ts, NULL);
    if (err < 0)
    {
        return err;
    }

    assert(lock->locked == 1);

    return 0;
}

static int __lock_release(PyFilLock *lock)
{
    if (!lock->locked)
    {
        PyErr_SetString(PyExc_RuntimeError, ""release without acquire"");
        return -1;
    }

    if (fil_waiterlist_empty(lock->waiters))
    {
        lock->locked = 0;
        return 0;
    }

    /* leave 'locked' set because a different thread is just
     * going to grab it anyway.  This prevents some races without
     * additional work to resolve them.
     */
    fil_waiterlist_signal_first(lock->waiters);
    return 0;
}

static int __rlock_acquire(PyFilRLock *lock, int blocking, struct timespec *ts)
{
    uint64_t owner;

    owner = fil_get_ident();
    if (!lock->lock.locked && fil_waiterlist_empty(lock->lock.waiters))
    {
        lock->lock.locked = 1;
        lock->owner = owner;
        lock->count = 1;
        return 0;
    }

    if (owner == lock->owner)
    {
        lock->count++;
        return 0;
    }

    if (!blocking)
    {
        return 1;
    }

    int err = fil_waiterlist_wait(lock->lock.waiters, ts, NULL);
    if (err)
    {
        return err;
    }

    assert(lock->lock.locked == 1);
    lock->owner = owner;
    lock->count = 1;

    return 0;
}

static int __rlock_release(PyFilRLock *lock)
{
    if (!lock->lock.locked || (fil_get_ident() != lock->owner))
    {
        PyErr_SetString(PyExc_RuntimeError, ""cannot release un-acquired lock"");
        return -1;
    }

    if (--lock->count > 0)
    {
        return 0;
    }

    lock->owner = 0;

    if (fil_waiterlist_empty(lock->lock.waiters))
    {
        lock->lock.locked = 0;
        return 0;
    }

    /* leave 'locked' set because a different thread is just
     * going to grab it anyway.  This prevents some races without
     * additional work to resolve them.
     */
    fil_waiterlist_signal_first(lock->lock.waiters);
    return 0;
}

PyDoc_STRVAR(_lock_acquire_doc, ""Acquire the lock."");
static PyObject *_lock_acquire(PyFilLock *self, PyObject *args, PyObject *kwargs)
{
    static char *keywords[] = {""blocking"", ""timeout"", NULL};
    PyObject *blockingobj = NULL;
    PyObject *timeout = NULL;
    struct timespec tsbuf;
    struct timespec *ts;
    int blocking;
    int err;

    if (!PyArg_ParseTupleAndKeywords(args, kwargs, ""|O!O"",
                                     keywords,
                                     &PyBool_Type,
                                     &blockingobj, &timeout))
    {
        return NULL;
    }

    if (fil_timespec_from_pyobj_interval(timeout, &tsbuf, &ts) < 0)
    {
        return NULL;
    }

    blocking = (blockingobj == NULL || blockingobj == Py_True);
    err = __lock_acquire(self, blocking, ts);
    if (err < 0 && err != -ETIMEDOUT)
    {
        return NULL;
    }

    if (err == 0)
    {
        Py_INCREF(Py_True);
        return Py_True;
    }

    Py_INCREF(Py_False);
    return Py_False;
}

PyDoc_STRVAR(_lock_locked_doc, ""Is the lock locked?"");
static PyObject *_lock_locked(PyFilLock *self)
{
    PyObject *res = (self->locked || !fil_waiterlist_empty(self->waiters)) ? Py_True : Py_False;
    Py_INCREF(res);
    return res;
}

PyDoc_STRVAR(_lock_release_doc, ""Release the lock."");
static PyObject *_lock_release(PyFilLock *self)
{
    if (__lock_release(self) < 0)
    {
        return NULL;
    }
    Py_RETURN_NONE;
}

static PyObject *_lock_enter(PyFilLock *self)
{
    int err = __lock_acquire(self, 1, NULL);
    if (err)
    {
        if (!PyErr_Occurred())
        {
            PyErr_Format(PyExc_RuntimeError, ""unexpected failure in Lock.__enter__: %d"", err);
        }
        return NULL;
    }

    Py_INCREF(self);
    return (PyObject *)self;
}

static PyObject *_lock_exit(PyFilLock *self, PyObject *args)
{
    return _lock_release(self);
}

PyDoc_STRVAR(_rlock_acquire_doc, ""Acquire the lock."");
static PyObject *_rlock_acquire(PyFilRLock *self, PyObject *args, PyObject *kwargs)
{
    static char *keywords[] = {""blocking"", ""timeout"", NULL};
    PyObject *blockingobj = NULL;
    PyObject *timeout = NULL;
    struct timespec tsbuf;
    struct timespec *ts;
    int blocking;
    int err;

    if (!PyArg_ParseTupleAndKeywords(args, kwargs, ""|O!O"",
                                     keywords,
                                     &PyBool_Type,
                                     &blockingobj, &timeout))
    {
        return NULL;
    }

    if (fil_timespec_from_pyobj_interval(timeout, &tsbuf, &ts) < 0)
    {
        return NULL;
    }

    blocking = (blockingobj == NULL || blockingobj == Py_True);
    err = __rlock_acquire(self, blocking, ts);
    if (err < 0 && err != -ETIMEDOUT)
    {
        return NULL;
    }

    if (err == 0)
    {
        Py_INCREF(Py_True);
        return Py_True;
    }

    Py_INCREF(Py_False);
    return Py_False;
}

PyDoc_STRVAR(_rlock_locked_doc, ""Is the lock locked (by someone else)?"");
static PyObject *_rlock_locked(PyFilRLock *self)
{
    uint64_t owner = fil_get_ident();
    PyObject *res = ((self->lock.locked && self->owner != owner) ||
            !fil_waiterlist_empty(self->lock.waiters)) ? Py_True : Py_False;
    Py_INCREF(res);
    return res;
}

PyDoc_STRVAR(_rlock_release_doc, ""Release the lock."");
static PyObject *_rlock_release(PyFilRLock *self)
{
    if (__rlock_release(self) < 0)
    {
        return NULL;
    }
    Py_RETURN_NONE;
}

static PyObject *_rlock_enter(PyFilRLock *self)
{
    int err = __rlock_acquire(self, 1, NULL);
    if (err)
    {
        if (!PyErr_Occurred())
        {
            PyErr_Format(PyExc_RuntimeError, ""unexpected failure in RLock.__enter__: %d"", err);
        }
        return NULL;
    }

    Py_INCREF(self);
    return (PyObject *)self;
}

static PyObject *_rlock_exit(PyFilRLock *self, PyObject *args)
{
    return _rlock_release(self);
}


static PyMethodDef _lock_methods[] = {
    { ""acquire"", (PyCFunction)_lock_acquire, METH_VARARGS|METH_KEYWORDS, _lock_acquire_doc },
    { ""release"", (PyCFunction)_lock_release, METH_NOARGS, _lock_release_doc },
    { ""locked"", (PyCFunction)_lock_locked, METH_NOARGS, _lock_locked_doc },
    { ""__enter__"", (PyCFunction)_lock_enter, METH_NOARGS, NULL },
    { ""__exit__"", (PyCFunction)_lock_exit, METH_VARARGS, NULL },
    { NULL, NULL }
};

static PyMethodDef _rlock_methods[] = {
    { ""acquire"", (PyCFunction)_rlock_acquire, METH_VARARGS|METH_KEYWORDS, _rlock_acquire_doc },
    { ""release"", (PyCFunction)_rlock_release, METH_NOARGS, _rlock_release_doc },
    { ""locked"", (PyCFunction)_rlock_locked, METH_NOARGS, _rlock_locked_doc },
    { ""__enter__"", (PyCFunction)_rlock_enter, METH_NOARGS, NULL },
    { ""__exit__"", (PyCFunction)_rlock_exit, METH_VARARGS, NULL },
    { NULL, NULL }
};

static PyTypeObject _lock_type = {
    PyVarObject_HEAD_INIT(0, 0)
    ""_filament.locking.Lock"",                 /* tp_name */
    sizeof(PyFilLock),                           /* tp_basicsize */
    0,                                          /* tp_itemsize */
    (destructor)_lock_dealloc,                  /* tp_dealloc */
    0,                                          /* tp_print */
    0,                                          /* tp_getattr */
    0,                                          /* tp_setattr */
    0,                                          /* tp_compare */
    0,                                          /* tp_repr */
    0,                                          /* tp_as_number */
    0,                                          /* tp_as_sequence */
    0,                                          /* tp_as_mapping */
    0,                                          /* tp_hash */
    0,                                          /* tp_call */
    0,                                          /* tp_str */
    PyObject_GenericGetAttr,                    /* tp_getattro */
    0,                                          /* tp_setattro */
    0,                                          /* tp_as_buffer */
    FIL_DEFAULT_TPFLAGS,                        /* tp_flags */
    0,                                          /* tp_doc */
    0,                                          /* tp_traverse */
    0,                                          /* tp_clear */
    0,                                          /* tp_richcompare */
    0,                                          /* tp_weaklistoffset */
    0,                                          /* tp_iter */
    0,                                          /* tp_iternext */
    _lock_methods,                              /* tp_methods */
    0,                                          /* tp_members */
    0,                                          /* tp_getset */
    0,                                          /* tp_base */
    0,                                          /* tp_dict */
    0,                                          /* tp_descr_get */
    0,                                          /* tp_descr_set */
    0,                                          /* tp_dictoffset */
    (initproc)_lock_init,                       /* tp_init */
    PyType_GenericAlloc,                        /* tp_alloc */
    (newfunc)_lock_new,                         /* tp_new */
    PyObject_Del,                               /* tp_free */
    0,                                          /* tp_is_gc */
    0,                                          /* tp_bases */
    0,                                          /* tp_mro */
    0,                                          /* tp_cache */
    0,                                          /* tp_subclasses */
    0,                                          /* tp_weaklist */
    0,                                          /* tp_del */
    0,                                          /* tp_version_tag */
};

/* Re-entrant lock.  We can use the same calls here */
static PyTypeObject _rlock_type = {
    PyVarObject_HEAD_INIT(0, 0)
    ""_filament.locking.RLock"",                  /* tp_name */
    sizeof(PyFilRLock),                         /* tp_basicsize */
    0,                                          /* tp_itemsize */
    (destructor)_lock_dealloc,                  /* tp_dealloc */
    0,                                          /* tp_print */
    0,                                          /* tp_getattr */
    0,                                          /* tp_setattr */
    0,                                          /* tp_compare */
    0,                                          /* tp_repr */
    0,                                          /* tp_as_number */
    0,                                          /* tp_as_sequence */
    0,                                          /* tp_as_mapping */
    0,                                          /* tp_hash */
    0,                                          /* tp_call */
    0,                                          /* tp_str */
    PyObject_GenericGetAttr,                    /* tp_getattro */
    0,                                          /* tp_setattro */
    0,                                          /* tp_as_buffer */
    FIL_DEFAULT_TPFLAGS,                        /* tp_flags */
    0,                                          /* tp_doc */
    0,                                          /* tp_traverse */
    0,                                          /* tp_clear */
    0,                                          /* tp_richcompare */
    0,                                          /* tp_weaklistoffset */
    0,                                          /* tp_iter */
    0,                                          /* tp_iternext */
    _rlock_methods,                             /* tp_methods */
    0,                                          /* tp_members */
    0,                                          /* tp_getset */
    0,                                          /* tp_base */
    0,                                          /* tp_dict */
    0,                                          /* tp_descr_get */
    0,                                          /* tp_descr_set */
    0,                                          /* tp_dictoffset */
    (initproc)_lock_init,                       /* tp_init */
    PyType_GenericAlloc,                        /* tp_alloc */
    (newfunc)_lock_new,                         /* tp_new */
    PyObject_Del,                               /* tp_free */
    0,                                          /* tp_is_gc */
    0,                                          /* tp_bases */
    0,                                          /* tp_mro */
    0,                                          /* tp_cache */
    0,                                          /* tp_subclasses */
    0,                                          /* tp_weaklist */
    0,                                          /* tp_del */
    0,                                          /* tp_version_tag */
};


/****************/

PyFilLock *fil_lock_alloc(void)
{
    return _lock_new(&_lock_type, NULL, NULL);
}

PyFilRLock *fil_rlock_alloc(void)
{
    return (PyFilRLock *)_lock_new(&_rlock_type, NULL, NULL);
}

int fil_lock_acquire(PyFilLock *lock, int blocking, struct timespec *ts)
{
    return __lock_acquire(lock, blocking, ts);
}

int fil_rlock_acquire(PyFilRLock *rlock, int blocking, struct timespec *ts)
{
    return __rlock_acquire(rlock, blocking, ts);
}

int fil_lock_release(PyFilLock *lock)
{
    return __lock_release(lock);
}

int fil_rlock_release(PyFilRLock *rlock)
{
    return __rlock_release(rlock);
}

int fil_lock_type_init(PyObject *module)
{
    PyFilCore_Import();

    if (PyType_Ready(&_lock_type) < 0)
    {
        return -1;
    }
    if (PyType_Ready(&_rlock_type) < 0)
    {
        return -1;
    }

    Py_INCREF((PyObject *)&_lock_type);
    if (PyModule_AddObject(module, ""Lock"", (PyObject *)&_lock_type) != 0)
    {
        Py_DECREF((PyObject *)&_lock_type);
        return -1;
    }

    Py_INCREF((PyObject *)&_rlock_type);
    if (PyModule_AddObject(module, ""RLock"", (PyObject *)&_rlock_type) != 0)
    {
        Py_DECREF((PyObject *)&_rlock_type);
        return -1;
    }

    return 0;
}
",C
"//
//  main.c
//  demo14
//
//  Created by weichen on 15/1/9.
//  Copyright (c) 2015年 weichen. All rights reserved.
//

#include <stdio.h>

int main() {
    // 求输入的数的平均数，并输出大于平均数的数字
    
    int x = 0;      //输入的数
    double num = 0; //总和（这个定义为double, 因为计算结果可能出现浮点数）
    int count = 0;  //个数
    double per;     //平均数（结果也定义double）
    
    printf(""请输入一些数:"");
    
    scanf(""%d"", &x);
    
    //不等于0时执行累计；输入等于0的值,来终止循环，并执行后面的代码
    while(x != 0)
    {
        num += x;
        count++;
        
        scanf(""%d"", &x);
    }
    
    
    if(count > 0)
    {
        per = num / count;
    
        printf(""%f \n"", per);
    }
    
    return 0;
}
",C
"///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>

#import ""DBSerializableProtocol.h""

@class DBTEAMLOGFileRevertDetails;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - API Object

///
/// The `FileRevertDetails` struct.
///
/// Reverted files to a previous version.
///
/// This class implements the `DBSerializable` protocol (serialize and
/// deserialize instance methods), which is required for all Obj-C SDK API route
/// objects.
///
@interface DBTEAMLOGFileRevertDetails : NSObject <DBSerializable, NSCopying>

#pragma mark - Instance fields

#pragma mark - Constructors

///
/// Full constructor for the struct (exposes all instance variables).
///
/// @return An initialized instance.
///
- (instancetype)initDefault;

- (instancetype)init NS_UNAVAILABLE;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the `FileRevertDetails` struct.
///
@interface DBTEAMLOGFileRevertDetailsSerializer : NSObject

///
/// Serializes `DBTEAMLOGFileRevertDetails` instances.
///
/// @param instance An instance of the `DBTEAMLOGFileRevertDetails` API object.
///
/// @return A json-compatible dictionary representation of the
/// `DBTEAMLOGFileRevertDetails` API object.
///
+ (NSDictionary *)serialize:(DBTEAMLOGFileRevertDetails *)instance;

///
/// Deserializes `DBTEAMLOGFileRevertDetails` instances.
///
/// @param dict A json-compatible dictionary representation of the
/// `DBTEAMLOGFileRevertDetails` API object.
///
/// @return An instantiation of the `DBTEAMLOGFileRevertDetails` object.
///
+ (DBTEAMLOGFileRevertDetails *)deserialize:(NSDictionary *)dict;

@end

NS_ASSUME_NONNULL_END
",C
"/*
 * mysplit.c - Another handy routine for testing your tiny shell
 *
 * usage: mysplit <n>
 * Fork a child that spins for <n> seconds in 1-second chunks.
 */
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <signal.h>

int main(int argc, char **argv)
{
    int i, secs;

    if (argc != 2) {
	     fprintf(stderr, ""Usage: %s <n>\n"", argv[0]);
	     exit(0);
    }
    secs = atoi(argv[1]);


    if (fork() == 0) { /* child */
	    for (i=0; i < secs; i++)
	       sleep(1);
	    exit(0);
    }

    /* parent waits for child to terminate */
    wait(NULL);

    exit(0);
}
",C
"//
//  YSCMacros.h
//  YSCKit
//
//  Created by Builder on 16/6/29.
//  Copyright © 2016年 Builder. All rights reserved.
//

#import <sys/time.h>

//==============================================================================
//
//  @Description:
//      该文件定义了基础库YSCKit中常用的宏定义
//
//==============================================================================

#ifndef YSCMacros_h
#define YSCMacros_h

/** 处于调试或者开发模式 */
#define IS_DEBUG_OR_DEVELOP_MODE    (YSCConfigManagerInstance.isDebugModel || [YSCGeneral isArchiveByDevelopment])
/** 是否输出log */
#define IS_NSLOG_AVAILABLE          IS_DEBUG_OR_DEVELOP_MODE

#define __NSLog(s, ...) do { \
            if (IS_NSLOG_AVAILABLE) { \
                NSMutableString *logString = [NSMutableString stringWithFormat:@""[%@(%d)] "",[[NSString stringWithUTF8String:__FILE__] lastPathComponent], __LINE__]; \
                if (s) { \
                    [logString appendFormat:(s), ##__VA_ARGS__]; \
                } \
                else { \
                    [logString appendString:@""(null)""]; \
                } \
                NSLog(@""%@"", logString); \
                [YSCLog saveLog:logString]; \
            } \
        } while (0)
#define NSLog(...) __NSLog(__VA_ARGS__)

/** 去掉字符串的头尾空格 */
#define TRIM_STRING(_string) (\
        ( ! [_string isKindOfClass:[NSString class]]) ? \
        @"""" : [_string stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]] \
        )

/**
 *  对象判空
 *  注意：只对原始数据进行判断，即全空的字符串不为空
 */
#define OBJECT_IS_EMPTY(_object) (_object == nil \
        || [_object isKindOfClass:[NSNull class]] \
        || ([_object respondsToSelector:@selector(length)] && [(NSData *)_object length] == 0) \
        || ([_object respondsToSelector:@selector(count)]  && [(NSArray *)_object count] == 0))
#define OBJECT_ISNOT_EMPTY(_object) ( ! OBJECT_IS_EMPTY(_object))
#define RETURN_WHEN_OBJECT_IS_EMPTY(_object)        if (OBJECT_IS_EMPTY(_object)) { return ;    }
#define RETURN_NIL_WHEN_OBJECT_IS_EMPTY(_object)    if (OBJECT_IS_EMPTY(_object)) { return nil; }
#define RETURN_EMPTY_WHEN_OBJECT_IS_EMPTY(_object)  if (OBJECT_IS_EMPTY(_object)) { return @""""; }
#define RETURN_YES_WHEN_OBJECT_IS_EMPTY(_object)    if (OBJECT_IS_EMPTY(_object)) { return YES; }
#define RETURN_NO_WHEN_OBJECT_IS_EMPTY(_object)     if (OBJECT_IS_EMPTY(_object)) { return NO;  }
#define RETURN_ZERO_WHEN_OBJECT_IS_EMPTY(_object)   if (OBJECT_IS_EMPTY(_object)) { return 0;   }


/**
 *  创建单例
 */
#ifndef DEFINE_SHARED_INSTANCE_USING_BLOCK
    #define DEFINE_SHARED_INSTANCE_USING_BLOCK(block) \
        static dispatch_once_t pred = 0; \
        __strong static id _sharedObject = nil; \
        dispatch_once(&pred, ^{ \
            if (block) { \
                _sharedObject = block(); \
            } \
        }); \
        return _sharedObject;
#endif


/**
 * @brief   swizzling instance method
 *
 * @usage:
 *      SWIZZLING_INSTANCE_METHOD(self.class, @selector(viewDidLoad), @selector(ysc_viewDidLoad))
 */
#ifndef SWIZZLING_INSTANCE_METHOD
    #define SWIZZLING_INSTANCE_METHOD(clazz, originalSelector, swizzledSelector) { \
        Method originalMethod = class_getInstanceMethod(clazz, originalSelector); \
        Method swizzledMethod = class_getInstanceMethod(clazz, swizzledSelector); \
        BOOL isAddedMethod = class_addMethod(clazz, originalSelector, method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod)); \
        if (isAddedMethod) { \
            class_replaceMethod(clazz, swizzledSelector, method_getImplementation(originalMethod), method_getTypeEncoding(originalMethod)); \
        } \
        else { \
            method_exchangeImplementations(originalMethod, swizzledMethod); \
        } }
#endif

/**
 * @brief   swizzling class method
 *
 * @usage:
 *      SWIZZLING_INSTANCE_METHOD(object_getClass((id)self), @selector(viewDidLoad), @selector(ysc_viewDidLoad))
 */
#ifndef SWIZZLING_CLASS_METHOD
    #define SWIZZLING_CLASS_METHOD(clazz, originalSelector, swizzledSelector) { \
        Method originalMethod = class_getInstanceMethod(clazz, originalSelector); \
        Method swizzledMethod = class_getInstanceMethod(clazz, swizzledSelector); \
        BOOL isAddedMethod = class_addMethod(clazz, originalSelector, method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod)); \
        if (isAddedMethod) { \
            class_replaceMethod(clazz, swizzledSelector, method_getImplementation(originalMethod), method_getTypeEncoding(originalMethod)); \
        } \
        else { \
            method_exchangeImplementations(originalMethod, swizzledMethod); \
        } }
#endif


/**
 *  代码段简写
 */
#define RGBA(r, g, b, a)                [UIColor colorWithRed:r / 255.0f green:g / 255.0f blue:b / 255.0f alpha:a]
#define RGB(r, g, b)                    RGBA(r,g,b,1.0f)
#define RGB_GRAY(c)                     RGBA(c,c,c,1.0f)
#define RANDOM_INT(from,to)             ((int)((from) + arc4random() % ((to)-(from) + 1)))  //随机数 [from,to] 之间
#define GET_NSERROR_MESSAGE(e)          ((NSError *)e).userInfo[NSLocalizedDescriptionKey]  //=e.localizedDescription
#define KEY_WINDOW                      [UIApplication sharedApplication].keyWindow
#define FUNCTION_NAME                   [NSString stringWithUTF8String:__FUNCTION__]

#define IS_NIB_EXISTS(nib)              [[NSFileManager defaultManager] fileExistsAtPath:[[NSBundle mainBundle] pathForResource:nib ofType:@""nib""]]
#define CREATE_NSERROR_WITH_Code(c,m)   [NSError errorWithDomain:@""YSCKit"" code:c userInfo:@{NSLocalizedDescriptionKey : m}]
#define CREATE_NSERROR(m)               CREATE_NSERROR_WITH_Code(0,m)
#define PRINT_DEALLOCING                NSLog(@""[%@] is deallocing..."",NSStringFromClass(self.class));
#define DEPRECATED_MARK(_instead_msg)   NS_DEPRECATED(2_0, 2_0, 2_0, 2_0, _instead_msg) // 用于标示变量或方法已经过期了

/**
 * 1. if (NSOrderedAscending != COMPARE_VERSION(v1,v2))  { //v1 >= v2 }
 * 2. if (NSOrderedDescending == COMPARE_VERSION(v1,v2)) { //v1 > v2 }
 * 3. if (NSOrderedAscending == COMPARE_VERSION(v1,v2))  { //v1 < v2 }
 */
#define COMPARE_VERSION(v1,v2)          [v1 compare:v2 options:NSNumericSearch]
#define COMPARE_CURRENT_VERSION(v)      COMPARE_VERSION([[[NSBundle mainBundle] infoDictionary] objectForKey:@""CFBundleShortVersionString""], (v))
#define APP_SKIP_VERSION(v)             [NSString stringWithFormat:@""APP_SKIP_VERSION_%@"", v]
#define APP_LAUNCH_VERSION(v)           [NSString stringWithFormat:@""APP_LAUNCH_VERSION_%@"", v]


/**
 * @brief 关闭performSelector的leak警告提示
 *
 * @usage:
 *   PERFORM_SELECTOR_WITHOUT_LEAKWARNING(
 *      [_target performSelector:_action withObject:self]
 *   );
 *   
 *   OR
 *
 *   id result;
 *   PERFORM_SELECTOR_WITHOUT_LEAKWARNING(
 *      result = [_target performSelector:_action withObject:self]
 *   );
 */
#ifndef PERFORM_SELECTOR_WITHOUT_LEAKWARNING
    #define PERFORM_SELECTOR_WITHOUT_LEAKWARNING(block) \
        do { \
            _Pragma(""clang diagnostic push"") \
            _Pragma(""clang diagnostic ignored \""-Warc-performSelector-leaks\"""") \
            if (block) { \
                block(); \
            } \
            _Pragma(""clang diagnostic pop"") \
        } while (0)
#endif

/**
 *  注册通知与发送通知
 */
//注册通知
#define ADD_OBSERVER_WITH_OBJECT(_selector, _name, _object) \
        ([[NSNotificationCenter defaultCenter] addObserver:self selector:_selector name:_name object:_object])
#define ADD_OBSERVER(_selector,_name) \
        ADD_OBSERVER_WITH_OBJECT(_selector, _name, nil)
//发送通知
#define POST_NOTIFICATION_WITH_OBJECT_AND_INFO(_name, _object, _info) \
        ([[NSNotificationCenter defaultCenter] postNotificationName:_name object:_object userInfo:(_info)])
#define POST_NOTIFICATION(_name) \
        POST_NOTIFICATION_WITH_OBJECT_AND_INFO(_name, nil, nil)
#define POST_NOTIFICATION_WITH_OBJECT(_name, _object) \
        POST_NOTIFICATION_WITH_OBJECT_AND_INFO(_name, _object, nil)
#define POST_NOTIFICATION_WITH_INFO(_name, _info) \
        POST_NOTIFICATION_WITH_OBJECT_AND_INFO(_name, nil, _info)
//移除通知
#define REMOVE_OBSERVER(_name) \
        ([[NSNotificationCenter defaultCenter] removeObserver:self name:_name object:nil])
#define REMOVE_ALL_OBSERVERS(_self) \
        ([[NSNotificationCenter defaultCenter] removeObserver:_self])


/**
 * @usage:
 *   YSCBenchmark(^{
 *   // code
 *   }, ^(double ms) {
 *   NSLog(@""time cost: %.2f ms"",ms);
 *   });
 */
static inline void YSCBenchmark(void (^block)(void), void (^complete)(double ms)) {
    // <QuartzCore/QuartzCore.h> version
    /*
     extern double CACurrentMediaTime (void);
     double begin, end, ms;
     begin = CACurrentMediaTime();
     block();
     end = CACurrentMediaTime();
     ms = (end - begin) * 1000.0;
     complete(ms);
     */
    
    // <sys/time.h> version
    struct timeval t0, t1;
    gettimeofday(&t0, NULL);
    block();
    gettimeofday(&t1, NULL);
    double ms = (double)(t1.tv_sec - t0.tv_sec) * 1e3 + (double)(t1.tv_usec - t0.tv_usec) * 1e-3;
    complete(ms);
}

/**
 * @usage:
 *   @interface NSObject (MyAdd)
 *       @property (nonatomic, strong) NSMutableArray *textFields;
 *   @end
 *
 *   #import <objc/runtime.h>
 *   @implementation NSObject (MyAdd)
 *       YSC_DYNAMIC_PROPERTY_LAZYLOAD(textFields, NSMutableArray *, [NSMutableArray new])
 *   @end
 */
#ifndef YSC_DYNAMIC_PROPERTY_LAZYLOAD
    #define YSC_DYNAMIC_PROPERTY_LAZYLOAD(_getter_, _type_, _initObject_) \
        - (_type_)_getter_ { \
            _type_ target = objc_getAssociatedObject(self, _cmd); \
            if ( ! target) { \
                target = _initObject_; \
                objc_setAssociatedObject(self, _cmd, target, OBJC_ASSOCIATION_RETAIN_NONATOMIC); \
            } \
            return target; \
        }
#endif


/**
 * usage:
 *   @interface NSObject (MyAdd)
 *       @property (nonatomic, assign) BOOL isError;
 *   @end
 *
 *   #import <objc/runtime.h>
 *   @implementation NSObject (MyAdd)
 *       YSC_DYNAMIC_PROPERTY_BOOL(isError, setIsError)
 *   @end
 */
#ifndef YSC_DYNAMIC_PROPERTY_BOOL
    #define YSC_DYNAMIC_PROPERTY_BOOL(_getter_, _setter_) \
        - (void)_setter_:(BOOL)value { \
            NSNumber *number = [NSNumber numberWithBool:value]; \
            [self willChangeValueForKey:@#_getter_]; \
            objc_setAssociatedObject(self, _cmd, number, OBJC_ASSOCIATION_RETAIN); \
            [self didChangeValueForKey:@#_getter_]; \
        } \
        - (BOOL)_getter_ { \
            NSNumber *number = objc_getAssociatedObject(self, @selector(_setter_:)); \
            return [number boolValue]; \
        }
#endif

/**
 *   Synthsize a dynamic object property in @implementation scope.
 *   It allows us to add custom properties to existing classes in categories.
 *
 *   @param association  ASSIGN / RETAIN / COPY / RETAIN_NONATOMIC / COPY_NONATOMIC
 *   @warning #import <objc/runtime.h>
 *   *******************************************************************************
 *
 * @usage:
 *   @interface NSObject (MyAdd)
 *       @property (nonatomic, retain) UIColor *myColor;
 *   @end
 *
 *   #import <objc/runtime.h>
 *   @implementation NSObject (MyAdd)
 *       YSC_DYNAMIC_PROPERTY_OBJECT(myColor, setMyColor, RETAIN_NONATOMIC, UIColor *)
 *   @end
 */
#ifndef YSC_DYNAMIC_PROPERTY_OBJECT
    #define YSC_DYNAMIC_PROPERTY_OBJECT(_getter_, _setter_, _association_, _type_) \
        - (void)_setter_:(_type_)object { \
            [self willChangeValueForKey:@#_getter_]; \
            objc_setAssociatedObject(self, _cmd, object, OBJC_ASSOCIATION_##_association_); \
            [self didChangeValueForKey:@#_getter_]; \
        } \
        - (_type_)_getter_ { \
            return objc_getAssociatedObject(self, @selector(_setter_:)); \
        }
#endif


/**
 * @usage:
 *   @interface NSObject (MyAdd)
 *       @property (nonatomic, retain) CGPoint myPoint;
 *   @end
 *
 *   #import <objc/runtime.h>
 *   @implementation NSObject (MyAdd)
 *       YSC_DYNAMIC_PROPERTY_CTYPE(myPoint, setMyPoint, CGPoint)
 *   @end
 */
#ifndef YSC_DYNAMIC_PROPERTY_CTYPE
    #define YSC_DYNAMIC_PROPERTY_CTYPE(_getter_, _setter_, _type_) \
        - (void)_setter_:(_type_)object { \
            [self willChangeValueForKey:@#_getter_]; \
            NSValue *value = [NSValue value:&object withObjCType:@encode(_type_)]; \
            objc_setAssociatedObject(self, _cmd, value, OBJC_ASSOCIATION_RETAIN); \
            [self didChangeValueForKey:@#_getter_]; \
        } \
        - (_type_)_getter_ { \
            _type_ cValue = { 0 }; \
            NSValue *value = objc_getAssociatedObject(self, @selector(_setter_:)); \
            [value getValue:&cValue]; \
            return cValue; \
        }
#endif

/**
 * @usage:
 *   @weakiy(self)
 *   [self doSomething^{
 *       @strongiy(self)
 *       if (!self) return;
 *       ...
 *   }];
 */
#ifndef weakiy
    #if DEBUG
        #if __has_feature(objc_arc)
            #define weakiy(object) autoreleasepool{} __weak __typeof__(object) weak##_##object = object;
        #else
            #define weakiy(object) autoreleasepool{} __block __typeof__(object) block##_##object = object;
        #endif
    #else
        #if __has_feature(objc_arc)
            #define weakiy(object) try{} @finally{} {} __weak __typeof__(object) weak##_##object = object;
        #else
            #define weakiy(object) try{} @finally{} {} __block __typeof__(object) block##_##object = object;
        #endif
    #endif
#endif

#ifndef strongiy
    #if DEBUG
        #if __has_feature(objc_arc)
            #define strongiy(object) autoreleasepool{} __typeof__(object) object = weak##_##object;
        #else
            #define strongiy(object) autoreleasepool{} __typeof__(object) object = block##_##object;
        #endif
    #else
        #if __has_feature(objc_arc)
            #define strongiy(object) try{} @finally{} __typeof__(object) object = weak##_##object;
        #else
            #define strongiy(object) try{} @finally{} __typeof__(object) object = block##_##object;
        #endif
    #endif
#endif

#endif /* YSCMacros_h */
",C
"//#include <stdio.h>
//#include <stdlib.h>
//#include <stdint.h>
//#include <stdbool.h>
//#include <string.h>
//#include <stddef.h>
#include ""esp_common.h""
#include ""coap.h""

#include ""shell.h""
//#include <rtthread.h>
//#define shell_printf rt_kshell_printf 

extern void endpoint_setup(void);
extern const coap_endpoint_t endpoints[];

#ifdef MICROCOAP_DEBUG
void ICACHE_FLASH_ATTR coap_dumpHeader(coap_header_t *hdr)
{
    shell_printf(""Header:\n"");
    shell_printf(""  ver  0x%02X\n"", hdr->ver);
    shell_printf(""  t    0x%02X\n"", hdr->t);
    shell_printf(""  tkl  0x%02X\n"", hdr->tkl);
    shell_printf(""  code 0x%02X\n"", hdr->code);
    shell_printf(""  id   0x%02X%02X\n"", hdr->id[0], hdr->id[1]);
}
#endif

#ifdef MICROCOAP_DEBUG
void ICACHE_FLASH_ATTR coap_dump(const uint8_t *buf, size_t buflen, bool bare)
{
    if (bare)
    {
        while(buflen--)
            shell_printf(""%02X%s"", *buf++, (buflen > 0) ? "" "" : """");
    }
    else
    {
        shell_printf(""Dump: "");
        while(buflen--)
            shell_printf(""%02X%s"", *buf++, (buflen > 0) ? "" "" : """");
        shell_printf(""\n"");
    }
}
#endif

int ICACHE_FLASH_ATTR coap_parseHeader(coap_header_t *hdr, const uint8_t *buf, size_t buflen)
{
    if (buflen < 4)
        return COAP_ERR_HEADER_TOO_SHORT;
    hdr->ver = (buf[0] & 0xC0) >> 6;
    if (hdr->ver != 1)
        return COAP_ERR_VERSION_NOT_1;
    hdr->t = (buf[0] & 0x30) >> 4;
    hdr->tkl = buf[0] & 0x0F;
    hdr->code = buf[1];
    hdr->id[0] = buf[2];
    hdr->id[1] = buf[3];
    return 0;
}

int ICACHE_FLASH_ATTR coap_parseToken(coap_buffer_t *tokbuf, const coap_header_t *hdr, const uint8_t *buf, size_t buflen)
{
    if (hdr->tkl == 0)
    {
        tokbuf->p = NULL;
        tokbuf->len = 0;
        return 0;
    }
    else
    if (hdr->tkl <= 8)
    {
        if (4U + hdr->tkl > buflen)
            return COAP_ERR_TOKEN_TOO_SHORT;   // tok bigger than packet
        tokbuf->p = buf+4;  // past header
        tokbuf->len = hdr->tkl;
        return 0;
    }
    else
    {
        // invalid size
        return COAP_ERR_TOKEN_TOO_SHORT;
    }
}

// advances p
int ICACHE_FLASH_ATTR coap_parseOption(coap_option_t *option, uint16_t *running_delta, const uint8_t **buf, size_t buflen)
{
    const uint8_t *p = *buf;
    uint8_t headlen = 1;
    uint16_t len, delta;

    if (buflen < headlen) // too small
        return COAP_ERR_OPTION_TOO_SHORT_FOR_HEADER;

    delta = (p[0] & 0xF0) >> 4;
    len = p[0] & 0x0F;

    // These are untested and may be buggy
    if (delta == 13)
    {
        headlen++;
        if (buflen < headlen)
            return COAP_ERR_OPTION_TOO_SHORT_FOR_HEADER;
        delta = p[1] + 13;
        p++;
    }
    else
    if (delta == 14)
    {
        headlen += 2;
        if (buflen < headlen)
            return COAP_ERR_OPTION_TOO_SHORT_FOR_HEADER;
        delta = ((p[1] << 8) | p[2]) + 269;
        p+=2;
    }
    else
    if (delta == 15)
        return COAP_ERR_OPTION_DELTA_INVALID;

    if (len == 13)
    {
        headlen++;
        if (buflen < headlen)
            return COAP_ERR_OPTION_TOO_SHORT_FOR_HEADER;
        len = p[1] + 13;
        p++;
    }
    else
    if (len == 14)
    {
        headlen += 2;
        if (buflen < headlen)
            return COAP_ERR_OPTION_TOO_SHORT_FOR_HEADER;
        len = ((p[1] << 8) | p[2]) + 269;
        p+=2;
    }
    else
    if (len == 15)
        return COAP_ERR_OPTION_LEN_INVALID;

    if ((p + 1 + len) > (*buf + buflen))
        return COAP_ERR_OPTION_TOO_BIG;

    //shell_printf(""option num=%d\n"", delta + *running_delta);
    option->num = delta + *running_delta;
    option->buf.p = p+1;
    option->buf.len = len;
    //coap_dump(p+1, len, false);

    // advance buf
    *buf = p + 1 + len;
    *running_delta += delta;

    return 0;
}

// http://tools.ietf.org/html/rfc7252#section-3.1
int ICACHE_FLASH_ATTR coap_parseOptionsAndPayload(coap_option_t *options, uint8_t *numOptions, coap_buffer_t *payload, const coap_header_t *hdr, const uint8_t *buf, size_t buflen)
{
    size_t optionIndex = 0;
    uint16_t delta = 0;
    const uint8_t *p = buf + 4 + hdr->tkl;
    const uint8_t *end = buf + buflen;
    int rc;
    if (p > end)
        return COAP_ERR_OPTION_OVERRUNS_PACKET;   // out of bounds

    //coap_dump(p, end - p);

    // 0xFF is payload marker
    while((optionIndex < *numOptions) && (p < end) && (*p != 0xFF))
    {
        if (0 != (rc = coap_parseOption(&options[optionIndex], &delta, &p, end-p)))
            return rc;
        optionIndex++;
    }
    *numOptions = optionIndex;

    if (p+1 < end && *p == 0xFF)  // payload marker
    {
        payload->p = p+1;
        payload->len = end-(p+1);
    }
    else
    {
        payload->p = NULL;
        payload->len = 0;
    }

    return 0;
}

#ifdef MICROCOAP_DEBUG
void ICACHE_FLASH_ATTR coap_dumpOptions(coap_option_t *opts, size_t numopt)
{
    size_t i;
    shell_printf(""Options:\n"");
    for (i=0;i<numopt;i++)
    {
        shell_printf(""  0x%02X [ "", opts[i].num);
        coap_dump(opts[i].buf.p, opts[i].buf.len, true);
        shell_printf("" ]\n"");
    }
}
#endif

#ifdef MICROCOAP_DEBUG
void ICACHE_FLASH_ATTR coap_dumpPacket(coap_packet_t *pkt)
{
    coap_dumpHeader(&pkt->hdr);
    coap_dumpOptions(pkt->opts, pkt->numopts);
    shell_printf(""Payload: \n"");
    coap_dump(pkt->payload.p, pkt->payload.len, true);
    shell_printf(""\n"");
}
#endif

int ICACHE_FLASH_ATTR coap_parse(coap_packet_t *pkt, const uint8_t *buf, size_t buflen)
{
    int rc;

    // coap_dump(buf, buflen, false);

    if (0 != (rc = coap_parseHeader(&pkt->hdr, buf, buflen)))
        return rc;
//    coap_dumpHeader(&hdr);
    if (0 != (rc = coap_parseToken(&pkt->tok, &pkt->hdr, buf, buflen)))
        return rc;
    pkt->numopts = MAXOPT;
    if (0 != (rc = coap_parseOptionsAndPayload(pkt->opts, &(pkt->numopts), &(pkt->payload), &pkt->hdr, buf, buflen)))
        return rc;
//    coap_dumpOptions(opts, numopt);
    return 0;
}

// options are always stored consecutively, so can return a block with same option num
const  coap_option_t * ICACHE_FLASH_ATTR coap_findOptions(const coap_packet_t *pkt, uint8_t num, uint8_t *count)
{
    // FIXME, options is always sorted, can find faster than this
    size_t i;
    const coap_option_t *first = NULL;
    *count = 0;
    for (i=0;i<pkt->numopts;i++)
    {
        if (pkt->opts[i].num == num)
        {
            if (NULL == first)
                first = &pkt->opts[i];
            (*count)++;
        }
        else
        {
            if (NULL != first)
                break;
        }
    }
    return first;
}

int ICACHE_FLASH_ATTR coap_buffer_to_string(char *strbuf, size_t strbuflen, const coap_buffer_t *buf)
{
    if (buf->len+1 > strbuflen)
        return COAP_ERR_BUFFER_TOO_SMALL;
    memcpy(strbuf, buf->p, buf->len);
    strbuf[buf->len] = 0;
    return 0;
}

int ICACHE_FLASH_ATTR coap_build(uint8_t *buf, size_t *buflen, const coap_packet_t *pkt)
{
    size_t opts_len = 0;
    size_t i;
    uint8_t *p;
    uint16_t running_delta = 0;

    // build header
    if (*buflen < (4U + pkt->hdr.tkl))
        return COAP_ERR_BUFFER_TOO_SMALL;

    buf[0] = (pkt->hdr.ver & 0x03) << 6;
    buf[0] |= (pkt->hdr.t & 0x03) << 4;
    buf[0] |= (pkt->hdr.tkl & 0x0F);
    buf[1] = pkt->hdr.code;
    buf[2] = pkt->hdr.id[0];
    buf[3] = pkt->hdr.id[1];

    // inject token
    p = buf + 4;
    if ((pkt->hdr.tkl > 0) && (pkt->hdr.tkl != pkt->tok.len))
        return COAP_ERR_UNSUPPORTED;
    
    if (pkt->hdr.tkl > 0)
        memcpy(p, pkt->tok.p, pkt->hdr.tkl);

    // // http://tools.ietf.org/html/rfc7252#section-3.1
    // inject options
    p += pkt->hdr.tkl;

    for (i=0;i<pkt->numopts;i++)
    {
        uint32_t optDelta;
        uint8_t len, delta = 0;

        if (((size_t)(p-buf)) > *buflen)
             return COAP_ERR_BUFFER_TOO_SMALL;
        optDelta = pkt->opts[i].num - running_delta;
        coap_option_nibble(optDelta, &delta);
        coap_option_nibble((uint32_t)pkt->opts[i].buf.len, &len);

        *p++ = (0xFF & (delta << 4 | len));
        if (delta == 13)
        {
            *p++ = (optDelta - 13);
        }
        else
        if (delta == 14)
        {
            *p++ = ((optDelta-269) >> 8);
            *p++ = (0xFF & (optDelta-269));
        }
        if (len == 13)
        {
            *p++ = (pkt->opts[i].buf.len - 13);
        }
        else
        if (len == 14)
  	    {
            *p++ = (pkt->opts[i].buf.len >> 8);
            *p++ = (0xFF & (pkt->opts[i].buf.len-269));
        }

        memcpy(p, pkt->opts[i].buf.p, pkt->opts[i].buf.len);
        p += pkt->opts[i].buf.len;
        running_delta = pkt->opts[i].num;
    }

    opts_len = (p - buf) - 4;   // number of bytes used by options

    if (pkt->payload.len > 0)
    {
        if (*buflen < 4 + 1 + pkt->payload.len + opts_len)
            return COAP_ERR_BUFFER_TOO_SMALL;
        buf[4 + opts_len] = 0xFF;  // payload marker
        memcpy(buf+5 + opts_len, pkt->payload.p, pkt->payload.len);
        *buflen = opts_len + 5 + pkt->payload.len;
    }
    else
        *buflen = opts_len + 4;
    return 0;
}

void ICACHE_FLASH_ATTR coap_option_nibble(uint32_t value, uint8_t *nibble)
{
    if (value<13)
    {
        *nibble = (0xFF & value);
    }
    else
    if (value<=0xFF+13)
    {
        *nibble = 13;
    } else if (value<=0xFFFF+269)
    {
        *nibble = 14;
    }
}

int ICACHE_FLASH_ATTR coap_make_response(coap_rw_buffer_t *scratch, coap_packet_t *pkt, const uint8_t *content, size_t content_len, uint8_t msgid_hi, uint8_t msgid_lo, const coap_buffer_t* tok, coap_responsecode_t rspcode, coap_content_type_t content_type)
{
    pkt->hdr.ver = 0x01;
    pkt->hdr.t = COAP_TYPE_ACK;
    pkt->hdr.tkl = 0;
    pkt->hdr.code = rspcode;
    pkt->hdr.id[0] = msgid_hi;
    pkt->hdr.id[1] = msgid_lo;
    pkt->numopts = 1;

    // need token in response
    if (tok) {
        pkt->hdr.tkl = tok->len;
        pkt->tok = *tok;
    }

    // safe because 1 < MAXOPT
    pkt->opts[0].num = COAP_OPTION_CONTENT_FORMAT;
    pkt->opts[0].buf.p = scratch->p;
    if (scratch->len < 2)
        return COAP_ERR_BUFFER_TOO_SMALL;
    scratch->p[0] = ((uint16_t)content_type & 0xFF00) >> 8;
    scratch->p[1] = ((uint16_t)content_type & 0x00FF);
    pkt->opts[0].buf.len = 2;
    pkt->payload.p = content;
    pkt->payload.len = content_len;
    return 0;
}

// FIXME, if this looked in the table at the path before the method then
// it could more easily return 405 errors
int ICACHE_FLASH_ATTR coap_handle_req(coap_rw_buffer_t *scratch, const coap_packet_t *inpkt, coap_packet_t *outpkt)
{
    const coap_option_t *opt;
    uint8_t count;
    int i;
    const coap_endpoint_t *ep = endpoints;

    while(NULL != ep->handler)
    {
        if (ep->method != inpkt->hdr.code)
            goto next;
        if (NULL != (opt = coap_findOptions(inpkt, COAP_OPTION_URI_PATH, &count)))
        {
            if (count != ep->path->count)
                goto next;
            for (i=0;i<count;i++)
            {
                if (opt[i].buf.len != strlen(ep->path->elems[i]))
                    goto next;
                if (0 != memcmp(ep->path->elems[i], opt[i].buf.p, opt[i].buf.len))
                    goto next;
            }
            // match!
            return ep->handler(scratch, inpkt, outpkt, inpkt->hdr.id[0], inpkt->hdr.id[1]);
        }
next:
        ep++;
    }

    coap_make_response(scratch, outpkt, NULL, 0, inpkt->hdr.id[0], inpkt->hdr.id[1], &inpkt->tok, COAP_RSPCODE_NOT_FOUND, COAP_CONTENTTYPE_NONE);

    return 0;
}

void coap_setup(void)
{
}

",C
"/*
 * 94 shifted lines of 72 ASCII characters.
 */

static const char *characters[] = {
    ""!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefgh"",
    ""\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghi"",
    ""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghij"",
    ""$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijk"",
    ""%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijkl"",
    ""&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklm"",
    ""'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmn"",
    ""()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmno"",
    "")*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnop"",
    ""*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopq"",
    ""+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqr"",
    "",-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrs"",
    ""-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrst"",
    ""./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstu"",
    ""/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuv"",
    ""0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvw"",
    ""123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwx"",
    ""23456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxy"",
    ""3456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz"",
    ""456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{"",
    ""56789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|"",
    ""6789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}"",
    ""789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"",
    ""89:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!"",
    ""9:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\"""",
    "":;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#"",
    "";<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$"",
    ""<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%"",
    ""=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&"",
    "">?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'"",
    ""?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'("",
    ""@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()"",
    ""ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*"",
    ""BCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+"",
    ""CDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,"",
    ""DEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-"",
    ""EFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-."",
    ""FGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./"",
    ""GHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0"",
    ""HIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./01"",
    ""IJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./012"",
    ""JKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123"",
    ""KLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./01234"",
    ""LMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./012345"",
    ""MNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456"",
    ""NOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./01234567"",
    ""OPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./012345678"",
    ""PQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789"",
    ""QRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:"",
    ""RSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;"",
    ""STUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<"",
    ""TUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<="",
    ""UVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>"",
    ""VWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?"",
    ""WXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@"",
    ""XYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@A"",
    ""YZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@AB"",
    ""Z[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABC"",
    ""[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCD"",
    ""\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDE"",
    ""]^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEF"",
    ""^_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFG"",
    ""_`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGH"",
    ""`abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHI"",
    ""abcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJ"",
    ""bcdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJK"",
    ""cdefghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKL"",
    ""defghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLM"",
    ""efghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMN"",
    ""fghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNO"",
    ""ghijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOP"",
    ""hijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQ"",
    ""ijklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQR"",
    ""jklmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRS"",
    ""klmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRST"",
    ""lmnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTU"",
    ""mnopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUV"",
    ""nopqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVW"",
    ""opqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWX"",
    ""pqrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXY"",
    ""qrstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ"",
    ""rstuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ["",
    ""stuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\"",
    ""tuvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]"",
    ""uvwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^"",
    ""vwxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_"",
    ""wxyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`"",
    ""xyz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`a"",
    ""yz{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ab"",
    ""z{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abc"",
    ""{|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcd"",
    ""|}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcde"",
    ""}~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdef"",
    ""~!\""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefg""
};
",C
"//
// Copyright (c) 2017-2020 the rbfx project.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the ""Software""), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

#pragma once


#include <EASTL/utility.h>

#include ""Tabs/Tab.h""


namespace Urho3D
{

class Asset;
class FileChange;

struct ResourceContextMenuArgs
{
    ea::string resourceName_;
};

URHO3D_EVENT(E_RESOURCEBROWSERDELETE, ResourceBrowserDelete)
{
    URHO3D_PARAM(P_NAME, Name);                                     // String
}

/// Resource browser tab.
class ResourceTab : public Tab
{
    URHO3D_OBJECT(ResourceTab, Tab)
public:
    /// Construct.
    explicit ResourceTab(Context* context);

    /// Render content of tab window. Returns false if tab was closed.
    bool RenderWindowContent() override;
    /// Clear any user selection tracked by this tab.
    void ClearSelection() override;
    /// Serialize current user selection into a buffer and return it.
    bool SerializeSelection(Archive& archive) override;

    /// Signal set when user right-clicks a resource or folder.
    Signal<void(const ResourceContextMenuArgs&)> resourceContextMenu_;

protected:
    ///
    void OnLocateResource(StringHash, VariantMap& args);
    /// Constructs a name for newly created resource based on specified template name.
    ea::string GetNewResourcePath(const ea::string& name);
    /// Select current item in attribute inspector.
    void SelectCurrentItemInspector();
    ///
    void OnEndFrame(StringHash, VariantMap&);
    ///
    void OnResourceUpdated(const FileChange& change);
    ///
    void ScanAssets();
    ///
    void OpenResource(const ea::string& resourceName);
    ///
    void RenderContextMenu();
    ///
    void RenderDirectoryTree(const eastl::string& path = """");
    ///
    void ScanDirTree(StringVector& result, const eastl::string& path);
    ///
    void RenderDeletionDialog();
    ///
    void StartRename();
    ///
    bool RenderRenameWidget(const ea::string& icon = """");

    /// Current open resource path.
    ea::string currentDir_;
    /// Current selected resource file name.
    ea::string selectedItem_;
    /// Assets visible in resource browser.
    ea::vector<WeakPtr<Asset>> assets_;
    /// Cache of directory names at current selected resource path.
    StringVector currentDirs_;
    /// Cache of file names at current selected resource path.
    StringVector currentFiles_;
    /// Flag which requests rescan of current selected resource path.
    bool rescan_ = true;
    /// Flag requesting to scroll to selection on next frame.
    bool scrollToCurrent_ = false;
    /// State cache.
    ValueCache cache_{context_};
    /// Frame at which rename started. Non-zero means rename is in-progress.
    unsigned isRenamingFrame_ = 0;
    /// Current value of text widget during rename.
    ea::string renameBuffer_;
};

}
",C
"// Multiprocessor support
// mist32 is not supported multiprocessor

#include ""types.h""
#include ""defs.h""
#include ""param.h""
#include ""memlayout.h""
#include ""mmu.h""
#include ""proc.h""

struct cpu cpus[NCPU];
int ismp;
int ncpu;

void
mpinit(void)
{
  ismp = 0;
  ncpu = 1;
  lapic = 0;

  cpus[ncpu].id = ncpu;
  ncpu++;

  return;
}
",C
"//=================================================================================================
/*!
//  \file blaze/math/views/subvector/SubvectorData.h
//  \brief Header file for the implementation of the SubvectorData class template
//
//  Copyright (C) 2012-2020 Klaus Iglberger - All Rights Reserved
//
//  This file is part of the Blaze library. You can redistribute it and/or modify it under
//  the terms of the New (Revised) BSD License. Redistribution and use in source and binary
//  forms, with or without modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright notice, this list of
//     conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright notice, this list
//     of conditions and the following disclaimer in the documentation and/or other materials
//     provided with the distribution.
//  3. Neither the names of the Blaze development group nor the names of its contributors
//     may be used to endorse or promote products derived from this software without specific
//     prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY
//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
//  SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
//  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
//  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
//  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
//  DAMAGE.
*/
//=================================================================================================

#ifndef _BLAZE_MATH_VIEWS_SUBVECTOR_SUBVECTORDATA_H_
#define _BLAZE_MATH_VIEWS_SUBVECTOR_SUBVECTORDATA_H_


//*************************************************************************************************
// Includes
//*************************************************************************************************

#include <blaze/util/MaybeUnused.h>
#include <blaze/util/Types.h>


namespace blaze {

//=================================================================================================
//
//  CLASS DEFINITION
//
//=================================================================================================

//*************************************************************************************************
/*!\brief Auxiliary class template for the data members of the Subvector class.
// \ingroup subvector
//
// The auxiliary SubvectorData class template represents an abstraction of the data members of
// the Subvector class template. The necessary set of data members is selected depending on the
// number of compile time subvector arguments.
*/
template< size_t... CSAs >  // Compile time subvector arguments
class SubvectorData
{};
//*************************************************************************************************




//=================================================================================================
//
//  CLASS TEMPLATE SPECIALIZATION FOR ZERO COMPILE TIME ARGUMENTS
//
//=================================================================================================

//*************************************************************************************************
/*! \cond BLAZE_INTERNAL */
/*!\brief Specialization of the SubvectorData class template for zero compile time subvector
//        arguments.
// \ingroup subvector
//
// This specialization of SubvectorData adapts the class template to the requirements of zero
// compile time subvector arguments.
*/
template<>
class SubvectorData<>
{
 public:
   //**Compile time flags**************************************************************************
   //! Compilation flag for compile time optimization.
   /*! The \a compileTimeArgs compilation flag indicates whether the view has been created by
       means of compile time arguments and whether these arguments can be queried at compile
       time. In that case, the \a compileTimeArgs compilation flag is set to \a true, otherwise
       it is set to \a false. */
   static constexpr bool compileTimeArgs = false;
   //**********************************************************************************************

   //**Constructors********************************************************************************
   /*!\name Constructors */
   //@{
   template< typename... RSAs >
   inline SubvectorData( size_t index, size_t n, RSAs... args );

   SubvectorData( const SubvectorData& ) = default;
   //@}
   //**********************************************************************************************

   //**Destructor**********************************************************************************
   /*!\name Destructor */
   //@{
   ~SubvectorData() = default;
   //@}
   //**********************************************************************************************

   //**Assignment operators************************************************************************
   /*!\name Assignment operators */
   //@{
   SubvectorData& operator=( const SubvectorData& ) = delete;
   //@}
   //**********************************************************************************************

   //**Utility functions***************************************************************************
   /*!\name Utility functions */
   //@{
   inline size_t offset() const noexcept;
   inline size_t size  () const noexcept;
   //@}
   //**********************************************************************************************

 private:
   //**Member variables****************************************************************************
   /*!\name Member variables */
   //@{
   const size_t offset_;  //!< The offset of the subvector within the vector.
   const size_t size_;    //!< The size of the subvector.
   //@}
   //**********************************************************************************************
};
/*! \endcond */
//*************************************************************************************************


//*************************************************************************************************
/*! \cond BLAZE_INTERNAL */
/*!\brief The constructor for SubvectorData.
//
// \param index The offset of the subvector within the given vector.
// \param n The size of the subvector.
// \param args The optional subvector arguments.
*/
template< typename... RSAs >  // Optional subvector arguments
inline SubvectorData<>::SubvectorData( size_t index, size_t n, RSAs... args )
   : offset_( index )  // The offset of the subvector within the vector
   , size_  ( n     )  // The size of the subvector
{
   MAYBE_UNUSED( args... );
}
/*! \endcond */
//*************************************************************************************************


//*************************************************************************************************
/*! \cond BLAZE_INTERNAL */
/*!\brief Returns the offset of the subvector within the underlying vector.
//
// \return The offset of the subvector.
*/
inline size_t SubvectorData<>::offset() const noexcept
{
   return offset_;
}
/*! \endcond */
//*************************************************************************************************


//*************************************************************************************************
/*! \cond BLAZE_INTERNAL */
/*!\brief Returns the current size/dimension of the subvector.
//
// \return The size of the subvector.
*/
inline size_t SubvectorData<>::size() const noexcept
{
   return size_;
}
/*! \endcond */
//*************************************************************************************************




//=================================================================================================
//
//  CLASS TEMPLATE SPECIALIZATION FOR TWO COMPILE TIME ARGUMENTS
//
//=================================================================================================

//*************************************************************************************************
/*! \cond BLAZE_INTERNAL */
/*!\brief Specialization of the SubvectorData class template for two compile time subvector
//        arguments.
// \ingroup subvector
//
// This specialization of SubvectorData adapts the class template to the requirements of two
// compile time arguments.
*/
template< size_t I    // Index of the first element
        , size_t N >  // Number of elements
class SubvectorData<I,N>
{
 public:
   //**Compile time flags**************************************************************************
   //! Compilation flag for compile time optimization.
   /*! The \a compileTimeArgs compilation flag indicates whether the view has been created by
       means of compile time arguments and whether these arguments can be queried at compile
       time. In that case, the \a compileTimeArgs compilation flag is set to \a true, otherwise
       it is set to \a false. */
   static constexpr bool compileTimeArgs = true;
   //**********************************************************************************************

   //**Constructors********************************************************************************
   /*!\name Constructors */
   //@{
   template< typename... RSAs >
   explicit inline SubvectorData( RSAs... args );

   SubvectorData( const SubvectorData& ) = default;
   //@}
   //**********************************************************************************************

   //**Destructor**********************************************************************************
   /*!\name Destructor */
   //@{
   ~SubvectorData() = default;
   //@}
   //**********************************************************************************************

   //**Assignment operators************************************************************************
   /*!\name Assignment operators */
   //@{
   SubvectorData& operator=( const SubvectorData& ) = delete;
   //@}
   //**********************************************************************************************

   //**Utility functions***************************************************************************
   /*!\name Utility functions */
   //@{
   static constexpr size_t offset() noexcept;
   static constexpr size_t size  () noexcept;
   //@}
   //**********************************************************************************************
};
/*! \endcond */
//*************************************************************************************************


//*************************************************************************************************
/*! \cond BLAZE_INTERNAL */
/*!\brief The constructor for SubvectorData.
//
// \param args The optional subvector arguments.
*/
template< size_t I            // Index of the first element
        , size_t N >          // Number of elements
template< typename... RSAs >  // Optional subvector arguments
inline SubvectorData<I,N>::SubvectorData( RSAs... args )
{
   MAYBE_UNUSED( args... );
}
/*! \endcond */
//*************************************************************************************************


//*************************************************************************************************
/*! \cond BLAZE_INTERNAL */
/*!\brief Returns the offset of the subvector within the underlying vector.
//
// \return The offset of the subvector.
*/
template< size_t I    // Index of the first element
        , size_t N >  // Number of elements
constexpr size_t SubvectorData<I,N>::offset() noexcept
{
   return I;
}
/*! \endcond */
//*************************************************************************************************


//*************************************************************************************************
/*! \cond BLAZE_INTERNAL */
/*!\brief Returns the current size/dimension of the subvector.
//
// \return The size of the subvector.
*/
template< size_t I    // Index of the first element
        , size_t N >  // Number of elements
constexpr size_t SubvectorData<I,N>::size() noexcept
{
   return N;
}
/*! \endcond */
//*************************************************************************************************

} // namespace blaze

#endif
",C
"//
//  GFTestAppDelegate.h
//  TestChaosApp
//
//  Created by Michael Charkin on 2/26/14.
//  Copyright (c) 2014 GitFlub. All rights reserved.
//

#import <UIKit/UIKit.h>

@interface GFTestAppDelegate : UIResponder <UIApplicationDelegate>

@property (strong, nonatomic) UIWindow *window;

@end
",C
"//
//  SA_DiceEvaluator.h
//
//	Copyright (c) 2016 Said Achmiz.
//
//	This software is licensed under the MIT license.
//	See the file ""LICENSE"" for more information.

#import <Foundation/Foundation.h>

@class SA_DiceBag;
@class SA_DiceExpression;

/************************************************/
#pragma mark SA_DiceEvaluator class declaration
/************************************************/

@interface SA_DiceEvaluator : NSObject

/************************/
#pragma mark - Properties
/************************/

@property NSUInteger maxDieCount;
@property NSUInteger maxDieSize;

/****************************/
#pragma mark - Public methods
/****************************/

-(SA_DiceExpression *) resultOfExpression:(SA_DiceExpression *)expression;

@end
",C
"//
//  JJProductCell.h
//  Footprints
//
//  Created by Jinjin on 14/12/3.
//  Copyright (c) 2014年 JiaJun. All rights reserved.
//

#import <UIKit/UIKit.h>


typedef void(^ExchangeBlock)(GiftProductModel *model);

@interface JJProductCell : UITableViewCell
@property (weak, nonatomic) IBOutlet UIView *realCotent;
@property (weak, nonatomic) IBOutlet UILabel *nameLabel;
@property (weak, nonatomic) IBOutlet UILabel *jifenLabel;
@property (weak, nonatomic) IBOutlet UIImageView *avatarLabel;
@property (weak, nonatomic) IBOutlet UIButton *exchangeBtn;
@property (nonatomic,strong) GiftProductModel *model;
@property (nonatomic,strong) ExchangeBlock exChangeBlock;
@property (weak, nonatomic) IBOutlet UILabel *countLabel;
- (IBAction)exchangeBtnDidTap:(id)sender;
@end
",C
"/*
 * Simple Vulkan application
 * 
 * Copyright (c) 2016 by Mathias Johansson
 * 
 * This code is licensed under the MIT license 
 * 		https://opensource.org/licenses/MIT
 */

#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <string.h>

#include ""util/vulkan.h""
#include ""util/window.h""

int main() {
	// Create an instance of vulkan
	createInstance(""Vulkan"");
	setupDebugging();

	getDevice();

	openWindow();

	createCommandPool();
	createCommandBuffer();

	prepRender();

	beginCommands();

	VkClearColorValue clearColor = {
		.uint32 = {1, 0, 0, 1}
	};

	VkImageMemoryBarrier preImageBarrier = {
		VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER, NULL,
		VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT
			| VK_IMAGE_USAGE_TRANSFER_DST_BIT,
		VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT
			| VK_IMAGE_USAGE_TRANSFER_DST_BIT,
		VK_IMAGE_LAYOUT_UNDEFINED,
		VK_IMAGE_LAYOUT_GENERAL, queueFam,
		queueFam, swapImages[nextImage],
		swapViewInfos[nextImage].subresourceRange
	};

	vkCmdPipelineBarrier(
		comBuffer, VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT,
		VK_PIPELINE_STAGE_TRANSFER_BIT,
		0, 0, NULL, 0, NULL, 1, &preImageBarrier
	);

	vkCmdClearColorImage(
		comBuffer, swapImages[nextImage], VK_IMAGE_LAYOUT_GENERAL,
		&clearColor, 1, &swapViewInfos[nextImage].subresourceRange
	);

	VkImageMemoryBarrier postImageBarrier = {
		VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER, NULL,
		VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT
			| VK_IMAGE_USAGE_TRANSFER_DST_BIT,
		VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT
			| VK_IMAGE_USAGE_TRANSFER_DST_BIT,
		VK_IMAGE_LAYOUT_GENERAL,
		VK_IMAGE_LAYOUT_PRESENT_SRC_KHR, VK_QUEUE_FAMILY_IGNORED,
		VK_QUEUE_FAMILY_IGNORED, swapImages[nextImage],
		swapViewInfos[nextImage].subresourceRange
	};

	vkCmdPipelineBarrier(
		comBuffer, VK_PIPELINE_STAGE_TRANSFER_BIT, 
		VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT, 
		0, 0, NULL, 0, NULL, 1, &postImageBarrier
	);

	endCommands();

	submitCommandBuffer();

	tickWindow();

	sleep(3);

	// DESTROY
	destroyInstance();

	quitWindow();
	return 0;
}

",C
"/*******************************************************
 * File name: pando_subdevice.h
 * Author: razr
 * Versions: 1.0
 * Description: pando iot embeded framework.
 * History:
 *   1.Date: Sep 11, 2015
 *     Author: razr
 *     Modification: initial code
 *********************************************************/
#ifndef PANDO_FRAMEWORK_H_
#define PANDO_FRAMEWORK_H_

void pando_framework_init(void);

#endif /* PANDO_FRAMEWORK_H_ */
",C
"//
//  NFAnalogClockView+Extension.h
//  NFAnalogClock
//
//  Created by Neil Francis Hipona on 12/1/16.
//  Copyright © 2016 Neil Francis Hipona. All rights reserved.
//

#import ""NFAnalogClockView.h""

@interface NFAnalogClockView (Extension)

- (void)startTime;
- (void)stopTime;

- (NFTime *)updateClock;

@end
",C
"#ifndef MYY_DATA_SECTION_H
#define MYY_DATA_SECTION_H 1
#include <stdint.h>

struct data_section_status {
	unsigned int allocated;
	void * address;
};

struct data_symbol {
	uint32_t id;
	uint32_t align;
	uint32_t size;
	uint8_t * name;
	uint8_t * data;
};

struct data_section {
	struct data_symbol * symbols;
	uint32_t stored;
	uint32_t next_id;
	uint32_t base_address;
	uint32_t max_symbols_before_realloc;
};

struct data_section_symbol_added {
	unsigned int added;
	unsigned int id;
};

struct data_section * generate_data_section();
unsigned int expand_data_symbols_storage_in
(struct data_section * __restrict const data_section);

struct data_section_symbol_added data_section_add
(struct data_section * __restrict const data_section,
 unsigned int const alignment,
 unsigned int const size,
 uint8_t const * __restrict const name,
 uint8_t const * __restrict const data);

struct uint32_result {
	unsigned int found;
	uint32_t value;
};

struct symbol_found {
	unsigned int found;
	struct data_symbol * address;
};

struct symbol_found get_data_symbol_infos
(struct data_section const * __restrict const data_infos,
 uint32_t id);

void exchange_symbols_order
(struct data_section * __restrict const data_section,
 unsigned int const id1, unsigned int const id2);

uint32_t write_data_section_content
(struct data_section const * __restrict const symbols,
 uint8_t * __restrict const dest);

void delete_data_symbol
(struct data_section * __restrict const data_section,
 uint32_t id);

uint32_t data_section_size
(struct data_section const * __restrict const data_section);

#define data_address_func_sig struct data_section const * __restrict const data_section,\
 uint32_t const data_id
uint32_t data_address(data_address_func_sig);
uint32_t data_address_upper16(data_address_func_sig);
uint32_t data_address_lower16(data_address_func_sig);
uint32_t data_size(data_address_func_sig);

void update_data_symbol
(struct data_section * __restrict const data_section,
 uint32_t const id,
 uint32_t const align,
 uint32_t const data_size,
 uint8_t const * __restrict const name,
 uint8_t const * __restrict const data);

void data_section_set_base_address
(struct data_section * __restrict const data_section,
 uint32_t const base_address);


#endif
",C
"import os
import sys
import tempfile

from fabric.api import run, sudo, env, local, hide, settings
from fabric.contrib.files import append, sed, exists, contains
from fabric.context_managers import prefix
from fabric.operations import get, put
from fabric.context_managers import cd

from fabric.tasks import Task

from fab_deploy.functions import random_password
from fab_deploy.base import postgres as base_postgres

class JoyentMixin(object):
    version_directory_join = ''

    def _get_data_dir(self, db_version):
        # Try to get from svc first
        output = run('svcprop -p config/data postgresql')
        if output.stdout and exists(output.stdout, use_sudo=True):
            return output.stdout
        return base_postgres.PostgresInstall._get_data_dir(self, db_version)

    def _install_package(self, db_version):
        sudo(""pkg_add postgresql%s-server"" %db_version)
        sudo(""pkg_add postgresql%s-replicationtools"" %db_version)
        sudo(""svcadm enable postgresql"")

    def _restart_db_server(self, db_version):
        sudo('svcadm restart postgresql')

    def _stop_db_server(self, db_version):
        sudo('svcadm disable postgresql')

    def _start_db_server(self, db_version):
        sudo('svcadm enable postgresql')

class PostgresInstall(JoyentMixin, base_postgres.PostgresInstall):
    """"""
    Install postgresql on server

    install postgresql package;
    enable postgres access from localhost without password;
    enable all other user access from other machines with password;
    setup a few parameters related with streaming replication;
    database server listen to all machines '*';
    create a user for database with password.
    """"""

    name = 'master_setup'
    db_version = '9.1'

class SlaveSetup(JoyentMixin, base_postgres.SlaveSetup):
    """"""
    Set up master-slave streaming replication: slave node
    """"""

    name = 'slave_setup'

class PGBouncerInstall(Task):
    """"""
    Set up PGBouncer on a database server
    """"""

    name = 'setup_pgbouncer'

    pgbouncer_src = 'http://pkgsrc.smartos.org/packages/SmartOS/2012Q2/databases/pgbouncer-1.4.2.tgz'
    pkg_name = 'pgbouncer-1.4.2.tgz'
    config_dir = '/etc/opt/pkg'

    config = {
        '*':              'host=127.0.0.1',
        'logfile':        '/var/log/pgbouncer/pgbouncer.log',
        'listen_addr':    '*',
        'listen_port':    '6432',
        'unix_socket_dir': '/tmp',
        'auth_type':      'md5',
        'auth_file':      '%s/pgbouncer.userlist' %config_dir,
        'pool_mode':      'session',
        'admin_users':    'postgres',
        'stats_users':    'postgres',
        }

    def install_package(self):
        sudo('pkg_add libevent')
        with cd('/tmp'):
            run('wget %s' %self.pgbouncer_src)
            sudo('pkg_add %s' %self.pkg_name)

    def _setup_parameter(self, file_name, **kwargs):
        for key, value in kwargs.items():
            origin = ""%s ="" %key
            new = ""%s = %s"" %(key, value)
            sudo('sed -i ""/%s/ c\%s"" %s' %(origin, new, file_name))

    def _get_passwd(self, username):
        with hide('output'):
            string = run('echo ""select usename, passwd from pg_shadow where '
                         'usename=\'%s\' order by 1"" | sudo su postgres -c '
                         '""psql""' %username)

        user, passwd = string.split('\n')[2].split('|')
        user = user.strip()
        passwd = passwd.strip()

        __, tmp_name = tempfile.mkstemp()
        fn = open(tmp_name, 'w')
        fn.write('""%s"" ""%s"" """"\n' %(user, passwd))
        fn.close()
        put(tmp_name, '%s/pgbouncer.userlist'%self.config_dir, use_sudo=True)
        local('rm %s' %tmp_name)

    def _get_username(self, section=None):
        try:
            names = env.config_object.get_list(section, env.config_object.USERNAME)
            username = names[0]
        except:
            print ('You must first set up a database server on this machine, '
                   'and create a database user')
            raise
        return username

    def run(self, section=None):
        """"""
        """"""

        sudo('mkdir -p /opt/pkg/bin')
        sudo(""ln -sf /opt/local/bin/awk /opt/pkg/bin/nawk"")
        sudo(""ln -sf /opt/local/bin/sed /opt/pkg/bin/nbsed"")

        self.install_package()

        svc_method = os.path.join(env.configs_dir, 'pgbouncer.xml')
        put(svc_method, self.config_dir, use_sudo=True)

        home = run('bash -c ""echo ~postgres""')
        bounce_home = os.path.join(home, 'pgbouncer')

        pidfile = os.path.join(bounce_home, 'pgbouncer.pid')
        self._setup_parameter('%s/pgbouncer.ini' %self.config_dir,
                              pidfile=pidfile, **self.config)

        if not section:
            section = 'db-server'
        username = self._get_username(section)
        self._get_passwd(username)
        # postgres should be the owner of these config files
        sudo('chown -R postgres:postgres %s' %self.config_dir)

        sudo('mkdir -p %s' % bounce_home)
        sudo('chown postgres:postgres %s' % bounce_home)

        sudo('mkdir -p /var/log/pgbouncer')
        sudo('chown postgres:postgres /var/log/pgbouncer')

        # set up log
        sudo('logadm -C 3 -p1d -c -w /var/log/pgbouncer/pgbouncer.log -z 1')
        run('svccfg import %s/pgbouncer.xml' %self.config_dir)

        # start pgbouncer
        sudo('svcadm enable pgbouncer')

setup = PostgresInstall()
slave_setup = SlaveSetup()
setup_pgbouncer = PGBouncerInstall()
",Python
"from __future__ import absolute_import

from .base import WhiteNoise

__version__ = '2.0.3'

__all__ = ['WhiteNoise']
",Python
"'''
Created by auto_sdk on 2015.06.23
'''
from aliyun.api.base import RestApi
class Rds20140815CheckAccountNameAvailableRequest(RestApi):
	def __init__(self,domain='rds.aliyuncs.com',port=80):
		RestApi.__init__(self,domain, port)
		self.AccountName = None
		self.DBInstanceId = None
		self.resourceOwnerAccount = None

	def getapiname(self):
		return 'rds.aliyuncs.com.CheckAccountNameAvailable.2014-08-15'
",Python
"import _plotly_utils.basevalidators


class MinexponentValidator(_plotly_utils.basevalidators.NumberValidator):
    def __init__(
        self, plotly_name=""minexponent"", parent_name=""choropleth.colorbar"", **kwargs
    ):
        super(MinexponentValidator, self).__init__(
            plotly_name=plotly_name,
            parent_name=parent_name,
            edit_type=kwargs.pop(""edit_type"", ""colorbars""),
            min=kwargs.pop(""min"", 0),
            **kwargs
        )
",Python
"#!/usr/bin/env python
# -*- coding: utf-8 -*-

from runner.koan import *

class AboutIteration(Koan):

    def test_iterators_are_a_type(self):
        it = iter(range(1,6))

        total = 0

        for num in it:
            total += num

        self.assertEqual(15 , total)

    def test_iterating_with_next(self):
        stages = iter(['alpha','beta','gamma'])

        try:
            self.assertEqual('alpha', next(stages))
            next(stages)
            self.assertEqual('gamma', next(stages))
            next(stages)
        except StopIteration as ex:
            err_msg = 'Ran out of iterations'

        self.assertRegex(err_msg, 'Ran out')

    # ------------------------------------------------------------------

    def add_ten(self, item):
        return item + 10

    def test_map_transforms_elements_of_a_list(self):
        seq = [1, 2, 3]
        mapped_seq = list()

        mapping = map(self.add_ten, seq)

        self.assertNotEqual(list, mapping.__class__)
        self.assertEqual(map, mapping.__class__)
        # In Python 3 built in iterator funcs return iterable view objects
        # instead of lists

        for item in mapping:
            mapped_seq.append(item)

        self.assertEqual([11, 12, 13], mapped_seq)

        # Note, iterator methods actually return objects of iter type in
        # python 3. In python 2 map() would give you a list.

    def test_filter_selects_certain_items_from_a_list(self):
        def is_even(item):
            return (item % 2) == 0

        seq = [1, 2, 3, 4, 5, 6]
        even_numbers = list()

        for item in filter(is_even, seq):
            even_numbers.append(item)

        self.assertEqual([2,4,6], even_numbers)

    def test_just_return_first_item_found(self):
        def is_big_name(item):
            return len(item) > 4

        names = [""Jim"", ""Bill"", ""Clarence"", ""Doug"", ""Eli""]
        name = None

        iterator = filter(is_big_name, names)
        try:
            name = next(iterator)
        except StopIteration:
            msg = 'Ran out of big names'

        self.assertEqual(""Clarence"", name)


    # ------------------------------------------------------------------

    def add(self,accum,item):
        return accum + item

    def multiply(self,accum,item):
        return accum * item

    def test_reduce_will_blow_your_mind(self):
        import functools
        # As of Python 3 reduce() has been demoted from a builtin function
        # to the functools module.

        result = functools.reduce(self.add, [2, 3, 4])
        self.assertEqual(int, result.__class__)
        # Reduce() syntax is same as Python 2

        self.assertEqual(9, result)

        result2 = functools.reduce(self.multiply, [2, 3, 4], 1)
        self.assertEqual(24, result2)

        # Extra Credit:
        # Describe in your own words what reduce does.

    # ------------------------------------------------------------------

    def test_use_pass_for_iterations_with_no_body(self):
        for num in range(1,5):
            pass

        self.assertEqual(4, num)

    # ------------------------------------------------------------------

    def test_all_iteration_methods_work_on_any_sequence_not_just_lists(self):
        # Ranges are an iterable sequence
        result = map(self.add_ten, range(1,4))
        self.assertEqual([11, 12, 13], list(result))

        try:
            file = open(""example_file.txt"")

            try:
                def make_upcase(line):
                    return line.strip().upper()
                upcase_lines = map(make_upcase, file.readlines())
                self.assertEqual([""THIS"", ""IS"", ""A"", ""TEST""] , list(upcase_lines))
            finally:
                # Arg, this is ugly.
                # We will figure out how to fix this later.
                file.close()
        except IOError:
            # should never happen
            self.fail()
",Python
"# This file is part of Indico.
# Copyright (C) 2002 - 2021 CERN
#
# Indico is free software; you can redistribute it and/or
# modify it under the terms of the MIT License; see the
# LICENSE file for more details.

import os
import re
import subprocess
import sys
from datetime import date

import click
import yaml

from indico.util.console import cformat


# Dictionary listing the files for which to change the header.
# The key is the extension of the file (without the dot) and the value is another
# dictionary containing two keys:
#   - 'regex' : A regular expression matching comments in the given file type
#   - 'format': A dictionary with the comment characters to add to the header.
#               There must be a `comment_start` inserted before the header,
#               `comment_middle` inserted at the beginning of each line except the
#               first and last one, and `comment_end` inserted at the end of the
#               header. (See the `HEADER` above)
SUPPORTED_FILES = {
    'py': {
        'regex': re.compile(r'((^#|[\r\n]#).*)*'),
        'format': {'comment_start': '#', 'comment_middle': '#', 'comment_end': ''}},
    'wsgi': {
        'regex': re.compile(r'((^#|[\r\n]#).*)*'),
        'format': {'comment_start': '#', 'comment_middle': '#', 'comment_end': ''}},
    'js': {
        'regex': re.compile(r'/\*(.|[\r\n])*?\*/|((^//|[\r\n]//).*)*'),
        'format': {'comment_start': '//', 'comment_middle': '//', 'comment_end': ''}},
    'jsx': {
        'regex': re.compile(r'/\*(.|[\r\n])*?\*/|((^//|[\r\n]//).*)*'),
        'format': {'comment_start': '//', 'comment_middle': '//', 'comment_end': ''}},
    'css': {
        'regex': re.compile(r'/\*(.|[\r\n])*?\*/'),
        'format': {'comment_start': '/*', 'comment_middle': ' *', 'comment_end': ' */'}},
    'scss': {
        'regex': re.compile(r'/\*(.|[\r\n])*?\*/|((^//|[\r\n]//).*)*'),
        'format': {'comment_start': '//', 'comment_middle': '//', 'comment_end': ''}},
}


# The substring which must be part of a comment block in order for the comment to be updated by the header.
SUBSTRING = 'This file is part of'


USAGE = '''
Updates all the headers in the supported files ({supported_files}).
By default, all the files tracked by git in the current repository are updated
to the current year.

You can specify a year to update to as well as a file or directory.
This will update all the supported files in the scope including those not tracked
by git. If the directory does not contain any supported files (or if the file
specified is not supported) nothing will be updated.
'''.format(supported_files=', '.join(SUPPORTED_FILES)).strip()


def _walk_to_root(path):
    """"""Yield directories starting from the given directory up to the root.""""""
    # Based on code from python-dotenv (BSD-licensed):
    # https://github.com/theskumar/python-dotenv/blob/e13d957b/src/dotenv/main.py#L245

    if os.path.isfile(path):
        path = os.path.dirname(path)

    last_dir = None
    current_dir = os.path.abspath(path)
    while last_dir != current_dir:
        yield current_dir
        parent_dir = os.path.abspath(os.path.join(current_dir, os.path.pardir))
        last_dir, current_dir = current_dir, parent_dir


def _get_config(path, end_year):
    config = {}
    for dirname in _walk_to_root(path):
        check_path = os.path.join(dirname, 'headers.yml')
        if os.path.isfile(check_path):
            with open(check_path) as f:
                config.update((k, v) for k, v in yaml.safe_load(f.read()).items() if k not in config)
            if config.pop('root', False):
                break

    if 'start_year' not in config:
        click.echo('no valid headers.yml files found: start_year missing')
        sys.exit(1)
    if 'name' not in config:
        click.echo('no valid headers.yml files found: name missing')
        sys.exit(1)
    if 'header' not in config:
        click.echo('no valid headers.yml files found: header missing')
        sys.exit(1)
    config['end_year'] = end_year
    return config


def gen_header(data):
    if data['start_year'] == data['end_year']:
        data['dates'] = data['start_year']
    else:
        data['dates'] = '{} - {}'.format(data['start_year'], data['end_year'])
    return '\n'.join(line.rstrip() for line in data['header'].format(**data).strip().splitlines())


def _update_header(file_path, config, substring, regex, data, ci):
    found = False
    with open(file_path) as file_read:
        content = orig_content = file_read.read()
        if not content.strip():
            return False
        shebang_line = None
        if content.startswith('#!/'):
            shebang_line, content = content.split('\n', 1)
        for match in regex.finditer(content):
            if substring in match.group():
                found = True
                content = content[:match.start()] + gen_header(data | config) + content[match.end():]
        if shebang_line:
            content = shebang_line + '\n' + content
    if content != orig_content:
        msg = 'Incorrect header in {}' if ci else cformat('%{green!}Updating header of %{blue!}{}')
        print(msg.format(os.path.relpath(file_path)))
        if not ci:
            with open(file_path, 'w') as file_write:
                file_write.write(content)
        return True
    elif not found:
        msg = 'Missing header in {}' if ci else cformat('%{red!}Missing header%{reset} in %{blue!}{}')
        print(msg.format(os.path.relpath(file_path)))
        return True


def update_header(file_path, year, ci):
    config = _get_config(file_path, year)
    ext = file_path.rsplit('.', 1)[-1]
    if ext not in SUPPORTED_FILES or not os.path.isfile(file_path):
        return False
    if os.path.basename(file_path)[0] == '.':
        return False
    return _update_header(file_path, config, SUBSTRING, SUPPORTED_FILES[ext]['regex'],
                          SUPPORTED_FILES[ext]['format'], ci)


def blacklisted(root, path, _cache={}):
    orig_path = path
    if path not in _cache:
        _cache[orig_path] = False
        while (path + os.path.sep).startswith(root):
            if os.path.exists(os.path.join(path, '.no-headers')):
                _cache[orig_path] = True
                break
            path = os.path.normpath(os.path.join(path, '..'))
    return _cache[orig_path]


@click.command(help=USAGE)
@click.option('--ci', is_flag=True, help='Indicate that the script is running during CI and should use a non-zero '
                                         'exit code unless all headers were already up to date. This also prevents '
                                         'files from actually being updated.')
@click.option('--year', '-y', type=click.IntRange(min=1000), default=date.today().year, metavar='YEAR',
              help='Indicate the target year')
@click.option('--path', '-p', type=click.Path(exists=True), help='Restrict updates to a specific file or directory')
@click.pass_context
def main(ctx, ci, year, path):
    error = False
    if path and os.path.isdir(path):
        if not ci:
            print(cformat('Updating headers to the year %{yellow!}{year}%{reset} for all the files in '
                          '%{yellow!}{path}%{reset}...').format(year=year, path=path))
        for root, _, filenames in os.walk(path):
            for filename in filenames:
                if not blacklisted(path, root):
                    if update_header(os.path.join(root, filename), year, ci):
                        error = True
    elif path and os.path.isfile(path):
        if not ci:
            print(cformat('Updating headers to the year %{yellow!}{year}%{reset} for the file '
                          '%{yellow!}{file}%{reset}...').format(year=year, file=path))
        if update_header(path, year, ci):
            error = True
    else:
        if not ci:
            print(cformat('Updating headers to the year %{yellow!}{year}%{reset} for all '
                          'git-tracked files...').format(year=year))
        try:
            for filepath in subprocess.check_output(['git', 'ls-files'], text=True).splitlines():
                filepath = os.path.abspath(filepath)
                if not blacklisted(os.getcwd(), os.path.dirname(filepath)):
                    if update_header(filepath, year, ci):
                        error = True
        except subprocess.CalledProcessError:
            raise click.UsageError(cformat('%{red!}You must be within a git repository to run this script.'))

    if not error:
        print(cformat('%{green}\u2705 All headers are up to date'))
    elif ci:
        print(cformat('%{red}\u274C Some headers need to be updated or added'))
        sys.exit(1)
    else:
        print(cformat('%{yellow}\U0001F504 Some headers have been updated (or are missing)'))


if __name__ == '__main__':
    main()
",Python
"__author__ = 'brianoneill'

from log_calls import log_calls

global_settings = dict(
    log_call_numbers=True,
    log_exit=False,
    log_retval=True,
)
log_calls.set_defaults(global_settings, args_sep=' $ ')
",Python
"# -*- coding: utf-8 -*-
from south.utils import datetime_utils as datetime
from south.db import db
from south.v2 import SchemaMigration
from django.db import models


class Migration(SchemaMigration):

    def forwards(self, orm):
        # Adding field 'Idea.color'
        db.add_column(u'brainstorming_idea', 'color',
                      self.gf('django.db.models.fields.CharField')(default='', max_length=100, blank=True),
                      keep_default=False)


    def backwards(self, orm):
        # Deleting field 'Idea.color'
        db.delete_column(u'brainstorming_idea', 'color')


    models = {
        u'brainstorming.brainstorming': {
            'Meta': {'ordering': ""['-created']"", 'object_name': 'Brainstorming'},
            'created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'creator_email': ('django.db.models.fields.EmailField', [], {'max_length': '75'}),
            'creator_ip': ('django.db.models.fields.CharField', [], {'max_length': '100', 'blank': 'True'}),
            'details': ('django.db.models.fields.TextField', [], {'blank': 'True'}),
            'id': ('django.db.models.fields.SlugField', [], {'max_length': '50', 'primary_key': 'True'}),
            'modified': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'question': ('django.db.models.fields.CharField', [], {'max_length': '200'})
        },
        u'brainstorming.brainstormingwatcher': {
            'Meta': {'ordering': ""['-created']"", 'unique_together': ""(('brainstorming', 'email'),)"", 'object_name': 'BrainstormingWatcher'},
            'brainstorming': ('django.db.models.fields.related.ForeignKey', [], {'to': u""orm['brainstorming.Brainstorming']""}),
            'created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'email': ('django.db.models.fields.EmailField', [], {'max_length': '75'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'modified': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'})
        },
        u'brainstorming.emailverification': {
            'Meta': {'ordering': ""['-created']"", 'object_name': 'EmailVerification'},
            'created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'email': ('django.db.models.fields.EmailField', [], {'max_length': '75'}),
            'id': ('django.db.models.fields.SlugField', [], {'max_length': '50', 'primary_key': 'True'}),
            'modified': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'})
        },
        u'brainstorming.idea': {
            'Meta': {'ordering': ""['-created']"", 'object_name': 'Idea'},
            'brainstorming': ('django.db.models.fields.related.ForeignKey', [], {'to': u""orm['brainstorming.Brainstorming']""}),
            'color': ('django.db.models.fields.CharField', [], {'max_length': '100', 'blank': 'True'}),
            'created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'creator_ip': ('django.db.models.fields.CharField', [], {'max_length': '100', 'blank': 'True'}),
            'creator_name': ('django.db.models.fields.CharField', [], {'max_length': '200', 'blank': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'modified': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'ratings': ('django.db.models.fields.IntegerField', [], {'default': '0'}),
            'text': ('django.db.models.fields.TextField', [], {}),
            'title': ('django.db.models.fields.CharField', [], {'max_length': '200', 'blank': 'True'})
        }
    }

    complete_apps = ['brainstorming']",Python
"# User info wrapper object
import logging

class User(object):
    """"""
    Wrapper object around an entry in users.json. Behaves like a read-only dictionary if
    asked, but adds some useful logic to decouple the front end from the JSON structure.
    """"""

    _NAME_KEYS = [""display_name"", ""real_name""]
    _DEFAULT_IMAGE_KEY = ""image_512""

    def __init__(self, raw_data):
        self._raw = raw_data

    def __getitem__(self, key):
        return self._raw[key]

    @property
    def display_name(self):
        """"""
        Find the most appropriate display name for a user: look for a ""display_name"", then
        a ""real_name"", and finally fall back to the always-present ""name"".
        """"""
        for k in self._NAME_KEYS:
            if self._raw.get(k):
                return self._raw[k]
            if ""profile"" in self._raw and self._raw[""profile""].get(k):
                return self._raw[""profile""][k]
        return self._raw[""name""]

    @property
    def email(self):
        """"""
        Shortcut property for finding the e-mail address or bot URL.
        """"""
        if ""profile"" in self._raw:
            email = self._raw[""profile""].get(""email"")
        elif ""bot_url"" in self._raw:
            email = self._raw[""bot_url""]
        else:
            email = None
        if not email:
            logging.debug(""No email found for %s"", self._raw.get(""name""))
        return email

    def image_url(self, pixel_size=None):
        """"""
        Get the URL for the user icon in the desired pixel size, if it exists. If no
        size is supplied, give the URL for the full-size image.
        """"""
        if ""profile"" not in self._raw:
            return
        profile = self._raw[""profile""]
        if (pixel_size):
            img_key = ""image_%s"" % pixel_size
            if img_key in profile:
                return profile[img_key]
        return profile[self._DEFAULT_IMAGE_KEY]


def deleted_user(id):
    """"""
    Create a User object for a deleted user.
    """"""
    deleted_user = {
        ""id"": id,
        ""name"": ""deleted-"" + id,
        ""deleted"": True,
        ""is_bot"": False,
        ""is_app_user"": False,
    }
    return User(deleted_user)
",Python
"from pydispatch import dispatcher
from PySide import QtCore, QtGui

import cbpos
logger = cbpos.get_logger(__name__)

from .page import BasePage

class MainWindow(QtGui.QMainWindow):
    __inits = []
    
    def __init__(self):
        super(MainWindow, self).__init__()
        
        self.tabs = QtGui.QTabWidget(self)
        self.tabs.setTabsClosable(False)
        self.tabs.setIconSize(QtCore.QSize(32, 32))
        self.tabs.currentChanged.connect(self.onCurrentTabChanged)
        
        self.toolbar = self.addToolBar('Base')
        self.toolbar.setIconSize(QtCore.QSize(48,48)) #Suitable for touchscreens
        self.toolbar.setObjectName('BaseToolbar')
        
        toolbarStyle = cbpos.config['menu', 'toolbar_style']
        # The index in this list is the same as that in the configuration page
        available_styles = (
              QtCore.Qt.ToolButtonFollowStyle,
              QtCore.Qt.ToolButtonIconOnly,
              QtCore.Qt.ToolButtonTextOnly,
              QtCore.Qt.ToolButtonTextBesideIcon,
              QtCore.Qt.ToolButtonTextUnderIcon,
              )
        try:
            toolbarStyle = available_styles[int(toolbarStyle)]
        except (ValueError, TypeError, IndexError):
            toolbarStyle = QtCore.Qt.ToolButtonFollowStyle
        self.toolbar.setToolButtonStyle(toolbarStyle)
        
        self.setCentralWidget(self.tabs)
        
        self.statusBar().showMessage(cbpos.tr._('Coinbox POS is ready.'))
        
        self.setWindowTitle('Coinbox')
        
        self.callInit()
        
        self.loadToolbar()
        self.loadMenu()
    
    def loadToolbar(self):
        """"""
        Loads the toolbar actions, restore toolbar state, and restore window geometry.
        """"""

        mwState = cbpos.config['mainwindow', 'state']
        mwGeom  = cbpos.config['mainwindow', 'geometry']

        for act in cbpos.menu.actions:
            # TODO: Remember to load an icon with a proper size (eg 48x48 px for touchscreens)
            action = QtGui.QAction(QtGui.QIcon(act.icon), act.label, self)
            action.setShortcut(act.shortcut)
            action.triggered.connect(act.trigger)
            self.toolbar.addAction(action)


        #Restores the saved mainwindow's toolbars and docks, and then the window geometry.
        if mwState is not None:
            self.restoreState( QtCore.QByteArray.fromBase64(mwState) )
        if mwGeom is not None:
            self.restoreGeometry( QtCore.QByteArray.fromBase64(mwGeom) )
        else:
            self.setGeometry(0, 0, 800, 600)
    
    def loadMenu(self):
        """"""
        Load the menu root items and items into the QTabWidget with the appropriate pages. 
        """"""
        show_empty_root_items = cbpos.config['menu', 'show_empty_root_items']
        show_disabled_items = cbpos.config['menu', 'show_disabled_items']
        hide_tab_bar = not cbpos.config['menu', 'show_tab_bar']
        
        if hide_tab_bar:
            # Hide the tab bar and prepare the toolbar for extra QAction's
            self.tabs.tabBar().hide()
            # This pre-supposes that the menu items will come after the actions
            self.toolbar.addSeparator()
        
        for root in cbpos.menu.items:
            if not root.enabled and not show_disabled_items:
                continue
            
            if show_disabled_items:
                # Show all child items
                children = root.children
            else:
                # Filter out those which are disabled
                children = [i for i in root.children if i.enabled]
            
            # Hide empty menu root items
            if len(children) == 0 and not show_empty_root_items:
                continue
            
            # Add the tab
            widget = self.getTabWidget(children)
            icon = QtGui.QIcon(root.icon)
            index = self.tabs.addTab(widget, icon, root.label)
            widget.setEnabled(root.enabled)
            
            # Add the toolbar action if enabled
            if hide_tab_bar:
                # TODO: Remember to load an icon with a proper size (eg 48x48 px for touchscreens)
                action = QtGui.QAction(QtGui.QIcon(icon), root.label, self)
                action.onTrigger = lambda n=index: self.tabs.setCurrentIndex(n)
                action.triggered.connect(action.onTrigger)
                self.toolbar.addAction(action)

    def onCurrentTabChanged(self, index, tabs=None):
        if tabs is None:
            tabs = self.tabs
        widget = tabs.widget(index)
        try:
            signal = widget.shown
        except AttributeError:
            pass
        else:
            signal.emit()

    def getTabWidget(self, items):
        """"""
        Returns the appropriate window to be placed in the main QTabWidget,
        depending on the number of children of a root menu item.
        """"""
        count = len(items)
        if count == 0:
            # If there are no child items, just return an empty widget
            widget = QtGui.QWidget()
            widget.setEnabled(False)
            return widget
        elif count == 1:
            # If there is only one item, show it as is.
            logger.debug('Loading menu page for %s', items[0].name)
            widget = items[0].page()
            widget.setEnabled(items[0].enabled)
            return widget
        else:
            # If there are many children, add them in a QTabWidget
            tabs = QtGui.QTabWidget()
            tabs.currentChanged.connect(lambda i, t=tabs: self.onCurrentTabChanged(i, t))

            for item in items:
                logger.debug('Loading menu page for %s', item.name)
                
                widget = item.page()
                icon = QtGui.QIcon(item.icon)
                tabs.addTab(widget, icon, item.label)
                widget.setEnabled(item.enabled)
            return tabs
    
    def saveWindowState(self):
        """"""
        Saves the main window state (position, size, toolbar positions)
        """"""
        mwState = self.saveState().toBase64() 
        mwGeom  = self.saveGeometry().toBase64() 
        cbpos.config['mainwindow', 'state'] = unicode(mwState)
        cbpos.config['mainwindow', 'geometry'] = unicode(mwGeom)
        cbpos.config.save()


    def closeEvent(self, event):
        """"""
        Perform necessary operations before closing the window.
        """"""
        self.saveWindowState()
        #do any other thing before closing...
        event.accept()
    
    @classmethod
    def addInit(cls, init):
        """"""
        Adds the `init` method to the list of extensions of the `MainWindow.__init__`.
        """"""
        cls.__inits.append(init)
    
    def callInit(self):
        """"""
        Handle calls to `__init__` methods of extensions of the MainWindow.
        """"""
        for init in self.__inits:
            init(self)
",Python
"from array import array

import numpy as np
import matplotlib.pyplot as plt

from sklearn import datasets
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import AdaBoostClassifier
from sklearn.metrics import classification_report, roc_auc_score, roc_curve

from sklearn import tree
import cPickle

data = np.load('/Users/musthero/Documents/Yura/Applications/tmva_local/output_electrons_fullsim_v5_VeryTightLH_20per.npz')

# Train on the first 2000, test on the rest
X_train, y_train = data['data_training'], data['isprompt_training'].ravel()
X_test, y_test = data['data_testing'][0:1000], data['isprompt_testing'][0:1000].ravel()

# sklearn
dt = DecisionTreeClassifier(max_depth=3,
                            min_samples_leaf=100)
                            #min_samples_leaf=0.05*len(X_train))

doFit = False

if doFit:
    print ""Performing DecisionTree fit...""
    dt.fit(X_train, y_train)

    import cPickle
    with open('electrons_toTMVA.pkl', 'wb') as fid:
        cPickle.dump(dt, fid)
else:
    print ""Loading DecisionTree...""
    # load it again
    with open('electrons_toTMVA.pkl', 'rb') as fid:
        dt = cPickle.load(fid)

#sk_y_predicted = dt.predict(X_test)
#sk_y_predicted = dt.predict_proba(X_test)[:, 1]
sk_y_predicted = dt.predict_proba(X_test)[:, 1]
predictions = dt.predict(X_test)
print predictions
print y_test


# Draw ROC curve
fpr, tpr, _ = roc_curve(y_test, sk_y_predicted)

plt.figure()
plt.plot(fpr, tpr, label='ROC curve of class')

plt.plot([0, 1], [0, 1], 'k--')
plt.xlim([0.0, 1.0])
plt.ylim([0.0, 1.05])
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('Some extension of Receiver operating characteristic to multi-class')
plt.legend(loc=""lower right"")

plt.savefig(""output_fullsim_v5_electrons_roc_20per_DecisionTree.png"", dpi=144)

tree.export_graphviz(dt, out_file='dt_viz.dot')

# Save to file fpr, tpr
#np.savez('output_fullsim_v3_electrons_fpr_tpr_10per.npz', 
#    fpr=fpr, tpr=tpr)",Python
"from simtk.openmm import app
import simtk.openmm as mm
from simtk import unit

def findForce(system, forcetype, add=True):
  """""" Finds a specific force in the system force list - added if not found.""""""
  for force in system.getForces():
    if isinstance(force, forcetype):
      return force
  if add==True:
    system.addForce(forcetype())
    return findForce(system, forcetype)
  return None

def setGlobalForceParameter(force, key, value):
  for i in range(force.getNumGlobalParameters()):
    if force.getGlobalParameterName(i)==key:
      print('setting force parameter', key, '=', value)
      force.setGlobalParameterDefaultValue(i, value);

def atomIndexInResidue(residue):
  """""" list of atom index in residue """"""
  index=[]
  for a in list(residue.atoms()):
    index.append(a.index)
  return index

def getResiduePositions(residue, positions):
  """""" Returns array w. atomic positions of residue """"""
  ndx = atomIndexInResidue(residue)
  return np.array(positions)[ndx]

def uniquePairs(index):
  """""" list of unique, internal pairs """"""
  return list(combinations( range(index[0],index[-1]+1),2 ) )

def addHarmonicConstraint(harmonicforce, pairlist, positions, threshold, k):
  """""" add harmonic bonds between pairs if distance is smaller than threshold """"""
  print('Constraint force constant =', k)
  for i,j in pairlist:
    distance = unit.norm( positions[i]-positions[j] )
    if distance<threshold:
      harmonicforce.addBond( i,j,
          distance.value_in_unit(unit.nanometer),
          k.value_in_unit( unit.kilojoule/unit.nanometer**2/unit.mole ))
      print(""added harmonic bond between"", i, j, 'with distance',distance)

def addExclusions(nonbondedforce, pairlist):
  """""" add nonbonded exclusions between pairs """"""
  for i,j in pairlist:
    nonbondedforce.addExclusion(i,j)

def rigidifyResidue(residue, harmonicforce, positions, nonbondedforce=None,
    threshold=6.0*unit.angstrom, k=2500*unit.kilojoule/unit.nanometer**2/unit.mole):
  """""" make residue rigid by adding constraints and nonbonded exclusions """"""
  index    = atomIndexInResidue(residue)
  pairlist = uniquePairs(index)
  addHarmonicConstraint(harmonic, pairlist, pdb.positions, threshold, k)
  if nonbondedforce is not None:
    for i,j in pairlist:
      print('added nonbonded exclusion between', i, j)
      nonbonded.addExclusion(i,j)

",Python
"
import time
import multiprocessing
from flask import Flask

app = Flask(__name__)
backProc = None

def testFun():
    print('Starting')
    while True:
        time.sleep(3)
        print('looping')
        time.sleep(3)
        print('3 Seconds Later')

@app.route('/')
def root():

    return 'Started a background process with PID ' + str(backProc.pid) + "" is running: "" + str(backProc.is_alive())

@app.route('/kill')
def kill():
    backProc.terminate()
    return 'killed: ' + str(backProc.pid)

@app.route('/kill_all')
def kill_all():
    proc = multiprocessing.active_children()
    for p in proc:
        p.terminate()
    return 'killed all'

@app.route('/active')
def active():
    proc = multiprocessing.active_children()
    arr = []
    for p in proc:
        print(p.pid)
        arr.append(p.pid)

    return str(arr)

@app.route('/start')
def start():
    global backProc
    backProc = multiprocessing.Process(target=testFun, args=(), daemon=True)
    backProc.start()
    return 'started: ' + str(backProc.pid)

if __name__ == '__main__':
    app.run()
",Python
"# Copyright (c) 2016 nVentiveUX
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# ""Software""), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

""""""Application configuration""""""

from django.apps import AppConfig


class ShowcaseConfig(AppConfig):
    name = 'mystartupmanager.showcase'
",Python
"import numpy as np

__author__ = 'David John Gagne <djgagne@ou.edu>'


def main():
    # Contingency Table from Wilks (2011) Table 8.3
    table = np.array([[50, 91, 71],
                      [47, 2364, 170],
                      [54, 205, 3288]])
    mct = MulticlassContingencyTable(table, n_classes=table.shape[0],
                                     class_names=np.arange(table.shape[0]).astype(str))
    print(mct.peirce_skill_score())
    print(mct.gerrity_score())


class MulticlassContingencyTable(object):
    """"""
    This class is a container for a contingency table containing more than 2 classes.
    The contingency table is stored in table as a numpy array with the rows corresponding to forecast categories,
    and the columns corresponding to observation categories.
    """"""

    def __init__(self, table=None, n_classes=2, class_names=(""1"", ""0"")):
        self.table = table
        self.n_classes = n_classes
        self.class_names = class_names
        if table is None:
            self.table = np.zeros((self.n_classes, self.n_classes), dtype=int)

    def __add__(self, other):
        assert self.n_classes == other.n_classes, ""Number of classes does not match""
        return MulticlassContingencyTable(self.table + other.table,
                                          n_classes=self.n_classes,
                                          class_names=self.class_names)

    def peirce_skill_score(self):
        """"""
        Multiclass Peirce Skill Score (also Hanssen and Kuipers score, True Skill Score)
        """"""
        n = float(self.table.sum())
        nf = self.table.sum(axis=1)
        no = self.table.sum(axis=0)
        correct = float(self.table.trace())
        return (correct / n - (nf * no).sum() / n ** 2) / (1 - (no * no).sum() / n ** 2)

    def gerrity_score(self):
        """"""
        Gerrity Score, which weights each cell in the contingency table by its observed relative frequency.
        :return:
        """"""
        k = self.table.shape[0]
        n = float(self.table.sum())
        p_o = self.table.sum(axis=0) / n
        p_sum = np.cumsum(p_o)[:-1]
        a = (1.0 - p_sum) / p_sum
        s = np.zeros(self.table.shape, dtype=float)
        for (i, j) in np.ndindex(*s.shape):
            if i == j:
                s[i, j] = 1.0 / (k - 1.0) * (np.sum(1.0 / a[0:j]) + np.sum(a[j:k - 1]))
            elif i < j:
                s[i, j] = 1.0 / (k - 1.0) * (np.sum(1.0 / a[0:i]) - (j - i) + np.sum(a[j:k - 1]))
            else:
                s[i, j] = s[j, i]
        return np.sum(self.table / float(self.table.sum()) * s)

    def heidke_skill_score(self):
        n = float(self.table.sum())
        nf = self.table.sum(axis=1)
        no = self.table.sum(axis=0)
        correct = float(self.table.trace())
        return (correct / n - (nf * no).sum() / n ** 2) / (1 - (nf * no).sum() / n ** 2)


if __name__ == ""__main__"":
    main()
",Python
"import uuid

from django.db import models
from django.conf import settings
from django.contrib.auth.models import AbstractUser
from django.contrib.auth.models import BaseUserManager
from django.utils import timezone

from accelerator_abstract.models import BaseUserRole
from accelerator_abstract.models.base_base_profile import EXPERT_USER_TYPE


MAX_USERNAME_LENGTH = 30


class UserManager(BaseUserManager):
    use_in_migrations = True

    def _create_user(self, email, password,
                     is_staff, is_superuser, **extra_fields):
        """"""
        Creates and saves an User with the given email and password.
        """"""
        now = timezone.now()
        if not email:
            raise ValueError('An email address must be provided.')
        email = self.normalize_email(email)
        if ""is_active"" not in extra_fields:
            extra_fields[""is_active""] = True
        if ""username"" not in extra_fields:
            # For now we need to have a unique id that is at
            # most 30 characters long.  Using uuid and truncating.
            # Ideally username goes away entirely at some point
            # since we're really using email.  If we have to keep
            # username for some reason then we could switch over
            # to a string version of the pk which is guaranteed
            # be unique.
            extra_fields[""username""] = str(uuid.uuid4())[:MAX_USERNAME_LENGTH]
        user = self.model(email=email,
                          is_staff=is_staff,
                          is_superuser=is_superuser,
                          last_login=None,
                          date_joined=now,
                          **extra_fields)
        user.set_password(password)
        user.save(using=self._db)
        return user

    def create_user(self, email=None, password=None, **extra_fields):
        return self._create_user(email, password, False, False,
                                 **extra_fields)

    def create_superuser(self, email, password, **extra_fields):
        return self._create_user(email, password, True, True,
                                 **extra_fields)


class User(AbstractUser):
    # Override the parent email field to add uniqueness constraint
    email = models.EmailField(blank=True, unique=True)

    objects = UserManager()

    class Meta:
        db_table = 'auth_user'
        managed = settings.ACCELERATOR_MODELS_ARE_MANAGED

    def __init__(self, *args, **kwargs):
        super(User, self).__init__(*args, **kwargs)
        self.startup = None
        self.team_member = None
        self.profile = None
        self.user_finalist_roles = None

    class AuthenticationException(Exception):
        pass

    def __str__(self):
        return self.email

    def full_name(self):
        fn = self.first_name
        ln = self.last_name
        if fn and ln:
            name = u""%s %s"" % (fn, ln)
        else:
            name = str(self.email)
        return name

    def user_phone(self):
        return self._get_profile().phone

    def image_url(self):
        return self._get_profile().image_url()

    def team_member_id(self):
        return self.team_member.id if self._get_member() else ''

    def user_title(self):
        return self._get_title_and_company()['title']

    def user_twitter_handle(self):
        return self._get_profile().twitter_handle

    def user_linked_in_url(self):
        return self._get_profile().linked_in_url

    def user_facebook_url(self):
        return self._get_profile().facebook_url

    def user_personal_website_url(self):
        return self._get_profile().personal_website_url

    def type(self):
        return self._get_profile().user_type

    def startup_name(self):
        return self._get_title_and_company()['company']

    def _get_title_and_company(self):
        if self._is_expert() and self._has_expert_details():
            profile = self._get_profile()
            title = profile.title
            company = profile.company
            return {
                ""title"": title,
                ""company"": company
            }
        self._get_member()
        title = self.team_member.title if self.team_member else """"
        company = self.startup.name if self._get_startup() else None
        return {
            ""title"": title,
            ""company"": company
        }

    def _has_expert_details(self):
        if self._is_expert():
            profile = self._get_profile()
            return True if profile.title or profile.company else False

    def startup_industry(self):
        return self.startup.primary_industry if self._get_startup() else None

    def top_level_startup_industry(self):
        industry = (
            self.startup.primary_industry if self._get_startup() else None)
        return industry.parent if industry and industry.parent else industry

    def startup_status_names(self):
        if self._get_startup():
            return [startup_status.program_startup_status.startup_status
                    for startup_status in self.startup.startupstatus_set.all()]

    def finalist_user_roles(self):
        if not self.user_finalist_roles:
            finalist_roles = BaseUserRole.FINALIST_USER_ROLES
            self.user_finalist_roles = self.programrolegrant_set.filter(
                program_role__user_role__name__in=finalist_roles
            ).values_list('program_role__name', flat=True).distinct()
        return list(self.user_finalist_roles)

    def program(self):
        return self.startup.current_program() if self._get_startup() else None

    def location(self):
        program = self.program()
        return program.program_family.name if program else None

    def year(self):
        program = self.program()
        return program.start_date.year if program else None

    def is_team_member(self):
        return True if self._get_member() else False

    def _get_startup(self):
        if not self.startup:
            self._get_member()
            if self.team_member:
                self.startup = self.team_member.startup
        return self.startup

    def _get_member(self):
        if not self.team_member:
            self.team_member = self.startupteammember_set.last()
        return self.team_member

    def _get_profile(self):
        if self.profile:
            return self.profile
        self.profile = self.get_profile()
        return self.profile

    def has_a_finalist_role(self):
        return len(self.finalist_user_roles()) > 0

    def _is_expert(self):
        profile = self._get_profile()
        return profile.user_type == EXPERT_USER_TYPE.lower()
",Python
"from crispy_forms.helper import FormHelper
from crispy_forms.layout import Fieldset, Layout
from django import forms
from django.contrib.auth.forms import AuthenticationForm
from django.contrib.auth.models import User
from django.contrib.auth.password_validation import validate_password
from django.core.exceptions import ValidationError
from django.db import transaction
from django.forms import ModelForm
from django.utils.translation import ugettext_lazy as _
from django_filters import FilterSet
from easy_select2 import Select2

from crispy_layout_mixin import form_actions, to_row
from utils import (TIPO_TELEFONE, YES_NO_CHOICES, get_medicos,
                   get_or_create_grupo)

from .models import Especialidade, EspecialidadeMedico, Usuario


class EspecialidadeMedicoFilterSet(FilterSet):

    class Meta:
        model = EspecialidadeMedico
        fields = ['especialidade']

    def __init__(self, *args, **kwargs):
        super(EspecialidadeMedicoFilterSet, self).__init__(*args, **kwargs)

        row1 = to_row([('especialidade', 12)])

        self.form.helper = FormHelper()
        self.form.helper.form_method = 'GET'
        self.form.helper.layout = Layout(
            Fieldset(_('Pesquisar Médico'),
                     row1, form_actions(save_label='Filtrar'))
        )


class MudarSenhaForm(forms.Form):
    nova_senha = forms.CharField(
        label=""Nova Senha"", max_length=30,
        widget=forms.PasswordInput(
          attrs={'class': 'form-control form-control-lg',
                 'name': 'senha',
                 'placeholder': 'Nova Senha'}))

    confirmar_senha = forms.CharField(
        label=""Confirmar Senha"", max_length=30,
        widget=forms.PasswordInput(
          attrs={'class': 'form-control form-control-lg',
                 'name': 'confirmar_senha',
                 'placeholder': 'Confirmar Senha'}))


class LoginForm(AuthenticationForm):
    username = forms.CharField(
        label=""Username"", max_length=30,
        widget=forms.TextInput(
            attrs={'class': 'form-control form-control-lg',
                   'name': 'username',
                   'placeholder': 'Usuário'}))

    password = forms.CharField(
        label=""Password"", max_length=30,
        widget=forms.PasswordInput(
            attrs={'class': 'form-control',
                   'name': 'password',
                   'placeholder': 'Senha'}))


class UsuarioForm(ModelForm):

    # Usuário
    password = forms.CharField(
        max_length=20,
        label=_('Senha'),
        widget=forms.PasswordInput())

    password_confirm = forms.CharField(
        max_length=20,
        label=_('Confirmar Senha'),
        widget=forms.PasswordInput())

    class Meta:
        model = Usuario
        fields = ['username', 'email', 'nome', 'password', 'password_confirm',
                  'data_nascimento', 'sexo', 'plano', 'tipo', 'cep', 'end',
                  'numero', 'complemento', 'bairro', 'referencia',
                  'primeiro_telefone', 'segundo_telefone']

        widgets = {'email': forms.TextInput(
                               attrs={'style': 'text-transform:lowercase;'})}

    def __init__(self, *args, **kwargs):
        super(UsuarioForm, self).__init__(*args, **kwargs)
        self.fields['primeiro_telefone'].widget.attrs['class'] = 'telefone'
        self.fields['segundo_telefone'].widget.attrs['class'] = 'telefone'

    def valida_igualdade(self, texto1, texto2, msg):
        if texto1 != texto2:
            raise ValidationError(msg)
        return True

    def clean(self):

        if ('password' not in self.cleaned_data or
                'password_confirm' not in self.cleaned_data):
            raise ValidationError(_('Favor informar senhas atuais ou novas'))

        msg = _('As senhas não conferem.')
        self.valida_igualdade(
            self.cleaned_data['password'],
            self.cleaned_data['password_confirm'],
            msg)

        try:
            validate_password(self.cleaned_data['password'])
        except ValidationError as error:
            raise ValidationError(error)

        return self.cleaned_data

    @transaction.atomic
    def save(self, commit=False):
        usuario = super(UsuarioForm, self).save(commit)

        # Cria User
        u = User.objects.create(username=usuario.username, email=usuario.email)
        u.set_password(self.cleaned_data['password'])
        u.is_active = True
        u.groups.add(get_or_create_grupo(self.cleaned_data['tipo'].descricao))

        u.save()
        usuario.user = u
        usuario.save()
        return usuario


class UsuarioEditForm(ModelForm):

    # Primeiro Telefone
    primeiro_tipo = forms.ChoiceField(
        widget=forms.Select(),
        choices=TIPO_TELEFONE,
        label=_('Tipo Telefone'))
    primeiro_ddd = forms.CharField(max_length=2, label=_('DDD'))
    primeiro_numero = forms.CharField(max_length=10, label=_('Número'))
    primeiro_principal = forms.TypedChoiceField(
        widget=forms.Select(),
        label=_('Telefone Principal?'),
        choices=YES_NO_CHOICES)

    # Primeiro Telefone
    segundo_tipo = forms.ChoiceField(
        required=False,
        widget=forms.Select(),
        choices=TIPO_TELEFONE,
        label=_('Tipo Telefone'))
    segundo_ddd = forms.CharField(required=False, max_length=2, label=_('DDD'))
    segundo_numero = forms.CharField(
        required=False, max_length=10, label=_('Número'))
    segundo_principal = forms.ChoiceField(
        required=False,
        widget=forms.Select(),
        label=_('Telefone Principal?'),
        choices=YES_NO_CHOICES)

    class Meta:
        model = Usuario
        fields = ['username', 'email', 'nome', 'data_nascimento', 'sexo',
                  'plano', 'tipo', 'cep', 'end', 'numero', 'complemento',
                  'bairro', 'referencia', 'primeiro_telefone',
                  'segundo_telefone']

        widgets = {'username': forms.TextInput(attrs={'readonly': 'readonly'}),
                   'email': forms.TextInput(
                                 attrs={'style': 'text-transform:lowercase;'}),
                   }

    def __init__(self, *args, **kwargs):
        super(UsuarioEditForm, self).__init__(*args, **kwargs)
        self.fields['primeiro_telefone'].widget.attrs['class'] = 'telefone'
        self.fields['segundo_telefone'].widget.attrs['class'] = 'telefone'

    def valida_igualdade(self, texto1, texto2, msg):
        if texto1 != texto2:
            raise ValidationError(msg)
        return True

    def clean_primeiro_numero(self):
        cleaned_data = self.cleaned_data

        telefone = Telefone()
        telefone.tipo = self.data['primeiro_tipo']
        telefone.ddd = self.data['primeiro_ddd']
        telefone.numero = self.data['primeiro_numero']
        telefone.principal = self.data['primeiro_principal']

        cleaned_data['primeiro_telefone'] = telefone
        return cleaned_data

    def clean_segundo_numero(self):
        cleaned_data = self.cleaned_data

        telefone = Telefone()
        telefone.tipo = self.data['segundo_tipo']
        telefone.ddd = self.data['segundo_ddd']
        telefone.numero = self.data['segundo_numero']
        telefone.principal = self.data['segundo_principal']

        cleaned_data['segundo_telefone'] = telefone
        return cleaned_data

    @transaction.atomic
    def save(self, commit=False):
        usuario = super(UsuarioEditForm, self).save(commit)

        # Primeiro telefone
        tel = usuario.primeiro_telefone

        tel.tipo = self.data['primeiro_tipo']
        tel.ddd = self.data['primeiro_ddd']
        tel.numero = self.data['primeiro_numero']
        tel.principal = self.data['primeiro_principal']
        tel.save()

        usuario.primeiro_telefone = tel

        # Segundo telefone
        tel = usuario.segundo_telefone

        if tel:
            tel.tipo = self.data['segundo_tipo']
            tel.ddd = self.data['segundo_ddd']
            tel.numero = self.data['segundo_numero']
            tel.principal = self.data['segundo_principal']
            tel.save()
            usuario.segundo_telefone = tel

        # User
        u = usuario.user
        u.email = usuario.email
        u.groups.remove(u.groups.first())
        u.groups.add(get_or_create_grupo(self.cleaned_data['tipo'].descricao))

        u.save()
        usuario.save()
        return usuario


class EspecialidadeMedicoForm(ModelForm):

    medico = forms.ModelChoiceField(
        queryset=get_medicos(),
        widget=Select2(select2attrs={'width': '535px'}))

    especialidade = forms.ModelChoiceField(
        queryset=Especialidade.objects.all(),
        widget=Select2(select2attrs={'width': '535px'}))

    class Meta:
        model = EspecialidadeMedico
        fields = ['especialidade', 'medico']
",Python
"from __future__ import annotations

from collections import defaultdict
from collections.abc import Generator, Iterable, Mapping, MutableMapping
from contextlib import contextmanager
import logging
import re
import textwrap
from types import MappingProxyType
from typing import TYPE_CHECKING, Any, NamedTuple

from markdown_it.rules_block.html_block import HTML_SEQUENCES

from mdformat import codepoints
from mdformat._compat import Literal
from mdformat._conf import DEFAULT_OPTS
from mdformat.renderer._util import (
    RE_CHAR_REFERENCE,
    decimalify_leading,
    decimalify_trailing,
    escape_asterisk_emphasis,
    escape_underscore_emphasis,
    get_list_marker_type,
    is_tight_list,
    is_tight_list_item,
    longest_consecutive_sequence,
    maybe_add_link_brackets,
)
from mdformat.renderer.typing import Postprocess, Render

if TYPE_CHECKING:
    from mdformat.renderer import RenderTreeNode

LOGGER = logging.getLogger(__name__)

# A marker used to point a location where word wrap is allowed
# to occur.
WRAP_POINT = ""\x00""
# A marker used to indicate location of a character that should be preserved
# during word wrap. Should be converted to the actual character after wrap.
PRESERVE_CHAR = ""\x00""


def make_render_children(separator: str) -> Render:
    def render_children(
        node: RenderTreeNode,
        context: RenderContext,
    ) -> str:
        return separator.join(child.render(context) for child in node.children)

    return render_children


def hr(node: RenderTreeNode, context: RenderContext) -> str:
    thematic_break_width = 70
    return ""_"" * thematic_break_width


def code_inline(node: RenderTreeNode, context: RenderContext) -> str:
    code = node.content
    all_chars_are_whitespace = not code.strip()
    longest_backtick_seq = longest_consecutive_sequence(code, ""`"")
    if longest_backtick_seq:
        separator = ""`"" * (longest_backtick_seq + 1)
        return f""{separator} {code} {separator}""
    if code.startswith("" "") and code.endswith("" "") and not all_chars_are_whitespace:
        return f""` {code} `""
    return f""`{code}`""


def html_block(node: RenderTreeNode, context: RenderContext) -> str:
    content = node.content.rstrip(""\n"")
    # Need to strip leading spaces because we do so for regular Markdown too.
    # Without the stripping the raw HTML and Markdown get unaligned and
    # semantic may change.
    content = content.lstrip()
    return content


def html_inline(node: RenderTreeNode, context: RenderContext) -> str:
    return node.content


def _in_block(block_name: str, node: RenderTreeNode) -> bool:
    while node.parent:
        if node.parent.type == block_name:
            return True
        node = node.parent
    return False


def hardbreak(node: RenderTreeNode, context: RenderContext) -> str:
    if _in_block(""heading"", node):
        return ""<br /> ""
    return ""\\"" + ""\n""


def softbreak(node: RenderTreeNode, context: RenderContext) -> str:
    if context.do_wrap and _in_block(""paragraph"", node):
        return WRAP_POINT
    return ""\n""


def text(node: RenderTreeNode, context: RenderContext) -> str:
    """"""Process a text token.

    Text should always be a child of an inline token. An inline token
    should always be enclosed by a heading or a paragraph.
    """"""
    text = node.content

    # Escape backslash to prevent it from making unintended escapes.
    # This escape has to be first, else we start multiplying backslashes.
    text = text.replace(""\\"", ""\\\\"")

    text = escape_asterisk_emphasis(text)  # Escape emphasis/strong marker.
    text = escape_underscore_emphasis(text)  # Escape emphasis/strong marker.
    text = text.replace(""["", ""\\["")  # Escape link label enclosure
    text = text.replace(""]"", ""\\]"")  # Escape link label enclosure
    text = text.replace(""<"", ""\\<"")  # Escape URI enclosure
    text = text.replace(""`"", ""\\`"")  # Escape code span marker

    # Escape ""&"" if it starts a sequence that can be interpreted as
    # a character reference.
    text = RE_CHAR_REFERENCE.sub(r""\\\g<0>"", text)

    # The parser can give us consecutive newlines which can break
    # the markdown structure. Replace two or more consecutive newlines
    # with newline character's decimal reference.
    text = text.replace(""\n\n"", ""&#10;&#10;"")

    # If the last character is a ""!"" and the token next up is a link, we
    # have to escape the ""!"" or else the link will be interpreted as image.
    next_sibling = node.next_sibling
    if text.endswith(""!"") and next_sibling and next_sibling.type == ""link"":
        text = text[:-1] + ""\\!""

    if context.do_wrap and _in_block(""paragraph"", node):
        text = re.sub(r""\s+"", WRAP_POINT, text)

    return text


def fence(node: RenderTreeNode, context: RenderContext) -> str:
    info_str = node.info.strip()
    lang = info_str.split(maxsplit=1)[0] if info_str else """"
    code_block = node.content

    # Info strings of backtick code fences cannot contain backticks.
    # If that is the case, we make a tilde code fence instead.
    fence_char = ""~"" if ""`"" in info_str else ""`""

    # Format the code block using enabled codeformatter funcs
    if lang in context.options.get(""codeformatters"", {}):
        fmt_func = context.options[""codeformatters""][lang]
        try:
            code_block = fmt_func(code_block, info_str)
        except Exception:
            # Swallow exceptions so that formatter errors (e.g. due to
            # invalid code) do not crash mdformat.
            assert node.map is not None, ""A fence token must have `map` attribute set""
            filename = context.options.get(""mdformat"", {}).get(""filename"", """")
            warn_msg = (
                f""Failed formatting content of a {lang} code block ""
                f""(line {node.map[0] + 1} before formatting)""
            )
            if filename:
                warn_msg += f"". Filename: {filename}""
            LOGGER.warning(warn_msg)

    # The code block must not include as long or longer sequence of `fence_char`s
    # as the fence string itself
    fence_len = max(3, longest_consecutive_sequence(code_block, fence_char) + 1)
    fence_str = fence_char * fence_len

    return f""{fence_str}{info_str}\n{code_block}{fence_str}""


def code_block(node: RenderTreeNode, context: RenderContext) -> str:
    return fence(node, context)


def image(node: RenderTreeNode, context: RenderContext) -> str:
    description = _render_inline_as_text(node, context)

    if context.do_wrap:
        # Prevent line breaks
        description = description.replace(WRAP_POINT, "" "")

    ref_label = node.meta.get(""label"")
    if ref_label:
        context.env[""used_refs""].add(ref_label)
        ref_label_repr = ref_label.lower()
        if description.lower() == ref_label_repr:
            return f""![{description}]""
        return f""![{description}][{ref_label_repr}]""

    uri = node.attrs[""src""]
    assert isinstance(uri, str)
    uri = maybe_add_link_brackets(uri)
    title = node.attrs.get(""title"")
    if title is not None:
        return f'![{description}]({uri} ""{title}"")'
    return f""![{description}]({uri})""


def _render_inline_as_text(node: RenderTreeNode, context: RenderContext) -> str:
    """"""Special kludge for image `alt` attributes to conform CommonMark spec.

    Don't try to use it! Spec requires to show `alt` content with
    stripped markup, instead of simple escaping.
    """"""

    def text_renderer(node: RenderTreeNode, context: RenderContext) -> str:
        return node.content

    def image_renderer(node: RenderTreeNode, context: RenderContext) -> str:
        return _render_inline_as_text(node, context)

    inline_renderers: Mapping[str, Render] = defaultdict(
        lambda: make_render_children(""""),
        {
            ""text"": text_renderer,
            ""image"": image_renderer,
            ""link"": link,
            ""softbreak"": softbreak,
        },
    )
    inline_context = RenderContext(
        inline_renderers, context.postprocessors, context.options, context.env
    )
    return make_render_children("""")(node, inline_context)


def link(node: RenderTreeNode, context: RenderContext) -> str:
    if node.info == ""auto"":
        autolink_url = node.attrs[""href""]
        assert isinstance(autolink_url, str)
        # The parser adds a ""mailto:"" prefix to autolink email href. We remove the
        # prefix if it wasn't there in the source.
        if autolink_url.startswith(""mailto:"") and not node.children[
            0
        ].content.startswith(""mailto:""):
            autolink_url = autolink_url[7:]
        return ""<"" + autolink_url + "">""

    text = """".join(child.render(context) for child in node.children)

    if context.do_wrap:
        # Prevent line breaks
        text = text.replace(WRAP_POINT, "" "")

    ref_label = node.meta.get(""label"")
    if ref_label:
        context.env[""used_refs""].add(ref_label)
        ref_label_repr = ref_label.lower()
        if text.lower() == ref_label_repr:
            return f""[{text}]""
        return f""[{text}][{ref_label_repr}]""

    uri = node.attrs[""href""]
    assert isinstance(uri, str)
    uri = maybe_add_link_brackets(uri)
    title = node.attrs.get(""title"")
    if title is None:
        return f""[{text}]({uri})""
    assert isinstance(title, str)
    title = title.replace('""', '\\""')
    return f'[{text}]({uri} ""{title}"")'


def em(node: RenderTreeNode, context: RenderContext) -> str:
    text = make_render_children(separator="""")(node, context)
    indicator = node.markup
    return indicator + text + indicator


def strong(node: RenderTreeNode, context: RenderContext) -> str:
    text = make_render_children(separator="""")(node, context)
    indicator = node.markup
    return indicator + text + indicator


def heading(node: RenderTreeNode, context: RenderContext) -> str:
    text = make_render_children(separator="""")(node, context)

    if node.markup == ""="":
        prefix = ""# ""
    elif node.markup == ""-"":
        prefix = ""## ""
    else:  # ATX heading
        prefix = node.markup + "" ""

    # There can be newlines in setext headers, but we make an ATX
    # header always. Convert newlines to spaces.
    text = text.replace(""\n"", "" "")

    # If the text ends in a sequence of hashes (#), the hashes will be
    # interpreted as an optional closing sequence of the heading, and
    # will not be rendered. Escape a line ending hash to prevent this.
    if text.endswith(""#""):
        text = text[:-1] + ""\\#""

    return prefix + text


def blockquote(node: RenderTreeNode, context: RenderContext) -> str:
    marker = ""> ""
    with context.indented(len(marker)):
        text = make_render_children(separator=""\n\n"")(node, context)
        lines = text.splitlines()
        if not lines:
            return "">""
        quoted_lines = (f""{marker}{line}"" if line else "">"" for line in lines)
        quoted_str = ""\n"".join(quoted_lines)
        return quoted_str


def _wrap(text: str, *, width: int | Literal[""no""]) -> str:
    """"""Wrap text at locations pointed by `WRAP_POINT`s.

    Converts `WRAP_POINT`s to either a space or newline character, thus
    wrapping the text. Already existing whitespace will be preserved as
    is.
    """"""
    text, replacements = _prepare_wrap(text)
    if width == ""no"":
        return _recover_preserve_chars(text, replacements)

    wrapper = textwrap.TextWrapper(
        break_long_words=False,
        break_on_hyphens=False,
        width=width,
        expand_tabs=False,
        replace_whitespace=False,
    )
    wrapped = wrapper.fill(text)
    wrapped = _recover_preserve_chars(wrapped, replacements)
    return "" "" + wrapped if text.startswith("" "") else wrapped


def _prepare_wrap(text: str) -> tuple[str, str]:
    """"""Prepare text for wrap.

    Convert `WRAP_POINT`s to spaces. Convert whitespace to
    `PRESERVE_CHAR`s. Return a tuple with the prepared string, and
    another string consisting of replacement characters for
    `PRESERVE_CHAR`s.
    """"""
    result = """"
    replacements = """"
    for c in text:
        if c == WRAP_POINT:
            if not result or result[-1] != "" "":
                result += "" ""
        elif c in codepoints.UNICODE_WHITESPACE:
            result += PRESERVE_CHAR
            replacements += c
        else:
            result += c
    return result, replacements


def _recover_preserve_chars(text: str, replacements: str) -> str:
    replacement_iterator = iter(replacements)
    return """".join(
        next(replacement_iterator) if c == PRESERVE_CHAR else c for c in text
    )


def paragraph(node: RenderTreeNode, context: RenderContext) -> str:  # noqa: C901
    inline_node = node.children[0]
    text = inline_node.render(context)

    if context.do_wrap:
        wrap_mode = context.options[""mdformat""][""wrap""]
        if isinstance(wrap_mode, int):
            wrap_mode -= context.env[""indent_width""]
            wrap_mode = max(1, wrap_mode)
        text = _wrap(text, width=wrap_mode)

    # A paragraph can start or end in whitespace e.g. if the whitespace was
    # in decimal representation form. We need to re-decimalify it, one reason being
    # to enable ""empty"" paragraphs with whitespace only.
    text = decimalify_leading(codepoints.UNICODE_WHITESPACE, text)
    text = decimalify_trailing(codepoints.UNICODE_WHITESPACE, text)

    lines = text.split(""\n"")
    for i in range(len(lines)):
        # Strip whitespace to prevent issues like a line starting tab that is
        # interpreted as start of a code block.
        lines[i] = lines[i].strip()

        # If a line looks like an ATX heading, escape the first hash.
        if re.match(r""#{1,6}( |\t|$)"", lines[i]):
            lines[i] = f""\\{lines[i]}""

        # Make sure a paragraph line does not start with "">""
        # (otherwise it will be interpreted as a block quote).
        if lines[i].startswith("">""):
            lines[i] = f""\\{lines[i]}""

        # Make sure a paragraph line does not start with ""*"", ""-"" or ""+""
        # followed by a space, tab, or end of line.
        # (otherwise it will be interpreted as list item).
        if re.match(r""[-*+]( |\t|$)"", lines[i]):
            lines[i] = f""\\{lines[i]}""

        # If a line starts with a number followed by ""."" or "")"" followed by
        # a space, tab or end of line, escape the ""."" or "")"" or it will be
        # interpreted as ordered list item.
        if re.match(r""[0-9]+\)( |\t|$)"", lines[i]):
            lines[i] = lines[i].replace("")"", ""\\)"", 1)
        if re.match(r""[0-9]+\.( |\t|$)"", lines[i]):
            lines[i] = lines[i].replace(""."", ""\\."", 1)

        # Consecutive ""-"", ""*"" or ""_"" sequences can be interpreted as thematic
        # break. Escape them.
        space_removed = lines[i].replace("" "", """").replace(""\t"", """")
        if len(space_removed) >= 3:
            if all(c == ""*"" for c in space_removed):
                lines[i] = lines[i].replace(""*"", ""\\*"", 1)  # pragma: no cover
            elif all(c == ""-"" for c in space_removed):
                lines[i] = lines[i].replace(""-"", ""\\-"", 1)
            elif all(c == ""_"" for c in space_removed):
                lines[i] = lines[i].replace(""_"", ""\\_"", 1)  # pragma: no cover

        # A stripped line where all characters are ""="" or ""-"" will be
        # interpreted as a setext heading. Escape.
        stripped = lines[i].strip("" \t"")
        if all(c == ""-"" for c in stripped):
            lines[i] = lines[i].replace(""-"", ""\\-"", 1)
        elif all(c == ""="" for c in stripped):
            lines[i] = lines[i].replace(""="", ""\\="", 1)

        # Check if the line could be interpreted as an HTML block.
        # If yes, prefix it with 4 spaces to prevent this.
        for html_seq_tuple in HTML_SEQUENCES:
            can_break_paragraph = html_seq_tuple[2]
            opening_re = html_seq_tuple[0]
            if can_break_paragraph and opening_re.search(lines[i]):
                lines[i] = f""    {lines[i]}""
                break

    text = ""\n"".join(lines)

    return text


def list_item(node: RenderTreeNode, context: RenderContext) -> str:
    """"""Return one list item as string.

    This returns just the content. List item markers and indentation are
    added in `bullet_list` and `ordered_list` renderers.
    """"""
    block_separator = ""\n"" if is_tight_list_item(node) else ""\n\n""
    text = make_render_children(block_separator)(node, context)

    if not text.strip():
        return """"
    return text


def bullet_list(node: RenderTreeNode, context: RenderContext) -> str:
    marker_type = get_list_marker_type(node)
    first_line_indent = "" ""
    indent = "" "" * len(marker_type + first_line_indent)
    block_separator = ""\n"" if is_tight_list(node) else ""\n\n""

    with context.indented(len(indent)):
        text = """"
        for child_idx, child in enumerate(node.children):
            list_item = child.render(context)
            formatted_lines = []
            line_iterator = iter(list_item.split(""\n""))
            first_line = next(line_iterator)
            formatted_lines.append(
                f""{marker_type}{first_line_indent}{first_line}""
                if first_line
                else marker_type
            )
            for line in line_iterator:
                formatted_lines.append(f""{indent}{line}"" if line else """")

            text += ""\n"".join(formatted_lines)
            if child_idx != len(node.children) - 1:
                text += block_separator

        return text


def ordered_list(node: RenderTreeNode, context: RenderContext) -> str:
    consecutive_numbering = context.options.get(""mdformat"", {}).get(
        ""number"", DEFAULT_OPTS[""number""]
    )
    marker_type = get_list_marker_type(node)
    first_line_indent = "" ""
    block_separator = ""\n"" if is_tight_list(node) else ""\n\n""
    list_len = len(node.children)

    starting_number = node.attrs.get(""start"")
    if starting_number is None:
        starting_number = 1
    assert isinstance(starting_number, int)

    if consecutive_numbering:
        indent_width = len(
            f""{list_len + starting_number - 1}{marker_type}{first_line_indent}""
        )
    else:
        indent_width = len(f""{starting_number}{marker_type}{first_line_indent}"")

    text = """"
    with context.indented(indent_width):
        for list_item_index, list_item in enumerate(node.children):
            list_item_text = list_item.render(context)
            formatted_lines = []
            line_iterator = iter(list_item_text.split(""\n""))
            first_line = next(line_iterator)
            if consecutive_numbering:
                # Prefix first line of the list item with consecutive numbering,
                # padded with zeros to make all markers of even length.
                # E.g.
                #   002. This is the first list item
                #   003. Second item
                #   ...
                #   112. Last item
                number = starting_number + list_item_index
                pad = len(str(list_len + starting_number - 1))
                number_str = str(number).rjust(pad, ""0"")
                formatted_lines.append(
                    f""{number_str}{marker_type}{first_line_indent}{first_line}""
                    if first_line
                    else f""{number_str}{marker_type}""
                )
            else:
                # Prefix first line of first item with the starting number of the
                # list. Prefix following list items with the number one
                # prefixed by zeros to make the list item marker of even length
                # with the first one.
                # E.g.
                #   5321. This is the first list item
                #   0001. Second item
                #   0001. Third item
                first_item_marker = f""{starting_number}{marker_type}""
                other_item_marker = (
                    ""0"" * (len(str(starting_number)) - 1) + ""1"" + marker_type
                )
                if list_item_index == 0:
                    formatted_lines.append(
                        f""{first_item_marker}{first_line_indent}{first_line}""
                        if first_line
                        else first_item_marker
                    )
                else:
                    formatted_lines.append(
                        f""{other_item_marker}{first_line_indent}{first_line}""
                        if first_line
                        else other_item_marker
                    )
            for line in line_iterator:
                formatted_lines.append("" "" * indent_width + line if line else """")

            text += ""\n"".join(formatted_lines)
            if list_item_index != len(node.children) - 1:
                text += block_separator

        return text


DEFAULT_RENDERERS: Mapping[str, Render] = MappingProxyType(
    {
        ""inline"": make_render_children(""""),
        ""root"": make_render_children(""\n\n""),
        ""hr"": hr,
        ""code_inline"": code_inline,
        ""html_block"": html_block,
        ""html_inline"": html_inline,
        ""hardbreak"": hardbreak,
        ""softbreak"": softbreak,
        ""text"": text,
        ""fence"": fence,
        ""code_block"": code_block,
        ""link"": link,
        ""image"": image,
        ""em"": em,
        ""strong"": strong,
        ""heading"": heading,
        ""blockquote"": blockquote,
        ""paragraph"": paragraph,
        ""bullet_list"": bullet_list,
        ""ordered_list"": ordered_list,
        ""list_item"": list_item,
    }
)


class RenderContext(NamedTuple):
    """"""A collection of data that is passed as input to `Render` and
    `Postprocess` functions.""""""

    renderers: Mapping[str, Render]
    postprocessors: Mapping[str, Iterable[Postprocess]]
    options: Mapping[str, Any]
    env: MutableMapping

    @contextmanager
    def indented(self, width: int) -> Generator[None, None, None]:
        self.env[""indent_width""] += width
        try:
            yield
        finally:
            self.env[""indent_width""] -= width

    @property
    def do_wrap(self) -> bool:
        wrap_mode = self.options.get(""mdformat"", {}).get(""wrap"", DEFAULT_OPTS[""wrap""])
        return isinstance(wrap_mode, int) or wrap_mode == ""no""

    def with_default_renderer_for(self, *syntax_names: str) -> RenderContext:
        renderers = dict(self.renderers)
        for syntax in syntax_names:
            if syntax in DEFAULT_RENDERERS:
                renderers[syntax] = DEFAULT_RENDERERS[syntax]
            else:
                renderers.pop(syntax, None)
        return RenderContext(
            MappingProxyType(renderers), self.postprocessors, self.options, self.env
        )
",Python
"from slm_lab.env.vec_env import make_gym_venv
import numpy as np
import pytest


@pytest.mark.parametrize('name,state_shape,reward_scale', [
    ('PongNoFrameskip-v4', (1, 84, 84), 'sign'),
    ('LunarLander-v2', (8,), None),
    ('CartPole-v0', (4,), None),
])
@pytest.mark.parametrize('num_envs', (1, 4))
def test_make_gym_venv_nostack(name, num_envs, state_shape, reward_scale):
    seed = 0
    frame_op = None
    frame_op_len = None
    venv = make_gym_venv(name, num_envs, seed, frame_op=frame_op, frame_op_len=frame_op_len, reward_scale=reward_scale)
    venv.reset()
    for i in range(5):
        state, reward, done, info = venv.step([venv.action_space.sample()] * num_envs)

    assert isinstance(state, np.ndarray)
    assert state.shape == (num_envs,) + state_shape
    assert isinstance(reward, np.ndarray)
    assert reward.shape == (num_envs,)
    assert isinstance(done, np.ndarray)
    assert done.shape == (num_envs,)
    assert len(info) == num_envs
    venv.close()


@pytest.mark.parametrize('name,state_shape, reward_scale', [
    ('PongNoFrameskip-v4', (1, 84, 84), 'sign'),
    ('LunarLander-v2', (8,), None),
    ('CartPole-v0', (4,), None),
])
@pytest.mark.parametrize('num_envs', (1, 4))
def test_make_gym_concat(name, num_envs, state_shape, reward_scale):
    seed = 0
    frame_op = 'concat'  # used for image, or for concat vector
    frame_op_len = 4
    venv = make_gym_venv(name, num_envs, seed, frame_op=frame_op, frame_op_len=frame_op_len, reward_scale=reward_scale)
    venv.reset()
    for i in range(5):
        state, reward, done, info = venv.step([venv.action_space.sample()] * num_envs)

    assert isinstance(state, np.ndarray)
    stack_shape = (num_envs, frame_op_len * state_shape[0],) + state_shape[1:]
    assert state.shape == stack_shape
    assert isinstance(reward, np.ndarray)
    assert reward.shape == (num_envs,)
    assert isinstance(done, np.ndarray)
    assert done.shape == (num_envs,)
    assert len(info) == num_envs
    venv.close()


@pytest.mark.skip(reason='Not implemented yet')
@pytest.mark.parametrize('name,state_shape,reward_scale', [
    ('LunarLander-v2', (8,), None),
    ('CartPole-v0', (4,), None),
])
@pytest.mark.parametrize('num_envs', (1, 4))
def test_make_gym_stack(name, num_envs, state_shape, reward_scale):
    seed = 0
    frame_op = 'stack'  # used for rnn
    frame_op_len = 4
    venv = make_gym_venv(name, num_envs, seed, frame_op=frame_op, frame_op_len=frame_op_len, reward_scale=reward_scale)
    venv.reset()
    for i in range(5):
        state, reward, done, info = venv.step([venv.action_space.sample()] * num_envs)

    assert isinstance(state, np.ndarray)
    stack_shape = (num_envs, frame_op_len,) + state_shape
    assert state.shape == stack_shape
    assert isinstance(reward, np.ndarray)
    assert reward.shape == (num_envs,)
    assert isinstance(done, np.ndarray)
    assert done.shape == (num_envs,)
    assert len(info) == num_envs
    venv.close()


@pytest.mark.parametrize('name,state_shape,image_downsize', [
    ('PongNoFrameskip-v4', (1, 84, 84), (84, 84)),
    ('PongNoFrameskip-v4', (1, 64, 64), (64, 64)),
])
@pytest.mark.parametrize('num_envs', (1, 4))
def test_make_gym_venv_downsize(name, num_envs, state_shape, image_downsize):
    seed = 0
    frame_op = None
    frame_op_len = None
    venv = make_gym_venv(name, num_envs, seed, frame_op=frame_op, frame_op_len=frame_op_len, image_downsize=image_downsize)
    venv.reset()
    for i in range(5):
        state, reward, done, info = venv.step([venv.action_space.sample()] * num_envs)

    assert isinstance(state, np.ndarray)
    assert state.shape == (num_envs,) + state_shape
    assert isinstance(reward, np.ndarray)
    assert reward.shape == (num_envs,)
    assert isinstance(done, np.ndarray)
    assert done.shape == (num_envs,)
    assert len(info) == num_envs
    venv.close()
",Python
"""""""
.. module:: mlpy.auxiliary.datastructs
   :platform: Unix, Windows
   :synopsis: Provides data structure implementations.

.. moduleauthor:: Astrid Jackson <ajackson@eecs.ucf.edu>
""""""
from __future__ import division, print_function, absolute_import

import heapq
import numpy as np

from abc import ABCMeta, abstractmethod


class Array(object):
    """"""The managed array class.

    The managed array class pre-allocates memory to the given size
    automatically resizing as needed.

    Parameters
    ----------
    size : int
        The size of the array.

    Examples
    --------
    >>> a = Array(5)
    >>> a[0] = 3
    >>> a[1] = 6

    Retrieving an elements:

    >>> a[0]
    3
    >>> a[2]
    0

    Finding the length of the array:

    >>> len(a)
    2

    """"""
    def __init__(self, size):
        self._data = np.zeros((size,))
        self._capacity = size
        self._size = 0

    def __setitem__(self, index, value):
        """"""Set the the array at the index to the given value.

        Parameters
        ----------
        index : int
            The index into the array.
        value :
            The value to set the array to.

        """"""
        if index >= self._size:
            if self._size == self._capacity:
                self._capacity *= 2
                new_data = np.zeros((self._capacity,))
                new_data[:self._size] = self._data
                self._data = new_data

            self._size += 1

        self._data[index] = value

    def __getitem__(self, index):
        """"""Get the value at the given index.

        Parameters
        ----------
        index : int
            The index into the array.

        """"""
        return self._data[index]

    def __len__(self):
        """"""The length of the array.

        Returns
        -------
        int :
            The size of the array

        """"""
        return self._size


class Point2D(object):
    """"""The 2d-point class.

    The 2d-point class is a container for positions
    in a 2d-coordinate system.

    Parameters
    ----------
    x : float, optional
        The x-position in a 2d-coordinate system. Default is 0.0.
    y : float, optional
        The y-position in a 2d-coordinate system. Default is 0.0.

    Attributes
    ----------
    x : float
        The x-position in a 2d-coordinate system.
    y : float
        The y-position in a 2d-coordinate system.

    """"""
    __slots__ = ['x', 'y']

    def __init__(self, x=0.0, y=0.0):
        self.x = x
        self.y = y


class Point3D(object):
    """"""
    The 3d-point class.

    The 3d-point class is a container for positions
    in a 3d-coordinate system.

    Parameters
    ----------
    x : float, optional
        The x-position in a 2d-coordinate system. Default is 0.0.
    y : float, optional
        The y-position in a 2d-coordinate system. Default is 0.0.
    z : float, optional
        The z-position in a 3d-coordinate system. Default is 0.0.

    Attributes
    ----------
    x : float
        The x-position in a 2d-coordinate system.
    y : float
        The y-position in a 2d-coordinate system.
    z : float
        The z-position in a 3d-coordinate system.

    """"""
    __slots__ = ['x', 'y', 'z']

    def __init__(self, x=0.0, y=0.0, z=0.0):
        self.x = x
        self.y = y
        self.z = z


class Vector3D(Point3D):
    """"""The 3d-vector class.

    .. todo::
        Implement vector functionality.

    Parameters
    ----------
    x : float, optional
        The x-position in a 2d-coordinate system. Default is 0.0.
    y : float, optional
        The y-position in a 2d-coordinate system. Default is 0.0.
    z : float, optional
        The z-position in a 3d-coordinate system. Default is 0.0.

    Attributes
    ----------
    x : float
        The x-position in a 2d-coordinate system.
    y : float
        The y-position in a 2d-coordinate system.
    z : float
        The z-position in a 3d-coordinate system.

    """"""

    def __init__(self, x=0.0, y=0.0, z=0.0):
        super(Vector3D, self).__init__(x, y, z)


class Queue(object):
    """"""The abstract queue base class.

    The queue class handles core functionality common for
    any type of queue. All queues inherit from the queue
    base class.

    See Also
    --------
    :class:`FIFOQueue`, :class:`PriorityQueue`

    """"""
    __metaclass__ = ABCMeta

    def __init__(self):
        self._queue = []

    def __len__(self):
        return len(self._queue)

    def __contains__(self, item):
        try:
            self._queue.index(item)
            return True
        except Exception:
            return False

    def __iter__(self):
        return iter(self._queue)

    def __str__(self):
        return '[' + ', '.join('{}'.format(el) for el in self._queue) + ']'

    def __repr__(self):
        return ', '.join('{}'.format(el) for el in self._queue)

    @abstractmethod
    def push(self, item):
        """"""Push a new element on the queue

        Parameters
        ----------
        item :
            The element to push on the queue

        """"""
        raise NotImplementedError

    @abstractmethod
    def pop(self):
        """"""Pop an element from the queue.""""""
        raise NotImplementedError

    def empty(self):
        """"""Check if the queue is empty.

        Returns
        -------
        bool :
            Whether the queue is empty.

        """"""
        return len(self._queue) <= 0

    def extend(self, items):
        """"""Extend the queue by a number of elements.

        Parameters
        ----------
        items : list
            A list of items.

        """"""
        for item in items:
            self.push(item)

    def get(self, item):
        """"""Return the element in the queue identical to `item`.

        Parameters
        ----------
        item :
            The element to search for.

        Returns
        -------
        The element in the queue identical to `item`. If the element
        was not found, None is returned.

        """"""
        try:
            index = self._queue.index(item)
            return self._queue[index]
        except Exception:
            return None

    def remove(self, item):
        """"""Remove an element from the queue.

        Parameters
        ----------
        item :
            The element to remove.

        """"""
        self._queue.remove(item)


class FIFOQueue(Queue):
    """"""The first-in-first-out (FIFO) queue.

    In a FIFO queue the first element added to the queue
    is the first element to be removed.

    Examples
    --------
    >>> q = FIFOQueue()
    >>> q.push(5)
    >>> q.extend([1, 3, 7])
    >>> print q
    [5, 1, 3, 7]

    Retrieving an element:

    >>> q.pop()
    5

    Removing an element:

    >>> q.remove(3)
    >>> print q
    [1, 7]

    Get the element in the queue identical to the given item:

    >>> q.get(7)
    7

    Check if the queue is empty:

    >>> q.empty()
    False

    Loop over the elements in the queue:

    >>> for x in q:
    >>>     print x
    1
    7

    Check if an element is in the queue:

    >>> if 7 in q:
    >>>     print ""yes""
    yes

    See Also
    --------
    :class:`PriorityQueue`

    """"""
    def __init__(self):
        super(FIFOQueue, self).__init__()

    def push(self, item):
        """"""Push an element to the end of the queue.

        Parameters
        ----------
        item :
            The element to append.

        """"""
        self._queue.append(item)

    def pop(self):
        """"""Return the element at the front of the queue.

        Returns
        -------
        The first element in the queue.

        """"""
        return self._queue.pop(0)

    def extend(self, items):
        """"""Append a list of elements at the end of the queue.

        Parameters
        ----------
        items : list
            List of elements.

        """"""
        self._queue.extend(items)


class PriorityQueue(Queue):
    """"""
    The priority queue.

    In a priority queue each element has a priority associated with it. An element
    with high priority (i.e., smallest value) is served before an element with low priority
    (i.e., largest value). The priority queue is implemented with a heap.

    Parameters
    ----------
    func : callable
        A callback function handling the priority. By default the priority
        is the value of the element.

    Examples
    --------
    >>> q = PriorityQueue()
    >>> q.push(5)
    >>> q.extend([1, 3, 7])
    >>> print q
    [(1,1), (5,5), (3,3), (7,7)]

    Retrieving the element with highest priority:

    >>> q.pop()
    1

    Removing an element:

    >>> q.remove((3, 3))
    >>> print q
    [(5,5), (7,7)]

    Get the element in the queue identical to the given item:

    >>> q.get(7)
    7

    Check if the queue is empty:

    >>> q.empty()
    False

    Loop over the elements in the queue:

    >>> for x in q:
    >>>     print x
    (5, 5)
    (7, 7)

    Check if an element is in the queue:

    >>> if 7 in q:
    >>>     print ""yes""
    yes

    See Also
    --------
    :class:`FIFOQueue`

    """"""
    def __init__(self, func=lambda x: x):
        super(PriorityQueue, self).__init__()

        self.func = func

    def __contains__(self, item):
        for _, element in self._queue:
            if item == element:
                return True
        return False

    def __str__(self):
        return '[' + ', '.join('({},{})'.format(*el) for el in self._queue) + ']'

    def push(self, item):
        """"""Push an element on the priority queue.

        The element is pushed on the priority queue according
        to its priority.

        Parameters
        ----------
        item :
            The element to push on the queue.

        """"""
        heapq.heappush(self._queue, (self.func(item), item))

    def pop(self):
        """"""Get the element with the highest priority.

        Get the element with the highest priority (i.e., smallest value).

        Returns
        -------
        The element with the highest priority.

        """"""
        return heapq.heappop(self._queue)[1]

    def get(self, item):
        """"""Return the element in the queue identical to `item`.

        Parameters
        ----------
        item :
            The element to search for.

        Returns
        -------
        The element in the queue identical to `item`. If the element
        was not found, None is returned.

        """"""
        for _, element in self._queue:
            if item == element:
                return element
        return None

    def remove(self, item):
        """"""Remove an element from the queue.

        Parameters
        ----------
        item :
            The element to remove.

        """"""
        super(PriorityQueue, self).remove(item)
        heapq.heapify(self._queue)
",Python
"from behave import given, when, then
from genosdb.models import User
from genosdb.exceptions import UserNotFound

# 'mongodb://localhost:27017/')


@given('a valid user with values {username}, {password}, {email}, {first_name}, {last_name}')
def step_impl(context, username, password, email, first_name, last_name):
    context.base_user = User(username=username, email=email, password=password, first_name=first_name,
                        last_name=last_name)


@when('I add the user to the collection')
def step_impl(context):
    context.user_service.save(context.base_user)


@then('I check {user_name} exists')
def step_impl(context, user_name):
    user_exists = context.user_service.exists(user_name)
    assert context.base_user.username == user_exists['username']
    assert context.base_user.password == user_exists['password']
    assert context.base_user.email == user_exists['email']
    assert context.base_user.first_name == user_exists['first_name']
    assert context.base_user.last_name == user_exists['last_name']
    assert user_exists['_id'] is not None

@given('I update {username} {field} with {value}')
def step_impl(context, username, field, value):
    user = context.user_service.exists(username)

    if user is not None:
        user[field] = value
        context.user_service.update(user.to_json())
    else:
        raise UserNotFound(username, ""User was not found"")





@then('I check {username} {field} is {value}')
def step_impl(context, username, field, value):
    user = context.user_service.exists(username)

    if user is not None:
        assert user[field] == value
    else:
        raise UserNotFound(username, ""User was not found"")



",Python
"from __future__ import absolute_import

import matplotlib
# Force matplotlib to not use any Xwindows backend.
matplotlib.use('Agg')
import matplotlib.pyplot as plt

from plotly.tests.utils import compare_dict
from plotly.tests.test_optional.optional_utils import run_fig
from plotly.tests.test_optional.test_matplotlylib.data.annotations import *


def test_annotations():
    fig, ax = plt.subplots()
    ax.plot([1, 2, 3], 'b-')
    ax.plot([3, 2, 1], 'b-')
    ax.text(0.001, 0.999,
            'top-left', transform=ax.transAxes, va='top', ha='left')
    ax.text(0.001, 0.001,
            'bottom-left', transform=ax.transAxes, va='baseline', ha='left')
    ax.text(0.999, 0.999,
            'top-right', transform=ax.transAxes, va='top', ha='right')
    ax.text(0.999, 0.001,
            'bottom-right', transform=ax.transAxes, va='baseline', ha='right')
    renderer = run_fig(fig)
    for data_no, data_dict in enumerate(renderer.plotly_fig['data']):
        equivalent, msg = compare_dict(data_dict,
                                       ANNOTATIONS['data'][data_no])
        assert equivalent, msg
    for no, note in enumerate(renderer.plotly_fig['layout']['annotations']):
        equivalent, msg = compare_dict(note,
                                       ANNOTATIONS['layout']['annotations'][no])
        assert equivalent, msg
",Python
"#! python3

""""""
    GUI for Ultrasonic Temperature Controller
    Copyright (c) 2015 by Stefan Lehmann

""""""

import os
import datetime
import logging
import json

import serial
from qtpy.QtWidgets import QAction, QDialog, QMainWindow, QMessageBox, \
    QDockWidget, QLabel, QFileDialog, QApplication
from qtpy.QtGui import QIcon
from qtpy.QtCore import QSettings, QCoreApplication, Qt, QThread, \
    Signal

from serial.serialutil import SerialException
from jsonwatch.jsonitem import JsonItem
from jsonwatch.jsonnode import JsonNode
from jsonwatchqt.logger import LoggingWidget
from pyqtconfig.config import QSettingsManager
from jsonwatchqt.plotsettings import PlotSettingsWidget
from jsonwatchqt.objectexplorer import ObjectExplorer
from jsonwatchqt.plotwidget import PlotWidget
from jsonwatchqt.serialdialog import SerialDialog, PORT_SETTING, \
    BAUDRATE_SETTING
from jsonwatchqt.utilities import critical, pixmap
from jsonwatchqt.recorder import RecordWidget
from jsonwatchqt.csvsettings import CSVSettingsDialog, DECIMAL_SETTING, \
    SEPARATOR_SETTING


logger = logging.getLogger(""jsonwatchqt.mainwindow"")
WINDOWSTATE_SETTING = ""mainwindow/windowstate""
GEOMETRY_SETTING = ""mainwindow/geometry""
FILENAME_SETTING = ""mainwindow/filename""


def strip(s):
    return s.strip()


def utf8_to_bytearray(x):
    return bytearray(x, 'utf-8')


def bytearray_to_utf8(x):
    return x.decode('utf-8')


def set_default_settings(settings: QSettingsManager):
    settings.set_defaults({
        DECIMAL_SETTING: ',',
        SEPARATOR_SETTING: ';'
    })


class SerialWorker(QThread):
    data_received = Signal(datetime.datetime, str)

    def __init__(self, ser: serial.Serial, parent=None):
        super().__init__(parent)
        self.serial = ser
        self._quit = False

    def run(self):
        while not self._quit:
            try:
                if self.serial.isOpen() and self.serial.inWaiting():
                    self.data_received.emit(
                        datetime.datetime.now(),
                        strip(bytearray_to_utf8(self.serial.readline()))
                    )
            except SerialException:
                pass

    def quit(self):
        self._quit = True


class MainWindow(QMainWindow):

    def __init__(self, parent=None):
        super().__init__(parent)
        self.recording_enabled = False
        self.serial = serial.Serial()
        self.rootnode = JsonNode('')
        self._connected = False
        self._dirty = False
        self._filename = None

        # settings
        self.settings = QSettingsManager()
        set_default_settings(self.settings)

        # Controller Settings
        self.settingsDialog = None

        # object explorer
        self.objectexplorer = ObjectExplorer(self.rootnode, self)
        self.objectexplorer.nodevalue_changed.connect(self.send_serialdata)
        self.objectexplorer.nodeproperty_changed.connect(self.set_dirty)
        self.objectexplorerDockWidget = QDockWidget(self.tr(""object explorer""),
                                                    self)
        self.objectexplorerDockWidget.setObjectName(
            ""objectexplorer_dockwidget"")
        self.objectexplorerDockWidget.setWidget(self.objectexplorer)

        # plot widget
        self.plot = PlotWidget(self.rootnode, self.settings, self)

        # plot settings
        self.plotsettings = PlotSettingsWidget(self.settings, self.plot, self)
        self.plotsettingsDockWidget = QDockWidget(self.tr(""plot settings""),
                                                  self)
        self.plotsettingsDockWidget.setObjectName(""plotsettings_dockwidget"")
        self.plotsettingsDockWidget.setWidget(self.plotsettings)

        # log widget
        self.loggingWidget = LoggingWidget(self)
        self.loggingDockWidget = QDockWidget(self.tr(""logger""), self)
        self.loggingDockWidget.setObjectName(""logging_dockwidget"")
        self.loggingDockWidget.setWidget(self.loggingWidget)

        # record widget
        self.recordWidget = RecordWidget(self.rootnode, self)
        self.recordDockWidget = QDockWidget(self.tr(""data recording""), self)
        self.recordDockWidget.setObjectName(""record_dockwidget"")
        self.recordDockWidget.setWidget(self.recordWidget)

        # actions and menus
        self._init_actions()
        self._init_menus()

        # statusbar
        statusbar = self.statusBar()
        statusbar.setVisible(True)
        self.connectionstateLabel = QLabel(self.tr(""Not connected""))
        statusbar.addPermanentWidget(self.connectionstateLabel)
        statusbar.showMessage(self.tr(""Ready""))

        # layout
        self.setCentralWidget(self.plot)
        self.addDockWidget(Qt.LeftDockWidgetArea,
                           self.objectexplorerDockWidget)
        self.addDockWidget(Qt.LeftDockWidgetArea, self.plotsettingsDockWidget)
        self.addDockWidget(Qt.BottomDockWidgetArea, self.loggingDockWidget)
        self.addDockWidget(Qt.BottomDockWidgetArea, self.recordDockWidget)

        self.load_settings()

    def _init_actions(self):
        # Serial Dialog
        self.serialdlgAction = QAction(self.tr(""Serial Settings...""), self)
        self.serialdlgAction.setShortcut(""F6"")
        self.serialdlgAction.setIcon(QIcon(pixmap(""configure.png"")))
        self.serialdlgAction.triggered.connect(self.show_serialdlg)

        # Connect
        self.connectAction = QAction(self.tr(""Connect""), self)
        self.connectAction.setShortcut(""F5"")
        self.connectAction.setIcon(QIcon(pixmap(""network-connect-3.png"")))
        self.connectAction.triggered.connect(self.toggle_connect)

        # Quit
        self.quitAction = QAction(self.tr(""Quit""), self)
        self.quitAction.setShortcut(""Alt+F4"")
        self.quitAction.setIcon(QIcon(pixmap(""window-close-3.png"")))
        self.quitAction.triggered.connect(self.close)

        # Save Config as
        self.saveasAction = QAction(self.tr(""Save as...""), self)
        self.saveasAction.setShortcut(""Ctrl+Shift+S"")
        self.saveasAction.setIcon(QIcon(pixmap(""document-save-as-5.png"")))
        self.saveasAction.triggered.connect(self.show_savecfg_dlg)

        # Save file
        self.saveAction = QAction(self.tr(""Save""), self)
        self.saveAction.setShortcut(""Ctrl+S"")
        self.saveAction.setIcon(QIcon(pixmap(""document-save-5.png"")))
        self.saveAction.triggered.connect(self.save_file)

        # Load file
        self.loadAction = QAction(self.tr(""Open...""), self)
        self.loadAction.setShortcut(""Ctrl+O"")
        self.loadAction.setIcon(QIcon(pixmap(""document-open-7.png"")))
        self.loadAction.triggered.connect(self.show_opencfg_dlg)

        # New
        self.newAction = QAction(self.tr(""New""), self)
        self.newAction.setShortcut(""Ctrl+N"")
        self.newAction.setIcon(QIcon(pixmap(""document-new-6.png"")))
        self.newAction.triggered.connect(self.new)

        # start recording
        self.startrecordingAction = QAction(self.tr(""Start recording""), self)
        self.startrecordingAction.setShortcut(""F9"")
        self.startrecordingAction.setIcon(QIcon(pixmap(""media-record-6.png"")))
        self.startrecordingAction.triggered.connect(self.start_recording)

        # stop recording
        self.stoprecordingAction = QAction(self.tr(""Stop recording""), self)
        self.stoprecordingAction.setShortcut(""F10"")
        self.stoprecordingAction.setIcon(QIcon(pixmap(""media-playback-stop-8.png"")))
        self.stoprecordingAction.setEnabled(False)
        self.stoprecordingAction.triggered.connect(self.stop_recording)

        # clear record
        self.clearrecordAction = QAction(self.tr(""Clear""), self)
        self.clearrecordAction.setIcon(QIcon(pixmap(""editclear.png"")))
        self.clearrecordAction.triggered.connect(self.clear_record)

        # export record
        self.exportcsvAction = QAction(self.tr(""Export to csv...""), self)
        self.exportcsvAction.setIcon(QIcon(pixmap(""text_csv.png"")))
        self.exportcsvAction.triggered.connect(self.export_csv)

        # show record settings
        self.recordsettingsAction = QAction(self.tr(""Settings...""), self)
        self.recordsettingsAction.setIcon(QIcon(pixmap(""configure.png"")))
        self.recordsettingsAction.triggered.connect(self.show_recordsettings)

        # Info
        self.infoAction = QAction(self.tr(""Info""), self)
        self.infoAction.setShortcut(""F1"")
        self.infoAction.triggered.connect(self.show_info)

    def _init_menus(self):
        # file menu
        self.fileMenu = self.menuBar().addMenu(self.tr(""File""))
        self.fileMenu.addAction(self.newAction)
        self.fileMenu.addAction(self.loadAction)
        self.fileMenu.addAction(self.saveAction)
        self.fileMenu.addAction(self.saveasAction)
        self.fileMenu.addSeparator()
        self.fileMenu.addAction(self.connectAction)
        self.fileMenu.addAction(self.serialdlgAction)
        self.fileMenu.addSeparator()
        self.fileMenu.addAction(self.quitAction)

        # view menu
        self.viewMenu = self.menuBar().addMenu(self.tr(""View""))
        self.viewMenu.addAction(
            self.objectexplorerDockWidget.toggleViewAction())
        self.viewMenu.addAction(self.plotsettingsDockWidget.toggleViewAction())
        self.viewMenu.addAction(self.loggingDockWidget.toggleViewAction())
        self.viewMenu.addAction(self.recordDockWidget.toggleViewAction())

        # record menu
        self.recordMenu = self.menuBar().addMenu(self.tr(""Record""))
        self.recordMenu.addAction(self.startrecordingAction)
        self.recordMenu.addAction(self.stoprecordingAction)
        self.recordMenu.addAction(self.exportcsvAction)
        self.recordMenu.addSeparator()
        self.recordMenu.addAction(self.clearrecordAction)
        self.recordMenu.addSeparator()
        self.recordMenu.addAction(self.recordsettingsAction)

        # info menu
        self.menuBar().addAction(self.infoAction)

    def show_info(self):
        QMessageBox.about(
            self, QApplication.applicationName(),
            ""%s %s\n""
            ""Copyright (c) by %s"" %
            (
                QCoreApplication.applicationName(),
                QCoreApplication.applicationVersion(),
                QCoreApplication.organizationName(),
            )
        )

    def load_file(self, filename):
        old_filename = self.filename if self.filename != filename else None
        self.filename = filename

        try:
            with open(filename, 'rb') as f:
                try:
                    self.objectexplorer.model().beginResetModel()
                    self.rootnode.load(bytearray_to_utf8(f.read()))
                    self.objectexplorer.model().endResetModel()
                except ValueError as e:
                    critical(self, ""File '%s' is not a valid config file.""
                             % filename)
                    logger.error(str(e))
                    if old_filename is not None:
                        self.load_file(old_filename)
                    else:
                        self.filename = None

        except FileNotFoundError as e:
            logger.error(str(e))
            self.filename = None

        self.objectexplorer.refresh()

    def load_settings(self):
        settings = QSettings()

        # window geometry
        try:
            self.restoreGeometry(settings.value(GEOMETRY_SETTING))
        except:
            logger.debug(""error restoring window geometry"")

        # window state
        try:
            self.restoreState(settings.value(WINDOWSTATE_SETTING))
        except:
            logger.debug(""error restoring window state"")

        # filename
        self.filename = settings.value(FILENAME_SETTING)
        if self.filename is not None:
            self.load_file(self.filename)

    def save_settings(self):
        settings = QSettings()
        settings.setValue(WINDOWSTATE_SETTING, self.saveState())
        settings.setValue(GEOMETRY_SETTING, self.saveGeometry())
        settings.setValue(FILENAME_SETTING, self.filename)

    def closeEvent(self, event):
        if self.dirty:
            res = QMessageBox.question(
                self,
                QCoreApplication.applicationName(),
                self.tr(""Save changes to file '%s'?"" %
                        self.filename
                        if self.filename is not None else ""unknown""),
                QMessageBox.Yes | QMessageBox.No | QMessageBox.Cancel
            )
            if res == QMessageBox.Cancel:
                event.ignore()
                return
            elif res == QMessageBox.Yes:
                self.save_file()

        self.save_settings()

        try:
            self.worker.quit()
        except AttributeError:
            pass

        try:
            self.serial.close()
        except (SerialException, AttributeError):
            pass

    def new(self):
        self.objectexplorer.model().beginResetModel()
        self.rootnode.clear()
        self.objectexplorer.model().endResetModel()

    def send_reset(self):
        jsonstring = json.dumps({""resetpid"": 1})
        self.serial.write(bytearray(jsonstring, 'utf-8'))

    def receive_serialdata(self, time, data):
        self.loggingWidget.log_input(data)

        try:
            self.rootnode.from_json(data)
        except ValueError as e:
            logger.error(str(e))

        # refresh widgets
        self.objectexplorer.refresh()
        self.plot.refresh(time)
        if self.recording_enabled:
            self.recordWidget.add_data(time, self.rootnode)

    def send_serialdata(self, node):
        if isinstance(node, JsonItem):
            if self.serial.isOpen():
                s = node.to_json()
                self.serial.write(utf8_to_bytearray(s + '\n'))
                self.loggingWidget.log_output(s.strip())

    def show_serialdlg(self):
        dlg = SerialDialog(self.settings, self)
        dlg.exec_()

    def toggle_connect(self):
        if self.serial.isOpen():
            self.disconnect()
        else:
            self.connect()

    def connect(self):
        # Load port setting
        port = self.settings.get(PORT_SETTING)
        baudrate = self.settings.get(BAUDRATE_SETTING)

        # If no port has been selected before show serial settings dialog
        if port is None:
            if self.show_serialdlg() == QDialog.Rejected:
                return
            port = self.settings.get(PORT_SETTING)
            baudrate = self.settings.get(BAUDRATE_SETTING)

        # Serial connection
        try:
            self.serial.port = port
            self.serial.baudrate = baudrate
            self.serial.open()
        except ValueError:
            QMessageBox.critical(
                self, QCoreApplication.applicationName(),
                self.tr(""Serial parameters e.g. baudrate, databits are out ""
                        ""of range."")
            )
        except SerialException:
            QMessageBox.critical(
                self, QCoreApplication.applicationName(),
                self.tr(""The device '%s' can not be found or can not be ""
                        ""configured."" % port)
            )
        else:
            self.worker = SerialWorker(self.serial, self)
            self.worker.data_received.connect(self.receive_serialdata)
            self.worker.start()

            self.connectAction.setText(self.tr(""Disconnect""))
            self.connectAction.setIcon(QIcon(pixmap(""network-disconnect-3.png"")))
            self.serialdlgAction.setEnabled(False)
            self.connectionstateLabel.setText(
                self.tr(""Connected to %s"") % port)
            self._connected = True
            self.objectexplorer.refresh()

    def disconnect(self):
        self.worker.quit()
        self.serial.close()
        self.connectAction.setText(self.tr(""Connect""))
        self.connectAction.setIcon(QIcon(pixmap(""network-connect-3.png"")))
        self.serialdlgAction.setEnabled(True)
        self.connectionstateLabel.setText(self.tr(""Not connected""))
        self._connected = False
        self.objectexplorer.refresh()

    def show_savecfg_dlg(self):
        filename, _ = QFileDialog.getSaveFileName(
            self, self.tr(""Save configuration file...""),
            directory=os.path.expanduser(""~""),
            filter=""Json file (*.json)""
        )

        if filename:
            self.filename = filename
            self.save_file()

    def save_file(self):
        if self.filename is not None:
            config_string = self.rootnode.dump()
            with open(self.filename, 'w') as f:
                f.write(config_string)
            self.dirty = False
        else:
            self.show_savecfg_dlg()

    def show_opencfg_dlg(self):
        # show file dialog
        filename, _ = QFileDialog.getOpenFileName(
            self, self.tr(""Open configuration file...""),
            directory=os.path.expanduser(""~""),
            filter=self.tr(""Json file (*.json);;All files (*.*)"")
        )

        # load config file
        if filename:
            self.load_file(filename)

    def refresh_window_title(self):
        s = ""%s %s"" % (QCoreApplication.applicationName(),
                       QCoreApplication.applicationVersion())
        if self.filename is not None:
            s += "" - "" + self.filename
        if self.dirty:
            s += ""*""
        self.setWindowTitle(s)

    def start_recording(self):
        self.recording_enabled = True
        self.startrecordingAction.setEnabled(False)
        self.stoprecordingAction.setEnabled(True)

    def stop_recording(self):
        self.recording_enabled = False
        self.startrecordingAction.setEnabled(True)
        self.stoprecordingAction.setEnabled(False)

    def export_csv(self):
        filename, _ = QFileDialog.getSaveFileName(
            self, QCoreApplication.applicationName(),
            filter=""CSV files(*.csv);;All files (*.*)""
        )

        if filename == """":
            return

        # get current dataframe and export to csv
        df = self.recordWidget.dataframe
        decimal = self.settings.get(DECIMAL_SETTING)
        df = df.applymap(lambda x: str(x).replace(""."", decimal))
        df.to_csv(
            filename, index_label=""time"",
            sep=self.settings.get(SEPARATOR_SETTING)
        )

    def clear_record(self):
        self.recordWidget.clear()

    def show_recordsettings(self):
        dlg = CSVSettingsDialog(self)
        dlg.exec_()

    # filename property
    @property
    def filename(self):
        return self._filename

    @filename.setter
    def filename(self, value=""""):
        self._filename = value
        self.refresh_window_title()

    # dirty property
    @property
    def dirty(self):
        return self._dirty

    @dirty.setter
    def dirty(self, value):
        self._dirty = value
        self.refresh_window_title()

    def set_dirty(self):
        self.dirty = True

    # connected property
    @property
    def connected(self):
        return self._connected
",Python
"from django.conf.urls import patterns, include, url

import views

urlpatterns = patterns('',
    url(r'^logout', views.logout, name='logout'),
    url(r'^newUser', views.newUser, name='newUser'),
    url(r'^appHandler', views.appHandler, name='appHandler'),
    url(r'^passToLogin', views.loginByPassword, name='passToLogin'),
    url(r'^signToLogin', views.loginBySignature, name='signToLogin'),
    url(r'^authUserHandler', views.authUserHandler, name='authUserHandler'),
)
",Python
"from corecat.constants import OBJECT_CODES, MODEL_VERSION
from ._sqlalchemy import Base, CoreCatBaseMixin
from ._sqlalchemy import Column, \
    Integer, \
    String, Text


class Project(CoreCatBaseMixin, Base):
    """"""Project Model class represent for the 'projects' table
    which is used to store project's basic information.""""""

    # Add the real table name here.
    # TODO: Add the database prefix here
    __tablename__ = 'project'

    # Column definition
    project_id = Column('id', Integer,
                        primary_key=True,
                        autoincrement=True
                        )
    project_name = Column('name', String(100),
                          nullable=False
                          )
    project_description = Column('description', Text,
                                 nullable=True
                                 )

    # Relationship
    # TODO: Building relationship

    def __init__(self, project_name,
                 created_by_user_id,
                 **kwargs):
        """"""
        Constructor of Project Model Class.

        :param project_name: Name of the project.
        :param created_by_user_id: Project is created under this user ID.
        :param project_description: Description of the project.
        """"""

        self.set_up_basic_information(
            MODEL_VERSION[OBJECT_CODES['Project']],
            created_by_user_id
        )
        self.project_name = project_name
        self.project_description = kwargs.get('project_description', None)
",Python
"#ifndef __CXXU_TYPE_TRAITS_H__
#define __CXXU_TYPE_TRAITS_H__

#include <type_traits>
#include <memory>

namespace cxxu {

template <typename T>
struct is_shared_ptr_helper : std::false_type
{
    typedef T element_type;

    static
    element_type& deref(element_type& e)
    { return e; }

    static
    const element_type& deref(const element_type& e)
    { return e; }
};

template <typename T>
struct is_shared_ptr_helper<std::shared_ptr<T>> : std::true_type
{
    typedef typename std::remove_cv<T>::type element_type;
    typedef std::shared_ptr<element_type> ptr_type;

    static
    element_type& deref(ptr_type& p)
    { return *p; }

    static
    const element_type& deref(const ptr_type& p)
    { return *p; }
};

template <typename T>
struct is_shared_ptr
: is_shared_ptr_helper<typename std::remove_cv<T>::type>
{};

} // namespace cxxu

#endif // __CXXU_TYPE_TRAITS_H__
",C++
"//-----------------------------------------------------------------------------
//	Декодер Mpeg Layer 1,2,3
//	Копонент звукового двигателя Шквал
//	команда		: AntiTank
//	разработчик	: Гилязетдинов Марат (Марыч)
//-----------------------------------------------------------------------------

// включения
#include <string.h>
#include <math.h>

#include ""MpegDecoder.h""

void CDecompressMpeg::imdct_init()
{
	int k, p, n;
	double t, pi;
	n = 18;
	pi = 4.0 * atan(1.0);
	t = pi / (4 * n);

	for (p = 0; p < n; p++)
		w[p] = (float) (2.0 * cos(t * (2 * p + 1)));

	for (p = 0; p < 9; p++)
		w2[p] = (float) (2.0 * cos(2 * t * (2 * p + 1)));

	t = pi / (2 * n);
	for (k = 0; k < 9; k++) {
		for (p = 0; p < 4; p++)
			coef[k][p] = (float) (cos(t * (2 * k) * (2 * p + 1)));
	}

	n = 6;
	pi = 4.0 * atan(1.0);
	t = pi / (4 * n);

	for (p = 0; p < n; p++)
		v[p] = (float) (2.0 * cos(t * (2 * p + 1)));

	for (p = 0; p < 3; p++)
		v2[p] = (float) (2.0 * cos(2 * t * (2 * p + 1)));

	t = pi / (2 * n);
	k = 1;
	p = 0;
	coef87 = (float) (cos(t * (2 * k) * (2 * p + 1)));

	for (p = 0; p < 6; p++)
		v[p] = v[p] / 2.0f;

	coef87 = (float) (2.0 * coef87);
}

void CDecompressMpeg::imdct18(float f[18])	/* 18 point */
{
	int p;
	float a[9], b[9];
	float ap, bp, a8p, b8p;
	float g1, g2;

	for (p = 0; p < 4; p++) {
		g1 = w[p] * f[p];
		g2 = w[17 - p] * f[17 - p];
		ap = g1 + g2;		// a[p]

		bp = w2[p] * (g1 - g2);	// b[p]

		g1 = w[8 - p] * f[8 - p];
		g2 = w[9 + p] * f[9 + p];
		a8p = g1 + g2;		// a[8-p]

		b8p = w2[8 - p] * (g1 - g2);	// b[8-p]

		a[p] = ap + a8p;
		a[5 + p] = ap - a8p;
		b[p] = bp + b8p;
		b[5 + p] = bp - b8p;
	}

	g1 = w[p] * f[p];
	g2 = w[17 - p] * f[17 - p];
	a[p] = g1 + g2;
	b[p] = w2[p] * (g1 - g2);


	f[0] = 0.5f * (a[0] + a[1] + a[2] + a[3] + a[4]);
	f[1] = 0.5f * (b[0] + b[1] + b[2] + b[3] + b[4]);

	f[2] = coef[1][0] * a[5] +
		coef[1][1] * a[6] +
		coef[1][2] * a[7] +
		coef[1][3] * a[8];
	f[3] = coef[1][0] * b[5] +
		coef[1][1] * b[6] +
		coef[1][2] * b[7] +
		coef[1][3] * b[8] -
		f[1];
	f[1] = f[1] - f[0];
	f[2] = f[2] - f[1];

	f[4] = coef[2][0] * a[0] +
		coef[2][1] * a[1] +
		coef[2][2] * a[2] +
		coef[2][3] * a[3] -
		a[4];
	f[5] = coef[2][0] * b[0] +
		coef[2][1] * b[1] +
		coef[2][2] * b[2] +
		coef[2][3] * b[3] -
		b[4] -
		f[3];
	f[3] = f[3] - f[2];
	f[4] = f[4] - f[3];

	f[6] = coef[3][0] * (a[5] - a[7] - a[8]);
	f[7] = coef[3][0] * (b[5] - b[7] - b[8]) - f[5];
	f[5] = f[5] - f[4];
	f[6] = f[6] - f[5];

	f[8] = coef[4][0] * a[0] +
		coef[4][1] * a[1] +
		coef[4][2] * a[2] +
		coef[4][3] * a[3] +
		a[4];
	f[9] = coef[4][0] * b[0] +
		coef[4][1] * b[1] +
		coef[4][2] * b[2] +
		coef[4][3] * b[3] +
		b[4] -
		f[7];
	f[7] = f[7] - f[6];
	f[8] = f[8] - f[7];

	f[10] = coef[5][0] * a[5] +
		coef[5][1] * a[6] +
		coef[5][2] * a[7] +
		coef[5][3] * a[8];
	f[11] = coef[5][0] * b[5] +
		coef[5][1] * b[6] +
		coef[5][2] * b[7] +
		coef[5][3] * b[8] -
		f[9];
	f[9] = f[9] - f[8];
	f[10] = f[10] - f[9];

	f[12] = 0.5f * (a[0] + a[2] + a[3]) - a[1] - a[4];
	f[13] = 0.5f * (b[0] + b[2] + b[3]) - b[1] - b[4] - f[11];
	f[11] = f[11] - f[10];
	f[12] = f[12] - f[11];

	f[14] = coef[7][0] * a[5] +
		coef[7][1] * a[6] +
		coef[7][2] * a[7] +
		coef[7][3] * a[8];
	f[15] = coef[7][0] * b[5] +
		coef[7][1] * b[6] +
		coef[7][2] * b[7] +
		coef[7][3] * b[8] -
		f[13];
	f[13] = f[13] - f[12];
	f[14] = f[14] - f[13];

	f[16] = coef[8][0] * a[0] +
		coef[8][1] * a[1] +
		coef[8][2] * a[2] +
		coef[8][3] * a[3] +
		a[4];
	f[17] = coef[8][0] * b[0] +
		coef[8][1] * b[1] +
		coef[8][2] * b[2] +
		coef[8][3] * b[3] +
		b[4] -
		f[15];
	f[15] = f[15] - f[14];
	f[16] = f[16] - f[15];
	f[17] = f[17] - f[16];
}

/*--------------------------------------------------------------------*/
/* does 3, 6 pt dct.  changes order from f[i][window] c[window][i] */
void CDecompressMpeg::imdct6_3(float f[])	/* 6 point */
{
	int w;
	float buf[18];
	float* a,* c;		// b[i] = a[3+i]

	float g1, g2;
	float a02, b02;

	c = f;
	a = buf;
	for (w = 0; w < 3; w++) {
		g1 = v[0] * f[3 * 0];
		g2 = v[5] * f[3 * 5];
		a[0] = g1 + g2;
		a[3 + 0] = v2[0] * (g1 - g2);

		g1 = v[1] * f[3 * 1];
		g2 = v[4] * f[3 * 4];
		a[1] = g1 + g2;
		a[3 + 1] = v2[1] * (g1 - g2);

		g1 = v[2] * f[3 * 2];
		g2 = v[3] * f[3 * 3];
		a[2] = g1 + g2;
		a[3 + 2] = v2[2] * (g1 - g2);

		a += 6;
		f++;
	}

	a = buf;
	for (w = 0; w < 3; w++) {
		a02 = (a[0] + a[2]);
		b02 = (a[3 + 0] + a[3 + 2]);
		c[0] = a02 + a[1];
		c[1] = b02 + a[3 + 1];
		c[2] = coef87 * (a[0] - a[2]);
		c[3] = coef87 * (a[3 + 0] - a[3 + 2]) - c[1];
		c[1] = c[1] - c[0];
		c[2] = c[2] - c[1];
		c[4] = a02 - a[1] - a[1];
		c[5] = b02 - a[3 + 1] - a[3 + 1] - c[3];
		c[3] = c[3] - c[2];
		c[4] = c[4] - c[3];
		c[5] = c[5] - c[4];
		a += 6;
		c += 6;
	}
}


void CDecompressMpeg::fdct_init()		/* gen coef for N=32 (31 coefs) */
{
	int p, n, i, k;
	double t, pi;

	pi = 4.0 * atan(1.0);
	n = 16;
	k = 0;
	for (i = 0; i < 5; i++, n = n / 2) {
		for (p = 0; p < n; p++, k++) {
			t = (pi / (4 * n)) * (2 * p + 1);
			coef32[k] = (float) (0.50 / cos(t));
		}
	}
}

void CDecompressMpeg::forward_bf(int m, int n, float x[], float f[],
	float coef[])
{
	int i, j, n2;
	int p, q, p0, k;

	p0 = 0;
	n2 = n >> 1;
	for (i = 0; i < m; i++, p0 += n) {
		k = 0;
		p = p0;
		q = p + n - 1;
		for (j = 0; j < n2; j++, p++, q--, k++) {
			f[p] = x[p] + x[q];
			f[n2 + p] = coef[k] * (x[p] - x[q]);
		}
	}
}

void CDecompressMpeg::back_bf(int m, int n, float x[], float f[])
{
	int i, j, n2, n21;
	int p, q, p0;

	p0 = 0;
	n2 = n >> 1;
	n21 = n2 - 1;
	for (i = 0; i < m; i++, p0 += n) {
		p = p0;
		q = p0;
		for (j = 0; j < n2; j++, p += 2, q++)
			f[p] = x[q];
		p = p0 + 1;
		for (j = 0; j < n21; j++, p += 2, q++)
			f[p] = x[q] + x[q + 1];
		f[p] = x[q];
	}
}

void CDecompressMpeg::fdct32(float x[], float c[])
{
	float a[32];			/* ping pong buffers */
	float b[32];
	int p, q;

	// если эквалайзер включен занести значения
	/*	if (m_enableEQ) {
			for (p = 0; p < 32; p++)
				x[p] *= m_equalizer[p];
		}*/
	/* special first stage */
	for (p = 0, q = 31; p < 16; p++, q--) {
		a[p] = x[p] + x[q];
		a[16 + p] = coef32[p] * (x[p] - x[q]);
	}

	forward_bf(2, 16, a, b, coef32 + 16);
	forward_bf(4, 8, b, a, coef32 + 16 + 8);
	forward_bf(8, 4, a, b, coef32 + 16 + 8 + 4);
	forward_bf(16, 2, b, a, coef32 + 16 + 8 + 4 + 2);
	back_bf(8, 4, a, b);
	back_bf(4, 8, b, a);
	back_bf(2, 16, a, b);
	back_bf(1, 32, b, c);
}

void CDecompressMpeg::fdct32_dual(float x[], float c[])
{
	float a[32];			/* ping pong buffers */
	float b[32];
	int p, pp, qq;

	/*	if (m_enableEQ) {
			for (p = 0; p < 32; p++)
				x[p] *= m_equalizer[p];
		}*/

	/* special first stage for dual chan (interleaved x) */
	pp = 0;
	qq = 2 * 31;
	for (p = 0; p < 16; p++, pp += 2, qq -= 2) {
		a[p] = x[pp] + x[qq];
		a[16 + p] = coef32[p] * (x[pp] - x[qq]);
	}
	forward_bf(2, 16, a, b, coef32 + 16);
	forward_bf(4, 8, b, a, coef32 + 16 + 8);
	forward_bf(8, 4, a, b, coef32 + 16 + 8 + 4);
	forward_bf(16, 2, b, a, coef32 + 16 + 8 + 4 + 2);
	back_bf(8, 4, a, b);
	back_bf(4, 8, b, a);
	back_bf(2, 16, a, b);
	back_bf(1, 32, b, c);
}

void CDecompressMpeg::fdct32_dual_mono(float x[], float c[])
{
	float a[32];			/* ping pong buffers */
	float b[32];
	float t1, t2;
	int p, pp, qq;

	/* special first stage  */
	pp = 0;
	qq = 2 * 31;
	for (p = 0; p < 16; p++, pp += 2, qq -= 2) {
		t1 = 0.5F * (x[pp] + x[pp + 1]);
		t2 = 0.5F * (x[qq] + x[qq + 1]);
		a[p] = t1 + t2;
		a[16 + p] = coef32[p] * (t1 - t2);
	}
	forward_bf(2, 16, a, b, coef32 + 16);
	forward_bf(4, 8, b, a, coef32 + 16 + 8);
	forward_bf(8, 4, a, b, coef32 + 16 + 8 + 4);
	forward_bf(16, 2, b, a, coef32 + 16 + 8 + 4 + 2);
	back_bf(8, 4, a, b);
	back_bf(4, 8, b, a);
	back_bf(2, 16, a, b);
	back_bf(1, 32, b, c);
}

void CDecompressMpeg::fdct16(float x[], float c[])
{
	float a[16];			/* ping pong buffers */
	float b[16];
	int p, q;

	/* special first stage (drop highest sb) */
	a[0] = x[0];
	a[8] = coef32[16] * x[0];
	for (p = 1, q = 14; p < 8; p++, q--) {
		a[p] = x[p] + x[q];
		a[8 + p] = coef32[16 + p] * (x[p] - x[q]);
	}
	forward_bf(2, 8, a, b, coef32 + 16 + 8);
	forward_bf(4, 4, b, a, coef32 + 16 + 8 + 4);
	forward_bf(8, 2, a, b, coef32 + 16 + 8 + 4 + 2);
	back_bf(4, 4, b, a);
	back_bf(2, 8, a, b);
	back_bf(1, 16, b, c);
}

void CDecompressMpeg::fdct16_dual(float x[], float c[])
{
	float a[16];			/* ping pong buffers */
	float b[16];
	int p, pp, qq;

	/* special first stage for interleaved input */
	a[0] = x[0];
	a[8] = coef32[16] * x[0];
	pp = 2;
	qq = 2 * 14;
	for (p = 1; p < 8; p++, pp += 2, qq -= 2) {
		a[p] = x[pp] + x[qq];
		a[8 + p] = coef32[16 + p] * (x[pp] - x[qq]);
	}
	forward_bf(2, 8, a, b, coef32 + 16 + 8);
	forward_bf(4, 4, b, a, coef32 + 16 + 8 + 4);
	forward_bf(8, 2, a, b, coef32 + 16 + 8 + 4 + 2);
	back_bf(4, 4, b, a);
	back_bf(2, 8, a, b);
	back_bf(1, 16, b, c);
}

void CDecompressMpeg::fdct16_dual_mono(float x[], float c[])
{
	float a[16];			/* ping pong buffers */
	float b[16];
	float t1, t2;
	int p, pp, qq;

	/* special first stage  */
	a[0] = 0.5F * (x[0] + x[1]);
	a[8] = coef32[16] * a[0];
	pp = 2;
	qq = 2 * 14;
	for (p = 1; p < 8; p++, pp += 2, qq -= 2) {
		t1 = 0.5F * (x[pp] + x[pp + 1]);
		t2 = 0.5F * (x[qq] + x[qq + 1]);
		a[p] = t1 + t2;
		a[8 + p] = coef32[16 + p] * (t1 - t2);
	}
	forward_bf(2, 8, a, b, coef32 + 16 + 8);
	forward_bf(4, 4, b, a, coef32 + 16 + 8 + 4);
	forward_bf(8, 2, a, b, coef32 + 16 + 8 + 4 + 2);
	back_bf(4, 4, b, a);
	back_bf(2, 8, a, b);
	back_bf(1, 16, b, c);
}

void CDecompressMpeg::fdct8(float x[], float c[])
{
	float a[8];			/* ping pong buffers */
	float b[8];
	int p, q;

	/* special first stage  */

	b[0] = x[0] + x[7];
	b[4] = coef32[16 + 8] * (x[0] - x[7]);
	for (p = 1, q = 6; p < 4; p++, q--) {
		b[p] = x[p] + x[q];
		b[4 + p] = coef32[16 + 8 + p] * (x[p] - x[q]);
	}

	forward_bf(2, 4, b, a, coef32 + 16 + 8 + 4);
	forward_bf(4, 2, a, b, coef32 + 16 + 8 + 4 + 2);
	back_bf(2, 4, b, a);
	back_bf(1, 8, a, c);
}

void CDecompressMpeg::fdct8_dual(float x[], float c[])
{
	float a[8];			/* ping pong buffers */
	float b[8];
	int p, pp, qq;

	/* special first stage for interleaved input */
	b[0] = x[0] + x[14];
	b[4] = coef32[16 + 8] * (x[0] - x[14]);
	pp = 2;
	qq = 2 * 6;
	for (p = 1; p < 4; p++, pp += 2, qq -= 2) {
		b[p] = x[pp] + x[qq];
		b[4 + p] = coef32[16 + 8 + p] * (x[pp] - x[qq]);
	}
	forward_bf(2, 4, b, a, coef32 + 16 + 8 + 4);
	forward_bf(4, 2, a, b, coef32 + 16 + 8 + 4 + 2);
	back_bf(2, 4, b, a);
	back_bf(1, 8, a, c);
}

void CDecompressMpeg::fdct8_dual_mono(float x[], float c[])
{
	float a[8];			/* ping pong buffers */
	float b[8];
	float t1, t2;
	int p, pp, qq;

	/* special first stage  */
	t1 = 0.5F * (x[0] + x[1]);
	t2 = 0.5F * (x[14] + x[15]);
	b[0] = t1 + t2;
	b[4] = coef32[16 + 8] * (t1 - t2);
	pp = 2;
	qq = 2 * 6;
	for (p = 1; p < 4; p++, pp += 2, qq -= 2) {
		t1 = 0.5F * (x[pp] + x[pp + 1]);
		t2 = 0.5F * (x[qq] + x[qq + 1]);
		b[p] = t1 + t2;
		b[4 + p] = coef32[16 + 8 + p] * (t1 - t2);
	}
	forward_bf(2, 4, b, a, coef32 + 16 + 8 + 4);
	forward_bf(4, 2, a, b, coef32 + 16 + 8 + 4 + 2);
	back_bf(2, 4, b, a);
	back_bf(1, 8, a, c);
}

void CDecompressMpeg::bitget_init(unsigned char* buf)
{
	bs_ptr0 = bs_ptr = buf;
	bits = 0;
	bitbuf = 0;
}

int CDecompressMpeg::bitget(int n)
{
	unsigned int x;

	if (bits < n) {
		/* refill bit buf if necessary */
		while (bits <= 24) {
			bitbuf = (bitbuf << 8) | *bs_ptr++;
			bits += 8;
		}
	}
	bits -= n;
	x = bitbuf >> bits;
	bitbuf -= x << bits;
	return x;
}

void CDecompressMpeg::bitget_skip(int n)
{
	unsigned int k;

	if (bits < n) {
		n -= bits;
		k = n >> 3;
		/*--- bytes = n/8 --*/
		bs_ptr += k;
		n -= k << 3;
		bitbuf = *bs_ptr++;
		bits = 8;
	}
	bits -= n;
	bitbuf -= (bitbuf >> bits) << bits;
}

void CDecompressMpeg::bitget_init_end(unsigned char* buf_end)
{
	bs_ptr_end = buf_end;
}

int CDecompressMpeg::bitget_overrun()
{
	return bs_ptr > bs_ptr_end;
}

int CDecompressMpeg::bitget_bits_used()
{
	unsigned int n;

	n = ((bs_ptr - bs_ptr0) << 3) - bits;
	return n;
}

void CDecompressMpeg::bitget_check(int n)
{
	if (bits < n) {
		while (bits <= 24) {
			bitbuf = (bitbuf << 8) | *bs_ptr++;
			bits += 8;
		}
	}
}

/* only huffman */

/*----- get n bits  - checks for n+2 avail bits (linbits+sign) -----*/
int CDecompressMpeg::bitget_lb(int n)
{
	unsigned int x;

	if (bits < (n + 2)) {
		/* refill bit buf if necessary */
		while (bits <= 24) {
			bitbuf = (bitbuf << 8) | *bs_ptr++;
			bits += 8;
		}
	}
	bits -= n;
	x = bitbuf >> bits;
	bitbuf -= x << bits;
	return x;
}

/*------------- get n bits but DO NOT remove from bitstream --*/
int CDecompressMpeg::bitget2(int n)
{
	unsigned int x;

	if (bits < (MAXBITS + 2)) {
		/* refill bit buf if necessary */
		while (bits <= 24) {
			bitbuf = (bitbuf << 8) | *bs_ptr++;
			bits += 8;
		}
	}
	x = bitbuf >> (bits - n);
	return x;
}

/*------------- remove n bits from bitstream ---------*/
void CDecompressMpeg::bitget_purge(int n)
{
	bits -= n;
	bitbuf -= (bitbuf >> bits) << bits;
}

void CDecompressMpeg::mac_bitget_check(int n)
{
	if (bits < n) {
		while (bits <= 24) {
			bitbuf = (bitbuf << 8) | *bs_ptr++;
			bits += 8;
		}
	}
}

int CDecompressMpeg::mac_bitget(int n)
{
	unsigned int code;

	bits -= n;
	code = bitbuf >> bits;
	bitbuf -= code << bits;
	return code;
}

int CDecompressMpeg::mac_bitget2(int n)
{
	return (bitbuf >> (bits - n));
}

int CDecompressMpeg::mac_bitget_1bit()
{
	unsigned int code;

	bits--;
	code = bitbuf >> bits;
	bitbuf -= code << bits;
	return code;
}

void CDecompressMpeg::mac_bitget_purge(int n)
{
	bits -= n;
	bitbuf -= (bitbuf >> bits) << bits;
}

void CDecompressMpeg::windowB(float* vbuf, int vb_ptr, unsigned char* pcm)
{
	int i, j;
	int si, bx;
	float* coef;
	float sum;
	long tmp;

	si = vb_ptr + 16;
	bx = (si + 32) & 511;
	coef = wincoef;

	/*-- first 16 --*/
	for (i = 0; i < 16; i++) {
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef++) * vbuf[si];
			si = (si + 64) & 511;
			sum -= (*coef++) * vbuf[bx];
			bx = (bx + 64) & 511;
		}
		si++;
		bx--;
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm++ = ((unsigned char) (tmp >> 8)) ^ 0x80;
	}
	/*--  special case --*/
	sum = 0.0F;
	for (j = 0; j < 8; j++) {
		sum += (*coef++) * vbuf[bx];
		bx = (bx + 64) & 511;
	}
	tmp = (long) sum;
	if (tmp > 32767)
		tmp = 32767;
	else if (tmp < -32768)
		tmp = -32768;
	*pcm++ = ((unsigned char) (tmp >> 8)) ^ 0x80;
	/*-- last 15 --*/
	coef = wincoef + 255;	/* back pass through coefs */
	for (i = 0; i < 15; i++) {
		si--;
		bx++;
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef--) * vbuf[si];
			si = (si + 64) & 511;
			sum += (*coef--) * vbuf[bx];
			bx = (bx + 64) & 511;
		}
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm++ = ((unsigned char) (tmp >> 8)) ^ 0x80;
	}
}

void CDecompressMpeg::windowB_dual(float* vbuf, int vb_ptr, unsigned char* pcm)
{
	int i, j;			/* dual window interleaves output */
	int si, bx;
	float* coef;
	float sum;
	long tmp;

	si = vb_ptr + 16;
	bx = (si + 32) & 511;
	coef = wincoef;

	/*-- first 16 --*/
	for (i = 0; i < 16; i++) {
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef++) * vbuf[si];
			si = (si + 64) & 511;
			sum -= (*coef++) * vbuf[bx];
			bx = (bx + 64) & 511;
		}
		si++;
		bx--;
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm = ((unsigned char) (tmp >> 8)) ^ 0x80;
		pcm += 2;
	}
	/*--  special case --*/
	sum = 0.0F;
	for (j = 0; j < 8; j++) {
		sum += (*coef++) * vbuf[bx];
		bx = (bx + 64) & 511;
	}
	tmp = (long) sum;
	if (tmp > 32767)
		tmp = 32767;
	else if (tmp < -32768)
		tmp = -32768;
	*pcm = ((unsigned char) (tmp >> 8)) ^ 0x80;
	pcm += 2;
	/*-- last 15 --*/
	coef = wincoef + 255;	/* back pass through coefs */
	for (i = 0; i < 15; i++) {
		si--;
		bx++;
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef--) * vbuf[si];
			si = (si + 64) & 511;
			sum += (*coef--) * vbuf[bx];
			bx = (bx + 64) & 511;
		}
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm = ((unsigned char) (tmp >> 8)) ^ 0x80;
		pcm += 2;
	}
}

void CDecompressMpeg::windowB16(float* vbuf, int vb_ptr, unsigned char* pcm)
{
	int i, j;
	unsigned char si, bx;
	float* coef;
	float sum;
	long tmp;

	si = vb_ptr + 8;
	bx = si + 16;
	coef = wincoef;

	/*-- first 8 --*/
	for (i = 0; i < 8; i++) {
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef++) * vbuf[si];
			si += 32;
			sum -= (*coef++) * vbuf[bx];
			bx += 32;
		}
		si++;
		bx--;
		coef += 16;
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm++ = ((unsigned char) (tmp >> 8)) ^ 0x80;
	}
	/*--  special case --*/
	sum = 0.0F;
	for (j = 0; j < 8; j++) {
		sum += (*coef++) * vbuf[bx];
		bx += 32;
	}
	tmp = (long) sum;
	if (tmp > 32767)
		tmp = 32767;
	else if (tmp < -32768)
		tmp = -32768;
	*pcm++ = ((unsigned char) (tmp >> 8)) ^ 0x80;
	/*-- last 7 --*/
	coef = wincoef + 255;	/* back pass through coefs */
	for (i = 0; i < 7; i++) {
		coef -= 16;
		si--;
		bx++;
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef--) * vbuf[si];
			si += 32;
			sum += (*coef--) * vbuf[bx];
			bx += 32;
		}
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm++ = ((unsigned char) (tmp >> 8)) ^ 0x80;
	}
}

void CDecompressMpeg::windowB16_dual(float* vbuf, int vb_ptr,
	unsigned char* pcm)
{
	int i, j;
	unsigned char si, bx;
	float* coef;
	float sum;
	long tmp;

	si = vb_ptr + 8;
	bx = si + 16;
	coef = wincoef;

	/*-- first 8 --*/
	for (i = 0; i < 8; i++) {
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef++) * vbuf[si];
			si += 32;
			sum -= (*coef++) * vbuf[bx];
			bx += 32;
		}
		si++;
		bx--;
		coef += 16;
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm = ((unsigned char) (tmp >> 8)) ^ 0x80;
		pcm += 2;
	}
	/*--  special case --*/
	sum = 0.0F;
	for (j = 0; j < 8; j++) {
		sum += (*coef++) * vbuf[bx];
		bx += 32;
	}
	tmp = (long) sum;
	if (tmp > 32767)
		tmp = 32767;
	else if (tmp < -32768)
		tmp = -32768;
	*pcm = ((unsigned char) (tmp >> 8)) ^ 0x80;
	pcm += 2;
	/*-- last 7 --*/
	coef = wincoef + 255;	/* back pass through coefs */
	for (i = 0; i < 7; i++) {
		coef -= 16;
		si--;
		bx++;
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef--) * vbuf[si];
			si += 32;
			sum += (*coef--) * vbuf[bx];
			bx += 32;
		}
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm = ((unsigned char) (tmp >> 8)) ^ 0x80;
		pcm += 2;
	}
}

void CDecompressMpeg::windowB8(float* vbuf, int vb_ptr, unsigned char* pcm)
{
	int i, j;
	int si, bx;
	float* coef;
	float sum;
	long tmp;

	si = vb_ptr + 4;
	bx = (si + 8) & 127;
	coef = wincoef;

	/*-- first 4 --*/
	for (i = 0; i < 4; i++) {
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef++) * vbuf[si];
			si = (si + 16) & 127;
			sum -= (*coef++) * vbuf[bx];
			bx = (bx + 16) & 127;
		}
		si++;
		bx--;
		coef += 48;
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm++ = ((unsigned char) (tmp >> 8)) ^ 0x80;
	}
	/*--  special case --*/
	sum = 0.0F;
	for (j = 0; j < 8; j++) {
		sum += (*coef++) * vbuf[bx];
		bx = (bx + 16) & 127;
	}
	tmp = (long) sum;
	if (tmp > 32767)
		tmp = 32767;
	else if (tmp < -32768)
		tmp = -32768;
	*pcm++ = ((unsigned char) (tmp >> 8)) ^ 0x80;
	/*-- last 3 --*/
	coef = wincoef + 255;	/* back pass through coefs */
	for (i = 0; i < 3; i++) {
		coef -= 48;
		si--;
		bx++;
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef--) * vbuf[si];
			si = (si + 16) & 127;
			sum += (*coef--) * vbuf[bx];
			bx = (bx + 16) & 127;
		}
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm++ = ((unsigned char) (tmp >> 8)) ^ 0x80;
	}
}
/*--------------- 8 pt dual window (interleaved output) -----------------*/
void CDecompressMpeg::windowB8_dual(float* vbuf, int vb_ptr,
	unsigned char* pcm)
{
	int i, j;
	int si, bx;
	float* coef;
	float sum;
	long tmp;

	si = vb_ptr + 4;
	bx = (si + 8) & 127;
	coef = wincoef;

	/*-- first 4 --*/
	for (i = 0; i < 4; i++) {
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef++) * vbuf[si];
			si = (si + 16) & 127;
			sum -= (*coef++) * vbuf[bx];
			bx = (bx + 16) & 127;
		}
		si++;
		bx--;
		coef += 48;
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm = ((unsigned char) (tmp >> 8)) ^ 0x80;
		pcm += 2;
	}
	/*--  special case --*/
	sum = 0.0F;
	for (j = 0; j < 8; j++) {
		sum += (*coef++) * vbuf[bx];
		bx = (bx + 16) & 127;
	}
	tmp = (long) sum;
	if (tmp > 32767)
		tmp = 32767;
	else if (tmp < -32768)
		tmp = -32768;
	*pcm = ((unsigned char) (tmp >> 8)) ^ 0x80;
	pcm += 2;
	/*-- last 3 --*/
	coef = wincoef + 255;	/* back pass through coefs */
	for (i = 0; i < 3; i++) {
		coef -= 48;
		si--;
		bx++;
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef--) * vbuf[si];
			si = (si + 16) & 127;
			sum += (*coef--) * vbuf[bx];
			bx = (bx + 16) & 127;
		}
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm = ((unsigned char) (tmp >> 8)) ^ 0x80;
		pcm += 2;
	}
}

void CDecompressMpeg::sbtB_mono(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	for (i = 0; i < n; i++) {
		fdct32(sample, vbuf + vb_ptr);
		windowB(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 32) & 511;
		pcm += 32;
	}
}

void CDecompressMpeg::sbtB_dual(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	for (i = 0; i < n; i++) {
		fdct32_dual(sample, vbuf + vb_ptr);
		fdct32_dual(sample + 1, vbuf2 + vb_ptr);
		windowB_dual(vbuf, vb_ptr, pcm);
		windowB_dual(vbuf2, vb_ptr, pcm + 1);
		sample += 64;
		vb_ptr = (vb_ptr - 32) & 511;
		pcm += 64;
	}
}

void CDecompressMpeg::sbtB_dual_mono(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	for (i = 0; i < n; i++) {
		fdct32_dual_mono(sample, vbuf + vb_ptr);
		windowB(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 32) & 511;
		pcm += 32;
	}
}

void CDecompressMpeg::sbtB_dual_left(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	for (i = 0; i < n; i++) {
		fdct32_dual(sample, vbuf + vb_ptr);
		windowB(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 32) & 511;
		pcm += 32;
	}
}

void CDecompressMpeg::sbtB_dual_right(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	sample++;			/* point to right chan */
	for (i = 0; i < n; i++) {
		fdct32_dual(sample, vbuf + vb_ptr);
		windowB(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 32) & 511;
		pcm += 32;
	}
}

void CDecompressMpeg::sbtB16_mono(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	for (i = 0; i < n; i++) {
		fdct16(sample, vbuf + vb_ptr);
		windowB16(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 16) & 255;
		pcm += 16;
	}
}

void CDecompressMpeg::sbtB16_dual(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	for (i = 0; i < n; i++) {
		fdct16_dual(sample, vbuf + vb_ptr);
		fdct16_dual(sample + 1, vbuf2 + vb_ptr);
		windowB16_dual(vbuf, vb_ptr, pcm);
		windowB16_dual(vbuf2, vb_ptr, pcm + 1);
		sample += 64;
		vb_ptr = (vb_ptr - 16) & 255;
		pcm += 32;
	}
}

void CDecompressMpeg::sbtB16_dual_mono(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	for (i = 0; i < n; i++) {
		fdct16_dual_mono(sample, vbuf + vb_ptr);
		windowB16(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 16) & 255;
		pcm += 16;
	}
}

void CDecompressMpeg::sbtB16_dual_left(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	for (i = 0; i < n; i++) {
		fdct16_dual(sample, vbuf + vb_ptr);
		windowB16(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 16) & 255;
		pcm += 16;
	}
}

void CDecompressMpeg::sbtB16_dual_right(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	sample++;
	for (i = 0; i < n; i++) {
		fdct16_dual(sample, vbuf + vb_ptr);
		windowB16(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 16) & 255;
		pcm += 16;
	}
}

void CDecompressMpeg::sbtB8_mono(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	for (i = 0; i < n; i++) {
		fdct8(sample, vbuf + vb_ptr);
		windowB8(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 8) & 127;
		pcm += 8;
	}
}

void CDecompressMpeg::sbtB8_dual(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	for (i = 0; i < n; i++) {
		fdct8_dual(sample, vbuf + vb_ptr);
		fdct8_dual(sample + 1, vbuf2 + vb_ptr);
		windowB8_dual(vbuf, vb_ptr, pcm);
		windowB8_dual(vbuf2, vb_ptr, pcm + 1);
		sample += 64;
		vb_ptr = (vb_ptr - 8) & 127;
		pcm += 16;
	}
}

void CDecompressMpeg::sbtB8_dual_mono(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	for (i = 0; i < n; i++) {
		fdct8_dual_mono(sample, vbuf + vb_ptr);
		windowB8(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 8) & 127;
		pcm += 8;
	}
}

void CDecompressMpeg::sbtB8_dual_left(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	for (i = 0; i < n; i++) {
		fdct8_dual(sample, vbuf + vb_ptr);
		windowB8(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 8) & 127;
		pcm += 8;
	}
}

void CDecompressMpeg::sbtB8_dual_right(float* sample, void* in_pcm, int n)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	sample++;
	for (i = 0; i < n; i++) {
		fdct8_dual(sample, vbuf + vb_ptr);
		windowB8(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 8) & 127;
		pcm += 8;
	}
}

void CDecompressMpeg::sbtB_mono_L3(float* sample, void* in_pcm, int ch)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	ch = 0;
	for (i = 0; i < 18; i++) {
		fdct32(sample, vbuf + vb_ptr);
		windowB(vbuf, vb_ptr, pcm);
		sample += 32;
		vb_ptr = (vb_ptr - 32) & 511;
		pcm += 32;
	}
}

void CDecompressMpeg::sbtB_dual_L3(float* sample, void* in_pcm, int ch)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	if (ch == 0)
		for (i = 0; i < 18; i++) {
			fdct32(sample, vbuf + vb_ptr);
			windowB_dual(vbuf, vb_ptr, pcm);
			sample += 32;
			vb_ptr = (vb_ptr - 32) & 511;
			pcm += 64;
		}
	else
		for (i = 0; i < 18; i++) {
			fdct32(sample, vbuf2 + vb2_ptr);
			windowB_dual(vbuf2, vb2_ptr, pcm + 1);
			sample += 32;
			vb2_ptr = (vb2_ptr - 32) & 511;
			pcm += 64;
		}
}

void CDecompressMpeg::sbtB16_mono_L3(float* sample, void* in_pcm, int ch)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	ch = 0;
	for (i = 0; i < 18; i++) {
		fdct16(sample, vbuf + vb_ptr);
		windowB16(vbuf, vb_ptr, pcm);
		sample += 32;
		vb_ptr = (vb_ptr - 16) & 255;
		pcm += 16;
	}
}

void CDecompressMpeg::sbtB16_dual_L3(float* sample, void* in_pcm, int ch)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	if (ch == 0) {
		for (i = 0; i < 18; i++) {
			fdct16(sample, vbuf + vb_ptr);
			windowB16_dual(vbuf, vb_ptr, pcm);
			sample += 32;
			vb_ptr = (vb_ptr - 16) & 255;
			pcm += 32;
		}
	} else {
		for (i = 0; i < 18; i++) {
			fdct16(sample, vbuf2 + vb2_ptr);
			windowB16_dual(vbuf2, vb2_ptr, pcm + 1);
			sample += 32;
			vb2_ptr = (vb2_ptr - 16) & 255;
			pcm += 32;
		}
	}
}

void CDecompressMpeg::sbtB8_mono_L3(float* sample, void* in_pcm, int ch)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	ch = 0;
	for (i = 0; i < 18; i++) {
		fdct8(sample, vbuf + vb_ptr);
		windowB8(vbuf, vb_ptr, pcm);
		sample += 32;
		vb_ptr = (vb_ptr - 8) & 127;
		pcm += 8;
	}
}

void CDecompressMpeg::sbtB8_dual_L3(float* sample, void* in_pcm, int ch)
{
	int i;
	unsigned char * pcm = (unsigned char *) in_pcm;

	if (ch == 0) {
		for (i = 0; i < 18; i++) {
			fdct8(sample, vbuf + vb_ptr);
			windowB8_dual(vbuf, vb_ptr, pcm);
			sample += 32;
			vb_ptr = (vb_ptr - 8) & 127;
			pcm += 16;
		}
	} else {
		for (i = 0; i < 18; i++) {
			fdct8(sample, vbuf2 + vb2_ptr);
			windowB8_dual(vbuf2, vb2_ptr, pcm + 1);
			sample += 32;
			vb2_ptr = (vb2_ptr - 8) & 127;
			pcm += 16;
		}
	}
}

// window coefs
float CDecompressMpeg::wincoef[264] = {
	0.000000000f, 0.000442505f, -0.003250122f, 0.007003784f, -0.031082151f,
	0.078628540f, -0.100311279f, 0.572036743f, -1.144989014f, -0.572036743f,
	-0.100311279f, -0.078628540f, -0.031082151f, -0.007003784f, -0.003250122f,
	-0.000442505f, 0.000015259f, 0.000473022f, -0.003326416f, 0.007919312f,
	-0.030517576f, 0.084182739f, -0.090927124f, 0.600219727f, -1.144287109f,
	-0.543823242f, -0.108856201f, -0.073059082f, -0.031478882f, -0.006118774f,
	-0.003173828f, -0.000396729f, 0.000015259f, 0.000534058f, -0.003387451f,
	0.008865356f, -0.029785154f, 0.089706421f, -0.080688477f, 0.628295898f,
	-1.142211914f, -0.515609741f, -0.116577141f, -0.067520142f, -0.031738281f,
	-0.005294800f, -0.003082275f, -0.000366211f, 0.000015259f, 0.000579834f,
	-0.003433228f, 0.009841919f, -0.028884888f, 0.095169067f, -0.069595337f,
	0.656219482f, -1.138763428f, -0.487472534f, -0.123474121f, -0.061996460f,
	-0.031845093f, -0.004486084f, -0.002990723f, -0.000320435f, 0.000015259f,
	0.000625610f, -0.003463745f, 0.010848999f, -0.027801514f, 0.100540161f,
	-0.057617184f, 0.683914185f, -1.133926392f, -0.459472656f, -0.129577637f,
	-0.056533810f, -0.031814575f, -0.003723145f, -0.002899170f, -0.000289917f,
	0.000015259f, 0.000686646f, -0.003479004f, 0.011886597f, -0.026535034f,
	0.105819702f, -0.044784546f, 0.711318970f, -1.127746582f, -0.431655884f,
	-0.134887695f, -0.051132202f, -0.031661987f, -0.003005981f, -0.002792358f,
	-0.000259399f, 0.000015259f, 0.000747681f, -0.003479004f, 0.012939452f,
	-0.025085449f, 0.110946655f, -0.031082151f, 0.738372803f, -1.120223999f,
	-0.404083252f, -0.139450073f, -0.045837402f, -0.031387329f, -0.002334595f,
	-0.002685547f, -0.000244141f, 0.000030518f, 0.000808716f, -0.003463745f,
	0.014022826f, -0.023422241f, 0.115921021f, -0.016510010f, 0.765029907f,
	-1.111373901f, -0.376800537f, -0.143264771f, -0.040634155f, -0.031005858f,
	-0.001693726f, -0.002578735f, -0.000213623f, 0.000030518f, 0.000885010f,
	-0.003417969f, 0.015121460f, -0.021575928f, 0.120697014f, -0.001068115f,
	0.791213989f, -1.101211548f, -0.349868774f, -0.146362305f, -0.035552979f,
	-0.030532837f, -0.001098633f, -0.002456665f, -0.000198364f, 0.000030518f,
	0.000961304f, -0.003372192f, 0.016235352f, -0.019531250f, 0.125259399f,
	0.015228271f, 0.816864014f, -1.089782715f, -0.323318481f, -0.148773193f,
	-0.030609131f, -0.029937742f, -0.000549316f, -0.002349854f, -0.000167847f,
	0.000030518f, 0.001037598f, -0.003280640f, 0.017349243f, -0.017257690f,
	0.129562378f, 0.032379150f, 0.841949463f, -1.077117920f, -0.297210693f,
	-0.150497437f, -0.025817871f, -0.029281614f, -0.000030518f, -0.002243042f,
	-0.000152588f, 0.000045776f, 0.001113892f, -0.003173828f, 0.018463135f,
	-0.014801024f, 0.133590698f, 0.050354004f, 0.866363525f, -1.063217163f,
	-0.271591187f, -0.151596069f, -0.021179199f, -0.028533936f, 0.000442505f,
	-0.002120972f, -0.000137329f, 0.000045776f, 0.001205444f, -0.003051758f,
	0.019577026f, -0.012115479f, 0.137298584f, 0.069168091f, 0.890090942f,
	-1.048156738f, -0.246505737f, -0.152069092f, -0.016708374f, -0.027725220f,
	0.000869751f, -0.002014160f, -0.000122070f, 0.000061035f, 0.001296997f,
	-0.002883911f, 0.020690918f, -0.009231566f, 0.140670776f, 0.088775635f,
	0.913055420f, -1.031936646f, -0.221984863f, -0.151962280f, -0.012420653f,
	-0.026840210f, 0.001266479f, -0.001907349f, -0.000106812f, 0.000061035f,
	0.001388550f, -0.002700806f, 0.021789551f, -0.006134033f, 0.143676758f,
	0.109161377f, 0.935195923f, -1.014617920f, -0.198059082f, -0.151306152f,
	-0.008316040f, -0.025909424f, 0.001617432f, -0.001785278f, -0.000106812f,
	0.000076294f, 0.001480103f, -0.002487183f, 0.022857666f, -0.002822876f,
	0.146255493f, 0.130310059f, 0.956481934f, -0.996246338f, -0.174789429f,
	-0.150115967f, -0.004394531f, -0.024932859f, 0.001937866f, -0.001693726f,
	-0.000091553f, -0.001586914f, -0.023910521f, -0.148422241f, -0.976852417f,
	0.152206421f, 0.000686646f, -0.002227783f, 0.000076294f, 
};

void CDecompressMpeg::window(float* vbuf, int vb_ptr, short* pcm)
{
	int i, j;
	int si, bx;
	float* coef;
	float sum;
	long tmp;

	si = vb_ptr + 16;
	bx = (si + 32) & 511;
	coef = wincoef;

	/*-- first 16 --*/
	for (i = 0; i < 16; i++) {
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef++) * vbuf[si];
			si = (si + 64) & 511;
			sum -= (*coef++) * vbuf[bx];
			bx = (bx + 64) & 511;
		}
		si++;
		bx--;
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm++ = (short) tmp;
	}
	/*--  special case --*/
	sum = 0.0F;
	for (j = 0; j < 8; j++) {
		sum += (*coef++) * vbuf[bx];
		bx = (bx + 64) & 511;
	}
	tmp = (long) sum;
	if (tmp > 32767)
		tmp = 32767;
	else if (tmp < -32768)
		tmp = -32768;
	*pcm++ = (short) tmp;
	/*-- last 15 --*/
	coef = wincoef + 255;	/* back pass through coefs */
	for (i = 0; i < 15; i++) {
		si--;
		bx++;
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef--) * vbuf[si];
			si = (si + 64) & 511;
			sum += (*coef--) * vbuf[bx];
			bx = (bx + 64) & 511;
		}
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm++ = (short) tmp;
	}
}

void CDecompressMpeg::window_dual(float* vbuf, int vb_ptr, short* pcm)
{
	int i, j;			/* dual window interleaves output */
	int si, bx;
	float* coef;
	float sum;
	long tmp;

	si = vb_ptr + 16;
	bx = (si + 32) & 511;
	coef = wincoef;

	/*-- first 16 --*/
	for (i = 0; i < 16; i++) {
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef++) * vbuf[si];
			si = (si + 64) & 511;
			sum -= (*coef++) * vbuf[bx];
			bx = (bx + 64) & 511;
		}
		si++;
		bx--;
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm = (short) tmp;
		pcm += 2;
	}
	/*--  special case --*/
	sum = 0.0F;
	for (j = 0; j < 8; j++) {
		sum += (*coef++) * vbuf[bx];
		bx = (bx + 64) & 511;
	}
	tmp = (long) sum;
	if (tmp > 32767)
		tmp = 32767;
	else if (tmp < -32768)
		tmp = -32768;
	*pcm = (short) tmp;
	pcm += 2;
	/*-- last 15 --*/
	coef = wincoef + 255;	/* back pass through coefs */
	for (i = 0; i < 15; i++) {
		si--;
		bx++;
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef--) * vbuf[si];
			si = (si + 64) & 511;
			sum += (*coef--) * vbuf[bx];
			bx = (bx + 64) & 511;
		}
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm = (short) tmp;
		pcm += 2;
	}
}

void CDecompressMpeg::window16(float* vbuf, int vb_ptr, short* pcm)
{
	int i, j;
	unsigned char si, bx;
	float* coef;
	float sum;
	long tmp;

	si = vb_ptr + 8;
	bx = si + 16;
	coef = wincoef;

	/*-- first 8 --*/
	for (i = 0; i < 8; i++) {
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef++) * vbuf[si];
			si += 32;
			sum -= (*coef++) * vbuf[bx];
			bx += 32;
		}
		si++;
		bx--;
		coef += 16;
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm++ = (short) tmp;
	}
	/*--  special case --*/
	sum = 0.0F;
	for (j = 0; j < 8; j++) {
		sum += (*coef++) * vbuf[bx];
		bx += 32;
	}
	tmp = (long) sum;
	if (tmp > 32767)
		tmp = 32767;
	else if (tmp < -32768)
		tmp = -32768;
	*pcm++ = (short) tmp;
	/*-- last 7 --*/
	coef = wincoef + 255;	/* back pass through coefs */
	for (i = 0; i < 7; i++) {
		coef -= 16;
		si--;
		bx++;
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef--) * vbuf[si];
			si += 32;
			sum += (*coef--) * vbuf[bx];
			bx += 32;
		}
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm++ = (short) tmp;
	}
}

void CDecompressMpeg::window16_dual(float* vbuf, int vb_ptr, short* pcm)
{
	int i, j;
	unsigned char si, bx;
	float* coef;
	float sum;
	long tmp;

	si = vb_ptr + 8;
	bx = si + 16;
	coef = wincoef;

	/*-- first 8 --*/
	for (i = 0; i < 8; i++) {
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef++) * vbuf[si];
			si += 32;
			sum -= (*coef++) * vbuf[bx];
			bx += 32;
		}
		si++;
		bx--;
		coef += 16;
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm = (short) tmp;
		pcm += 2;
	}
	/*--  special case --*/
	sum = 0.0F;
	for (j = 0; j < 8; j++) {
		sum += (*coef++) * vbuf[bx];
		bx += 32;
	}
	tmp = (long) sum;
	if (tmp > 32767)
		tmp = 32767;
	else if (tmp < -32768)
		tmp = -32768;
	*pcm = (short) tmp;
	pcm += 2;
	/*-- last 7 --*/
	coef = wincoef + 255;	/* back pass through coefs */
	for (i = 0; i < 7; i++) {
		coef -= 16;
		si--;
		bx++;
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef--) * vbuf[si];
			si += 32;
			sum += (*coef--) * vbuf[bx];
			bx += 32;
		}
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm = (short) tmp;
		pcm += 2;
	}
}

void CDecompressMpeg::window8(float* vbuf, int vb_ptr, short* pcm)
{
	int i, j;
	int si, bx;
	float* coef;
	float sum;
	long tmp;

	si = vb_ptr + 4;
	bx = (si + 8) & 127;
	coef = wincoef;

	/*-- first 4 --*/
	for (i = 0; i < 4; i++) {
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef++) * vbuf[si];
			si = (si + 16) & 127;
			sum -= (*coef++) * vbuf[bx];
			bx = (bx + 16) & 127;
		}
		si++;
		bx--;
		coef += 48;
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm++ = (short) tmp;
	}
	/*--  special case --*/
	sum = 0.0F;
	for (j = 0; j < 8; j++) {
		sum += (*coef++) * vbuf[bx];
		bx = (bx + 16) & 127;
	}
	tmp = (long) sum;
	if (tmp > 32767)
		tmp = 32767;
	else if (tmp < -32768)
		tmp = -32768;
	*pcm++ = (short) tmp;
	/*-- last 3 --*/
	coef = wincoef + 255;	/* back pass through coefs */
	for (i = 0; i < 3; i++) {
		coef -= 48;
		si--;
		bx++;
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef--) * vbuf[si];
			si = (si + 16) & 127;
			sum += (*coef--) * vbuf[bx];
			bx = (bx + 16) & 127;
		}
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm++ = (short) tmp;
	}
}

void CDecompressMpeg::window8_dual(float* vbuf, int vb_ptr, short* pcm)
{
	int i, j;
	int si, bx;
	float* coef;
	float sum;
	long tmp;

	si = vb_ptr + 4;
	bx = (si + 8) & 127;
	coef = wincoef;

	/*-- first 4 --*/
	for (i = 0; i < 4; i++) {
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef++) * vbuf[si];
			si = (si + 16) & 127;
			sum -= (*coef++) * vbuf[bx];
			bx = (bx + 16) & 127;
		}
		si++;
		bx--;
		coef += 48;
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm = (short) tmp;
		pcm += 2;
	}
	/*--  special case --*/
	sum = 0.0F;
	for (j = 0; j < 8; j++) {
		sum += (*coef++) * vbuf[bx];
		bx = (bx + 16) & 127;
	}
	tmp = (long) sum;
	if (tmp > 32767)
		tmp = 32767;
	else if (tmp < -32768)
		tmp = -32768;
	*pcm = (short) tmp;
	pcm += 2;
	/*-- last 3 --*/
	coef = wincoef + 255;	/* back pass through coefs */
	for (i = 0; i < 3; i++) {
		coef -= 48;
		si--;
		bx++;
		sum = 0.0F;
		for (j = 0; j < 8; j++) {
			sum += (*coef--) * vbuf[si];
			si = (si + 16) & 127;
			sum += (*coef--) * vbuf[bx];
			bx = (bx + 16) & 127;
		}
		tmp = (long) sum;
		if (tmp > 32767)
			tmp = 32767;
		else if (tmp < -32768)
			tmp = -32768;
		*pcm = (short) tmp;
		pcm += 2;
	}
}

void CDecompressMpeg::sbt_init()
{
	int i;

	/* clear window vbuf */
	for (i = 0; i < 512; i++) {
		vbuf[i] = 0.0F;
		vbuf2[i] = 0.0F;
	}
	vb2_ptr = vb_ptr = 0;
}

void CDecompressMpeg::sbt_mono(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;

	for (i = 0; i < n; i++) {
		fdct32(sample, vbuf + vb_ptr);
		window(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 32) & 511;
		pcm += 32;
	}
}

void CDecompressMpeg::sbt_dual(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;


	for (i = 0; i < n; i++) {
		fdct32_dual(sample, vbuf + vb_ptr);
		fdct32_dual(sample + 1, vbuf2 + vb_ptr);
		window_dual(vbuf, vb_ptr, pcm);
		window_dual(vbuf2, vb_ptr, pcm + 1);
		sample += 64;
		vb_ptr = (vb_ptr - 32) & 511;
		pcm += 64;
	}
}

void CDecompressMpeg::sbt_dual_mono(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;

	for (i = 0; i < n; i++) {
		fdct32_dual_mono(sample, vbuf + vb_ptr);
		window(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 32) & 511;
		pcm += 32;
	}
}

void CDecompressMpeg::sbt_dual_left(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;

	for (i = 0; i < n; i++) {
		fdct32_dual(sample, vbuf + vb_ptr);
		window(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 32) & 511;
		pcm += 32;
	}
}

void CDecompressMpeg::sbt_dual_right(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;

	sample++;			/* point to right chan */
	for (i = 0; i < n; i++) {
		fdct32_dual(sample, vbuf + vb_ptr);
		window(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 32) & 511;
		pcm += 32;
	}
}

void CDecompressMpeg::sbt16_mono(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;

	for (i = 0; i < n; i++) {
		fdct16(sample, vbuf + vb_ptr);
		window16(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 16) & 255;
		pcm += 16;
	}
}

void CDecompressMpeg::sbt16_dual(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;

	for (i = 0; i < n; i++) {
		fdct16_dual(sample, vbuf + vb_ptr);
		fdct16_dual(sample + 1, vbuf2 + vb_ptr);
		window16_dual(vbuf, vb_ptr, pcm);
		window16_dual(vbuf2, vb_ptr, pcm + 1);
		sample += 64;
		vb_ptr = (vb_ptr - 16) & 255;
		pcm += 32;
	}
}

void CDecompressMpeg::sbt16_dual_mono(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;

	for (i = 0; i < n; i++) {
		fdct16_dual_mono(sample, vbuf + vb_ptr);
		window16(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 16) & 255;
		pcm += 16;
	}
}

void CDecompressMpeg::sbt16_dual_left(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;

	for (i = 0; i < n; i++) {
		fdct16_dual(sample, vbuf + vb_ptr);
		window16(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 16) & 255;
		pcm += 16;
	}
}

void CDecompressMpeg::sbt16_dual_right(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;

	sample++;
	for (i = 0; i < n; i++) {
		fdct16_dual(sample, vbuf + vb_ptr);
		window16(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 16) & 255;
		pcm += 16;
	}
}

void CDecompressMpeg::sbt8_mono(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;

	for (i = 0; i < n; i++) {
		fdct8(sample, vbuf + vb_ptr);
		window8(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 8) & 127;
		pcm += 8;
	}
}

void CDecompressMpeg::sbt8_dual(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;

	for (i = 0; i < n; i++) {
		fdct8_dual(sample, vbuf + vb_ptr);
		fdct8_dual(sample + 1, vbuf2 + vb_ptr);
		window8_dual(vbuf, vb_ptr, pcm);
		window8_dual(vbuf2, vb_ptr, pcm + 1);
		sample += 64;
		vb_ptr = (vb_ptr - 8) & 127;
		pcm += 16;
	}
}

void CDecompressMpeg::sbt8_dual_mono(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;

	for (i = 0; i < n; i++) {
		fdct8_dual_mono(sample, vbuf + vb_ptr);
		window8(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 8) & 127;
		pcm += 8;
	}
}

void CDecompressMpeg::sbt8_dual_left(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;

	for (i = 0; i < n; i++) {
		fdct8_dual(sample, vbuf + vb_ptr);
		window8(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 8) & 127;
		pcm += 8;
	}
}

void CDecompressMpeg::sbt8_dual_right(float* sample, void* in_pcm, int n)
{
	int i;
	short* pcm = (short*) in_pcm;

	sample++;
	for (i = 0; i < n; i++) {
		fdct8_dual(sample, vbuf + vb_ptr);
		window8(vbuf, vb_ptr, pcm);
		sample += 64;
		vb_ptr = (vb_ptr - 8) & 127;
		pcm += 8;
	}
}

void CDecompressMpeg::sbt_mono_L3(float* sample, void* in_pcm, int ch)
{
	int i;
	short* pcm = (short*) in_pcm;

	ch = 0;
	for (i = 0; i < 18; i++) {
		fdct32(sample, vbuf + vb_ptr);
		window(vbuf, vb_ptr, pcm);
		sample += 32;
		vb_ptr = (vb_ptr - 32) & 511;
		pcm += 32;
	}
}

void CDecompressMpeg::sbt_dual_L3(float* sample, void* in_pcm, int ch)
{
	int i;
	short* pcm = (short*) in_pcm;

	if (ch == 0)
		for (i = 0; i < 18; i++) {
			fdct32(sample, vbuf + vb_ptr);
			window_dual(vbuf, vb_ptr, pcm);
			sample += 32;
			vb_ptr = (vb_ptr - 32) & 511;
			pcm += 64;
		}
	else
		for (i = 0; i < 18; i++) {
			fdct32(sample, vbuf2 + vb2_ptr);
			window_dual(vbuf2, vb2_ptr, pcm + 1);
			sample += 32;
			vb2_ptr = (vb2_ptr - 32) & 511;
			pcm += 64;
		}
}

void CDecompressMpeg::sbt16_mono_L3(float* sample, void* in_pcm, int ch)
{
	int i;
	short* pcm = (short*) in_pcm;

	ch = 0;
	for (i = 0; i < 18; i++) {
		fdct16(sample, vbuf + vb_ptr);
		window16(vbuf, vb_ptr, pcm);
		sample += 32;
		vb_ptr = (vb_ptr - 16) & 255;
		pcm += 16;
	}
}

void CDecompressMpeg::sbt16_dual_L3(float* sample, void* in_pcm, int ch)
{
	int i;
	short* pcm = (short*) in_pcm;


	if (ch == 0) {
		for (i = 0; i < 18; i++) {
			fdct16(sample, vbuf + vb_ptr);
			window16_dual(vbuf, vb_ptr, pcm);
			sample += 32;
			vb_ptr = (vb_ptr - 16) & 255;
			pcm += 32;
		}
	} else {
		for (i = 0; i < 18; i++) {
			fdct16(sample, vbuf2 + vb2_ptr);
			window16_dual(vbuf2, vb2_ptr, pcm + 1);
			sample += 32;
			vb2_ptr = (vb2_ptr - 16) & 255;
			pcm += 32;
		}
	}
}

void CDecompressMpeg::sbt8_mono_L3(float* sample, void* in_pcm, int ch)
{
	int i;
	short* pcm = (short*) in_pcm;

	ch = 0;
	for (i = 0; i < 18; i++) {
		fdct8(sample, vbuf + vb_ptr);
		window8(vbuf, vb_ptr, pcm);
		sample += 32;
		vb_ptr = (vb_ptr - 8) & 127;
		pcm += 8;
	}
}

void CDecompressMpeg::sbt8_dual_L3(float* sample, void* in_pcm, int ch)
{
	int i;
	short* pcm = (short*) in_pcm;

	if (ch == 0) {
		for (i = 0; i < 18; i++) {
			fdct8(sample, vbuf + vb_ptr);
			window8_dual(vbuf, vb_ptr, pcm);
			sample += 32;
			vb_ptr = (vb_ptr - 8) & 127;
			pcm += 16;
		}
	} else {
		for (i = 0; i < 18; i++) {
			fdct8(sample, vbuf2 + vb2_ptr);
			window8_dual(vbuf2, vb2_ptr, pcm + 1);
			sample += 32;
			vb2_ptr = (vb2_ptr - 8) & 127;
			pcm += 16;
		}
	}
}

int CDecompressMpeg::br_tbl[3][3][16] = {
	{// MPEG-1
	// Layer1
	{ 0, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 0 },
	// Layer2
	{ 0, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 0 },
	// Layer3
	{ 0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 0 },
	}, {// MPEG-2
	// Layer1
	{ 0, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 0 },
	// Layer2
	{ 0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, 0 },
	// Layer3
	{ 0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, 0 },
	}, {// MPEG-2.5
	// Layer1 (not available)
	{ 0, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 0 },
	// Layer2 (not available)
	{ 0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, 0 },
	// Layer3
	{ 0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, 0 },
	}, 
};

int CDecompressMpeg::fr_tbl[3][4] = {
	{	44100,	48000,	32000,	0	},	// MPEG-1
	{	22050,	24000,	16000,	0	},	// MPEG-2
	{	11025,	12000,	8000,	0	},	// MPEG-2.5

};

void CDecompressMpeg::mp3DecodeInit()
{
	m_option.reduction = 0;
	m_option.convert = 0;
	m_option.freqLimit = 24000;

	L1table_init();
	L2table_init();
	L3table_init();
}

int CDecompressMpeg::mp3GetHeader(BYTE* buf, MPEG_HEADER* h)
{
	h->version = (buf[1] & 0x08) >> 3;
	h->layer = (buf[1] & 0x06) >> 1;
	h->error_prot = (buf[1] & 0x01);
	h->br_index = (buf[2] & 0xf0) >> 4;
	h->fr_index = (buf[2] & 0x0c) >> 2;
	h->padding = (buf[2] & 0x02) >> 1;
	h->extension = (buf[2] & 0x01);
	h->mode = (buf[3] & 0xc0) >> 6;
	h->mode_ext = (buf[3] & 0x30) >> 4;
	h->copyright = (buf[3] & 0x08) >> 3;
	h->original = (buf[3] & 0x04) >> 2;
	h->emphasis = (buf[3] & 0x03);

	if (buf[0] != 0xFF) {
		//sync error
		m_last_error = MP3_ERROR_INVALID_SYNC;
		return 0;
	}
	if ((buf[1] & 0xF0) == 0xF0)		//MPEG-1, MPEG-2
		h->version = (h->version) ? 1 : 2;
	else if ((buf[1] & 0xF0) == 0xE0)	//MPEG-2.5
		h->version = 3;
	else {
		m_last_error = MP3_ERROR_INVALID_SYNC;
		return 0;
	}
	if (h->fr_index >= 3 ||
		h->br_index == 0 ||
		h->br_index >= 15 ||
		h->layer == 0 ||
		h->layer >= 4) {
		m_last_error = MP3_ERROR_INVALID_HEADER;
		return 0;
	}
	h->layer = 4 - h->layer;
	h->error_prot = (h->error_prot) ? 0 : 1;

	return 1;
}

bool CDecompressMpeg::mp3GetHeaderInfo(BYTE* buffer, MPEG_HEADER_INFO* info)
{
	int ch, ver;
	MPEG_HEADER* h =& info->header;
	// получим информацию из заголовка
	if (!mp3GetHeader(buffer, h))
		return false;

	// расчет нужных данных
	info->curBitRate = br_tbl[h->version - 1][h->layer - 1][h->br_index] * 1000;
	switch (h->layer) {
	case 1:
		//layer1
		info->curFrameSize = (12 * info->curBitRate / m_frequency + h->padding) * 4;
		break;
	case 2:
		//layer2
		info->curFrameSize = 144 * info->curBitRate /
			m_frequency +
			h->padding;
		break;
	case 3:
		//layer3
		if (h->version == 1)
			info->curFrameSize = 144 * info->curBitRate /
				m_frequency +
				h->padding;
		else
			info->curFrameSize = (144 * info->curBitRate / m_frequency) /
				2 +
				h->padding;
		break;
	}
	ch = (h->mode == 3) ? 1 : 2;
	ver = (h->version == 1) ? 1 : 2;
	info->samplesInFrame = (1152 >> m_option.reduction) / ver;
	info->outputSize = info->samplesInFrame * 2 * ch;
	return true;
}


int CDecompressMpeg::mp3GetLastError()
{
	return m_last_error;
}

int CDecompressMpeg::mp3FindSync(BYTE* buf, int size, int* sync)
{
	int i;
	MPEG_HEADER h;

	*sync = 0;
	size -= 3;
	if (size <= 0) {
		m_last_error = MP3_ERROR_OUT_OF_BUFFER;
		return 0;
	}

	// поиск данных
	for (i = 0; i < size; i++) {
		if (buf[i] == 0xFF) {
			if (mp3GetHeader(buf + i, & h)) {
				if ((h.layer == _layer) &&
					(h.version == _version) &&
					(h.br_index == _br_index) &&
					(h.fr_index == _fr_index) &&
					(h.mode == _mode))
					break;
			}
		}
	}

	if (i == size) {
		m_last_error = MP3_ERROR_OUT_OF_BUFFER;
		return 0;
	}

	*sync = i;
	return 1;
}

void CDecompressMpeg::mp3GetDecodeOption(MPEG_DECODE_OPTION* option)
{
	*option = m_option;
}

int CDecompressMpeg::mp3SetDecodeOption(MPEG_DECODE_OPTION* option)
{
	m_option = *option;
	return 1;
}
/*
//-----------------------------------------------------------------------------
//	Установка эквалайзера
//	value	- указатель на параметры эквалайзера
//-----------------------------------------------------------------------------
int CDecompressMpeg::mp3SetEqualizer(int* value)
{
	int i;
	if (value == (void*)0) {
		m_enableEQ = 0;
		return 1;
	}
	m_enableEQ = 1;
	//60, 170, 310, 600, 1K, 3K
	for (i = 0; i < 6; i ++) {
		m_equalizer[i] = (float)pow(10,(double)value[i]/200);
	}
	//6K
	m_equalizer[6] = (float)pow(10,(double)value[6]/200);
	m_equalizer[7] = m_equalizer[6];
	//12K
	m_equalizer[8] = (float)pow(10,(double)value[7]/200);
	m_equalizer[9] = m_equalizer[8];
	m_equalizer[10] = m_equalizer[8];
	m_equalizer[11] = m_equalizer[8];
	//14K
	m_equalizer[12] = (float)pow(10,(double)value[8]/200);
	m_equalizer[13] = m_equalizer[12];
	m_equalizer[14] = m_equalizer[12];
	m_equalizer[15] = m_equalizer[12];
	m_equalizer[16] = m_equalizer[12];
	m_equalizer[17] = m_equalizer[12];
	m_equalizer[18] = m_equalizer[12];
	m_equalizer[19] = m_equalizer[12];
	//16K
	m_equalizer[20] = (float)pow(10,(double)value[9]/200);
	m_equalizer[21] = m_equalizer[20];
	m_equalizer[22] = m_equalizer[20];
	m_equalizer[23] = m_equalizer[20];
	m_equalizer[24] = m_equalizer[20];
	m_equalizer[25] = m_equalizer[20];
	m_equalizer[26] = m_equalizer[20];
	m_equalizer[27] = m_equalizer[20];
	m_equalizer[28] = m_equalizer[20];
	m_equalizer[29] = m_equalizer[20];
	m_equalizer[30] = m_equalizer[20];
	m_equalizer[31] = m_equalizer[20];
	return 1;
}
*/
#define VBR_FRAMES_FLAG		0x0001
#define VBR_BYTES_FLAG		0x0002
#define VBR_TOC_FLAG		0x0004
#define VBR_SCALE_FLAG		0x0008

// big endian extract
int CDecompressMpeg::extractInt4(BYTE* buf)
{
	return buf[3] | (buf[2] << 8) | (buf[1] << 16) | (buf[0] << 24);
}
//-----------------------------------------------------------------------------
// извленение заголовка и важных данных
//	mpeg	- указатель на буфер с данными
//	size	- размер буфера с данными
//	info	- указатель на структуру куда поместить расширенные данные
//	decFlag	- ? помоему использовать настройки частоты из файла
//-----------------------------------------------------------------------------
int CDecompressMpeg::mp3GetDecodeInfo(BYTE* mpeg, int size,
	MPEG_DECODE_INFO* info, int decFlag)
{
	MPEG_HEADER* h =& info->header;
	byte* p = mpeg;
	int vbr;
	DWORD minBitRate, maxBitRate;
	DWORD i, j, flags;

	//int bitRate;
	//int frame_size;

	//	if (size < 156) {//max vbr header size
	//		m_last_error = MP3_ERROR_OUT_OF_BUFFER;
	//		return 0;
	//	}
	if (!mp3GetHeader(p, h)) {
		return 0;
	}
	//check VBR Header
	p += 4;//skip mpeg header
	if (h->error_prot)
		p += 2;//skip crc
	if (h->layer == 3) {
		//skip side info
		if (h->version == 1) {
			//MPEG-1
			if (h->mode != 3)
				p += 32;
			else
				p += 17;
		} else {
			//MPEG-2, MPEG-2.5
			if (h->mode != 3)
				p += 17;
			else
				p += 9;
		}
	}

	info->bitRate = br_tbl[h->version - 1][h->layer - 1][h->br_index] * 1000;
	info->frequency = fr_tbl[h->version - 1][h->fr_index];
	if (memcmp(p, ""Xing"", 4) == 0) {
		//VBR
		p += 4;
		flags = extractInt4(p);
		p += 4;
		if (!(flags & (VBR_FRAMES_FLAG | VBR_BYTES_FLAG))) {
			m_last_error = MP3_ERROR_INVALID_HEADER;
			return 0;
		}
		info->frames = extractInt4(p);
		p += 4;
		info->dataSize = extractInt4(p);
		p += 4;
		if (flags & VBR_TOC_FLAG)
			p += 100;
		if (flags & VBR_SCALE_FLAG)
			p += 4;
		/*
					//•WЏЂVBR‘О‰ћ
					if ( p[0] == mpeg[0] && p[1] == mpeg[1] ) {
						info->skipSize = (int)(p - mpeg);
					} else {
						bitRate = br_tbl[h->version-1][h->layer-1][h->br_index] * 1000;
						switch (h->layer) {
						case 1://layer1
							frame_size = (12 * bitRate / fr_tbl[h->version-1][h->fr_index]) * 4;//one slot is 4 bytes long
							if (h->padding) frame_size += 4;
							break;
						case 2://layer2
							frame_size = 144 * bitRate / fr_tbl[h->version-1][h->fr_index];
							if (h->padding) frame_size ++;
							break;
						case 3://layer3
							frame_size = 144 * bitRate / fr_tbl[h->version-1][h->fr_index];
							if (h->version != 1) //MPEG-2, MPEG-2.5
								frame_size /= 2;
							if (h->padding) frame_size ++;
							break;
						}
						info->skipSize = (int)(frame_size);
					}
					info->bitRate = 0;
			*/
		vbr = 1;
		minBitRate = 0xffffffff;
		maxBitRate = 0;
		for (i = 1; i < 15; i ++) {
			j = br_tbl[h->version - 1][h->layer - 1][i] * 1000;
			if (j < minBitRate)
				minBitRate = j;
			if (j > maxBitRate)
				maxBitRate = j;
		}
	} else if (memcmp(p, ""VBRI"", 4) == 0) {
		//VBRI
		p += 10;
		info->dataSize = extractInt4(p);
		p += 4;
		info->frames = extractInt4(p);
		p += 4;
		vbr = 1;
		minBitRate = 0xffffffff;
		maxBitRate = 0;
		for (i = 1; i < 15; i ++) {
			j = br_tbl[h->version - 1][h->layer - 1][i] * 1000;
			if (j < minBitRate)
				minBitRate = j;
			if (j > maxBitRate)
				maxBitRate = j;
		}
	} else {
		//not VBR
		vbr = 0;
		info->frames = 0;
		//info->skipSize = 0;
		info->dataSize = 0;
		//info->bitRate = br_tbl[h->version-1][h->layer-1][h->br_index] * 1000;
	}

	//	info->frequency = fr_tbl[h->version-1][h->fr_index];
	//	info->msPerFrame = ms_p_f_table[h->layer-1][h->fr_index];
	//	if (h->version == 3) info->msPerFrame *= 2;
	switch (h->layer) {
	case 1:
		//layer1
		info->outputSize = 384 >> m_option.reduction;
		//if (info->bitRate) {
		if (!vbr) {
			info->skipSize = 0;
			info->minInputSize = (12 * info->bitRate / info->frequency) * 4;//one slot is 4 bytes long
			info->maxInputSize = info->minInputSize + 4;
		} else {
			info->skipSize = (12 * info->bitRate /
				info->frequency +
				h->padding) * 4;
			info->minInputSize = (12 * minBitRate / info->frequency) * 4;
			info->maxInputSize = (12 * maxBitRate / info->frequency) * 4 + 4;
		}
		break;
	case 2:
		//layer2
		info->outputSize = 1152 >> m_option.reduction;
		//if (info->bitRate) {
		if (!vbr) {
			info->skipSize = 0;
			info->minInputSize = 144 * info->bitRate / info->frequency;
			info->maxInputSize = info->minInputSize + 1;
		} else {
			info->skipSize = 144 * info->bitRate /
				info->frequency +
				h->padding;
			info->minInputSize = 144 * minBitRate / info->frequency;
			info->maxInputSize = 144 * maxBitRate / info->frequency + 1;
		}
		break;
	case 3:
		//layer3
		i = (h->version == 1) ? 1 : 2;
		//info->outputSize = 1152 >> m_option.reduction;
		info->outputSize = (1152 >> m_option.reduction) / i;
		//if (info->bitRate) {
		if (!vbr) {
			info->skipSize = 0;
			info->minInputSize = 144 * info->bitRate / info->frequency / i;
			info->maxInputSize = info->minInputSize + 1;
		} else {
			info->skipSize = 144 * info->bitRate /
				info->frequency /
				i +
				h->padding;
			info->minInputSize = 144 * minBitRate / info->frequency / i;
			info->maxInputSize = 144 * maxBitRate / info->frequency / i + 1;
		}
		break;
		/*
					if (h->version != 1) {
						//MPEG-2, MPEG-2.5
						info->outputSize /= 2;
						info->minInputSize /= 2;
						info->maxInputSize /= 2;
					}
					info->maxInputSize ++;
					break;
			*/
	}

	if ((h->mode == 3) || (m_option.convert & 3))
		info->channels = 1;
	else
		info->channels = 2;
	if (m_option.convert & 8) {
		//not available
		info->bitsPerSample = 8;
		info->outputSize *= info->channels;
	} else {
		info->bitsPerSample = 16;
		info->outputSize *= info->channels * 2;
	}
	if (decFlag == 1) {
		m_frequency = info->frequency;
		m_pcm_size = info->outputSize;
	}
	info->frequency >>= m_option.reduction;
	info->HeadBitRate = info->bitRate;
	if (vbr)
		info->bitRate = 0;

	return 1;
}

// начало декодирования
int CDecompressMpeg::mp3DecodeStart(BYTE* mpeg, int size)
{
	MPEG_DECODE_INFO info;
	MPEG_HEADER* h =& info.header;

	// распаковка заголовка и предрасчет важных данных
	if (!mp3GetDecodeInfo(mpeg, size, & info, 1))
		return 0;

	// инициализация
	sbt_init();

	// вызов методов инициализации слоя
	switch (h->layer) {
	case 1:
		L1decode_start(h);
		break;
	case 2:
		L2decode_start(h);
		break;
	case 3:
		L3decode_start(h);
		break;
	}
	return 1;
}

// декодирование 1 фрейма
int CDecompressMpeg::mp3DecodeFrame(MPEG_DECODE_PARAM* param)
{
	MPEG_HEADER* h =& param->header;

	// проверка размера входных данных
	if (param->inputSize <= 4) {
		m_last_error = MP3_ERROR_OUT_OF_BUFFER;
		return 0;
	}

	// прочитаем заголовок
	if (!mp3GetHeader((unsigned char *) param->inputBuf, h)) {
		return 0;
	}

	// вычисление размера данных в фрейме
	param->bitRate = br_tbl[h->version - 1][h->layer - 1][h->br_index] * 1000;
	switch (h->layer) {
		//layer1
	case 1:
		m_frame_size = (12 * param->bitRate / m_frequency + h->padding) * 4;
		break;
		//layer2
	case 2:
		m_frame_size = 144 * param->bitRate / m_frequency + h->padding;
		break;
		//layer3
	case 3:
		if (h->version == 1)
			m_frame_size = 144 * param->bitRate / m_frequency + h->padding;
		else
			m_frame_size = (144 * param->bitRate / m_frequency) /
				2 +
				h->padding;
		break;
	}
	// проверка размера входных данных
	if (param->inputSize < m_frame_size) {
		m_last_error = MP3_ERROR_OUT_OF_BUFFER;
		return 0;
	}

	// подбор декодера
	switch (h->layer) {
	case 1:
		L1decode_frame(h,
			(unsigned char *) param->inputBuf,
			(unsigned char *) param->outputBuf);
		break;
	case 2:
		L2decode_frame(h,
			(unsigned char *) param->inputBuf,
			(unsigned char *) param->outputBuf);
		break;
	case 3:
		L3decode_frame(h,
			(unsigned char *) param->inputBuf,
			(unsigned char *) param->outputBuf);
		break;
	}
	//!!!todo	m_frame_proc(h, (unsigned char*)param->inputBuf, (unsigned char *)param->outputBuf);
	// скоректируем размеры входного и выходного буфера
	param->inputSize = m_frame_size;
	param->outputSize = m_pcm_size;
	return 1;
}

void CDecompressMpeg::mp3Reset(void)
{
	sbt_init();
	L3decode_reset();
}

//-----------------------------------------------------------------------------
//	Установка новой позиции файла
//	на входе	:	pos	- новая позиция в файле
//	на выходе	:	*
//-----------------------------------------------------------------------------
int CDecompressMpeg::mp3seek(DWORD frame)
{
	// инициализация переменных
	DWORD cur = 0;
	DWORD back = 3;
	int off = 0;
	DWORD need_frame_offset = 0;

	// позиционируемся на данных
	if (_curFrame != frame) {
		if (_curFrame != (frame - 1)) {
			// прочитаем на несколько фреймов назад
			if (frame > back)
				frame -= back;
			else {
				back = frame;
				frame = 0;
			}

			if (!_vbr) {
				// приблизительный расчет положения фрейма
				need_frame_offset = (DWORD)
					floor(((double) frame * _bitPerFrame) /
												8);

				// поиск начала фрейма
				while (1) {
					// установка позиции чтения
					if (SourceData->seek(need_frame_offset, 0) !=
						need_frame_offset)
						return 0;

					// проверка на конец файла
					if (SourceData->eof())
						return 0;

					// прочитаем данные для поиска начала
					if (SourceData->peek(_frameBuffer, _minFrameSize) !=
						_minFrameSize)
						return 0;

					// поиск начала файла
					if (!mp3FindSync(_frameBuffer, _minFrameSize, & off)) {
						need_frame_offset += (_minFrameSize - 3);
					} else {
						need_frame_offset += off;
						break;
					}
				};
			} else {
				need_frame_offset = _vbrFrameOffTable[frame];
			}

			if (SourceData->seek(need_frame_offset, 0) != need_frame_offset)
				return 0;

			mp3Reset();

			// сбросим декодер
			for (int ch = 0; ch < 2; ch++) {
				for (int gr = 0; gr < 2; gr++) {
					for (int sam = 0; sam < 576; sam++) {
						m_sample[ch][gr][sam].s = 0;
						m_sample[ch][gr][sam].x = 0;
					}
				}
			}

			for (cur = 0; cur < back; cur++) {
				SourceData->peek(_frameBuffer, 4);
				if (!mp3GetHeaderInfo(_frameBuffer, & _mpegHI))
					return 0;

				_curFrameSize = _mpegHI.curFrameSize;
				if (SourceData->read(_frameBuffer, _curFrameSize) !=
					_curFrameSize)
					return 0;

				_mpegDP.header = _mpegHI.header;
				_mpegDP.bitRate = _mpegHI.curBitRate;
				_mpegDP.inputBuf = _frameBuffer;
				_mpegDP.inputSize = _mpegHI.curFrameSize;
				_mpegDP.outputBuf = _sampleBuffer;
				_mpegDP.outputSize = _mpegHI.outputSize;

				// декодирование одного фрейма
				if (!mp3DecodeFrame(&_mpegDP))
					return 0;
			}
		}
	}
	return 1;
}
//-----------------------------------------------------------------------------
//	Конструктор декодера
//	на входе	:	a	- указатель на данные файла
//	на выходе	:	*
//-----------------------------------------------------------------------------
CDecompressMpeg::CDecompressMpeg(WAVEFORMATEX* pcm_format, bool& flag,
	CAbstractSoundFile* a)
	: CAbstractDecompressor(pcm_format, flag, a)
{
	DWORD cur;
	DWORD pos;
	MPEG_HEADER_INFO info;
	BYTE head[156];

	// файл не определен
	flag = false;

	// инициализация декодера
	mp3DecodeInit();

	// инициализация данных декодера
	m_cs_factorL1 = m_cs_factor[0];
	//	m_enableEQ		= 0;
	memset(&m_side_info, 0, sizeof(SIDE_INFO));
	memset(&m_scale_fac, 0, sizeof(SCALE_FACTOR) * 4);
	memset(&m_cb_info, 0, sizeof(CB_INFO) * 4);
	memset(&m_nsamp, 0, sizeof(int) * 4);

	// очистим указатели на буфера
	_frameBuffer = 0;
	_vbr = 0;
	_vbrFrameOffTable = 0;

	// получение информаци о файле
	if (SourceData->peek(head, sizeof(head)) != sizeof(head))
		return;

	if (!mp3GetDecodeInfo(head, sizeof(head), & _mpegDI, 1))
		return;

	if (!mp3GetHeaderInfo(head, & _mpegHI))
		return;

	// получим интерисующую нас информацию
	_channels = _mpegDI.channels;
	_frequency = _mpegDI.frequency;
	_bitrate = _mpegDI.HeadBitRate;
	_vbr = _mpegDI.bitRate ? false : true;
	_minFrameSize = _mpegDI.minInputSize;
	_maxFrameSize = _mpegDI.maxInputSize;
	_samplesInFrame = _mpegHI.samplesInFrame;
	_curFrameSize = _mpegHI.curFrameSize;

	_version = _mpegDI.header.version;
	_layer = _mpegDI.header.layer;
	_br_index = _mpegDI.header.br_index;
	_fr_index = _mpegDI.header.fr_index;
	_mode = _mpegDI.header.mode;

	_slotSize = (_mpegDI.header.layer == 1) ? 4 : 1;
	_bitPerFrame = (_mpegDI.header.version == 1) ?
		(double) (144 * 8 * _bitrate) /
		(double) _frequency :
		(double) (144 * 8 * _bitrate) /
		(double) (_frequency * 2);
	_frames = _vbr ?
		_mpegDI.frames :
		(DWORD) floor(((double) ((SourceData->size + _slotSize) * 8)) /
											  	_bitPerFrame);
	_samplesInFile = _frames * _samplesInFrame;


	//*********************************************************************************
	// отладка
	// заполним таблицу смещений
	cur = 0;
	pos = 0;
	while (!SourceData->eof()) {
		SourceData->seek(pos, 0);

		if (SourceData->peek(head, 4) != 4)
			break;
		if (!mp3GetHeaderInfo(head, & info))
			break;
		pos += info.curFrameSize;
		cur++;
	}
	SourceData->seek(0, 0);

	if (cur != _frames)
		_frames = cur;

	_vbr = true;
	//**********************************************************************************

	// файл с переменным битрейтом ?
	if (_vbr) {
		// выделим память под таблицу смещений на фреймы
#if AGSS_USE_MALLOC
		_vbrFrameOffTable = (DWORD *) malloc(_frames * sizeof(DWORD));
#else
		_vbrFrameOffTable = (DWORD *) GlobalAlloc(GPTR,
									  	_frames * sizeof(DWORD));
#endif
		if (!_vbrFrameOffTable)
			return;

		cur = 0;
		pos = 0;
		// заполним таблицу смещений
		while (cur != _frames) {
			SourceData->seek(pos, 0);
			SourceData->peek(head, 4);
			if (!mp3GetHeaderInfo(head, & info))
				break;
			_vbrFrameOffTable[cur] = pos;
			pos += info.curFrameSize;
			cur++;
		}
		SourceData->seek(0, 0);
	}

	// выделим феймовый буфер
#if AGSS_USE_MALLOC
	_frameBuffer = (BYTE *) malloc(_mpegDI.maxInputSize);
#else
	_frameBuffer = (BYTE *) GlobalAlloc(GPTR, _mpegDI.maxInputSize);
#endif
	if (!_frameBuffer)
		return;

	// прочитаем один фрейм
	if (SourceData->read(_frameBuffer, _curFrameSize) != _curFrameSize) {
#if AGSS_USE_MALLOC
		free(_frameBuffer);
#else
		GlobalFree(_frameBuffer);
#endif
		_frameBuffer = 0;
		return;
	}

	// начало декодирования
	if (!mp3DecodeStart(_frameBuffer, _curFrameSize)) {
#if AGSS_USE_MALLOC
		free(_frameBuffer);
#else
		GlobalFree(_frameBuffer);
#endif
		_frameBuffer = 0;
		return;
	}

	// подготовка к декодированию первого фрейма
	_mpegDP.header = _mpegDI.header;
	_mpegDP.bitRate = _mpegDI.bitRate;
	_mpegDP.inputBuf = _frameBuffer;
	_mpegDP.inputSize = _curFrameSize;
	_mpegDP.outputBuf = _sampleBuffer;
	_mpegDP.outputSize = _mpegDI.outputSize;

	// декодируем первый фрейм
	if (!mp3DecodeFrame(&_mpegDP)) {
#if AGSS_USE_MALLOC
		free(_frameBuffer);
#else
		GlobalFree(_frameBuffer);
#endif
		_frameBuffer = 0;
		return;
	}

	// установим дополнительные параметры
	_curFrame = 0;
	_curSampleOffset = 0;

	// преобразуем данные для Direct X (иначе Direct X не сможет создать буфер)
	pcm_format->wFormatTag = 1;
	pcm_format->wBitsPerSample = 16;
	pcm_format->nSamplesPerSec = _frequency;
	pcm_format->nChannels = _channels;
	pcm_format->nBlockAlign = (pcm_format->nChannels * pcm_format->wBitsPerSample) >>
		3;
	pcm_format->nAvgBytesPerSec = pcm_format->nBlockAlign * pcm_format->nSamplesPerSec;

	// файл определен
	flag = true;
}
//-----------------------------------------------------------------------------
//	Деструктор декодера
//	на входе	:	*
//	на выходе	:	*
//-----------------------------------------------------------------------------
CDecompressMpeg::~CDecompressMpeg()
{
	if (_vbrFrameOffTable) {
#if AGSS_USE_MALLOC
		free(_vbrFrameOffTable);
#else
		GlobalFree(_vbrFrameOffTable);
#endif
		_vbrFrameOffTable = 0;
	}

	if (_frameBuffer) {
#if AGSS_USE_MALLOC
		free(_frameBuffer);
#else
		GlobalFree(_frameBuffer);
#endif
		_frameBuffer = 0;
	}
}
//-----------------------------------------------------------------------------
//	Декомпрессия Mp3 формата в моно данные
//	на входе	:	buffer	- указатель на буфер
//					start	- смещение в данных звука, в семплах
//					length	- количество семплов для декодирования
//	на выходе	:	На сколько байт сдвинулся буфер в который
//					читали семплы
//-----------------------------------------------------------------------------
DWORD CDecompressMpeg::GetMonoSamples(void* buffer, DWORD start, DWORD length,
	bool loop)
{
	DWORD NeedFrame;
	DWORD NeedOffset;
	DWORD samples;
	DWORD i;
	BYTE head[4];

	short* dst = (short*) buffer;

	// проверка выхода за пределы
	if (start > _samplesInFile)
		return 0;

	// проверка на чтение сверх нормы
	if ((start + length) > _samplesInFile)
		length = _samplesInFile - start;

	// вычислим текущую позицию чтения
	NeedFrame = start / _samplesInFrame;
	NeedOffset = start % _samplesInFrame;

	// позиционируемся на данных
	if (!mp3seek(NeedFrame))
		return 0;


	DWORD remaining = length;
	DWORD readsize = 0;
	bool readframe = false;
	while (remaining) {
		if ((_channels == 1) &&
			(NeedOffset == 0) &&
			(remaining > _samplesInFrame))
			readframe = true;
		else
			readframe = false;

		if (_curFrame != NeedFrame) {
			_curFrame = NeedFrame;
			if (SourceData->peek(&head, 4) != 4)
				break;

			if (!mp3GetHeaderInfo(head, & _mpegHI))
				return 0;

			_curFrameSize = _mpegHI.curFrameSize;
			if (SourceData->read(_frameBuffer, _curFrameSize) != _curFrameSize)
				return 0;

			_mpegDP.header = _mpegHI.header;
			_mpegDP.bitRate = _mpegHI.curBitRate;
			_mpegDP.inputBuf = _frameBuffer;
			_mpegDP.inputSize = _mpegHI.curFrameSize;
			_mpegDP.outputBuf = (readframe) ? dst : _sampleBuffer;
			_mpegDP.outputSize = _mpegHI.outputSize;

			// декодирование одного фрейма
			if (!mp3DecodeFrame(&_mpegDP))
				return 0;
		}

		samples = _samplesInFrame - NeedOffset;
		readsize = (remaining > samples) ? samples : remaining;

		short* src = _sampleBuffer + (NeedOffset* _channels);

		if (_channels == 1) {
			if (!readframe)
				memcpy(dst, src, readsize * 2);
			dst += readsize;
		} else {
			for (i = 0; i < readsize; i++) {
				int s = ((int) src[0] + (int) src[1]) >> 1;
				s = (s < -32768) ? -32768 : (s > 32767) ? 32767 : s;
				*dst++ = (short) s;
				src += 2;
			}
		}
		NeedOffset = 0;
		remaining -= readsize;
		if (remaining)
			NeedFrame++;
	}
	return ((DWORD) dst - (DWORD) buffer);
}

//-----------------------------------------------------------------------------
//	Декомпрессия Mp3 формата в стерео данные
//	на входе	:	buffer	- указатель на буфер
//					start	- смещение в данных звука, в семплах
//					length	- количество семплов для декодирования
//	на выходе	:	На сколько байт сдвинулся буфер в который
//					читали семплы
//-----------------------------------------------------------------------------
DWORD CDecompressMpeg::GetStereoSamples(void* buffer, DWORD start,
	DWORD length, bool loop)
{
	DWORD NeedFrame;
	DWORD NeedOffset;
	//	DWORD NeedFrameOffset;
	DWORD samples;
	DWORD i;
	BYTE head[4];
	//	int off;

	short* dst = (short*) buffer;

	// проверка выхода за пределы
	if (start > _samplesInFile)
		return 0;

	// проверка на чтение сверх нормы
	if ((start + length) > _samplesInFile)
		length = _samplesInFile - start;

	// вычислим текущую позицию чтения
	NeedFrame = start / _samplesInFrame;
	NeedOffset = start % _samplesInFrame;

	// позиционируемся на данных
	if (!mp3seek(NeedFrame))
		return 0;

	DWORD remaining = length;
	DWORD readsize = 0;
	bool readframe = false;
	while (remaining) {
		if ((_channels == 2) &&
			(NeedOffset == 0) &&
			(remaining > _samplesInFrame))
			readframe = true;
		else
			readframe = false;

		if (_curFrame != NeedFrame) {
			_curFrame = NeedFrame;
			SourceData->peek(&head, 4);
			if (!mp3GetHeaderInfo(head, & _mpegHI))
				return 0;

			_curFrameSize = _mpegHI.curFrameSize;
			if (SourceData->read(_frameBuffer, _curFrameSize) != _curFrameSize)
				return 0;

			_mpegDP.header = _mpegHI.header;
			_mpegDP.bitRate = _mpegHI.curBitRate;
			_mpegDP.inputBuf = _frameBuffer;
			_mpegDP.inputSize = _mpegHI.curFrameSize;
			_mpegDP.outputBuf = (readframe) ? dst : _sampleBuffer;
			_mpegDP.outputSize = _mpegHI.outputSize;

			// декодирование одного фрейма
			if (!mp3DecodeFrame(&_mpegDP))
				return 0;
		}

		samples = _samplesInFrame - NeedOffset;
		readsize = (remaining > samples) ? samples : remaining;

		short* src = _sampleBuffer + (NeedOffset* _channels);

		if (_channels == 1) {
			for (i = 0; i < readsize; i++) {
				*dst++ = *src;
				*dst++ = *src;
				src++;
			}
		} else {
			if (!readframe)
				memcpy(dst, src, readsize * 4);
			dst += readsize * 2;
		}
		NeedOffset = 0;
		remaining -= readsize;
		if (remaining)
			NeedFrame++;
	}
	return ((DWORD) dst - (DWORD) buffer);
}

//-----------------------------------------------------------------------------
//	Создание тишины на заданом отрезке буфера моно режим
//	на входе	:	buffer	- указатель на буфер
//					length	- количество семплов
//	на выходе	:	На сколько байт сдвинулся буфер
//-----------------------------------------------------------------------------
DWORD CDecompressMpeg::GetMonoMute(void* buffer, DWORD length)
{
	length <<= 1;
	memset(buffer, 0, length);
	return length;
}

//-----------------------------------------------------------------------------
//	Создание тишины на заданом отрезке буфера стерео режим
//	на входе	:	buffer	- указатель на буфер
//					length	- количество семплов
//	на выходе	:	На сколько байт сдвинулся буфер
//-----------------------------------------------------------------------------
DWORD CDecompressMpeg::GetStereoMute(void* buffer, DWORD length)
{
	length <<= 2;
	memset(buffer, 0, length);
	return length;
}

//-----------------------------------------------------------------------------
//	Получение количества семплов в файле
//	на входе	:	*
//	на выходе	:	Количество семплов в файла
//-----------------------------------------------------------------------------
DWORD CDecompressMpeg::GetSamplesInFile(void)
{
	return _samplesInFile;
}

//-----------------------------------------------------------------------------
//	Получение количества байт в треке моно режим
//	на входе	:	*
//	на выходе	:	Количество баит в треке
//-----------------------------------------------------------------------------
DWORD CDecompressMpeg::GetRealMonoDataSize(void)
{
	return _samplesInFile * 2;
}

//-----------------------------------------------------------------------------
//	Получение количества байт в треке стерео режим
//	на входе	:	*
//	на выходе	:	Количество баит в треке
//-----------------------------------------------------------------------------
DWORD CDecompressMpeg::GetRealStereoDataSize(void)
{
	return _samplesInFile * 4;
}

",C++
"#include ""GameCtrl.h""

char title[16][30]=
{
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,1,1,1,1,1,0,1,0,0,0,1,0,0,1,1,0,0,0,1,0,0,1,0,1,1,1,1,1,0},
	{0,1,0,0,0,0,0,1,1,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0},
	{0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,0,0,1,1,0,0,0,1,1,1,1,1,0},
	{0,0,0,0,0,1,0,1,0,0,1,1,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0},
	{0,1,1,1,1,1,0,1,0,0,0,1,0,1,0,0,1,0,0,1,0,0,1,0,1,1,1,1,1,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,1,1,1,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,1,1,1,1,1,0},
	{0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,1,1,0,0,0,1,1,0,0,1,0,0,0,0,0},
	{0,0,1,0,0,1,1,0,0,1,1,1,1,0,0,1,0,1,0,1,0,1,0,0,1,1,1,1,1,0},
	{0,0,1,1,1,1,1,0,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,0,0,0,0},
	{0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,1,1,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}

};

int main() {
	
	int menu = 0;
	
	for(int x=0;x<16;x++){
		printf(""\t"");
		for(int y=0;y<30;y++){
			if(title[x][y] == 1){
				printf(""¡á"");
			}
			if(title[x][y] == 0){
				printf(""¡à"");
			}
		}
		printf(""\n"");
	}

	printf(""\n"");
	printf(""\t\t\t\t<MENU>\n"");
	printf(""\t\t\t     1.Snake Game(Manual Mode)\n"");
	printf(""\t\t\t     2.See How to find Shortest Path\n"");
	printf(""\t\t\t     3.See How to find Longest Path\n"");
	printf(""\t\t\t     4.AI Hamiltonian Cycle\n"");
	printf(""\t\t\t     5.AI Graph Search\n"");
	printf(""\t\t\t     6.Exit\n"");
	printf(""\t\t\t     =>Input Menu Number : "");
	scanf(""%d"",&menu);
	
	auto game = GameCtrl::getInstance(0);
	
	// Set FPS. Default is 60.0
	game->setFPS(60.0);	

    	// Set the interval time between each snake's movement. Default is 30 ms.
	// To play classic snake game, set to 150 ms is perfect.
 	game->setMoveInterval(150);
  
        // Set whether to record the snake's movements to file. Default is true.
        // The movements will be written to a file named ""movements.txt"".
        game->setRecordMovements(true);

    	// Set map's size(including boundaries). Default is 10*10. Minimum is 5*5.
    	game->setMapRow(10);
	game->setMapCol(10);

	if(menu==1){ //Snake Game

    		// Set whether to enable the snake AI. Default is true.
    		game->setEnableAI(false);

    		// Set whether to use a hamiltonian cycle to guide the AI. Default is true.
    		game->setEnableHamilton(true);

    		// Set whether to run the test program. Default is false.
    		// You can select different testing methods by modifying GameCtrl::test().
    		game->setRunTest(false);
	}

	else if(menu==2){ //Shortest Path

	    	game->setEnableAI(false);
	    	game->setEnableHamilton(true);
	    	game->setRunTest(true);

    		game->setMapRow(20);
		game->setMapCol(20);
	}
	else if(menu==3){ //Longest Path

		auto game = GameCtrl::getInstance(1);
	
	    	game->setEnableAI(false);
            	game->setEnableHamilton(true);
	    	game->setRunTest(true);

    		game->setMapRow(20);
		game->setMapCol(20);
	}
	else if(menu==4){ //Hamiltonian Cycle

	    	game->setEnableAI(true);
 	    	game->setEnableHamilton(true);
   	    	game->setRunTest(false);
	}
	else if(menu==5){ //AI

	    	game->setEnableAI(true);
	    	game->setEnableHamilton(false);
	    	game->setRunTest(false);
	}
	else 
	    	return 0;

    	return game->run();
}
",C++
"// Copyright © 2014-2016 Ryan Leckey, All Rights Reserved.

// Distributed under the MIT License
// See accompanying file LICENSE

#ifndef ARROW_PASS_H
#define ARROW_PASS_H

#include <memory>
#include <string>

#include ""arrow/generator.hpp""

namespace arrow {

class Pass {
 public:
  explicit Pass(GContext& ctx) : _ctx(ctx) { }

  Pass(const Pass& other) = delete;
  Pass(Pass&& other) = delete;

  Pass& operator=(const Pass& other) = delete;
  Pass& operator=(Pass&& other) = delete;

 protected:
  GContext& _ctx;
};

}  // namespace arrow

#endif  // ARROW_PASS_H
",C++
"
// Copyright Aleksey Gurtovoy 2000-2004
//
// Distributed under the Boost Software License, Version 1.0. 
// (See accompanying file LICENSE_1_0.txt or copy at 
// http://www.lslboost.org/LICENSE_1_0.txt)
//

// Preprocessed version of ""lslboost/mpl/list/list10_c.hpp"" header
// -- DO NOT modify by hand!

namespace lslboost { namespace mpl {

template<
      typename T
    , T C0
    >
struct list1_c
    : l_item<
          long_<1>
        , integral_c< T,C0 >
        , l_end
        >
{
    typedef list1_c type;
    typedef T value_type;
};

template<
      typename T
    , T C0, T C1
    >
struct list2_c
    : l_item<
          long_<2>
        , integral_c< T,C0 >
        , list1_c< T,C1 >
        >
{
    typedef list2_c type;
    typedef T value_type;
};

template<
      typename T
    , T C0, T C1, T C2
    >
struct list3_c
    : l_item<
          long_<3>
        , integral_c< T,C0 >
        , list2_c< T,C1,C2 >
        >
{
    typedef list3_c type;
    typedef T value_type;
};

template<
      typename T
    , T C0, T C1, T C2, T C3
    >
struct list4_c
    : l_item<
          long_<4>
        , integral_c< T,C0 >
        , list3_c< T,C1,C2,C3 >
        >
{
    typedef list4_c type;
    typedef T value_type;
};

template<
      typename T
    , T C0, T C1, T C2, T C3, T C4
    >
struct list5_c
    : l_item<
          long_<5>
        , integral_c< T,C0 >
        , list4_c< T,C1,C2,C3,C4 >
        >
{
    typedef list5_c type;
    typedef T value_type;
};

template<
      typename T
    , T C0, T C1, T C2, T C3, T C4, T C5
    >
struct list6_c
    : l_item<
          long_<6>
        , integral_c< T,C0 >
        , list5_c< T,C1,C2,C3,C4,C5 >
        >
{
    typedef list6_c type;
    typedef T value_type;
};

template<
      typename T
    , T C0, T C1, T C2, T C3, T C4, T C5, T C6
    >
struct list7_c
    : l_item<
          long_<7>
        , integral_c< T,C0 >
        , list6_c< T,C1,C2,C3,C4,C5,C6 >
        >
{
    typedef list7_c type;
    typedef T value_type;
};

template<
      typename T
    , T C0, T C1, T C2, T C3, T C4, T C5, T C6, T C7
    >
struct list8_c
    : l_item<
          long_<8>
        , integral_c< T,C0 >
        , list7_c< T,C1,C2,C3,C4,C5,C6,C7 >
        >
{
    typedef list8_c type;
    typedef T value_type;
};

template<
      typename T
    , T C0, T C1, T C2, T C3, T C4, T C5, T C6, T C7, T C8
    >
struct list9_c
    : l_item<
          long_<9>
        , integral_c< T,C0 >
        , list8_c< T,C1,C2,C3,C4,C5,C6,C7,C8 >
        >
{
    typedef list9_c type;
    typedef T value_type;
};

template<
      typename T
    , T C0, T C1, T C2, T C3, T C4, T C5, T C6, T C7, T C8, T C9
    >
struct list10_c
    : l_item<
          long_<10>
        , integral_c< T,C0 >
        , list9_c< T,C1,C2,C3,C4,C5,C6,C7,C8,C9 >
        >
{
    typedef list10_c type;
    typedef T value_type;
};

}}
",C++
" 
/* ========================================

   * File Name : B.cpp

   * Creation Date : 16-11-2020

   * Last Modified : Po 16. listopadu 2020, 01:03:10

   * Created By : Karel Ha <mathemage@gmail.com>

   * URL : https://codeforces.com/problemset/problem/1296/B

   * Points Gained (in case of online contest) : AC

   ==========================================*/

#include <bits/stdc++.h>

using namespace std;

#define REP(I,N)   FOR(I,0,N)
#define FOR(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define ALL(A)     (A).begin(), (A).end()
#define MSG(a) cout << #a << "" == "" << (a) << endl;

const int CLEAN = -1;

template <typename T>
string NumberToString ( T Number ) {
  ostringstream ss;
  ss << Number;
  return ss.str();
}

#define ERR(args...) { vector<string> _v = split(#args, ','); err(_v.begin(), args); }
vector<string> split(const string& s, char c) {
  vector<string> v;
  stringstream ss(s);
  string x;
  while (getline(ss, x, c))
    v.emplace_back(x);
  return move(v);
}
void err(vector<string>::iterator it) {}
template<typename T, typename... Args>
void err(vector<string>::iterator it, T a, Args... args) {
  cout << it -> substr((*it)[0] == ' ', it -> length()) << "" = "" << a << endl;
  err(++it, args...);
}

int solve(int s) {
  if (s < 10) {
    return s;
  }

  int x = s - s % 10;
  return x + solve(s - x + x / 10);
}

int main() {
  int t;
  cin >> t;

  while (t--) {
    int s;
    cin >> s;

    cout << solve(s) << endl;
  }
  return 0;
}
",C++
"// Copyright (c) 2009-2010 Satoshi Nakamoto
// Copyright (c) 2009-2012 The Bitcoin developers
// Copyright (c) 2011-2013 The PPCoin developers
// Distributed under the MIT/X11 software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#include ""checkpoints.h""
#include ""db.h""
#include ""net.h""
#include ""init.h""
#include ""ui_interface.h""
#include ""kernel.h""
#include ""main.h""

#include <boost/algorithm/string/replace.hpp>
#include <boost/filesystem.hpp>
#include <boost/filesystem/fstream.hpp>

#include <cstdlib>

#include ""GetNextTargetRequired.h""
#include ""GetProofOfStakeReward.h""
#include ""GetProofOfWorkReward.h""

using namespace std;
using namespace boost;

//
// Global state
//

CCriticalSection cs_setpwalletRegistered;
set<CWallet*> setpwalletRegistered;

CCriticalSection cs_main;

CTxMemPool mempool;
unsigned int nTransactionsUpdated = 0;

map<uint256, CBlockIndex*> mapBlockIndex;
set<pair<COutPoint, unsigned int> > setStakeSeen;

CBlockIndex* pindexGenesisBlock = NULL;
int nBestHeight = -1;
CBigNum bnBestChainTrust = 0;
CBigNum bnBestInvalidTrust = 0;
uint256 hashBestChain = 0;
CBlockIndex* pindexBest = NULL;
int64 nTimeBestReceived = 0;

CMedianFilter<int> cPeerBlockCounts(5, 0); // Amount of blocks that other nodes claim to have

map<uint256, CBlock*> mapOrphanBlocks;
multimap<uint256, CBlock*> mapOrphanBlocksByPrev;
set<pair<COutPoint, unsigned int> > setStakeSeenOrphan;
map<uint256, uint256> mapProofOfStake;

map<uint256, CDataStream*> mapOrphanTransactions;
map<uint256, map<uint256, CDataStream*> > mapOrphanTransactionsByPrev;

// Constant stuff for coinbase transactions we create:
CScript COINBASE_FLAGS;

const string strMessageMagic = COIN_NAME "" Signed Message:\n"";

double dHashesPerSec;
int64 nHPSTimerStart;

// Settings
int64 nTransactionFee = MIN_TX_FEES;

//////////////////////////////////////////////////////////////////////////////
//
// dispatching functions
//

// These functions dispatch to one or all registered wallets


void RegisterWallet(CWallet* pwalletIn)
{
    {
        LOCK(cs_setpwalletRegistered);
        setpwalletRegistered.insert(pwalletIn);
    }
}

void UnregisterWallet(CWallet* pwalletIn)
{
    {
        LOCK(cs_setpwalletRegistered);
        setpwalletRegistered.erase(pwalletIn);
    }
}

// check whether the passed transaction is from us
bool static IsFromMe(CTransaction& tx)
{
    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)
        if (pwallet->IsFromMe(tx))
            return true;
    return false;
}

// get the wallet transaction with the given hash (if it exists)
bool static GetTransaction(const uint256& hashTx, CWalletTx& wtx)
{
    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)
        if (pwallet->GetTransaction(hashTx,wtx))
            return true;
    return false;
}

// erases transaction with the given hash from all wallets
void static EraseFromWallets(uint256 hash)
{
    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)
        pwallet->EraseFromWallet(hash);
}

// make sure all wallets know about the given transaction, in the given block
void SyncWithWallets(const CTransaction& tx, const CBlock* pblock, bool fUpdate, bool fConnect)
{
    if (!fConnect)
    {
        // ppcoin: wallets need to refund inputs when disconnecting coinstake
        if (tx.IsCoinStake())
        {
            BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)
                if (pwallet->IsFromMe(tx))
                    pwallet->DisableTransaction(tx);
        }
        return;
    }

    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)
        pwallet->AddToWalletIfInvolvingMe(tx, pblock, fUpdate);
}

// notify wallets about a new best chain
void static SetBestChain(const CBlockLocator& loc)
{
    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)
        pwallet->SetBestChain(loc);
}

// notify wallets about an updated transaction
void static UpdatedTransaction(const uint256& hashTx)
{
    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)
        pwallet->UpdatedTransaction(hashTx);
}

// dump all wallets
void static PrintWallets(const CBlock& block)
{
    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)
        pwallet->PrintWallet(block);
}

// notify wallets about an incoming inventory (for request counts)
void static Inventory(const uint256& hash)
{
    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)
        pwallet->Inventory(hash);
}

// ask wallets to resend their transactions
void static ResendWalletTransactions()
{
    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)
        pwallet->ResendWalletTransactions();
}







//////////////////////////////////////////////////////////////////////////////
//
// mapOrphanTransactions
//

bool AddOrphanTx(const CDataStream& vMsg)
{
    CTransaction tx;
    CDataStream(vMsg) >> tx;
    uint256 hash = tx.GetHash();
    if (mapOrphanTransactions.count(hash))
        return false;

    CDataStream* pvMsg = new CDataStream(vMsg);

    // Ignore big transactions, to avoid a
    // send-big-orphans memory exhaustion attack. If a peer has a legitimate
    // large transaction with a missing parent then we assume
    // it will rebroadcast it later, after the parent transaction(s)
    // have been mined or received.
    // 10,000 orphans, each of which is at most 5,000 bytes big is
    // at most 500 megabytes of orphans:
    if (pvMsg->size() > 5000)
    {
        printf(""ignoring large orphan tx (size: %u, hash: %s)\n"", pvMsg->size(), hash.ToString().substr(0,10).c_str());
        delete pvMsg;
        return false;
    }

    mapOrphanTransactions[hash] = pvMsg;
    BOOST_FOREACH(const CTxIn& txin, tx.vin)
        mapOrphanTransactionsByPrev[txin.prevout.hash].insert(make_pair(hash, pvMsg));

    printf(""stored orphan tx %s (mapsz %u)\n"", hash.ToString().substr(0,10).c_str(),
        mapOrphanTransactions.size());
    return true;
}

void static EraseOrphanTx(uint256 hash)
{
    if (!mapOrphanTransactions.count(hash))
        return;
    const CDataStream* pvMsg = mapOrphanTransactions[hash];
    CTransaction tx;
    CDataStream(*pvMsg) >> tx;
    BOOST_FOREACH(const CTxIn& txin, tx.vin)
    {
        mapOrphanTransactionsByPrev[txin.prevout.hash].erase(hash);
        if (mapOrphanTransactionsByPrev[txin.prevout.hash].empty())
            mapOrphanTransactionsByPrev.erase(txin.prevout.hash);
    }
    delete pvMsg;
    mapOrphanTransactions.erase(hash);
}

unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)
{
    unsigned int nEvicted = 0;
    while (mapOrphanTransactions.size() > nMaxOrphans)
    {
        // Evict a random orphan:
        uint256 randomhash = GetRandHash();
        map<uint256, CDataStream*>::iterator it = mapOrphanTransactions.lower_bound(randomhash);
        if (it == mapOrphanTransactions.end())
            it = mapOrphanTransactions.begin();
        EraseOrphanTx(it->first);
        ++nEvicted;
    }
    return nEvicted;
}







//////////////////////////////////////////////////////////////////////////////
//
// CTransaction and CTxIndex
//

bool CTransaction::ReadFromDisk(CTxDB& txdb, const uint256& hash, CTxIndex& txindexRet)
{
    SetNull();
    if (!txdb.ReadTxIndex(hash, txindexRet))
         return false;
    if (!ReadFromDisk(txindexRet.pos))
         return false;
    return true;
}

bool CTransaction::ReadFromDisk(CTxDB& txdb, COutPoint prevout, CTxIndex& txindexRet)
{
    if (!ReadFromDisk(txdb, prevout.hash, txindexRet))
        return false;
    if (prevout.n >= vout.size())
    {
        SetNull();
        return false;
    }
    return true;
}

bool CTransaction::ReadFromDisk(CTxDB& txdb, COutPoint prevout)
{
    CTxIndex txindex;
    return ReadFromDisk(txdb, prevout, txindex);
}

bool CTransaction::ReadFromDisk(COutPoint prevout)
{
    CTxDB txdb(""r"");
    CTxIndex txindex;
    return ReadFromDisk(txdb, prevout, txindex);
}

bool CTransaction::IsStandard() const
{
    BOOST_FOREACH(const CTxIn& txin, vin)
    {
        // Biggest 'standard' txin is a 3-signature 3-of-3 CHECKMULTISIG
        // pay-to-script-hash, which is 3 ~80-byte signatures, 3
        // ~65-byte public keys, plus a few script ops.
        if (txin.scriptSig.size() > 500)
            return false;
        if (!txin.scriptSig.IsPushOnly())
            return false;
    }

    unsigned int nDataOut = 0;
    txnouttype whichType;
    BOOST_FOREACH(const CTxOut& txout, vout) {
        if (!::IsStandard(txout.scriptPubKey, whichType)) {
            return false;
        }
        if (whichType == TX_NULL_DATA)
            nDataOut++;
    }

    // only one OP_RETURN txout is permitted
    if (nDataOut > 1) {
        return false;
    }

    return true;
}

//
// Check transaction inputs, and make sure any
// pay-to-script-hash transactions are evaluating IsStandard scripts
//
// Why bother? To avoid denial-of-service attacks; an attacker
// can submit a standard HASH... OP_EQUAL transaction,
// which will get accepted into blocks. The redemption
// script can be anything; an attacker could use a very
// expensive-to-check-upon-redemption script like:
//   DUP CHECKSIG DROP ... repeated 100 times... OP_1
//
bool CTransaction::AreInputsStandard(const MapPrevTx& mapInputs) const
{
    if (IsCoinBase())
        return true; // Coinbases don't use vin normally

    for (unsigned int i = 0; i < vin.size(); i++)
    {
        const CTxOut& prev = GetOutputFor(vin[i], mapInputs);

        vector<vector<unsigned char> > vSolutions;
        txnouttype whichType;
        // get the scriptPubKey corresponding to this input:
        const CScript& prevScript = prev.scriptPubKey;
        if (!Solver(prevScript, whichType, vSolutions))
            return false;
        int nArgsExpected = ScriptSigArgsExpected(whichType, vSolutions);
        if (nArgsExpected < 0)
            return false;

        // Transactions with extra stuff in their scriptSigs are
        // non-standard. Note that this EvalScript() call will
        // be quick, because if there are any operations
        // beside ""push data"" in the scriptSig the
        // IsStandard() call returns false
        vector<vector<unsigned char> > stack;
        if (!EvalScript(stack, vin[i].scriptSig, *this, i, 0))
            return false;

        if (whichType == TX_SCRIPTHASH)
        {
            if (stack.empty())
                return false;
            CScript subscript(stack.back().begin(), stack.back().end());
            vector<vector<unsigned char> > vSolutions2;
            txnouttype whichType2;
            if (!Solver(subscript, whichType2, vSolutions2))
                return false;
            if (whichType2 == TX_SCRIPTHASH)
                return false;

            int tmpExpected;
            tmpExpected = ScriptSigArgsExpected(whichType2, vSolutions2);
            if (tmpExpected < 0)
                return false;
            nArgsExpected += tmpExpected;
        }

        if (stack.size() != (unsigned int)nArgsExpected)
            return false;
    }

    return true;
}

unsigned int
CTransaction::GetLegacySigOpCount() const
{
    unsigned int nSigOps = 0;
    BOOST_FOREACH(const CTxIn& txin, vin)
    {
        nSigOps += txin.scriptSig.GetSigOpCount(false);
    }
    BOOST_FOREACH(const CTxOut& txout, vout)
    {
        nSigOps += txout.scriptPubKey.GetSigOpCount(false);
    }
    return nSigOps;
}


int CMerkleTx::SetMerkleBranch(const CBlock* pblock)
{
    if (fClient)
    {
        if (hashBlock == 0)
            return 0;
    }
    else
    {
        CBlock blockTmp;
        if (pblock == NULL)
        {
            // Load the block this tx is in
            CTxIndex txindex;
            if (!CTxDB(""r"").ReadTxIndex(GetHash(), txindex))
                return 0;
            if (!blockTmp.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos))
                return 0;
            pblock = &blockTmp;
        }

        // Update the tx's hashBlock
        hashBlock = pblock->GetHash();

        // Locate the transaction
        for (nIndex = 0; nIndex < (int)pblock->vtx.size(); nIndex++)
            if (pblock->vtx[nIndex] == *(CTransaction*)this)
                break;
        if (nIndex == (int)pblock->vtx.size())
        {
            vMerkleBranch.clear();
            nIndex = -1;
            printf(""ERROR: SetMerkleBranch() : couldn't find tx in block\n"");
            return 0;
        }

        // Fill in merkle branch
        vMerkleBranch = pblock->GetMerkleBranch(nIndex);
    }

    // Is the tx in a block that's in the main chain
    map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);
    if (mi == mapBlockIndex.end())
        return 0;
    CBlockIndex* pindex = (*mi).second;
    if (!pindex || !pindex->IsInMainChain())
        return 0;

    return pindexBest->nHeight - pindex->nHeight + 1;
}





bool CTransaction::IsRestrictedCoinStake() const
{
    if (!IsCoinStake())
        return false;

    int64 nValueIn = 0;
    CScript onlyAllowedScript;

    for (unsigned int i = 0; i < vin.size(); ++i)
    {
        const COutPoint& prevout = vin[i].prevout;

        CTxDB txdb(""r"");
        CTransaction txPrev;
        CTxIndex txindex;
        if (!txPrev.ReadFromDisk(txdb, prevout, txindex))
            return false;
        txdb.Close();

        const CTxOut& prevtxo = txPrev.vout[prevout.n];
        const CScript& prevScript = prevtxo.scriptPubKey;

        if (i == 0)
        {
            onlyAllowedScript = prevScript;

            if (onlyAllowedScript.empty())
            {
                return false;
            }
        }
        else
        {
            if (prevScript != onlyAllowedScript)
            {
                return false;
            }
        }

        nValueIn += prevtxo.nValue;
    }

    int64 nValueOut = 0;

    for (unsigned int i = 1; i < vout.size(); ++i)
    {
        const CTxOut& txo = vout[i];

        if (txo.nValue == 0)
            continue ;

        if (txo.scriptPubKey != onlyAllowedScript)
            return false;

        nValueOut += txo.nValue;
    }

    if (nValueOut < nValueIn)
        return false;

    return true;
}

bool CTransaction::CheckTransaction() const
{
    // Basic checks that don't depend on any context
    if (vin.empty())
        return DoS(10, error(""CTransaction::CheckTransaction() : vin empty""));
    if (vout.empty())
        return DoS(10, error(""CTransaction::CheckTransaction() : vout empty""));
    // Time (prevent mempool memory exhaustion attack)
    if (nTime > GetAdjustedTime() + MAX_CLOCK_DRIFT)
        return DoS(10, error(""CTransaction::CheckTransaction() : timestamp is too far into the future""));
    // Size limits
    if (::GetSerializeSize(*this, SER_NETWORK, PROTOCOL_VERSION) > MAX_BLOCK_SIZE)
        return DoS(100, error(""CTransaction::CheckTransaction() : size limits failed""));

    // Check for negative or overflow output values
    int64 nValueOut = 0;
    for (size_t i = 0; i < vout.size(); i++)
    {
        const CTxOut& txout = vout[i];
        if (txout.IsEmpty() && (!IsCoinBase()) && (!IsCoinStake()))
            return DoS(100, error(""CTransaction::CheckTransaction() : txout empty for user transaction""));
        // ppcoin: enforce minimum output amount
        if ((!txout.IsEmpty()) && txout.nValue < MIN_TXOUT_AMOUNT)
            return DoS(100, error(""CTransaction::CheckTransaction() : txout.nValue below minimum (%d)"", txout.nValue));
        if (txout.nValue > MAX_MONEY_STACK)
            return DoS(100, error(""CTransaction::CheckTransaction() : txout.nValue too high (%d)"", txout.nValue));
        nValueOut += txout.nValue;
        if (!IsValidAmount(nValueOut))
            return DoS(100, error(""CTransaction::CheckTransaction() : txout total out of range""));
    }

    // Check for duplicate inputs
    set<COutPoint> vInOutPoints;
    BOOST_FOREACH(const CTxIn& txin, vin)
    {
        if (vInOutPoints.count(txin.prevout))
            return false;
        vInOutPoints.insert(txin.prevout);
    }

    if (IsCoinBase())
    {
        if (vin[0].scriptSig.size() < 2 || vin[0].scriptSig.size() > 100)
            return DoS(100, error(""CTransaction::CheckTransaction() : coinbase script size""));
    }
    else
    {
        BOOST_FOREACH(const CTxIn& txin, vin)
            if (txin.prevout.IsNull())
                return DoS(10, error(""CTransaction::CheckTransaction() : prevout is null""));
    }

    return true;
}

bool CTxMemPool::accept(CTxDB& txdb, CTransaction &tx, bool fCheckInputs,
                        bool* pfMissingInputs)
{
    if (pfMissingInputs)
        *pfMissingInputs = false;

    if (!tx.CheckTransaction())
        return error(""CTxMemPool::accept() : CheckTransaction failed"");

    // Coinbase is only valid in a block, not as a loose transaction
    if (tx.IsCoinBase())
        return tx.DoS(100, error(""CTxMemPool::accept() : coinbase as individual tx""));
    // ppcoin: coinstake is also only valid in a block, not as a loose transaction
    if (tx.IsCoinStake())
        return tx.DoS(100, error(""CTxMemPool::accept() : coinstake as individual tx""));

    // To help v0.1.5 clients who would see it as a negative number
    if ((int64)tx.nLockTime > std::numeric_limits<int>::max())
        return error(""CTxMemPool::accept() : not accepting nLockTime beyond 2038 yet"");

    // Rather not work on nonstandard transactions
    if (!tx.IsStandard())
        return error(""CTxMemPool::accept() : nonstandard transaction type"");

    // Do we already have it?
    uint256 hash = tx.GetHash();
    {
        LOCK(cs);
        if (mapTx.count(hash))
            return false;
    }
    if (fCheckInputs)
        if (txdb.ContainsTx(hash))
            return false;

    // Check for conflicts with in-memory transactions
    CTransaction* ptxOld = NULL;
    for (unsigned int i = 0; i < tx.vin.size(); i++)
    {
        COutPoint outpoint = tx.vin[i].prevout;
        if (mapNextTx.count(outpoint))
        {
            // Disable replacement feature for now
            return false;

            // Allow replacing with a newer version of the same transaction
            if (i != 0)
                return false;
            ptxOld = mapNextTx[outpoint].ptx;
            if (ptxOld->IsFinal())
                return false;
            if (!tx.IsNewerThan(*ptxOld))
                return false;
            for (unsigned int i = 0; i < tx.vin.size(); i++)
            {
                COutPoint outpoint = tx.vin[i].prevout;
                if (!mapNextTx.count(outpoint) || mapNextTx[outpoint].ptx != ptxOld)
                    return false;
            }
            break;
        }
    }

    if (fCheckInputs)
    {
        MapPrevTx mapInputs;
        map<uint256, CTxIndex> mapUnused;
        bool fInvalid = false;
        if (!tx.FetchInputs(txdb, mapUnused, false, false, mapInputs, fInvalid))
        {
            if (fInvalid)
                return error(""CTxMemPool::accept() : FetchInputs found invalid tx %s"", hash.ToString().substr(0,10).c_str());
            if (pfMissingInputs)
                *pfMissingInputs = true;
            return error(""CTxMemPool::accept() : FetchInputs failed %s"", hash.ToString().substr(0,10).c_str());
        }

        // Check for non-standard pay-to-script-hash in inputs
        if (!tx.AreInputsStandard(mapInputs))
            return error(""CTxMemPool::accept() : nonstandard transaction input"");

        // Note: if you modify this code to accept non-standard transactions, then
        // you should add code here to check that the transaction does a
        // reasonable number of ECDSA signature verifications.

        int64 nFees = tx.GetValueIn(mapInputs)-tx.GetValueOut();
        unsigned int nSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);

        // Don't accept it if it can't get into a block
        if (nFees < tx.GetMinFee(1000, false, GMF_RELAY))
            return error(""CTxMemPool::accept() : not enough fees"");

        // Continuously rate-limit free transactions
        // This mitigates 'penny-flooding' -- sending thousands of free transactions just to
        // be annoying or make other's transactions take longer to confirm.
        if (nFees < MIN_RELAY_TX_FEES)
        {
            static CCriticalSection cs;
            static double dFreeCount;
            static int64 nLastTime;
            int64 nNow = GetTime();

            {
                LOCK(cs);
                // Use an exponentially decaying ~10-minute window:
                dFreeCount *= pow(1.0 - 1.0/600.0, (double)(nNow - nLastTime));
                nLastTime = nNow;
                // -limitfreerelay unit is thousand-bytes-per-minute
                // At default rate it would take over a month to fill 1GB
                if (dFreeCount > GetArg(""-limitfreerelay"", 15)*10*1000 && !IsFromMe(tx))
                    return error(""CTxMemPool::accept() : free transaction rejected by rate limiter"");
                if (fDebug)
                    printf(""Rate limit dFreeCount: %g => %g\n"", dFreeCount, dFreeCount+nSize);
                dFreeCount += nSize;
            }
        }

        // Check against previous transactions
        // This is done last to help prevent CPU exhaustion denial-of-service attacks.
        if (!tx.ConnectInputs(txdb, mapInputs, mapUnused, CDiskTxPos(1,1,1), pindexBest, false, false))
        {
            return error(""CTxMemPool::accept() : ConnectInputs failed %s"", hash.ToString().substr(0,10).c_str());
        }
    }

    // Store transaction in memory
    {
        LOCK(cs);
        if (ptxOld)
        {
            printf(""CTxMemPool::accept() : replacing tx %s with new version\n"", ptxOld->GetHash().ToString().c_str());
            remove(*ptxOld);
        }
        addUnchecked(tx);
    }

    ///// are we sure this is ok when loading transactions or restoring block txes
    // If updated, erase old tx from wallet
    if (ptxOld)
        EraseFromWallets(ptxOld->GetHash());

    printf(""CTxMemPool::accept() : accepted %s\n"", hash.ToString().substr(0,10).c_str());
    return true;
}

bool CTransaction::AcceptToMemoryPool(CTxDB& txdb, bool fCheckInputs, bool* pfMissingInputs)
{
    return mempool.accept(txdb, *this, fCheckInputs, pfMissingInputs);
}

bool CTxMemPool::addUnchecked(CTransaction &tx)
{
    printf(""addUnchecked(): size %lu\n"",  mapTx.size());
    // Add to memory pool without checking anything.  Don't call this directly,
    // call CTxMemPool::accept to properly check the transaction first.
    {
        LOCK(cs);
        uint256 hash = tx.GetHash();
        mapTx[hash] = tx;
        for (unsigned int i = 0; i < tx.vin.size(); i++)
            mapNextTx[tx.vin[i].prevout] = CInPoint(&mapTx[hash], i);
        nTransactionsUpdated++;
    }
    return true;
}


bool CTxMemPool::remove(CTransaction &tx)
{
    // Remove transaction from memory pool
    {
        LOCK(cs);
        uint256 hash = tx.GetHash();
        if (mapTx.count(hash))
        {
            BOOST_FOREACH(const CTxIn& txin, tx.vin)
                mapNextTx.erase(txin.prevout);
            mapTx.erase(hash);
            nTransactionsUpdated++;
        }
    }
    return true;
}


void CTxMemPool::queryHashes(std::vector<uint256>& vtxid)
{
    vtxid.clear();

    LOCK(cs);
    vtxid.reserve(mapTx.size());
    for (map<uint256, CTransaction>::iterator mi = mapTx.begin(); mi != mapTx.end(); ++mi)
        vtxid.push_back((*mi).first);
}







int CMerkleTx::GetDepthInMainChain(CBlockIndex* &pindexRet) const
{
    if (hashBlock == 0 || nIndex == -1)
        return 0;

    // Find the block it claims to be in
    map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);
    if (mi == mapBlockIndex.end())
        return 0;
    CBlockIndex* pindex = (*mi).second;
    if (!pindex || !pindex->IsInMainChain())
        return 0;

    // Make sure the merkle branch connects to this block
    if (!fMerkleVerified)
    {
        if (CBlock::CheckMerkleBranch(GetHash(), vMerkleBranch, nIndex) != pindex->hashMerkleRoot)
            return 0;
        fMerkleVerified = true;
    }

    pindexRet = pindex;
    return pindexBest->nHeight - pindex->nHeight + 1;
}


int CMerkleTx::GetBlocksToMaturity() const
{
    if (!(IsCoinBase() || IsCoinStake()))
        return 0;

    int depth = GetDepthInMainChain();

    if (depth == 0) // Not in the blockchain
        return COINBASE_MATURITY;

    return max(0, COINBASE_MATURITY - (depth - 1));
}


bool CMerkleTx::AcceptToMemoryPool(CTxDB& txdb, bool fCheckInputs)
{
    if (fClient)
    {
        if (!IsInMainChain() && !ClientConnectInputs())
            return false;
        return CTransaction::AcceptToMemoryPool(txdb, false);
    }
    else
    {
        return CTransaction::AcceptToMemoryPool(txdb, fCheckInputs);
    }
}

bool CMerkleTx::AcceptToMemoryPool()
{
    CTxDB txdb(""r"");
    return AcceptToMemoryPool(txdb);
}



bool CWalletTx::AcceptWalletTransaction(CTxDB& txdb, bool fCheckInputs)
{

    {
        LOCK(mempool.cs);
        // Add previous supporting transactions first
        BOOST_FOREACH(CMerkleTx& tx, vtxPrev)
        {
            if (!(tx.IsCoinBase() || tx.IsCoinStake()))
            {
                uint256 hash = tx.GetHash();
                if (!mempool.exists(hash) && !txdb.ContainsTx(hash))
                    tx.AcceptToMemoryPool(txdb, fCheckInputs);
            }
        }
        return AcceptToMemoryPool(txdb, fCheckInputs);
    }
    return false;
}

bool CWalletTx::AcceptWalletTransaction()
{
    CTxDB txdb(""r"");
    return AcceptWalletTransaction(txdb);
}

int CTxIndex::GetDepthInMainChain() const
{
    // Read block header
    CBlock block;
    if (!block.ReadFromDisk(pos.nFile, pos.nBlockPos, false))
        return 0;
    // Find the block in the index
    map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(block.GetHash());
    if (mi == mapBlockIndex.end())
        return 0;
    CBlockIndex* pindex = (*mi).second;
    if (!pindex || !pindex->IsInMainChain())
        return 0;
    return 1 + nBestHeight - pindex->nHeight;
}

// Return transaction in tx, and if it was found inside a block, its hash is placed in hashBlock
bool GetTransaction(const uint256 &hash, CTransaction &tx, uint256 &hashBlock)
{
    {
        LOCK(cs_main);
        {
            LOCK(mempool.cs);
            if (mempool.exists(hash))
            {
                tx = mempool.lookup(hash);
                return true;
            }
        }
        CTxDB txdb(""r"");
        CTxIndex txindex;
        if (tx.ReadFromDisk(txdb, hash, txindex))
        {
            CBlock block;
            if (block.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos, false))
                hashBlock = block.GetHash();
            return true;
        }
        // look for transaction in disconnected blocks to find orphaned CoinBase and CoinStake transactions
        BOOST_FOREACH(PAIRTYPE(const uint256, CBlockIndex*)& item, mapBlockIndex)
        {
            CBlockIndex* pindex = item.second;
            if (pindex == pindexBest || pindex->pnext != 0)
                continue;
            CBlock block;
            if (!block.ReadFromDisk(pindex))
                continue;
            BOOST_FOREACH(const CTransaction& txOrphan, block.vtx)
            {
                if (txOrphan.GetHash() == hash)
                {
                    tx = txOrphan;
                    return true;
                }
            }
        }
    }
    return false;
}


//////////////////////////////////////////////////////////////////////////////
//
// CBlock and CBlockIndex
//

bool CBlock::ReadFromDisk(const CBlockIndex* pindex, bool fReadTransactions)
{
    if (!fReadTransactions)
    {
        *this = pindex->GetBlockHeader();
        return true;
    }
    if (!ReadFromDisk(pindex->nFile, pindex->nBlockPos, fReadTransactions))
        return false;
    if (GetHash() != pindex->GetBlockHash())
        return error(""CBlock::ReadFromDisk() : GetHash() doesn't match index"");
    return true;
}

uint256 static GetOrphanRoot(const CBlock* pblock)
{
    // Work back to the first block in the orphan chain
    while (mapOrphanBlocks.count(pblock->hashPrevBlock))
        pblock = mapOrphanBlocks[pblock->hashPrevBlock];
    return pblock->GetHash();
}

// ppcoin: find block wanted by given orphan block
uint256 WantedByOrphan(const CBlock* pblockOrphan)
{
    // Work back to the first block in the orphan chain
    while (mapOrphanBlocks.count(pblockOrphan->hashPrevBlock))
        pblockOrphan = mapOrphanBlocks[pblockOrphan->hashPrevBlock];
    return pblockOrphan->hashPrevBlock;
}

//
// minimum amount of work that could possibly be required nTime after
// minimum work required was nBase
//
unsigned int ComputeMinWork(unsigned int nBase, int64 nTime)
{
    CBigNum bnResult;
    bnResult.SetCompact(nBase);
    bnResult *= 2;
    while (nTime > 0 && bnResult < POW_MAX_TARGET)
    {
        // Maximum 200% adjustment per day...
        bnResult *= 2;
        nTime -= 24 * 60 * 60;
    }
    if (bnResult > POW_MAX_TARGET)
        bnResult = POW_MAX_TARGET;
    return bnResult.GetCompact();
}

// ppcoin: find last block index up to pindex
const CBlockIndex* GetLastBlockIndex(const CBlockIndex* pindex, bool fProofOfStake)
{
    while (pindex && pindex->pprev && (pindex->IsProofOfStake() != fProofOfStake))
        pindex = pindex->pprev;
    return pindex;
}

bool CheckProofOfWork(uint256 hash, unsigned int nBits, bool triggerErrors)
{
    CBigNum bnTarget;
    bnTarget.SetCompact(nBits);

    // Check range
    if (bnTarget <= 0 || bnTarget > POW_MAX_TARGET)
        return triggerErrors ? error(""CheckProofOfWork() : nBits below minimum work"") : false;

    // Check proof of work matches claimed amount
    if (hash > bnTarget.getuint256())
        return triggerErrors ? error(""CheckProofOfWork() : hash doesn't match nBits"") : false;

    return true;
}

// Return maximum amount of blocks that other nodes claim to have
int GetNumBlocksOfPeers()
{
    return std::max(cPeerBlockCounts.median(), Checkpoints::GetTotalBlocksEstimate());
}

bool IsInitialBlockDownload()
{
    if (pindexBest == NULL || nBestHeight < Checkpoints::GetTotalBlocksEstimate())
        return true;
    static int64 nLastUpdate;
    static CBlockIndex* pindexLastBest;
    if (pindexBest != pindexLastBest)
    {
        pindexLastBest = pindexBest;
        nLastUpdate = GetTime();
    }
    return (GetTime() - nLastUpdate < 10 &&
            pindexBest->GetBlockTime() < GetTime() - 24 * 60 * 60);
}

void static InvalidChainFound(CBlockIndex* pindexNew)
{
    if (pindexNew->bnChainTrust > bnBestInvalidTrust)
    {
        bnBestInvalidTrust = pindexNew->bnChainTrust;
        CTxDB().WriteBestInvalidTrust(bnBestInvalidTrust);
        MainFrameRepaint();
    }
    printf(""InvalidChainFound: invalid block=%s  height=%d  trust=%s\n"", pindexNew->GetBlockHash().ToString().substr(0,20).c_str(), pindexNew->nHeight, CBigNum(pindexNew->bnChainTrust).ToString().c_str());
    printf(""InvalidChainFound:  current best=%s  height=%d  trust=%s\n"", hashBestChain.ToString().substr(0,20).c_str(), nBestHeight, CBigNum(bnBestChainTrust).ToString().c_str());
    // ppcoin: should not enter safe mode for longer invalid chain
}

void CBlock::UpdateTime(const CBlockIndex* pindexPrev)
{
    nTime = max(GetBlockTime(), GetAdjustedTime());
}











bool CTransaction::DisconnectInputs(CTxDB& txdb)
{
    // Relinquish previous transactions' spent pointers
    if (!IsCoinBase())
    {
        BOOST_FOREACH(const CTxIn& txin, vin)
        {
            COutPoint prevout = txin.prevout;

            // Get prev txindex from disk
            CTxIndex txindex;
            if (!txdb.ReadTxIndex(prevout.hash, txindex))
                return error(""DisconnectInputs() : ReadTxIndex failed"");

            if (prevout.n >= txindex.vSpent.size())
                return error(""DisconnectInputs() : prevout.n out of range"");

            // Mark outpoint as not spent
            txindex.vSpent[prevout.n].SetNull();

            // Write back
            if (!txdb.UpdateTxIndex(prevout.hash, txindex))
                return error(""DisconnectInputs() : UpdateTxIndex failed"");
        }
    }

    // Remove transaction from index
    // This can fail if a duplicate of this transaction was in a chain that got
    // reorganized away. This is only possible if this transaction was completely
    // spent, so erasing it would be a no-op anway.
    txdb.EraseTxIndex(*this);

    return true;
}


bool CTransaction::FetchInputs(CTxDB& txdb, const map<uint256, CTxIndex>& mapTestPool,
                               bool fBlock, bool fMiner, MapPrevTx& inputsRet, bool& fInvalid)
{
    // FetchInputs can return false either because we just haven't seen some inputs
    // (in which case the transaction should be stored as an orphan)
    // or because the transaction is malformed (in which case the transaction should
    // be dropped).  If tx is definitely invalid, fInvalid will be set to true.
    fInvalid = false;

    if (IsCoinBase())
        return true; // Coinbase transactions have no inputs to fetch.

    for (unsigned int i = 0; i < vin.size(); i++)
    {
        COutPoint prevout = vin[i].prevout;
        if (inputsRet.count(prevout.hash))
            continue; // Got it already

        // Read txindex
        CTxIndex& txindex = inputsRet[prevout.hash].first;
        bool fFound = true;
        if ((fBlock || fMiner) && mapTestPool.count(prevout.hash))
        {
            // Get txindex from current proposed changes
            txindex = mapTestPool.find(prevout.hash)->second;
        }
        else
        {
            // Read txindex from txdb
            fFound = txdb.ReadTxIndex(prevout.hash, txindex);
        }
        if (!fFound && (fBlock || fMiner))
            return fMiner ? false : error(""FetchInputs() : %s prev tx %s index entry not found"", GetHash().ToString().substr(0,10).c_str(),  prevout.hash.ToString().substr(0,10).c_str());

        // Read txPrev
        CTransaction& txPrev = inputsRet[prevout.hash].second;
        if (!fFound || txindex.pos == CDiskTxPos(1,1,1))
        {
            // Get prev tx from single transactions in memory
            {
                LOCK(mempool.cs);
                if (!mempool.exists(prevout.hash))
                    return error(""FetchInputs() : %s mempool Tx prev not found %s"", GetHash().ToString().substr(0,10).c_str(),  prevout.hash.ToString().substr(0,10).c_str());
                txPrev = mempool.lookup(prevout.hash);
            }
            if (!fFound)
                txindex.vSpent.resize(txPrev.vout.size());
        }
        else
        {
            // Get prev tx from disk
            if (!txPrev.ReadFromDisk(txindex.pos))
                return error(""FetchInputs() : %s ReadFromDisk prev tx %s failed"", GetHash().ToString().substr(0,10).c_str(),  prevout.hash.ToString().substr(0,10).c_str());
        }
    }

    // Make sure all prevout.n's are valid:
    for (unsigned int i = 0; i < vin.size(); i++)
    {
        const COutPoint prevout = vin[i].prevout;
        assert(inputsRet.count(prevout.hash) != 0);
        const CTxIndex& txindex = inputsRet[prevout.hash].first;
        const CTransaction& txPrev = inputsRet[prevout.hash].second;
        if (prevout.n >= txPrev.vout.size() || prevout.n >= txindex.vSpent.size())
        {
            // Revisit this if/when transaction replacement is implemented and allows
            // adding inputs:
            fInvalid = true;
            return DoS(100, error(""FetchInputs() : %s prevout.n out of range %d %d %d prev tx %s\n%s"", GetHash().ToString().substr(0,10).c_str(), prevout.n, txPrev.vout.size(), txindex.vSpent.size(), prevout.hash.ToString().substr(0,10).c_str(), txPrev.ToString().c_str()));
        }
    }

    return true;
}

const CTxOut& CTransaction::GetOutputFor(const CTxIn& input, const MapPrevTx& inputs) const
{
    MapPrevTx::const_iterator mi = inputs.find(input.prevout.hash);
    if (mi == inputs.end())
        throw std::runtime_error(""CTransaction::GetOutputFor() : prevout.hash not found"");

    const CTransaction& txPrev = (mi->second).second;
    if (input.prevout.n >= txPrev.vout.size())
        throw std::runtime_error(""CTransaction::GetOutputFor() : prevout.n out of range"");

    return txPrev.vout[input.prevout.n];
}

int64 CTransaction::GetValueIn(const MapPrevTx& inputs) const
{
    if (IsCoinBase())
        return 0;

    int64 nResult = 0;
    for (unsigned int i = 0; i < vin.size(); i++)
    {
        nResult += GetOutputFor(vin[i], inputs).nValue;
    }
    return nResult;

}

unsigned int CTransaction::GetP2SHSigOpCount(const MapPrevTx& inputs) const
{
    if (IsCoinBase())
        return 0;

    unsigned int nSigOps = 0;
    for (unsigned int i = 0; i < vin.size(); i++)
    {
        const CTxOut& prevout = GetOutputFor(vin[i], inputs);
        if (prevout.scriptPubKey.IsPayToScriptHash())
            nSigOps += prevout.scriptPubKey.GetSigOpCount(vin[i].scriptSig);
    }
    return nSigOps;
}

bool CTransaction::ConnectInputs(CTxDB& txdb, MapPrevTx inputs,
                                 map<uint256, CTxIndex>& mapTestPool, const CDiskTxPos& posThisTx,
                                 const CBlockIndex* pindexBlock, bool fBlock, bool fMiner, bool fStrictPayToScriptHash)
{
    // Take over previous transactions' spent pointers
    // fBlock is true when this is called from AcceptBlock when a new best-block is added to the blockchain
    // fMiner is true when called from the internal bitcoin miner
    // ... both are false when called from CTransaction::AcceptToMemoryPool
    if (!IsCoinBase())
    {
        int64 nValueIn = 0;
        int64 nFees = 0;
        for (unsigned int i = 0; i < vin.size(); i++)
        {
            COutPoint prevout = vin[i].prevout;
            assert(inputs.count(prevout.hash) > 0);
            CTxIndex& txindex = inputs[prevout.hash].first;
            CTransaction& txPrev = inputs[prevout.hash].second;

            if (prevout.n >= txPrev.vout.size() || prevout.n >= txindex.vSpent.size())
                return DoS(100, error(""ConnectInputs() : %s prevout.n out of range %d %d %d prev tx %s\n%s"", GetHash().ToString().substr(0,10).c_str(), prevout.n, txPrev.vout.size(), txindex.vSpent.size(), prevout.hash.ToString().substr(0,10).c_str(), txPrev.ToString().c_str()));

            // If prev is coinbase/coinstake, check that it's matured
            if (txPrev.IsCoinBase() || txPrev.IsCoinStake())
                for (const CBlockIndex* pindex = pindexBlock; pindex && pindexBlock->nHeight - pindex->nHeight < COINBASE_MATURITY; pindex = pindex->pprev)
                    if (pindex->nBlockPos == txindex.pos.nBlockPos && pindex->nFile == txindex.pos.nFile)
                        return error(""ConnectInputs() : tried to spend coinbase/coinstake at depth %d"", pindexBlock->nHeight - pindex->nHeight);

            // ppcoin: check transaction timestamp
            if (txPrev.nTime > nTime)
                return DoS(100, error(""ConnectInputs() : transaction timestamp earlier than input transaction""));

            // Check for negative or overflow input values
            nValueIn += txPrev.vout[prevout.n].nValue;
            if (!IsValidAmount(txPrev.vout[prevout.n].nValue) || !IsValidAmount(nValueIn))
                return DoS(100, error(""ConnectInputs() : txin values out of range""));

        }
        // The first loop above does all the inexpensive checks.
        // Only if ALL inputs pass do we perform expensive ECDSA signature checks.
        // Helps prevent CPU exhaustion attacks.
        for (unsigned int i = 0; i < vin.size(); i++)
        {
            COutPoint prevout = vin[i].prevout;
            assert(inputs.count(prevout.hash) > 0);
            CTxIndex& txindex = inputs[prevout.hash].first;
            CTransaction& txPrev = inputs[prevout.hash].second;

            // Check for conflicts (double-spend)
            // This doesn't trigger the DoS code on purpose; if it did, it would make it easier
            // for an attacker to attempt to split the network.
            if (!txindex.vSpent[prevout.n].IsNull())
                return fMiner ? false : error(""ConnectInputs() : %s prev tx already used at %s"", GetHash().ToString().substr(0,10).c_str(), txindex.vSpent[prevout.n].ToString().c_str());

            // Skip ECDSA signature verification when connecting blocks (fBlock=true)
            // before the last blockchain checkpoint. This is safe because block merkle hashes are
            // still computed and checked, and any change will be caught at the next checkpoint.
            if (!(fBlock && (nBestHeight < Checkpoints::GetTotalBlocksEstimate())))
            {
                // Verify signature
                if (!VerifySignature(txPrev, *this, i, fStrictPayToScriptHash, 0))
                {
                    // only during transition phase for P2SH: do not invoke anti-DoS code for
                    // potentially old clients relaying bad P2SH transactions
                    if (fStrictPayToScriptHash && VerifySignature(txPrev, *this, i, false, 0))
                        return error(""ConnectInputs() : %s P2SH VerifySignature failed"", GetHash().ToString().substr(0,10).c_str());

                    return DoS(100,error(""ConnectInputs() : %s VerifySignature failed"", GetHash().ToString().substr(0,10).c_str()));
                }
            }

            // Mark outpoints as spent
            txindex.vSpent[prevout.n] = posThisTx;

            // Write back
            if (fBlock || fMiner)
            {
                mapTestPool[prevout.hash] = txindex;
            }
        }

        if (IsCoinStake())
        {
            // ppcoin: coin stake tx earns reward instead of paying fee
            uint64 nCoinAge;
            if (!GetCoinAge(txdb, nCoinAge))
                return error(""ConnectInputs() : %s unable to get coin age for coinstake"", GetHash().ToString().substr(0,10).c_str());
            int64 nStakeReward = GetValueOut() - nValueIn;
            if (nStakeReward > GetProofOfStakeReward(nCoinAge, pindexBlock->pprev->nHeight) - GetMinFee() + MIN_TX_FEES)
                return DoS(100, error(""ConnectInputs() : %s stake reward exceeded"", GetHash().ToString().substr(0,10).c_str()));
        }
        else
        {
            if (nValueIn < GetValueOut())
                return DoS(100, error(""ConnectInputs() : %s value in < value out"", GetHash().ToString().substr(0,10).c_str()));

            // Tally transaction fees
            int64 nTxFee = nValueIn - GetValueOut();
            if (nTxFee < 0)
                return DoS(100, error(""ConnectInputs() : %s nTxFee < 0"", GetHash().ToString().substr(0,10).c_str()));
            // ppcoin: enforce transaction fees for every block
            if (nTxFee < GetMinFee())
                return fBlock? DoS(100, error(""ConnectInputs() : %s not paying required fee=%s, paid=%s"", GetHash().ToString().substr(0,10).c_str(), FormatMoney(GetMinFee()).c_str(), FormatMoney(nTxFee).c_str())) : false;
            nFees += nTxFee;
            if (!IsValidAmount(nFees))
                return DoS(100, error(""ConnectInputs() : nFees out of range""));
        }
    }

    return true;
}


bool CTransaction::ClientConnectInputs()
{
    if (IsCoinBase())
        return false;

    // Take over previous transactions' spent pointers
    {
        LOCK(mempool.cs);
        int64 nValueIn = 0;
        for (unsigned int i = 0; i < vin.size(); i++)
        {
            // Get prev tx from single transactions in memory
            COutPoint prevout = vin[i].prevout;
            if (!mempool.exists(prevout.hash))
                return false;
            CTransaction& txPrev = mempool.lookup(prevout.hash);

            if (prevout.n >= txPrev.vout.size())
                return false;

            // Verify signature
            if (!VerifySignature(txPrev, *this, i, true, 0))
                return error(""ConnectInputs() : VerifySignature failed"");

            ///// this is redundant with the mempool.mapNextTx stuff,
            ///// not sure which I want to get rid of
            ///// this has to go away now that posNext is gone
            // // Check for conflicts
            // if (!txPrev.vout[prevout.n].posNext.IsNull())
            //     return error(""ConnectInputs() : prev tx already used"");
            //
            // // Flag outpoints as used
            // txPrev.vout[prevout.n].posNext = posThisTx;

            nValueIn += txPrev.vout[prevout.n].nValue;

            if (!IsValidAmount(txPrev.vout[prevout.n].nValue) || !IsValidAmount(nValueIn)) {
                return error(""ClientConnectInputs() : txin values out of range"");
            }
        }

        if (GetValueOut() > nValueIn) {
            return false;
        }
    }

    return true;
}




bool CBlock::DisconnectBlock(CTxDB& txdb, CBlockIndex* pindex)
{
    // Disconnect in reverse order
    for (int i = vtx.size()-1; i >= 0; i--)
        if (!vtx[i].DisconnectInputs(txdb))
            return false;

    // Update block index on disk without changing it in memory.
    // The memory index structure will be changed after the db commits.
    if (pindex->pprev)
    {
        CDiskBlockIndex blockindexPrev(pindex->pprev);
        blockindexPrev.hashNext = 0;
        if (!txdb.WriteBlockIndex(blockindexPrev))
            return error(""DisconnectBlock() : WriteBlockIndex failed"");
    }

    // ppcoin: clean up wallet after disconnecting coinstake
    BOOST_FOREACH(CTransaction& tx, vtx)
        SyncWithWallets(tx, this, false, false);

    return true;
}

bool CBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex)
{
    // Check it again in case a previous version let a bad block in
    if (!CheckBlock())
        return false;

    // Check coinbase reward
    if (IsProofOfWork() && vtx[0].GetValueOut() > (IsProofOfWork() ? (GetProofOfWorkReward(pindex->pprev ? pindex->pprev->nHeight : -1) - vtx[0].GetMinFee() + MIN_TX_FEES) : 0))
        return DoS(50, error(""CheckBlock() : coinbase reward exceeded %s > %s"", FormatMoney(vtx[0].GetValueOut()).c_str(), FormatMoney(IsProofOfWork() ? GetProofOfWorkReward(pindex->pprev ? pindex->pprev->nHeight : -1) : 0).c_str()));

    // Do not allow blocks that contain transactions which 'overwrite' older transactions,
    // unless those are already completely spent.
    // If such overwrites are allowed, coinbases and transactions depending upon those
    // can be duplicated to remove the ability to spend the first instance -- even after
    // being sent to another address.
    // See BIP30 and http://r6.ca/blog/20120206T005236Z.html for more information.
    // This logic is not necessary for memory pool transactions, as AcceptToMemoryPool
    // already refuses previously-known transaction id's entirely.

    BOOST_FOREACH(CTransaction& tx, vtx)
    {
        CTxIndex txindexOld;
        if (txdb.ReadTxIndex(tx.GetHash(), txindexOld))
        {
            BOOST_FOREACH(CDiskTxPos &pos, txindexOld.vSpent)
            if (pos.IsNull())
                return false;
        }
    }

    // BIP16 didn't become active until Apr 1 2012
    int64 nBIP16SwitchTime = 1333238400;
    bool fStrictPayToScriptHash = (pindex->nTime >= nBIP16SwitchTime);

    //// issue here: it doesn't know the version
    unsigned int nTxPos = pindex->nBlockPos + ::GetSerializeSize(CBlock(), SER_DISK, CLIENT_VERSION) - (2 * GetSizeOfCompactSize(0)) + GetSizeOfCompactSize(vtx.size());

    map<uint256, CTxIndex> mapQueuedChanges;
    int64 nFees = 0;
    int64 nValueIn = 0;
    int64 nValueOut = 0;
    unsigned int nSigOps = 0;
    BOOST_FOREACH(CTransaction& tx, vtx)
    {
        nSigOps += tx.GetLegacySigOpCount();
        if (nSigOps > MAX_BLOCK_SIGOPS)
            return DoS(100, error(""ConnectBlock() : too many sigops""));

        CDiskTxPos posThisTx(pindex->nFile, pindex->nBlockPos, nTxPos);
        nTxPos += ::GetSerializeSize(tx, SER_DISK, CLIENT_VERSION);

        MapPrevTx mapInputs;
        if (tx.IsCoinBase())
            nValueOut += tx.GetValueOut();
        else
        {
            bool fInvalid;
            if (!tx.FetchInputs(txdb, mapQueuedChanges, true, false, mapInputs, fInvalid))
                return false;

            if (fStrictPayToScriptHash)
            {
                // Add in sigops done by pay-to-script-hash inputs;
                // this is to prevent a ""rogue miner"" from creating
                // an incredibly-expensive-to-validate block.
                nSigOps += tx.GetP2SHSigOpCount(mapInputs);
                if (nSigOps > MAX_BLOCK_SIGOPS)
                    return DoS(100, error(""ConnectBlock() : too many sigops""));
            }

            int64 nTxValueIn = tx.GetValueIn(mapInputs);
            int64 nTxValueOut = tx.GetValueOut();
            nValueIn += nTxValueIn;
            nValueOut += nTxValueOut;
            if (!tx.IsCoinStake())
                nFees += nTxValueIn - nTxValueOut;

            if (!tx.ConnectInputs(txdb, mapInputs, mapQueuedChanges, posThisTx, pindex, true, false, fStrictPayToScriptHash))
                return false;
        }

        mapQueuedChanges[tx.GetHash()] = CTxIndex(posThisTx, tx.vout.size());
    }

    // ppcoin: track money supply and mint amount info
    pindex->nMint = nValueOut - nValueIn + nFees;
    pindex->nMoneySupply = (pindex->pprev? pindex->pprev->nMoneySupply : 0) + nValueOut - nValueIn;
    if (!txdb.WriteBlockIndex(CDiskBlockIndex(pindex)))
        return error(""Connect() : WriteBlockIndex for pindex failed"");

    // Write queued txindex changes
    for (map<uint256, CTxIndex>::iterator mi = mapQueuedChanges.begin(); mi != mapQueuedChanges.end(); ++mi)
    {
        if (!txdb.UpdateTxIndex((*mi).first, (*mi).second))
            return error(""ConnectBlock() : UpdateTxIndex failed"");
    }

    // ppcoin: fees are not collected by miners as in bitcoin
    // ppcoin: fees are destroyed to compensate the entire network
    if (fDebug && GetBoolArg(""-printcreation""))
        printf(""ConnectBlock() : destroy=%s nFees=%""PRI64d""\n"", FormatMoney(nFees).c_str(), nFees);

    // Update block index on disk without changing it in memory.
    // The memory index structure will be changed after the db commits.
    if (pindex->pprev)
    {
        CDiskBlockIndex blockindexPrev(pindex->pprev);
        blockindexPrev.hashNext = pindex->GetBlockHash();
        if (!txdb.WriteBlockIndex(blockindexPrev))
            return error(""ConnectBlock() : WriteBlockIndex for blockindexPrev failed"");
    }

    // Watch for transactions paying to me
    BOOST_FOREACH(CTransaction& tx, vtx)
        SyncWithWallets(tx, this, true);

    return true;
}

bool Reorganize(CTxDB& txdb, CBlockIndex* pindexNew)
{
    printf(""REORGANIZE\n"");

    // Find the fork
    CBlockIndex* pfork = pindexBest;
    CBlockIndex* plonger = pindexNew;
    while (pfork != plonger)
    {
        while (plonger->nHeight > pfork->nHeight)
            if (!(plonger = plonger->pprev))
                return error(""Reorganize() : plonger->pprev is null"");
        if (pfork == plonger)
            break;
        if (!(pfork = pfork->pprev))
            return error(""Reorganize() : pfork->pprev is null"");
    }

    // List of what to disconnect
    vector<CBlockIndex*> vDisconnect;
    for (CBlockIndex* pindex = pindexBest; pindex != pfork; pindex = pindex->pprev)
        vDisconnect.push_back(pindex);

    // List of what to connect
    vector<CBlockIndex*> vConnect;
    for (CBlockIndex* pindex = pindexNew; pindex != pfork; pindex = pindex->pprev)
        vConnect.push_back(pindex);
    reverse(vConnect.begin(), vConnect.end());

    printf(""REORGANIZE: Disconnect %i blocks; %s..%s\n"", vDisconnect.size(), pfork->GetBlockHash().ToString().substr(0,20).c_str(), pindexBest->GetBlockHash().ToString().substr(0,20).c_str());
    printf(""REORGANIZE: Connect %i blocks; %s..%s\n"", vConnect.size(), pfork->GetBlockHash().ToString().substr(0,20).c_str(), pindexNew->GetBlockHash().ToString().substr(0,20).c_str());

    // Disconnect shorter branch
    vector<CTransaction> vResurrect;
    BOOST_FOREACH(CBlockIndex* pindex, vDisconnect)
    {
        CBlock block;
        if (!block.ReadFromDisk(pindex))
            return error(""Reorganize() : ReadFromDisk for disconnect failed"");
        if (!block.DisconnectBlock(txdb, pindex))
            return error(""Reorganize() : DisconnectBlock %s failed"", pindex->GetBlockHash().ToString().substr(0,20).c_str());

        // Queue memory transactions to resurrect
        BOOST_FOREACH(const CTransaction& tx, block.vtx)
            if (!(tx.IsCoinBase() || tx.IsCoinStake()))
                vResurrect.push_back(tx);
    }

    // Connect longer branch
    vector<CTransaction> vDelete;
    for (unsigned int i = 0; i < vConnect.size(); i++)
    {
        CBlockIndex* pindex = vConnect[i];
        CBlock block;
        if (!block.ReadFromDisk(pindex))
            return error(""Reorganize() : ReadFromDisk for connect failed"");
        if (!block.ConnectBlock(txdb, pindex))
        {
            // Invalid block
            txdb.TxnAbort();
            return error(""Reorganize() : ConnectBlock %s failed"", pindex->GetBlockHash().ToString().substr(0,20).c_str());
        }

        // Queue memory transactions to delete
        BOOST_FOREACH(const CTransaction& tx, block.vtx)
            vDelete.push_back(tx);
    }
    if (!txdb.WriteHashBestChain(pindexNew->GetBlockHash()))
        return error(""Reorganize() : WriteHashBestChain failed"");

    // Make sure it's successfully written to disk before changing memory structure
    if (!txdb.TxnCommit())
        return error(""Reorganize() : TxnCommit failed"");

    // Disconnect shorter branch
    BOOST_FOREACH(CBlockIndex* pindex, vDisconnect)
        if (pindex->pprev)
            pindex->pprev->pnext = NULL;

    // Connect longer branch
    BOOST_FOREACH(CBlockIndex* pindex, vConnect)
        if (pindex->pprev)
            pindex->pprev->pnext = pindex;

    // Resurrect memory transactions that were in the disconnected branch
    BOOST_FOREACH(CTransaction& tx, vResurrect)
        tx.AcceptToMemoryPool(txdb, false);

    // Delete redundant memory transactions that are in the connected branch
    BOOST_FOREACH(CTransaction& tx, vDelete)
        mempool.remove(tx);

    printf(""REORGANIZE: done\n"");

    return true;
}


// Called from inside SetBestChain: attaches a block to the new best chain being built
bool CBlock::SetBestChainInner(CTxDB& txdb, CBlockIndex *pindexNew)
{
    uint256 hash = GetHash();

    // Adding to current best branch
    if (!ConnectBlock(txdb, pindexNew) || !txdb.WriteHashBestChain(hash))
    {
        txdb.TxnAbort();
        InvalidChainFound(pindexNew);
        return false;
    }
    if (!txdb.TxnCommit())
        return error(""SetBestChain() : TxnCommit failed"");

    // Add to current best branch
    pindexNew->pprev->pnext = pindexNew;

    // Delete redundant memory transactions
    BOOST_FOREACH(CTransaction& tx, vtx)
        mempool.remove(tx);

    return true;
}

bool CBlock::SetBestChain(CTxDB& txdb, CBlockIndex* pindexNew)
{
    uint256 hash = GetHash();

    if (!txdb.TxnBegin())
        return error(""SetBestChain() : TxnBegin failed"");

    if (pindexGenesisBlock == NULL && hash == GENESIS_HASH)
    {
        txdb.WriteHashBestChain(hash);
        if (!txdb.TxnCommit())
            return error(""SetBestChain() : TxnCommit failed"");
        pindexGenesisBlock = pindexNew;
    }
    else if (hashPrevBlock == hashBestChain)
    {
        if (!SetBestChainInner(txdb, pindexNew))
            return error(""SetBestChain() : SetBestChainInner failed"");
    }
    else
    {
        // the first block in the new chain that will cause it to become the new best chain
        CBlockIndex *pindexIntermediate = pindexNew;

        // list of blocks that need to be connected afterwards
        std::vector<CBlockIndex*> vpindexSecondary;

        // Reorganize is costly in terms of db load, as it works in a single db transaction.
        // Try to limit how much needs to be done inside
        while (pindexIntermediate->pprev && pindexIntermediate->pprev->bnChainTrust > pindexBest->bnChainTrust)
        {
            vpindexSecondary.push_back(pindexIntermediate);
            pindexIntermediate = pindexIntermediate->pprev;
        }

        if (!vpindexSecondary.empty())
            printf(""Postponing %i reconnects\n"", vpindexSecondary.size());

        // Switch to new best branch
        if (!Reorganize(txdb, pindexIntermediate))
        {
            txdb.TxnAbort();
            InvalidChainFound(pindexNew);
            return error(""SetBestChain() : Reorganize failed"");
        }

        // Connect futher blocks
        BOOST_REVERSE_FOREACH(CBlockIndex *pindex, vpindexSecondary)
        {
            CBlock block;
            if (!block.ReadFromDisk(pindex))
            {
                printf(""SetBestChain() : ReadFromDisk failed\n"");
                break;
            }
            if (!txdb.TxnBegin()) {
                printf(""SetBestChain() : TxnBegin 2 failed\n"");
                break;
            }
            // errors now are not fatal, we still did a reorganisation to a new chain in a valid way
            if (!block.SetBestChainInner(txdb, pindex))
                break;
        }
    }

    // Update best block in wallet (so we can detect restored wallets)
    bool fIsInitialDownload = IsInitialBlockDownload();
    if (!fIsInitialDownload)
    {
        const CBlockLocator locator(pindexNew);
        ::SetBestChain(locator);
    }

    // New best block
    hashBestChain = hash;
    pindexBest = pindexNew;
    nBestHeight = pindexBest->nHeight;
    bnBestChainTrust = pindexNew->bnChainTrust;
    nTimeBestReceived = GetTime();
    nTransactionsUpdated++;
    printf(""SetBestChain: new best=%s  height=%d  trust=%s  moneysupply=%s\n"", hashBestChain.ToString().substr(0,20).c_str(), nBestHeight, bnBestChainTrust.ToString().c_str(), FormatMoney(pindexBest->nMoneySupply).c_str());

    std::string strCmd = GetArg(""-blocknotify"", """");

    if (!fIsInitialDownload && !strCmd.empty())
    {
        boost::replace_all(strCmd, ""%s"", hashBestChain.GetHex());
        boost::thread t(runCommand, strCmd); // thread runs free
    }

    return true;
}


// ppcoin: total coin age spent in transaction, in the unit of coin-days.
// Only those coins meeting minimum age requirement counts. As those
// transactions not in main chain are not currently indexed so we
// might not find out about their coin age. Older transactions are
// guaranteed to be in main chain by sync-checkpoint. This rule is
// introduced to help nodes establish a consistent view of the coin
// age (trust score) of competing branches.
bool CTransaction::GetCoinAge(CTxDB& txdb, uint64& nCoinAge) const
{
    CBigNum bnCentSecond = 0;  // coin age in the unit of cent-seconds
    nCoinAge = 0;

    if (IsCoinBase())
        return true;

    BOOST_FOREACH(const CTxIn& txin, vin)
    {
        // First try finding the previous transaction in database
        CTransaction txPrev;
        CTxIndex txindex;
        if (!txPrev.ReadFromDisk(txdb, txin.prevout, txindex))
            continue;  // previous transaction not in main chain
        if (nTime < txPrev.nTime)
            return false;  // Transaction timestamp violation

        // Read block header
        CBlock block;
        if (!block.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos, false))
            return false; // unable to read block of previous transaction
        if (block.GetBlockTime() + STAKE_MIN_AGE > nTime)
            continue; // only count coins meeting min age requirement

        int64 nValueIn = txPrev.vout[txin.prevout.n].nValue;
        bnCentSecond += CBigNum(nValueIn) * (nTime-txPrev.nTime) / CENT;

        if (fDebug && GetBoolArg(""-printcoinage""))
        {
            printf(""coin age nValueIn=%-12""PRI64d"" nTimeDiff=%d bnCentSecond=%s\n"", nValueIn, nTime - txPrev.nTime, bnCentSecond.ToString().c_str());
        }
    }

    CBigNum bnCoinDay = bnCentSecond * CENT / COIN / (24 * 60 * 60);
    if (fDebug && GetBoolArg(""-printcoinage""))
        printf(""coin age bnCoinDay=%s\n"", bnCoinDay.ToString().c_str());
    nCoinAge = bnCoinDay.getuint64();
    return true;
}

// ppcoin: total coin age spent in block, in the unit of coin-days.
bool CBlock::GetCoinAge(uint64& nCoinAge) const
{
    nCoinAge = 0;

    CTxDB txdb(""r"");
    BOOST_FOREACH(const CTransaction& tx, vtx)
    {
        uint64 nTxCoinAge;
        if (tx.GetCoinAge(txdb, nTxCoinAge))
            nCoinAge += nTxCoinAge;
        else
            return false;
    }

    if (nCoinAge == 0) // block coin age minimum 1 coin-day
        nCoinAge = 1;
    if (fDebug && GetBoolArg(""-printcoinage""))
        printf(""block coin age total nCoinDays=%""PRI64d""\n"", nCoinAge);
    return true;
}


bool CBlock::AddToBlockIndex(unsigned int nFile, unsigned int nBlockPos)
{
    // Check for duplicate
    uint256 hash = GetHash();
    if (mapBlockIndex.count(hash))
        return error(""AddToBlockIndex() : %s already exists"", hash.ToString().substr(0,20).c_str());

    // Construct new block index object
    CBlockIndex* pindexNew = new CBlockIndex(nFile, nBlockPos, *this);
    if (!pindexNew)
        return error(""AddToBlockIndex() : new CBlockIndex failed"");

    pindexNew->phashBlock = &hash;
    map<uint256, CBlockIndex*>::iterator miPrev = mapBlockIndex.find(hashPrevBlock);
    if (miPrev != mapBlockIndex.end())
    {
        pindexNew->pprev = (*miPrev).second;
        pindexNew->nHeight = pindexNew->pprev->nHeight + 1;
    }

    // ppcoin: compute chain trust score
    pindexNew->bnChainTrust = (pindexNew->pprev ? pindexNew->pprev->bnChainTrust : 0) + pindexNew->GetBlockTrust();

    // ppcoin: compute stake entropy bit for stake modifier
    if (!pindexNew->SetStakeEntropyBit(GetStakeEntropyBit()))
        return error(""AddToBlockIndex() : SetStakeEntropyBit() failed"");

    // ppcoin: record proof-of-stake hash value
    if (pindexNew->IsProofOfStake())
    {
        if (!mapProofOfStake.count(hash))
            return error(""AddToBlockIndex() : hashProofOfStake not found in map"");
        pindexNew->hashProofOfStake = mapProofOfStake[hash];
    }

    // ppcoin: compute stake modifier
    uint64 nStakeModifier = 0;
    bool fGeneratedStakeModifier = false;
    if (!ComputeNextStakeModifier(pindexNew, nStakeModifier, fGeneratedStakeModifier))
        return error(""AddToBlockIndex() : ComputeNextStakeModifier() failed"");
    pindexNew->SetStakeModifier(nStakeModifier, fGeneratedStakeModifier);
    pindexNew->nStakeModifierChecksum = GetStakeModifierChecksum(pindexNew);

    if (!CheckStakeModifierCheckpoints(pindexNew->nHeight, pindexNew->nStakeModifierChecksum))
        return error(""AddToBlockIndex() : Rejected by stake modifier checkpoint height=%d, modifier=0x%016""PRI64x"", checksum=0x%08x"", pindexNew->nHeight, nStakeModifier, pindexNew->nStakeModifierChecksum);

    // Add to mapBlockIndex
    map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.insert(make_pair(hash, pindexNew)).first;
    if (pindexNew->IsProofOfStake())
        setStakeSeen.insert(make_pair(pindexNew->prevoutStake, pindexNew->nStakeTime));
    pindexNew->phashBlock = &((*mi).first);

    // Write to disk block index
    CTxDB txdb;
    if (!txdb.TxnBegin())
        return false;
    txdb.WriteBlockIndex(CDiskBlockIndex(pindexNew));
    if (!txdb.TxnCommit())
        return false;

    // New best
    if (pindexNew->bnChainTrust > bnBestChainTrust)
        if (!SetBestChain(txdb, pindexNew))
            return false;

    txdb.Close();

    if (pindexNew == pindexBest)
    {
        // Notify UI to display prev block's coinbase if it was ours
        static uint256 hashPrevBestCoinBase;
        UpdatedTransaction(hashPrevBestCoinBase);
        hashPrevBestCoinBase = vtx[0].GetHash();
    }

    MainFrameRepaint();
    return true;
}




bool CBlock::CheckBlock() const
{
    // These are checks that are independent of context
    // that can be verified before saving an orphan block.

    // Size limits
    if (vtx.empty() || vtx.size() > MAX_BLOCK_SIZE || ::GetSerializeSize(*this, SER_NETWORK, PROTOCOL_VERSION) > MAX_BLOCK_SIZE)
        return DoS(100, error(""CheckBlock() : size limits failed""));

    // Check proof of work matches claimed amount
    if (IsProofOfWork() && !CheckProofOfWork(GetHash(), nBits))
        return DoS(50, error(""CheckBlock() : proof of work failed""));

    // Check timestamp
    if (GetBlockTime() > GetAdjustedTime() + MAX_CLOCK_DRIFT)
        return error(""CheckBlock() : block timestamp too far in the future"");

    // First transaction must be coinbase, the rest must not be
    if (vtx.empty() || !vtx[0].IsCoinBase())
        return DoS(100, error(""CheckBlock() : first tx is not coinbase""));
    for (unsigned int i = 1; i < vtx.size(); i++)
        if (vtx[i].IsCoinBase())
            return DoS(100, error(""CheckBlock() : more than one coinbase""));

    // ppcoin: only the second transaction can be the optional coinstake
    for (size_t i = 2; i < vtx.size(); i++)
        if (vtx[i].IsCoinStake())
            return DoS(100, error(""CheckBlock() : coinstake in wrong position""));

    // ppcoin: coinbase output should be empty if proof-of-stake block
    if (IsProofOfStake() && (vtx[0].vout.size() != 1 || !vtx[0].vout[0].IsEmpty()))
        return error(""CheckBlock() : coinbase output not empty for proof-of-stake block"");

    // Check coinbase timestamp
    if (GetBlockTime() > (int64)vtx[0].nTime + MAX_CLOCK_DRIFT)
        return DoS(50, error(""CheckBlock() : coinbase timestamp is too early (block: %d, vtx[0]: %d)"", GetBlockTime(), vtx[0].nTime));

    // Check coinstake timestamp
    if (IsProofOfStake() && !CheckCoinStakeTimestamp(GetBlockTime(), (int64)vtx[1].nTime))
        return DoS(50, error(""CheckBlock() : coinstake timestamp violation nTimeBlock=%u nTimeTx=%u"", GetBlockTime(), vtx[1].nTime));

    // Check coinbase reward
    //
    // Note: We're not doing the reward check here, because we need to know the block height.
    //       Check inside ConnectBlock instead.

    // Check transactions
    BOOST_FOREACH(const CTransaction& tx, vtx)
    {
        if (!tx.CheckTransaction())
            return DoS(tx.nDoS, error(""CheckBlock() : CheckTransaction failed""));
        // ppcoin: check transaction timestamp
        if (GetBlockTime() < (int64)tx.nTime)
            return DoS(50, error(""CheckBlock() : block timestamp earlier than transaction timestamp""));
    }

    // Check for duplicate txids. This is caught by ConnectInputs(),
    // but catching it earlier avoids a potential DoS attack:
    set<uint256> uniqueTx;
    BOOST_FOREACH(const CTransaction& tx, vtx)
    {
        uniqueTx.insert(tx.GetHash());
    }
    if (uniqueTx.size() != vtx.size())
        return DoS(100, error(""CheckBlock() : duplicate transaction""));

    unsigned int nSigOps = 0;
    BOOST_FOREACH(const CTransaction& tx, vtx)
    {
        nSigOps += tx.GetLegacySigOpCount();
    }
    if (nSigOps > MAX_BLOCK_SIGOPS)
        return DoS(100, error(""CheckBlock() : out-of-bounds SigOpCount""));

    // Check merkleroot
    if (hashMerkleRoot != BuildMerkleTree())
        return DoS(100, error(""CheckBlock() : hashMerkleRoot mismatch""));

    // ppcoin: check block signature
    if (!CheckBlockSignature())
        return DoS(100, error(""CheckBlock() : bad block signature""));

    return true;
}

bool CBlock::AcceptBlock()
{
    // Check for duplicate
    uint256 hash = GetHash();
    if (mapBlockIndex.count(hash))
        return error(""AcceptBlock() : block already in mapBlockIndex"");

    // Get prev block index
    map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashPrevBlock);
    if (mi == mapBlockIndex.end())
        return DoS(10, error(""AcceptBlock() : prev block not found""));
    CBlockIndex* pindexPrev = (*mi).second;
    int nHeight = pindexPrev->nHeight+1;

    // Check proof-of-work or proof-of-stake
    if (nBits != GetNextTargetRequired(pindexPrev, IsProofOfStake()))
        return DoS(100, error(""AcceptBlock() : incorrect proof-of-work/proof-of-stake""));

    // Check timestamp against prev
    if (GetBlockTime() <= pindexPrev->GetMedianTimePast() || GetBlockTime() + MAX_CLOCK_DRIFT < pindexPrev->GetBlockTime())
        return error(""AcceptBlock() : block's timestamp is too early"");

    // Check that all transactions are finalized
    BOOST_FOREACH(const CTransaction& tx, vtx)
        if (!tx.IsFinal(nHeight, GetBlockTime()))
            return DoS(10, error(""AcceptBlock() : contains a non-final transaction""));

    // Check that the block chain matches the known block chain up to a hardened checkpoint
    if (!Checkpoints::CheckHardened(nHeight, hash))
        return DoS(100, error(""AcceptBlock() : rejected by hardened checkpoint lockin at %d"", nHeight));

    // ppcoin: check that the block satisfies synchronized checkpoint
    if (!Checkpoints::CheckSync(hash, pindexPrev))
        return error(""AcceptBlock() : rejected by synchronized checkpoint"");

    // Write block to history file
    if (!CheckDiskSpace(::GetSerializeSize(*this, SER_DISK, CLIENT_VERSION)))
        return error(""AcceptBlock() : out of disk space"");
    unsigned int nFile = -1;
    unsigned int nBlockPos = 0;
    if (!WriteToDisk(nFile, nBlockPos))
        return error(""AcceptBlock() : WriteToDisk failed"");
    if (!AddToBlockIndex(nFile, nBlockPos))
        return error(""AcceptBlock() : AddToBlockIndex failed"");

    // Relay inventory, but don't relay old inventory during initial block download
    int nBlockEstimate = Checkpoints::GetTotalBlocksEstimate();
    if (hashBestChain == hash)
    {
        LOCK(cs_vNodes);
        BOOST_FOREACH(CNode* pnode, vNodes)
            if (nBestHeight > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate))
                pnode->PushInventory(CInv(MSG_BLOCK, hash));
    }

    // ppcoin: check pending sync-checkpoint
    Checkpoints::AcceptPendingSyncCheckpoint();

    return true;
}

bool ProcessBlock(CNode* pfrom, CBlock* pblock)
{
    // Check for duplicate
    uint256 hash = pblock->GetHash();
    if (mapBlockIndex.count(hash))
        return error(""ProcessBlock() : already have block %d %s"", mapBlockIndex.at(hash)->nHeight, hash.ToString().substr(0,20).c_str());
    if (mapOrphanBlocks.count(hash))
        return error(""ProcessBlock() : already have block (orphan) %s"", hash.ToString().substr(0,20).c_str());

    // ppcoin: check proof-of-stake
    if (pblock->IsProofOfStake())
    {
        std::pair<COutPoint, unsigned int> proofOfStake = pblock->GetProofOfStake();

        if (pindexBest->IsProofOfStake() && proofOfStake.first == pindexBest->prevoutStake)
        {
            if (!pblock->CheckBlockSignature())
            {
                if (pfrom)
                    pfrom->Misbehaving(100);

                return error(""ProcessBlock() : invalid signature in a duplicate Proof-of-Stake kernel"");
            }

            RelayBlock(*pblock, hash);
            BlacklistProofOfStake(proofOfStake, hash);

            CTxDB txdb;

            CBlock bestPrevBlock;
            bestPrevBlock.ReadFromDisk(pindexBest->pprev);

            if (!bestPrevBlock.SetBestChain(txdb, pindexBest->pprev))
                return error(""ProcessBlock() : Proof-of-stake rollback failed"");

            return error(""ProcessBlock() : duplicate Proof-of-Stake kernel (%s, %d) in block %s"", pblock->GetProofOfStake().first.ToString().c_str(), pblock->GetProofOfStake().second, hash.ToString().c_str());
        }
        else if (setStakeSeen.count(proofOfStake) && !mapOrphanBlocksByPrev.count(hash) && !Checkpoints::WantedByPendingSyncCheckpoint(hash))
        {
            return error(""ProcessBlock() : duplicate Proof-of-Stake kernel (%s, %d) in block %s"", proofOfStake.first.ToString().c_str(), proofOfStake.second, hash.ToString().c_str());
        }
    }

    // Preliminary checks
    if (!pblock->CheckBlock())
        return error(""ProcessBlock() : CheckBlock FAILED"");

    CBlockIndex* pcheckpoint = Checkpoints::GetLastSyncCheckpoint();
    if (pcheckpoint && pblock->hashPrevBlock != hashBestChain && !Checkpoints::WantedByPendingSyncCheckpoint(hash))
    {
        // Extra checks to prevent ""fill up memory by spamming with bogus blocks""
        int64 deltaTime = pblock->GetBlockTime() - pcheckpoint->nTime;
        CBigNum bnNewBlock;
        bnNewBlock.SetCompact(pblock->nBits);
        CBigNum bnRequired;
        bnRequired.SetCompact(ComputeMinWork(GetLastBlockIndex(pcheckpoint, pblock->IsProofOfStake())->nBits, deltaTime));

        if (bnNewBlock > bnRequired)
        {
            if (pfrom)
                pfrom->Misbehaving(100);
            return error(""ProcessBlock() : block with too little %s"", pblock->IsProofOfStake()? ""proof-of-stake"" : ""proof-of-work"");
        }
    }

    // ppcoin: ask for pending sync-checkpoint if any
    if (!IsInitialBlockDownload())
        Checkpoints::AskForPendingSyncCheckpoint(pfrom);

    // We remove the previous block from the blacklisted kernels, if needed
    CleanProofOfStakeBlacklist(pblock->hashPrevBlock);

    // Find the previous block
    std::map<uint256, CBlockIndex*>::iterator parentBlockIt = mapBlockIndex.find(pblock->hashPrevBlock);

    // If we don't already have it, shunt off the block to the holding area until we get its parent
    if (parentBlockIt == mapBlockIndex.end())
    {
        printf(""ProcessBlock: ORPHAN BLOCK, prev=%s\n"", pblock->hashPrevBlock.ToString().substr(0,20).c_str());

        CBlock* pblock2 = new CBlock(*pblock);

        // ppcoin: check proof-of-stake
        if (pblock2->IsProofOfStake())
            setStakeSeenOrphan.insert(pblock2->GetProofOfStake());

        mapOrphanBlocks.insert(make_pair(hash, pblock2));
        mapOrphanBlocksByPrev.insert(make_pair(pblock2->hashPrevBlock, pblock2));

        // Ask this guy to fill in what we're missing
        if (pfrom)
        {
            pfrom->PushGetBlocks(pindexBest, GetOrphanRoot(pblock2));

            // ppcoin: getblocks may not obtain the ancestor block rejected
            // earlier by duplicate-stake check so we ask for it again directly
            if (!IsInitialBlockDownload())
            {
                pfrom->AskFor(CInv(MSG_BLOCK, WantedByOrphan(pblock2)));
            }
        }

        return true;
    }

    // ppcoin: verify hash target and signature of coinstake tx
    if (pblock->IsProofOfStake())
    {
        uint256 hashProofOfStake = 0;

        const CBlockIndex * pindexPrev = parentBlockIt->second;

        if (!CheckProofOfStake(pindexPrev, pblock->vtx[1], pblock->nBits, hashProofOfStake))
        {
            printf(""WARNING: ProcessBlock(): check proof-of-stake failed for block %s\n"", hash.ToString().c_str());
            return false; // do not error here as we expect this during initial block download
        }

        if (!mapProofOfStake.count(hash)) // add to mapProofOfStake
        {
            mapProofOfStake.insert(make_pair(hash, hashProofOfStake));
        }
    }

    // Store to disk
    if (!pblock->AcceptBlock())
        return error(""ProcessBlock() : AcceptBlock FAILED"");

    // Recursively process any orphan blocks that depended on this one
    vector<uint256> vWorkQueue;
    vWorkQueue.push_back(hash);

    for (unsigned int i = 0; i < vWorkQueue.size(); i++)
    {
        uint256 hashPrev = vWorkQueue[i];
        CBlockIndex* pindexPrev = mapBlockIndex.at(hashPrev);

        for (multimap<uint256, CBlock*>::iterator mi = mapOrphanBlocksByPrev.lower_bound(hashPrev); mi != mapOrphanBlocksByPrev.upper_bound(hashPrev); ++mi)
        {
            bool validated = true;

            CBlock* pblockOrphan = (*mi).second;
            uint256 orphanHash = pblockOrphan->GetHash();

            if (pblockOrphan->IsProofOfStake())
            {
                uint256 hashProofOfStake = 0;

                if (CheckProofOfStake(pindexPrev, pblockOrphan->vtx[1], pblockOrphan->nBits, hashProofOfStake))
                {
                    if (!mapProofOfStake.count(orphanHash))
                        mapProofOfStake.insert(make_pair(orphanHash, hashProofOfStake));

                    validated = true;
                }
                else
                {
                    validated = false;
                }
            }

            if (validated && pblockOrphan->AcceptBlock())
                vWorkQueue.push_back(orphanHash);

            mapOrphanBlocks.erase(orphanHash);
            setStakeSeenOrphan.erase(pblockOrphan->GetProofOfStake());

            delete pblockOrphan;
        }

        mapOrphanBlocksByPrev.erase(hashPrev);
    }

    printf(""ProcessBlock: ACCEPTED\n"");

    // ppcoin: if responsible for sync-checkpoint send it
    if (pfrom && !CHECKPOINT_PRIVATE_KEY.empty())
        Checkpoints::SendSyncCheckpoint(Checkpoints::AutoSelectSyncCheckpoint());

    return true;
}

// ppcoin: sign block
bool CBlock::SignBlock(const CKeyStore& keystore)
{
    vector<valtype> vSolutions;
    txnouttype whichType;
    const CTxOut& txout = IsProofOfStake()? vtx[1].vout[1] : vtx[0].vout[0];

    if (!Solver(txout.scriptPubKey, whichType, vSolutions))
        return false;

    if (whichType == TX_PUBKEY)
    {
        // Sign
        const valtype& vchPubKey = vSolutions[0];
        CKey key;
        if (!keystore.GetKey(Hash160(vchPubKey), key))
            return false;
        if (key.GetPubKey() != vchPubKey)
            return false;
        return key.Sign(GetHash(), vchBlockSig);
    }
    else if (whichType == TX_SCRIPTHASH)
    {
        CScript subscript;
        if (!keystore.GetCScript(CScriptID(uint160(vSolutions[0])), subscript))
            return false;
        if (!Solver(subscript, whichType, vSolutions))
            return false;
        if (whichType != TX_COLDMINTING)
            return false;
        CKey key;
        if (!keystore.GetKey(uint160(vSolutions[0]), key))
            return false;
        return key.Sign(GetHash(), vchBlockSig);
    }

    return false;
}

// ppcoin: check block signature
bool CBlock::CheckBlockSignature() const
{
    if (GetHash() == GENESIS_HASH)
        return vchBlockSig.empty();

    vector<valtype> vSolutions;
    txnouttype whichType;
    const CTxOut& txout = IsProofOfStake()? vtx[1].vout[1] : vtx[0].vout[0];

    if (!Solver(txout.scriptPubKey, whichType, vSolutions))
        return false;

    if (whichType == TX_PUBKEY)
    {
        const valtype& vchPubKey = vSolutions[0];
        CKey key;
        if (!key.SetPubKey(vchPubKey))
            return false;
        if (vchBlockSig.empty())
            return false;
        return key.Verify(GetHash(), vchBlockSig);
    }
    else if (whichType == TX_SCRIPTHASH)
    {
        // Output is a pay-to-script-hash
        // Only allowed with cold minting

        if (!IsProofOfStake())
            return false;

        // CoinStake scriptSig should contain 3 pushes: the signature, the pubkey and the cold minting script
        CScript scriptSig = vtx[1].vin[0].scriptSig;
        if (!scriptSig.IsPushOnly())
            return false;

        vector<vector<unsigned char> > stack;
        if (!EvalScript(stack, scriptSig, CTransaction(), 0, 0))
            return false;
        if (stack.size() != 3)
            return false;

        // Verify the script is a cold minting script
        const valtype& scriptSerialized = stack.back();
        CScript script(scriptSerialized.begin(), scriptSerialized.end());
        if (!Solver(script, whichType, vSolutions))
            return false;
        if (whichType != TX_COLDMINTING)
            return false;

        // Verify the scriptSig pubkey matches the minting key
        valtype& vchPubKey = stack[1];
        if (Hash160(vchPubKey) != uint160(vSolutions[0]))
            return false;

        // Verify the block signature with the minting key
        CKey key;
        if (!key.SetPubKey(vchPubKey))
            return false;
        if (vchBlockSig.empty())
            return false;
        return key.Verify(GetHash(), vchBlockSig);
    }

    return false;
}

// ppcoin: entropy bit for stake modifier if chosen by modifier
unsigned int CBlock::GetStakeEntropyBit() const
{
    unsigned int nEntropyBit = 0;
    nEntropyBit = ((GetHash().Get64()) & 1llu); // last bit of block hash

    if (fDebug && GetBoolArg(""-printstakemodifier""))
        printf(""GetStakeEntropyBit(v0.4+): nTime=%u hashBlock=%s entropybit=%d\n"", nTime, GetHash().ToString().c_str(), nEntropyBit);

    return nEntropyBit;
}





bool CheckDiskSpace(uint64 nAdditionalBytes)
{
    uint64 nFreeBytesAvailable = filesystem::space(GetDataDir()).available;

    // Check for 15MB because database could create another 10MB log file at any time
    if (nFreeBytesAvailable < (uint64)15000000 + nAdditionalBytes)
    {
        fShutdown = true;
        string strMessage = _(""Warning: Disk space is low"");
        strMiscWarning = strMessage;
        printf(""*** %s\n"", strMessage.c_str());
        ThreadSafeMessageBox(strMessage, COIN_NAME, wxOK | wxICON_EXCLAMATION | wxMODAL);
        StartShutdown();
        return false;
    }
    return true;
}

FILE* OpenBlockFile(unsigned int nFile, unsigned int nBlockPos, const char* pszMode)
{
    if (nFile == static_cast<unsigned int>(-1))
        return NULL;

    FILE* file = fopen((GetDataDir() / strprintf(""blk%04d.dat"", nFile)).string().c_str(), pszMode);
    if (!file)
        return NULL;

    if (nBlockPos != 0 && !strchr(pszMode, 'a') && !strchr(pszMode, 'w'))
    {
        if (fseek(file, nBlockPos, SEEK_SET) != 0)
        {
            fclose(file);
            return NULL;
        }
    }
    return file;
}

static unsigned int nCurrentBlockFile = 1;

FILE* AppendBlockFile(unsigned int& nFileRet)
{
    nFileRet = 0;

    INFINITE_LOOP
    {
        FILE* file = OpenBlockFile(nCurrentBlockFile, 0, ""ab"");
        if (!file)
            return NULL;
        if (fseek(file, 0, SEEK_END) != 0)
            return NULL;
        // FAT32 filesize max 4GB, fseek and ftell max 2GB, so we must stay under 2GB
        if (ftell(file) < 0x7F000000 - MAX_SIZE)
        {
            nFileRet = nCurrentBlockFile;
            return file;
        }
        fclose(file);
        nCurrentBlockFile++;
    }
}

bool LoadBlockIndex(bool fAllowNew)
{
    //
    // Load block index
    //
    CTxDB txdb(""cr"");
    if (!txdb.LoadBlockIndex())
        return false;
    txdb.Close();

    //
    // Init with genesis block
    //
    if (mapBlockIndex.empty())
    {
        if (!fAllowNew)
            return false;

        // Genesis Block:
        // CBlock(hash=000000000019d6, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=4a5e1e, nTime=1231006505, nBits=1d00ffff, nNonce=2083236893, vtx=1)
        //   CTransaction(hash=4a5e1e, ver=1, vin.size=1, vout.size=1, nLockTime=0)
        //     CTxIn(COutPoint(000000, -1), coinbase 04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73)
        //     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)
        //   vMerkleTree: 4a5e1e

        const char* pszTimestamp = GENESIS_IDENT;

        CTransaction txNew;
        txNew.nTime = GENESIS_TX_TIME;
        txNew.vin.resize(1);
        txNew.vout.resize(1);
        txNew.vin[0].scriptSig = CScript() << 486604799 << CBigNum(9999) << vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));
        txNew.vout[0].SetEmpty();

        CBlock block;
        block.vtx.push_back(txNew);
        block.hashPrevBlock = 0;
        block.hashMerkleRoot = block.BuildMerkleTree();
        block.nVersion = GENESIS_BLOCK_VERSION;
        block.nTime = GENESIS_BLOCK_TIME;
        block.nBits = POW_INITIAL_TARGET.GetCompact();
        block.nNonce = GENESIS_BLOCK_NONCE;

        printf(""target                : %s\n"", POW_INITIAL_TARGET.getuint256().ToString().c_str());
        printf(""nBits                 : %08X\n"", block.nBits);
        printf(""expected genesis hash : %s\n"", GENESIS_HASH.ToString().c_str());
        printf(""true genesis hash     : %s\n"", block.GetHash().ToString().c_str());

        // If genesis block hash does not match, then generate new genesis hash.

        if (block.GetHash() != GENESIS_HASH || !CheckProofOfWork(block.GetHash(), block.nBits, false)) {

            printf(""\n"");
            printf(""FATAL ERROR: The genesis block is invalid.\n"");
            printf(""Please notify the coins maintainers at "" COIN_BUGTRACKER "".\n"");
            printf(""If you're working on an Altcoin, we suggest you to use the following parameters as new genesis (wait a bit):\n"");

            // This will figure out a valid hash and Nonce if you're
            // creating a different genesis block:

            while (!CheckProofOfWork(block.GetHash(), block.nBits, false)) {

                if ((block.nNonce & 0xFFF) == 0)
                    printf(""Trying nonce %08X and above...\n"", block.nNonce);

                ++block.nNonce;

                if (block.nNonce == 0) {
                    printf(""NONCE WRAPPED, incrementing time\n"");
                    ++block.nTime;
                }
            }

            printf(""A matching block has been found, with the following parameters:\n"");
            printf(""  - GENESIS_MERKLE_HASH : %s\n"", block.hashMerkleRoot.ToString().c_str());
            printf(""  - GENESIS_HASH        : %s\n"", block.GetHash().ToString().c_str());
            printf(""  - GENESIS_TIME        : %u\n"", block.nTime);
            printf(""  - GENESIS_NONCE       : %u\n"", block.nNonce);

            std::exit( 1 );

        }

        //// debug print
        assert(block.hashMerkleRoot == GENESIS_MERKLE_HASH);
        assert(block.GetHash() == GENESIS_HASH);
        assert(block.CheckBlock());

        // Start new block file
        unsigned int nFile;
        unsigned int nBlockPos;

        if (!block.WriteToDisk(nFile, nBlockPos))
            return error(""LoadBlockIndex() : writing genesis block to disk failed"");

        if (!block.AddToBlockIndex(nFile, nBlockPos))
            return error(""LoadBlockIndex() : genesis block not accepted"");

        // ppcoin: initialize synchronized checkpoint
        if (!Checkpoints::WriteSyncCheckpoint(GENESIS_HASH)) {
            return error(""LoadBlockIndex() : failed to init sync checkpoint"");
        }
    }

    // ppcoin: if checkpoint master key changed must reset sync-checkpoint
    {
        CTxDB txdb;
        string strPubKey = """";
        if (!txdb.ReadCheckpointPubKey(strPubKey) || strPubKey != CHECKPOINT_PUBLIC_KEY)
        {
            // write checkpoint master key to db
            txdb.TxnBegin();
            if (!txdb.WriteCheckpointPubKey(CHECKPOINT_PUBLIC_KEY))
                return error(""LoadBlockIndex() : failed to write new checkpoint master key to db"");
            if (!txdb.TxnCommit())
                return error(""LoadBlockIndex() : failed to commit new checkpoint master key to db"");
            if (!Checkpoints::ResetSyncCheckpoint())
                return error(""LoadBlockIndex() : failed to reset sync-checkpoint"");
        }
        txdb.Close();
    }

    return true;
}



void PrintBlockTree()
{
    // precompute tree structure
    map<CBlockIndex*, vector<CBlockIndex*> > mapNext;
    for (map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.begin(); mi != mapBlockIndex.end(); ++mi)
    {
        CBlockIndex* pindex = (*mi).second;
        mapNext[pindex->pprev].push_back(pindex);
        // test
        //while (rand() % 3 == 0)
        //    mapNext[pindex->pprev].push_back(pindex);
    }

    vector<pair<int, CBlockIndex*> > vStack;
    vStack.push_back(make_pair(0, pindexGenesisBlock));

    int nPrevCol = 0;
    while (!vStack.empty())
    {
        int nCol = vStack.back().first;
        CBlockIndex* pindex = vStack.back().second;
        vStack.pop_back();

        // print split or gap
        if (nCol > nPrevCol)
        {
            for (int i = 0; i < nCol-1; i++)
                printf(""| "");
            printf(""|\\\n"");
        }
        else if (nCol < nPrevCol)
        {
            for (int i = 0; i < nCol; i++)
                printf(""| "");
            printf(""|\n"");
       }
        nPrevCol = nCol;

        // print columns
        for (int i = 0; i < nCol; i++)
            printf(""| "");

        // print item
        CBlock block;
        block.ReadFromDisk(pindex);
        printf(""%d (%u,%u) %s  %08lx  %s  mint %7s  tx %d"",
            pindex->nHeight,
            pindex->nFile,
            pindex->nBlockPos,
            block.GetHash().ToString().c_str(),
            block.nBits,
            DateTimeStrFormat(block.GetBlockTime()).c_str(),
            FormatMoney(pindex->nMint).c_str(),
            block.vtx.size());

        PrintWallets(block);

        // put the main timechain first
        vector<CBlockIndex*>& vNext = mapNext[pindex];
        for (unsigned int i = 0; i < vNext.size(); i++)
        {
            if (vNext[i]->pnext)
            {
                swap(vNext[0], vNext[i]);
                break;
            }
        }

        // iterate children
        for (unsigned int i = 0; i < vNext.size(); i++)
            vStack.push_back(make_pair(nCol+i, vNext[i]));
    }
}










//////////////////////////////////////////////////////////////////////////////
//
// CAlert
//

map<uint256, CAlert> mapAlerts;
CCriticalSection cs_mapAlerts;

static string strMintMessage = _(""Warning: Minting suspended due to locked wallet."");
static string strMintWarning;

string GetWarnings(string strFor)
{
    int nPriority = 0;
    string strStatusBar;
    string strRPC;

    if (GetBoolArg(""-testsafemode""))
        strRPC = ""test"";

    // ppcoin: wallet lock warning for minting
    if (strMintWarning != """")
    {
        nPriority = 0;
        strStatusBar = strMintWarning;
    }

    // Misc warnings like out of disk space and clock is wrong
    if (strMiscWarning != """")
    {
        nPriority = 1000;
        strStatusBar = strMiscWarning;
    }

    // ppcoin: if detected invalid checkpoint enter safe mode
    if (Checkpoints::hashInvalidCheckpoint != 0)
    {
        nPriority = 3000;
        strStatusBar = strRPC = ""Warning: An invalid checkpoint has been found! Displayed transactions may not be correct! You may need to upgrade, and/or notify developers of the issue."";
    }

    // Alerts
    {
        LOCK(cs_mapAlerts);

        BOOST_FOREACH(PAIRTYPE(const uint256, CAlert)& item, mapAlerts)
        {
            const CAlert& alert = item.second;
            if (alert.AppliesToMe() && alert.nPriority > nPriority)
            {
                nPriority = alert.nPriority;
                strStatusBar = alert.strStatusBar;

                if (nPriority > 1000)
                {
                    strRPC = strStatusBar;  // ppcoin: safe mode for high alert
                }
            }
        }
    }

    if (strFor == ""statusbar"")
        return strStatusBar;
    else if (strFor == ""rpc"")
        return strRPC;

    assert(!""GetWarnings() : invalid parameter"");
    return ""error"";
}

bool CAlert::ProcessAlert()
{
    if (!CheckSignature())
        return false;
    if (!IsInEffect())
        return false;

    {
        LOCK(cs_mapAlerts);
        // Cancel previous alerts
        for (map<uint256, CAlert>::iterator mi = mapAlerts.begin(); mi != mapAlerts.end();)
        {
            const CAlert& alert = (*mi).second;
            if (Cancels(alert))
            {
                printf(""cancelling alert %d\n"", alert.nID);
                mapAlerts.erase(mi++);
            }
            else if (!alert.IsInEffect())
            {
                printf(""expiring alert %d\n"", alert.nID);
                mapAlerts.erase(mi++);
            }
            else
                mi++;
        }

        // Check if this alert has been cancelled
        BOOST_FOREACH(PAIRTYPE(const uint256, CAlert)& item, mapAlerts)
        {
            const CAlert& alert = item.second;
            if (alert.Cancels(*this))
            {
                printf(""alert already cancelled by %d\n"", alert.nID);
                return false;
            }
        }

        // Add to mapAlerts
        mapAlerts.insert(make_pair(GetHash(), *this));
    }

    printf(""accepted alert %d, AppliesToMe()=%d\n"", nID, AppliesToMe());
    MainFrameRepaint();
    return true;
}








//////////////////////////////////////////////////////////////////////////////
//
// Messages
//


bool static AlreadyHave(CTxDB& txdb, const CInv& inv)
{
    switch (inv.type)
    {
    case MSG_TX:
        {
        bool txInMap = false;
            {
            LOCK(mempool.cs);
            txInMap = (mempool.exists(inv.hash));
            }
        return txInMap ||
               mapOrphanTransactions.count(inv.hash) ||
               txdb.ContainsTx(inv.hash);
        }

    case MSG_BLOCK:
        return mapBlockIndex.count(inv.hash) ||
               mapOrphanBlocks.count(inv.hash);
    }
    // Don't know what it is, just say we already got one
    return true;
}




bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)
{
    static map<CService, CPubKey> mapReuseKey;
    RandAddSeedPerfmon();
    if (fDebug) {
        printf(""%s "", DateTimeStrFormat(GetTime()).c_str());
        printf(""received: %s (%d bytes)\n"", strCommand.c_str(), vRecv.size());
    }
    if (mapArgs.count(""-dropmessagestest"") && GetRand(atoi(mapArgs[""-dropmessagestest""])) == 0)
    {
        printf(""dropmessagestest DROPPING RECV MESSAGE\n"");
        return true;
    }





    if (strCommand == ""version"")
    {
        // Each connection can only send one version message
        if (pfrom->nVersion != 0)
        {
            pfrom->Misbehaving(1);
            return false;
        }

        int64 nTime;
        CAddress addrMe;
        CAddress addrFrom;
        uint64 nNonce = 1;
        vRecv >> pfrom->nVersion >> pfrom->nServices >> nTime >> addrMe;
        if (pfrom->nVersion < MIN_PROTO_VERSION)
        {
            // Since February 20, 2012, the protocol is initiated at version 209,
            // and earlier versions are no longer supported
            printf(""partner %s using obsolete version %i; disconnecting\n"", pfrom->addr.ToString().c_str(), pfrom->nVersion);
            pfrom->fDisconnect = true;
            return false;
        }

        if (pfrom->nVersion == 10300)
            pfrom->nVersion = 300;
        if (!vRecv.empty())
            vRecv >> addrFrom >> nNonce;
        if (!vRecv.empty())
            vRecv >> pfrom->strSubVer;
        if (!vRecv.empty())
            vRecv >> pfrom->nStartingHeight;

        // Disconnect if we connected to ourself
        if (nNonce == nLocalHostNonce && nNonce > 1)
        {
            printf(""connected to self at %s, disconnecting\n"", pfrom->addr.ToString().c_str());
            pfrom->fDisconnect = true;
            return true;
        }

        // ppcoin: record my external IP reported by peer
        if (addrFrom.IsRoutable() && addrMe.IsRoutable())
            addrSeenByPeer = addrMe;

        // Be shy and don't send version until we hear
        if (pfrom->fInbound)
            pfrom->PushVersion();

        pfrom->fClient = !(pfrom->nServices & NODE_NETWORK);

        AddTimeData(pfrom->addr, nTime);

        // Change version
        pfrom->PushMessage(""verack"");
        pfrom->vSend.SetVersion(min(pfrom->nVersion, PROTOCOL_VERSION));

        if (!pfrom->fInbound)
        {
            // Advertise our address
            if (!fNoListen && !fUseProxy && addrLocalHost.IsRoutable() &&
                !IsInitialBlockDownload())
            {
                CAddress addr(addrLocalHost);
                addr.nTime = GetAdjustedTime();
                pfrom->PushAddress(addr);
            }

            // Get recent addresses
            if (pfrom->nVersion >= CADDR_TIME_VERSION || addrman.size() < 1000)
            {
                pfrom->PushMessage(""getaddr"");
                pfrom->fGetAddr = true;
            }
            addrman.Good(pfrom->addr);
        } else {
            if (((CNetAddr)pfrom->addr) == (CNetAddr)addrFrom)
            {
                addrman.Add(addrFrom, addrFrom);
                addrman.Good(addrFrom);
            }
        }

        // Ask the first connected node for block updates
        static int nAskedForBlocks = 0;
        if (!pfrom->fClient &&
            (pfrom->nVersion < NOBLKS_VERSION_START ||
             pfrom->nVersion >= NOBLKS_VERSION_END))
        {
            nAskedForBlocks++;
            pfrom->PushGetBlocks(pindexBest, uint256(0));
        }

        // Relay alerts
        {
            LOCK(cs_mapAlerts);
            BOOST_FOREACH(PAIRTYPE(const uint256, CAlert)& item, mapAlerts)
                item.second.RelayTo(pfrom);
        }

        // ppcoin: relay sync-checkpoint
        {
            LOCK(Checkpoints::cs_hashSyncCheckpoint);
            if (!Checkpoints::checkpointMessage.IsNull())
                Checkpoints::checkpointMessage.RelayTo(pfrom);
        }

        pfrom->fSuccessfullyConnected = true;

        printf(""version message: version %d, blocks=%d\n"", pfrom->nVersion, pfrom->nStartingHeight);

        cPeerBlockCounts.input(pfrom->nStartingHeight);

        // ppcoin: ask for pending sync-checkpoint if any
        if (!IsInitialBlockDownload())
            Checkpoints::AskForPendingSyncCheckpoint(pfrom);
    }


    else if (pfrom->nVersion == 0)
    {
        // Must have a version message before anything else
        pfrom->Misbehaving(1);
        return false;
    }


    else if (strCommand == ""verack"")
    {
        pfrom->vRecv.SetVersion(min(pfrom->nVersion, PROTOCOL_VERSION));
    }


    else if (strCommand == ""addr"")
    {
        vector<CAddress> vAddr;
        vRecv >> vAddr;

        // Don't want addr from older versions unless seeding
        if (pfrom->nVersion < CADDR_TIME_VERSION && addrman.size() > 1000)
            return true;
        if (vAddr.size() > 1000)
        {
            pfrom->Misbehaving(20);
            return error(""message addr size() = %d"", vAddr.size());
        }

        // Store the new addresses
        int64 nNow = GetAdjustedTime();
        int64 nSince = nNow - 10 * 60;
        BOOST_FOREACH(CAddress& addr, vAddr)
        {
            if (fShutdown)
                return true;
            // ignore IPv6 for now, since it isn't implemented anyway
            if (!addr.IsIPv4())
                continue;
            if (addr.nTime <= 100000000 || addr.nTime > nNow + 10 * 60)
                addr.nTime = nNow - 5 * 24 * 60 * 60;
            pfrom->AddAddressKnown(addr);
            if (addr.nTime > nSince && !pfrom->fGetAddr && vAddr.size() <= 10 && addr.IsRoutable())
            {
                // Relay to a limited number of other nodes
                {
                    LOCK(cs_vNodes);
                    // Use deterministic randomness to send to the same nodes for 24 hours
                    // at a time so the setAddrKnowns of the chosen nodes prevent repeats
                    static uint256 hashSalt;
                    if (hashSalt == 0)
                        hashSalt = GetRandHash();
                    int64 hashAddr = addr.GetHash();
                    uint256 hashRand = hashSalt ^ (hashAddr<<32) ^ ((GetTime()+hashAddr)/(24*60*60));
                    hashRand = Hash(BEGIN(hashRand), END(hashRand));
                    multimap<uint256, CNode*> mapMix;
                    BOOST_FOREACH(CNode* pnode, vNodes)
                    {
                        if (pnode->nVersion < CADDR_TIME_VERSION)
                            continue;
                        unsigned int nPointer;
                        memcpy(&nPointer, &pnode, sizeof(nPointer));
                        uint256 hashKey = hashRand ^ nPointer;
                        hashKey = Hash(BEGIN(hashKey), END(hashKey));
                        mapMix.insert(make_pair(hashKey, pnode));
                    }
                    int nRelayNodes = 2;
                    for (multimap<uint256, CNode*>::iterator mi = mapMix.begin(); mi != mapMix.end() && nRelayNodes-- > 0; ++mi)
                        ((*mi).second)->PushAddress(addr);
                }
            }
        }
        addrman.Add(vAddr, pfrom->addr, 2 * 60 * 60);
        if (vAddr.size() < 1000)
            pfrom->fGetAddr = false;
    }


    else if (strCommand == ""inv"")
    {
        vector<CInv> vInv;
        vRecv >> vInv;
        if (vInv.size() > 50000)
        {
            pfrom->Misbehaving(20);
            return error(""message inv size() = %d"", vInv.size());
        }

        // find last block in inv vector
        unsigned int nLastBlock = (unsigned int)(-1);
        for (unsigned int nInv = 0; nInv < vInv.size(); nInv++) {
            if (vInv[vInv.size() - 1 - nInv].type == MSG_BLOCK) {
                nLastBlock = vInv.size() - 1 - nInv;
                break;
            }
        }
        CTxDB txdb(""r"");
        for (unsigned int nInv = 0; nInv < vInv.size(); nInv++)
        {
            const CInv &inv = vInv[nInv];

            if (fShutdown)
                return true;
            pfrom->AddInventoryKnown(inv);

            bool fAlreadyHave = AlreadyHave(txdb, inv);
            if (fDebug)
                printf(""  got inventory: %s  %s\n"", inv.ToString().c_str(), fAlreadyHave ? ""have"" : ""new"");

            if (!fAlreadyHave)
            {
                pfrom->AskFor(inv);
            }
            else if (inv.type == MSG_BLOCK && mapOrphanBlocks.count(inv.hash))
            {
                pfrom->PushGetBlocks(pindexBest, GetOrphanRoot(mapOrphanBlocks[inv.hash]));
            }
            else if (nInv == nLastBlock)
            {
                // In case we are on a very long side-chain, it is possible that we already have
                // the last block in an inv bundle sent in response to getblocks. Try to detect
                // this situation and push another getblocks to continue.
                std::vector<CInv> vGetData(1,inv);
                pfrom->PushGetBlocks(mapBlockIndex.at(inv.hash), uint256(0));

                if (fDebug)
                {
                    printf(""force request: %s\n"", inv.ToString().c_str());
                }
            }

            // Track requests for our stuff
            Inventory(inv.hash);
        }
    }


    else if (strCommand == ""getdata"")
    {
        vector<CInv> vInv;
        vRecv >> vInv;
        if (vInv.size() > 50000)
        {
            pfrom->Misbehaving(20);
            return error(""message getdata size() = %d"", vInv.size());
        }

        BOOST_FOREACH(const CInv& inv, vInv)
        {
            if (fShutdown)
                return true;
            printf(""received getdata for: %s\n"", inv.ToString().c_str());

            if (inv.type == MSG_BLOCK)
            {
                // Send block from disk
                map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(inv.hash);
                if (mi != mapBlockIndex.end())
                {
                    CBlock block;
                    block.ReadFromDisk((*mi).second);
                    pfrom->PushMessage(""block"", block);

                    // Trigger them to send a getblocks request for the next batch of inventory
                    if (inv.hash == pfrom->hashContinue)
                    {
                        // Bypass PushInventory, this must send even if redundant,
                        // and we want it right after the last block so they don't
                        // wait for other stuff first.
                        // ppcoin: send latest proof-of-work block to allow the
                        // download node to accept as orphan (proof-of-stake
                        // block might be rejected by stake connection check)
                        vector<CInv> vInv;
                        vInv.push_back(CInv(MSG_BLOCK, GetLastBlockIndex(pindexBest, false)->GetBlockHash()));
                        pfrom->PushMessage(""inv"", vInv);
                        pfrom->hashContinue = 0;
                    }
                }
            }
            else if (inv.IsKnownType())
            {
                // Send stream from relay memory
                {
                    LOCK(cs_mapRelay);
                    map<CInv, CDataStream>::iterator mi = mapRelay.find(inv);
                    if (mi != mapRelay.end())
                        pfrom->PushMessage(inv.GetCommand(), (*mi).second);
                }
            }

            // Track requests for our stuff
            Inventory(inv.hash);
        }
    }


    else if (strCommand == ""getblocks"")
    {
        CBlockLocator locator;
        uint256 hashStop;
        vRecv >> locator >> hashStop;

        // Find the last block the caller has in the main chain
        CBlockIndex* pindex = locator.GetBlockIndex();

        // Send the rest of the chain
        if (pindex)
            pindex = pindex->pnext;
        int nLimit = 500 + locator.GetDistanceBack();
        unsigned int nBytes = 0;
        printf(""getblocks %d to %s limit %d\n"", (pindex ? pindex->nHeight : -1), hashStop.ToString().substr(0,20).c_str(), nLimit);
        for (; pindex; pindex = pindex->pnext)
        {
            if (pindex->GetBlockHash() == hashStop)
            {
                printf(""  getblocks stopping at %d %s (%u bytes)\n"", pindex->nHeight, pindex->GetBlockHash().ToString().substr(0,20).c_str(), nBytes);
                // ppcoin: tell downloading node about the latest block if it's
                // without risk being rejected due to stake connection check
                if (hashStop != hashBestChain && pindex->GetBlockTime() + STAKE_MIN_AGE > pindexBest->GetBlockTime())
                    pfrom->PushInventory(CInv(MSG_BLOCK, hashBestChain));
                break;
            }
            pfrom->PushInventory(CInv(MSG_BLOCK, pindex->GetBlockHash()));
            CBlock block;
            block.ReadFromDisk(pindex, true);
            nBytes += block.GetSerializeSize(SER_NETWORK, PROTOCOL_VERSION);
            if (--nLimit <= 0 || nBytes >= SendBufferSize()/2)
            {
                // When this block is requested, we'll send an inv that'll make them
                // getblocks the next batch of inventory.
                printf(""  getblocks stopping at limit %d %s (%u bytes)\n"", pindex->nHeight, pindex->GetBlockHash().ToString().substr(0,20).c_str(), nBytes);
                pfrom->hashContinue = pindex->GetBlockHash();
                break;
            }
        }
    }


    else if (strCommand == ""getheaders"")
    {
        CBlockLocator locator;
        uint256 hashStop;
        vRecv >> locator >> hashStop;

        CBlockIndex* pindex = NULL;
        if (locator.IsNull())
        {
            // If locator is null, return the hashStop block
            map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashStop);
            if (mi == mapBlockIndex.end())
                return true;
            pindex = (*mi).second;
        }
        else
        {
            // Find the last block the caller has in the main chain
            pindex = locator.GetBlockIndex();
            if (pindex)
                pindex = pindex->pnext;
        }

        vector<CBlock> vHeaders;
        int nLimit = 2000;
        printf(""getheaders %d to %s\n"", (pindex ? pindex->nHeight : -1), hashStop.ToString().substr(0,20).c_str());
        for (; pindex; pindex = pindex->pnext)
        {
            vHeaders.push_back(pindex->GetBlockHeader());
            if (--nLimit <= 0 || pindex->GetBlockHash() == hashStop)
                break;
        }
        pfrom->PushMessage(""headers"", vHeaders);
    }


    else if (strCommand == ""tx"")
    {
        vector<uint256> vWorkQueue;
        vector<uint256> vEraseQueue;
        CDataStream vMsg(vRecv);
        CTxDB txdb(""r"");
        CTransaction tx;
        vRecv >> tx;

        CInv inv(MSG_TX, tx.GetHash());
        pfrom->AddInventoryKnown(inv);

        bool fMissingInputs = false;
        if (tx.AcceptToMemoryPool(txdb, true, &fMissingInputs))
        {
            SyncWithWallets(tx, NULL, true);
            RelayMessage(inv, vMsg);
            mapAlreadyAskedFor.erase(inv);
            vWorkQueue.push_back(inv.hash);
            vEraseQueue.push_back(inv.hash);

            // Recursively process any orphan transactions that depended on this one
            for (unsigned int i = 0; i < vWorkQueue.size(); i++)
            {
                uint256 hashPrev = vWorkQueue[i];
                for (map<uint256, CDataStream*>::iterator mi = mapOrphanTransactionsByPrev[hashPrev].begin();
                     mi != mapOrphanTransactionsByPrev[hashPrev].end();
                     ++mi)
                {
                    const CDataStream& vMsg = *((*mi).second);
                    CTransaction tx;
                    CDataStream(vMsg) >> tx;
                    CInv inv(MSG_TX, tx.GetHash());
                    bool fMissingInputs2 = false;

                    if (tx.AcceptToMemoryPool(txdb, true, &fMissingInputs2))
                    {
                        printf(""   accepted orphan tx %s\n"", inv.hash.ToString().substr(0,10).c_str());
                        SyncWithWallets(tx, NULL, true);
                        RelayMessage(inv, vMsg);
                        mapAlreadyAskedFor.erase(inv);
                        vWorkQueue.push_back(inv.hash);
                        vEraseQueue.push_back(inv.hash);
                    }
                    else if (!fMissingInputs2)
                    {
                        // invalid orphan
                        vEraseQueue.push_back(inv.hash);
                        printf(""   removed invalid orphan tx %s\n"", inv.hash.ToString().substr(0,10).c_str());
                    }
                }
            }

            BOOST_FOREACH(uint256 hash, vEraseQueue)
                EraseOrphanTx(hash);
        }
        else if (fMissingInputs)
        {
            AddOrphanTx(vMsg);

            // DoS prevention: do not allow mapOrphanTransactions to grow unbounded
            unsigned int nEvicted = LimitOrphanTxSize(MAX_BLOCK_ORPHAN_TX);
            if (nEvicted > 0)
                printf(""mapOrphan overflow, removed %u tx\n"", nEvicted);
        }
        if (tx.nDoS) pfrom->Misbehaving(tx.nDoS);
    }


    else if (strCommand == ""block"")
    {
        CBlock block;
        vRecv >> block;

        printf(""received block %s\n"", block.GetHash().ToString().substr(0,20).c_str());
        // block.print();

        CInv inv(MSG_BLOCK, block.GetHash());
        pfrom->AddInventoryKnown(inv);

        if (ProcessBlock(pfrom, &block))
            mapAlreadyAskedFor.erase(inv);
        if (block.nDoS) pfrom->Misbehaving(block.nDoS);
    }


    else if (strCommand == ""getaddr"")
    {
        pfrom->vAddrToSend.clear();
        vector<CAddress> vAddr = addrman.GetAddr();
        BOOST_FOREACH(const CAddress &addr, vAddr)
            pfrom->PushAddress(addr);
    }


    else if (strCommand == ""checkorder"")
    {
        uint256 hashReply;
        vRecv >> hashReply;

        if (!GetBoolArg(""-allowreceivebyip""))
        {
            pfrom->PushMessage(""reply"", hashReply, (int)2, string(""""));
            return true;
        }

        CWalletTx order;
        vRecv >> order;

        /// we have a chance to check the order here

        // Keep giving the same key to the same ip until they use it
        if (!mapReuseKey.count(pfrom->addr))
            pwalletMain->GetKeyFromPool(mapReuseKey[pfrom->addr], true);

        // Send back approval of order and pubkey to use
        CScript scriptPubKey;
        scriptPubKey << mapReuseKey[pfrom->addr] << OP_CHECKSIG;
        pfrom->PushMessage(""reply"", hashReply, (int)0, scriptPubKey);
    }


    else if (strCommand == ""reply"")
    {
        uint256 hashReply;
        vRecv >> hashReply;

        CRequestTracker tracker;
        {
            LOCK(pfrom->cs_mapRequests);
            map<uint256, CRequestTracker>::iterator mi = pfrom->mapRequests.find(hashReply);
            if (mi != pfrom->mapRequests.end())
            {
                tracker = (*mi).second;
                pfrom->mapRequests.erase(mi);
            }
        }
        if (!tracker.IsNull())
            tracker.fn(tracker.param1, vRecv);
    }


    else if (strCommand == ""ping"")
    {
        if (pfrom->nVersion > BIP0031_VERSION)
        {
            uint64 nonce = 0;
            vRecv >> nonce;
            // Echo the message back with the nonce. This allows for two useful features:
            //
            // 1) A remote node can quickly check if the connection is operational
            // 2) Remote nodes can measure the latency of the network thread. If this node
            //    is overloaded it won't respond to pings quickly and the remote node can
            //    avoid sending us more work, like chain download requests.
            //
            // The nonce stops the remote getting confused between different pings: without
            // it, if the remote node sends a ping once per second and this node takes 5
            // seconds to respond to each, the 5th ping the remote sends would appear to
            // return very quickly.
            pfrom->PushMessage(""pong"", nonce);
        }
    }


    else if (strCommand == ""alert"")
    {
        CAlert alert;
        vRecv >> alert;

        if (alert.ProcessAlert())
        {
            // Relay
            pfrom->setKnown.insert(alert.GetHash());
            {
                LOCK(cs_vNodes);
                BOOST_FOREACH(CNode* pnode, vNodes)
                    alert.RelayTo(pnode);
            }
        }
    }

    else if (strCommand == ""checkpoint"")
    {
        CSyncCheckpoint checkpoint;
        vRecv >> checkpoint;

        if (checkpoint.ProcessSyncCheckpoint(pfrom))
        {
            // Relay
            pfrom->hashCheckpointKnown = checkpoint.hashCheckpoint;
            LOCK(cs_vNodes);
            BOOST_FOREACH(CNode* pnode, vNodes)
                checkpoint.RelayTo(pnode);
        }
    }

    else
    {
        // Ignore unknown commands for extensibility
    }


    // Update the last seen time for this node's address
    if (pfrom->fNetworkNode)
        if (strCommand == ""version"" || strCommand == ""addr"" || strCommand == ""inv"" || strCommand == ""getdata"" || strCommand == ""ping"")
            AddressCurrentlyConnected(pfrom->addr);


    return true;
}

bool ProcessMessages(CNode* pfrom)
{
    CDataStream& vRecv = pfrom->vRecv;
    if (vRecv.empty())
        return true;
    //if (fDebug)
    //    printf(""ProcessMessages(%u bytes)\n"", vRecv.size());

    //
    // Message format
    //  (4) message start
    //  (12) command
    //  (4) size
    //  (4) checksum
    //  (x) data
    //

    unsigned char pchMessageStart[4];
    GetMessageStart(pchMessageStart);
    static int64 nTimeLastPrintMessageStart = 0;
    if (fDebug && GetBoolArg(""-printmessagestart"") && nTimeLastPrintMessageStart + 30 < GetAdjustedTime())
    {
        string strMessageStart((const char *)pchMessageStart, sizeof(pchMessageStart));
        vector<unsigned char> vchMessageStart(strMessageStart.begin(), strMessageStart.end());
        printf(""ProcessMessages : AdjustedTime=%""PRI64d"" MessageStart=%s\n"", GetAdjustedTime(), HexStr(vchMessageStart).c_str());
        nTimeLastPrintMessageStart = GetAdjustedTime();
    }

    INFINITE_LOOP
    {
        // Safe guards to prevent the node to ignore a requested shutdown
        // in case of long processing
        if (fRequestShutdown)
        {
            StartShutdown();
            return true;
        }

        // Scan for message start
        CDataStream::iterator pstart = search(vRecv.begin(), vRecv.end(), BEGIN(pchMessageStart), END(pchMessageStart));
        int nHeaderSize = vRecv.GetSerializeSize(CMessageHeader());
        if (vRecv.end() - pstart < nHeaderSize)
        {
            if ((int)vRecv.size() > nHeaderSize)
            {
                printf(""\n\nPROCESSMESSAGE MESSAGESTART NOT FOUND\n\n"");
                vRecv.erase(vRecv.begin(), vRecv.end() - nHeaderSize);
            }
            break;
        }
        if (pstart - vRecv.begin() > 0)
            printf(""\n\nPROCESSMESSAGE SKIPPED %d BYTES\n\n"", pstart - vRecv.begin());
        vRecv.erase(vRecv.begin(), pstart);

        // Read header
        vector<char> vHeaderSave(vRecv.begin(), vRecv.begin() + nHeaderSize);
        CMessageHeader hdr;
        vRecv >> hdr;
        if (!hdr.IsValid())
        {
            printf(""\n\nPROCESSMESSAGE: ERRORS IN HEADER %s\n\n\n"", hdr.GetCommand().c_str());
            continue;
        }
        string strCommand = hdr.GetCommand();

        // Message size
        unsigned int nMessageSize = hdr.nMessageSize;
        if (nMessageSize > MAX_SIZE)
        {
            printf(""ProcessMessages(%s, %u bytes) : nMessageSize > MAX_SIZE\n"", strCommand.c_str(), nMessageSize);
            continue;
        }
        if (nMessageSize > vRecv.size())
        {
            // Rewind and wait for rest of message
            vRecv.insert(vRecv.begin(), vHeaderSave.begin(), vHeaderSave.end());
            break;
        }

        // Checksum
        uint256 hash = Hash(vRecv.begin(), vRecv.begin() + nMessageSize);
        unsigned int nChecksum = 0;
        memcpy(&nChecksum, &hash, sizeof(nChecksum));
        if (nChecksum != hdr.nChecksum)
        {
            printf(""ProcessMessages(%s, %u bytes) : CHECKSUM ERROR nChecksum=%08x hdr.nChecksum=%08x\n"",
               strCommand.c_str(), nMessageSize, nChecksum, hdr.nChecksum);
            continue;
        }

        // Copy message to its own buffer
        CDataStream vMsg(vRecv.begin(), vRecv.begin() + nMessageSize, vRecv.nType, vRecv.nVersion);
        vRecv.ignore(nMessageSize);

        // Process message
        bool fRet = false;
        try
        {
            {
                LOCK(cs_main);
                fRet = ProcessMessage(pfrom, strCommand, vMsg);
            }
            if (fShutdown)
                return true;
        }
        catch (std::ios_base::failure& e)
        {
            if (strstr(e.what(), ""end of data""))
            {
                // Allow exceptions from underlength message on vRecv
                printf(""ProcessMessages(%s, %u bytes) : Exception '%s' caught, normally caused by a message being shorter than its stated length\n"", strCommand.c_str(), nMessageSize, e.what());
            }
            else if (strstr(e.what(), ""size too large""))
            {
                // Allow exceptions from overlong size
                printf(""ProcessMessages(%s, %u bytes) : Exception '%s' caught\n"", strCommand.c_str(), nMessageSize, e.what());
            }
            else
            {
                PrintExceptionContinue(&e, ""ProcessMessages()"");
            }
        }
        catch (std::exception& e) {
            PrintExceptionContinue(&e, ""ProcessMessages()"");
        } catch (...) {
            PrintExceptionContinue(NULL, ""ProcessMessages()"");
        }

        if (!fRet)
            printf(""ProcessMessage(%s, %u bytes) FAILED\n"", strCommand.c_str(), nMessageSize);
    }

    vRecv.Compact();
    return true;
}


bool SendMessages(CNode* pto, bool fSendTrickle)
{
    TRY_LOCK(cs_main, lockMain);
    if (lockMain) {
        // Don't send anything until we get their version message
        if (pto->nVersion == 0)
            return true;

        // Keep-alive ping. We send a nonce of zero because we don't use it anywhere
        // right now.
        if (pto->nLastSend && GetTime() - pto->nLastSend > 30 * 60 && pto->vSend.empty()) {
            uint64 nonce = 0;
            if (pto->nVersion > BIP0031_VERSION)
                pto->PushMessage(""ping"", nonce);
            else
                pto->PushMessage(""ping"");
        }

        // Resend wallet transactions that haven't gotten in a block yet
        ResendWalletTransactions();

        // Address refresh broadcast
        static int64 nLastRebroadcast;
        if (!IsInitialBlockDownload() && (GetTime() - nLastRebroadcast > 24 * 60 * 60))
        {
            {
                LOCK(cs_vNodes);
                BOOST_FOREACH(CNode* pnode, vNodes)
                {
                    // Periodically clear setAddrKnown to allow refresh broadcasts
                    if (nLastRebroadcast)
                        pnode->setAddrKnown.clear();

                    // Rebroadcast our address
                    if (!fNoListen && !fUseProxy && addrLocalHost.IsRoutable())
                    {
                        CAddress addr(addrLocalHost);
                        addr.nTime = GetAdjustedTime();
                        pnode->PushAddress(addr);
                    }
                }
            }
            nLastRebroadcast = GetTime();
        }

        //
        // Message: addr
        //
        if (fSendTrickle)
        {
            vector<CAddress> vAddr;
            vAddr.reserve(pto->vAddrToSend.size());
            BOOST_FOREACH(const CAddress& addr, pto->vAddrToSend)
            {
                // returns true if wasn't already contained in the set
                if (pto->setAddrKnown.insert(addr).second)
                {
                    vAddr.push_back(addr);
                    // receiver rejects addr messages larger than 1000
                    if (vAddr.size() >= 1000)
                    {
                        pto->PushMessage(""addr"", vAddr);
                        vAddr.clear();
                    }
                }
            }
            pto->vAddrToSend.clear();
            if (!vAddr.empty())
                pto->PushMessage(""addr"", vAddr);
        }


        //
        // Message: inventory
        //
        vector<CInv> vInv;
        vector<CInv> vInvWait;
        {
            LOCK(pto->cs_inventory);
            vInv.reserve(pto->vInventoryToSend.size());
            vInvWait.reserve(pto->vInventoryToSend.size());
            BOOST_FOREACH(const CInv& inv, pto->vInventoryToSend)
            {
                if (pto->setInventoryKnown.count(inv))
                    continue;

                // trickle out tx inv to protect privacy
                if (inv.type == MSG_TX && !fSendTrickle)
                {
                    // 1/4 of tx invs blast to all immediately
                    static uint256 hashSalt;
                    if (hashSalt == 0)
                        hashSalt = GetRandHash();
                    uint256 hashRand = inv.hash ^ hashSalt;
                    hashRand = Hash(BEGIN(hashRand), END(hashRand));
                    bool fTrickleWait = ((hashRand & 3) != 0);

                    // always trickle our own transactions
                    if (!fTrickleWait)
                    {
                        CWalletTx wtx;
                        if (GetTransaction(inv.hash, wtx))
                            if (wtx.fFromMe)
                                fTrickleWait = true;
                    }

                    if (fTrickleWait)
                    {
                        vInvWait.push_back(inv);
                        continue;
                    }
                }

                // returns true if wasn't already contained in the set
                if (pto->setInventoryKnown.insert(inv).second)
                {
                    vInv.push_back(inv);
                    if (vInv.size() >= 1000)
                    {
                        pto->PushMessage(""inv"", vInv);
                        vInv.clear();
                    }
                }
            }
            pto->vInventoryToSend = vInvWait;
        }
        if (!vInv.empty())
            pto->PushMessage(""inv"", vInv);


        //
        // Message: getdata
        //
        vector<CInv> vGetData;
        int64 nNow = GetTime() * 1000000;
        CTxDB txdb(""r"");
        while (!pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)
        {
            const CInv& inv = (*pto->mapAskFor.begin()).second;
            if (!AlreadyHave(txdb, inv))
            {
                printf(""sending getdata: %s\n"", inv.ToString().c_str());
                vGetData.push_back(inv);
                if (vGetData.size() >= 1000)
                {
                    pto->PushMessage(""getdata"", vGetData);
                    vGetData.clear();
                }
            }
            mapAlreadyAskedFor[inv] = nNow;
            pto->mapAskFor.erase(pto->mapAskFor.begin());
        }
        if (!vGetData.empty())
            pto->PushMessage(""getdata"", vGetData);

    }
    return true;
}














//////////////////////////////////////////////////////////////////////////////
//
// BitcoinMiner
//

int static FormatHashBlocks(void* pbuffer, unsigned int len)
{
    unsigned char* pdata = (unsigned char*)pbuffer;
    unsigned int blocks = 1 + ((len + 8) / 64);
    unsigned char* pend = pdata + 64 * blocks;
    memset(pdata + len, 0, 64 * blocks - len);
    pdata[len] = 0x80;
    unsigned int bits = len * 8;
    pend[-1] = (bits >> 0) & 0xff;
    pend[-2] = (bits >> 8) & 0xff;
    pend[-3] = (bits >> 16) & 0xff;
    pend[-4] = (bits >> 24) & 0xff;
    return blocks;
}

static const unsigned int pSHA256InitState[8] =
{0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19};

void SHA256Transform(void* pstate, void* pinput, const void* pinit)
{
    SHA256_CTX ctx;
    unsigned char data[64];

    SHA256_Init(&ctx);

    for (int i = 0; i < 16; i++)
        ((uint32_t*)data)[i] = ByteReverse(((uint32_t*)pinput)[i]);

    for (int i = 0; i < 8; i++)
        ctx.h[i] = ((uint32_t*)pinit)[i];

    SHA256_Update(&ctx, data, sizeof(data));
    for (int i = 0; i < 8; i++)
        ((uint32_t*)pstate)[i] = ctx.h[i];
}

// Some explaining would be appreciated
class COrphan
{
public:
    CTransaction* ptx;
    set<uint256> setDependsOn;
    double dPriority;

    COrphan(CTransaction* ptxIn)
    {
        ptx = ptxIn;
        dPriority = 0;
    }

    void print() const
    {
        printf(""COrphan(hash=%s, dPriority=%.1f)\n"", ptx->GetHash().ToString().substr(0,10).c_str(), dPriority);
        BOOST_FOREACH(uint256 hash, setDependsOn)
            printf(""   setDependsOn %s\n"", hash.ToString().substr(0,10).c_str());
    }
};

uint64 nLastBlockTx = 0;
uint64 nLastBlockSize = 0;
int64 nLastCoinStakeSearchInterval = 0;

// CreateNewBlock:
//   fProofOfStake: try (best effort) to make a proof-of-stake block
CBlock* CreateNewBlock(CReserveKey& reservekey, CWallet* pwallet, bool fProofOfStake)
{
    // Create new block
    auto_ptr<CBlock> pblock(new CBlock());
    if (!pblock.get())
        return NULL;

    // Create coinbase tx
    CTransaction txNew;
    txNew.vin.resize(1);
    txNew.vin[0].prevout.SetNull();
    txNew.vout.resize(1);
    txNew.vout[0].scriptPubKey << reservekey.GetReservedKey() << OP_CHECKSIG;

    // Add our coinbase tx as first transaction
    pblock->vtx.push_back(txNew);

    // ppcoin: if coinstake available add coinstake tx
    static int64 nLastCoinStakeSearchTime = GetAdjustedTime();  // only initialized at startup
    CBlockIndex* pindexPrev = pindexBest;

    if (fProofOfStake)  // attemp to find a coinstake
    {
        pblock->nBits = GetNextTargetRequired(pindexPrev, true);
        CTransaction txCoinStake;
        int64 nSearchTime = txCoinStake.nTime; // search to current time
        if (nSearchTime > nLastCoinStakeSearchTime)
        {
            if (pwallet->CreateCoinStake(*pwallet, pblock->nBits, nSearchTime-nLastCoinStakeSearchTime, txCoinStake))
            {
                if (txCoinStake.nTime >= max(pindexPrev->GetMedianTimePast()+1, pindexPrev->GetBlockTime() - MAX_CLOCK_DRIFT))
                {   // make sure coinstake would meet timestamp protocol
                    // as it would be the same as the block timestamp
                    pblock->vtx[0].vout[0].SetEmpty();
                    pblock->vtx[0].nTime = txCoinStake.nTime;
                    pblock->vtx.push_back(txCoinStake);
                }
            }
            nLastCoinStakeSearchInterval = nSearchTime - nLastCoinStakeSearchTime;
            nLastCoinStakeSearchTime = nSearchTime;
        }
    }

    pblock->nBits = GetNextTargetRequired(pindexPrev, pblock->IsProofOfStake());

    // Collect memory pool transactions into the block
    int64 nFees = 0;
    {
        LOCK2(cs_main, mempool.cs);
        CTxDB txdb(""r"");

        // Priority order to process transactions
        list<COrphan> vOrphan; // list memory doesn't move
        map<uint256, vector<COrphan*> > mapDependers;
        multimap<double, CTransaction*> mapPriority;
        for (map<uint256, CTransaction>::iterator mi = mempool.mapTx.begin(); mi != mempool.mapTx.end(); ++mi)
        {
            CTransaction& tx = (*mi).second;
            if (tx.IsCoinBase() || tx.IsCoinStake() || !tx.IsFinal())
                continue;

            COrphan* porphan = NULL;
            double dPriority = 0;
            BOOST_FOREACH(const CTxIn& txin, tx.vin)
            {
                // Read prev transaction
                CTransaction txPrev;
                CTxIndex txindex;
                if (!txPrev.ReadFromDisk(txdb, txin.prevout, txindex))
                {
                    // Has to wait for dependencies
                    if (!porphan)
                    {
                        // Use list for automatic deletion
                        vOrphan.push_back(COrphan(&tx));
                        porphan = &vOrphan.back();
                    }
                    mapDependers[txin.prevout.hash].push_back(porphan);
                    porphan->setDependsOn.insert(txin.prevout.hash);
                    continue;
                }
                int64 nValueIn = txPrev.vout[txin.prevout.n].nValue;

                // Read block header
                int nConf = txindex.GetDepthInMainChain();

                dPriority += (double)nValueIn * nConf;

                if (fDebug && GetBoolArg(""-printpriority""))
                    printf(""priority     nValueIn=%-12""PRI64d"" nConf=%-5d dPriority=%-20.1f\n"", nValueIn, nConf, dPriority);
            }

            // Priority is sum(valuein * age) / txsize
            dPriority /= ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);

            if (porphan)
                porphan->dPriority = dPriority;
            else
                mapPriority.insert(make_pair(-dPriority, &(*mi).second));

            if (fDebug && GetBoolArg(""-printpriority""))
            {
                printf(""priority %-20.1f %s\n%s"", dPriority, tx.GetHash().ToString().substr(0,10).c_str(), tx.ToString().c_str());
                if (porphan)
                    porphan->print();
                printf(""\n"");
            }
        }

        // Collect transactions into block
        map<uint256, CTxIndex> mapTestPool;
        uint64 nBlockSize = 1000;
        uint64 nBlockTx = 0;
        int nBlockSigOps = 100;
        while (!mapPriority.empty())
        {
            // Take highest priority transaction off priority queue
            CTransaction& tx = *(*mapPriority.begin()).second;
            mapPriority.erase(mapPriority.begin());

            // Size limits
            unsigned int nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);
            if (nBlockSize + nTxSize >= MAX_BLOCK_SIZE_GEN)
                continue;

            // Legacy limits on sigOps:
            unsigned int nTxSigOps = tx.GetLegacySigOpCount();
            if (nBlockSigOps + nTxSigOps >= MAX_BLOCK_SIGOPS)
                continue;

            // Timestamp limit
            if (tx.nTime > GetAdjustedTime() || (pblock->IsProofOfStake() && tx.nTime > pblock->vtx[1].nTime))
                continue;

            // ppcoin: simplify transaction fee - allow free = false
            int64 nMinFee = tx.GetMinFee(nBlockSize, false, GMF_BLOCK);

            // Connecting shouldn't fail due to dependency on other memory pool transactions
            // because we're already processing them in order of dependency
            map<uint256, CTxIndex> mapTestPoolTmp(mapTestPool);
            MapPrevTx mapInputs;
            bool fInvalid;
            if (!tx.FetchInputs(txdb, mapTestPoolTmp, false, true, mapInputs, fInvalid))
                continue;

            int64 nTxFees = tx.GetValueIn(mapInputs)-tx.GetValueOut();
            if (nTxFees < nMinFee)
                continue;

            nTxSigOps += tx.GetP2SHSigOpCount(mapInputs);
            if (nBlockSigOps + nTxSigOps >= MAX_BLOCK_SIGOPS)
                continue;

            if (!tx.ConnectInputs(txdb, mapInputs, mapTestPoolTmp, CDiskTxPos(1,1,1), pindexPrev, false, true))
                continue;
            mapTestPoolTmp[tx.GetHash()] = CTxIndex(CDiskTxPos(1,1,1), tx.vout.size());
            swap(mapTestPool, mapTestPoolTmp);

            // Added
            pblock->vtx.push_back(tx);
            nBlockSize += nTxSize;
            ++nBlockTx;
            nBlockSigOps += nTxSigOps;
            nFees += nTxFees;

            // Add transactions that depend on this one to the priority queue
            uint256 hash = tx.GetHash();
            if (mapDependers.count(hash))
            {
                BOOST_FOREACH(COrphan* porphan, mapDependers[hash])
                {
                    if (!porphan->setDependsOn.empty())
                    {
                        porphan->setDependsOn.erase(hash);
                        if (porphan->setDependsOn.empty())
                            mapPriority.insert(make_pair(-porphan->dPriority, porphan->ptx));
                    }
                }
            }
        }

        nLastBlockTx = nBlockTx;
        nLastBlockSize = nBlockSize;

        if (fDebug && GetBoolArg(""-printpriority"")) {
            printf(""CreateNewBlock(): total size %lu\n"", nBlockSize);
        }
    }

    if (pblock->IsProofOfWork())
        pblock->vtx[0].vout[0].nValue = GetProofOfWorkReward(pindexPrev->nHeight);

    // Fill in header
    pblock->hashPrevBlock  = pindexPrev->GetBlockHash();
    pblock->hashMerkleRoot = pblock->BuildMerkleTree();
    if (pblock->IsProofOfStake())
        pblock->nTime      = pblock->vtx[1].nTime; //same as coinstake timestamp
    pblock->nTime          = max(pindexPrev->GetMedianTimePast()+1, pblock->GetMaxTransactionTime());
    pblock->nTime          = max(pblock->GetBlockTime(), pindexPrev->GetBlockTime() - MAX_CLOCK_DRIFT);
    if (pblock->IsProofOfWork())
        pblock->UpdateTime(pindexPrev);
    pblock->nNonce         = 0;

    return pblock.release();
}


void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce)
{
    // Update nExtraNonce
    static uint256 hashPrevBlock;
    if (hashPrevBlock != pblock->hashPrevBlock)
    {
        nExtraNonce = 0;
        hashPrevBlock = pblock->hashPrevBlock;
    }
    ++nExtraNonce;
    pblock->vtx[0].vin[0].scriptSig = (CScript() << pblock->nTime << CBigNum(nExtraNonce)) + COINBASE_FLAGS;
    assert(pblock->vtx[0].vin[0].scriptSig.size() <= 100);

    pblock->hashMerkleRoot = pblock->BuildMerkleTree();
}


void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1)
{
    //
    // Prebuild hash buffers
    //
    struct
    {
        struct unnamed2
        {
            int nVersion;
            uint256 hashPrevBlock;
            uint256 hashMerkleRoot;
            unsigned int nTime;
            unsigned int nBits;
            unsigned int nNonce;
        }
        block;
        unsigned char pchPadding0[64];
        uint256 hash1;
        unsigned char pchPadding1[64];
    }
    tmp;
    memset(&tmp, 0, sizeof(tmp));

    tmp.block.nVersion       = pblock->nVersion;
    tmp.block.hashPrevBlock  = pblock->hashPrevBlock;
    tmp.block.hashMerkleRoot = pblock->hashMerkleRoot;
    tmp.block.nTime          = pblock->nTime;
    tmp.block.nBits          = pblock->nBits;
    tmp.block.nNonce         = pblock->nNonce;

    FormatHashBlocks(&tmp.block, sizeof(tmp.block));
    FormatHashBlocks(&tmp.hash1, sizeof(tmp.hash1));

    // Byte swap all the input buffer
    for (unsigned int i = 0; i < sizeof(tmp)/4; i++)
        ((unsigned int*)&tmp)[i] = ByteReverse(((unsigned int*)&tmp)[i]);

    // Precalc the first half of the first hash, which stays constant
    SHA256Transform(pmidstate, &tmp.block, pSHA256InitState);

    memcpy(pdata, &tmp.block, 128);
    memcpy(phash1, &tmp.hash1, 64);
}


bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)
{
    uint256 hash = pblock->GetHash();
    uint256 hashTarget = CBigNum().SetCompact(pblock->nBits).getuint256();

    printf(""Hash:   %s\nTarget: %s\n"", hash.GetHex().c_str(), hashTarget.GetHex().c_str());

    if (hash > hashTarget && pblock->IsProofOfWork())
        return error(""BitcoinMiner : proof-of-work not meeting target"");

    //// debug print
    printf(""BitcoinMiner:\n"");
    printf(""new block found  \n  hash: %s  \ntarget: %s\n"", hash.GetHex().c_str(), hashTarget.GetHex().c_str());
    pblock->print();
    printf(""%s "", DateTimeStrFormat(GetTime()).c_str());
    printf(""generated %s\n"", FormatMoney(pblock->vtx[0].vout[0].nValue).c_str());

    // Found a solution
    {
        LOCK(cs_main);
        if (pblock->hashPrevBlock != hashBestChain)
            return error(""BitcoinMiner : generated block is stale"");

        // Remove key from key pool
        reservekey.KeepKey();

        // Track how many getdata requests this block gets
        {
            LOCK(wallet.cs_wallet);
            wallet.mapRequestCount[pblock->GetHash()] = 0;
        }

        // Process this block the same as if we had received it from another node
        if (!ProcessBlock(NULL, pblock))
            return error(""BitcoinMiner : ProcessBlock, block not accepted"");
    }

    return true;
}

void static ThreadBitcoinMiner(void* parg);

bool fStaking = true;
static bool fGenerateBitcoins = false;
static bool fLimitProcessors = false;
static int nLimitProcessors = -1;

bool BitcoinMiner(CWallet *pwallet, bool fProofOfStake, uint256 * minedBlock, uint64 nTimeout)
{
    printf(""CPUMiner started for proof-of-%s (%d)\n"", fProofOfStake? ""stake"" : ""work"",
                                                      vnThreadsRunning[fProofOfStake? THREAD_MINTER : THREAD_MINER]);
    SetThreadPriority(THREAD_PRIORITY_LOWEST);

    uint64 nStartTime = GetTime();

    // Each thread has its own key and counter
    CReserveKey reservekey(pwallet);
    unsigned int nExtraNonce = 0;

    while (minedBlock || fGenerateBitcoins || fProofOfStake)
    {
        if (fShutdown || (fProofOfStake && !fStaking))
            return false;

        if (nTimeout && (GetTime() - nStartTime > nTimeout))
            return false;

        while (vNodes.empty() || IsInitialBlockDownload())
        {
            Sleep(1000);

            if (fShutdown || (fProofOfStake && !fStaking))
                return false;

            if (!minedBlock && (!fGenerateBitcoins && !fProofOfStake))
                return false;
        }

        while (pwallet->IsLocked())
        {
            strMintWarning = strMintMessage;
            Sleep(1000);
        }

        strMintWarning.clear();

        //
        // Create new block
        //
        unsigned int nTransactionsUpdatedLast = nTransactionsUpdated;
        CBlockIndex* pindexPrev = pindexBest;

        auto_ptr<CBlock> pblock(CreateNewBlock(reservekey, pwallet, fProofOfStake));
        if (!pblock.get()) return false;

        IncrementExtraNonce(pblock.get(), pindexPrev, nExtraNonce);

        if (fProofOfStake)
        {
            // ppcoin: if proof-of-stake block found then process block
            if (pblock->IsProofOfStake())
            {
                if (!pblock->SignBlock(*pwalletMain))
                {
                    strMintWarning = strMintMessage;
                    continue;
                }

                strMintWarning.clear();
                printf(""CPUMiner : proof-of-stake block found %s\n"", pblock->GetHash().ToString().c_str());

                SetThreadPriority(THREAD_PRIORITY_NORMAL);
                bool fSucceeded = CheckWork(pblock.get(), *pwalletMain, reservekey);
                SetThreadPriority(THREAD_PRIORITY_LOWEST);

                if (fSucceeded && minedBlock)
                {
                    *minedBlock = pblock->GetHash();
                    return true;
                }
            }
            Sleep(500);
            continue;
        }

        printf(""Running BitcoinMiner with %d transactions in block\n"", pblock->vtx.size());

        //
        // Search
        //
        int64 nStart = GetTime();
        uint256 hashTarget = CBigNum().SetCompact(pblock->nBits).getuint256();

        INFINITE_LOOP
        {
            unsigned int nHashesDone = 0;

            pblock->nNonce = 0;

            INFINITE_LOOP
            {
                if (pblock->GetHash() <= hashTarget)
                    break;

                pblock->nNonce += 1;
                nHashesDone += 1;

                if ((pblock->nNonce & 0xFFFF) == 0)
                    break;
            }

            // Check if something found
            if (pblock->GetHash() <= hashTarget)
            {
                if (!pblock->SignBlock(*pwalletMain))
                {
                    strMintWarning = strMintMessage;
                    break;
                }
                else
                {
                    strMintWarning = """";
                }

                SetThreadPriority(THREAD_PRIORITY_NORMAL);
                bool fSucceeded = CheckWork(pblock.get(), *pwalletMain, reservekey);
                SetThreadPriority(THREAD_PRIORITY_LOWEST);

                if (fSucceeded && minedBlock)
                {
                    *minedBlock = pblock->GetHash();
                    return true;
                }

                break;
            }

            // Meter hashes/sec
            static int64 nHashCounter;
            if (nHPSTimerStart == 0)
            {
                nHPSTimerStart = GetTimeMillis();
                nHashCounter = 0;
            }
            else
            {
                nHashCounter += nHashesDone;
            }

            if (GetTimeMillis() - nHPSTimerStart > 4000)
            {
                static CCriticalSection cs;
                {
                    LOCK(cs);
                    if (GetTimeMillis() - nHPSTimerStart > 4000)
                    {
                        dHashesPerSec = 1000.0 * nHashCounter / (GetTimeMillis() - nHPSTimerStart);
                        nHPSTimerStart = GetTimeMillis();
                        nHashCounter = 0;
                        static int64 nLogTime;
                        if (GetTime() - nLogTime > 30 * 60)
                        {
                            nLogTime = GetTime();
                            printf(""%s "", DateTimeStrFormat(GetTime()).c_str());
                            printf(""hashmeter %3d CPUs %6.0f khash/s\n"", vnThreadsRunning[THREAD_MINER], dHashesPerSec/1000.0);
                        }
                    }
                }
            }

            // Check for stop or if block needs to be rebuilt
            if (fShutdown || (fProofOfStake && !fStaking))
                return false;
            if (!minedBlock && !fGenerateBitcoins)
                return false;
            if (fLimitProcessors && vnThreadsRunning[THREAD_MINER] > nLimitProcessors)
                return false;
            if (vNodes.empty())
                break;
            if (nTransactionsUpdated != nTransactionsUpdatedLast && GetTime() - nStart > 60)
                break;
            if (pindexPrev != pindexBest)
                break;

            // Update nTime every few seconds
            pblock->nTime = max(pindexPrev->GetMedianTimePast()+1, pblock->GetMaxTransactionTime());
            pblock->nTime = max(pblock->GetBlockTime(), pindexPrev->GetBlockTime() - MAX_CLOCK_DRIFT);
            pblock->UpdateTime(pindexPrev);

            if (pblock->GetBlockTime() >= (int64)pblock->vtx[0].nTime + MAX_CLOCK_DRIFT)
            {
                break;  // need to update coinbase timestamp
            }
        }
    }

    return false;
}

void static ThreadBitcoinMiner(void* parg)
{
    CWallet* pwallet = (CWallet*)parg;
    try
    {
        vnThreadsRunning[THREAD_MINER]++;
        BitcoinMiner(pwallet, false);
        vnThreadsRunning[THREAD_MINER]--;
    }
    catch (std::exception& e) {
        vnThreadsRunning[THREAD_MINER]--;
        PrintException(&e, ""ThreadBitcoinMiner()"");
    } catch (...) {
        vnThreadsRunning[THREAD_MINER]--;
        PrintException(NULL, ""ThreadBitcoinMiner()"");
    }
    nHPSTimerStart = 0;
    if (vnThreadsRunning[THREAD_MINER] == 0)
        dHashesPerSec = 0;
    printf(""ThreadBitcoinMiner exiting, %d threads remaining\n"", vnThreadsRunning[THREAD_MINER]);
}


void GenerateBitcoins(bool fGenerate, CWallet* pwallet)
{
    fGenerateBitcoins = fGenerate;
    nLimitProcessors = GetArg(""-genproclimit"", -1);
    if (nLimitProcessors == 0)
        fGenerateBitcoins = false;
    fLimitProcessors = (nLimitProcessors != -1);

    if (fGenerate)
    {
        int nProcessors = boost::thread::hardware_concurrency();
        printf(""%d processors\n"", nProcessors);
        if (nProcessors < 1)
            nProcessors = 1;
        if (fLimitProcessors && nProcessors > nLimitProcessors)
            nProcessors = nLimitProcessors;
        int nAddThreads = nProcessors - vnThreadsRunning[THREAD_MINER];
        printf(""Starting %d BitcoinMiner threads\n"", nAddThreads);
        for (int i = 0; i < nAddThreads; i++)
        {
            if (!CreateThread(ThreadBitcoinMiner, pwallet))
                printf(""Error: CreateThread(ThreadBitcoinMiner) failed\n"");
            Sleep(10);
        }
    }
}
",C++
"/*
 * Copyright (c) 2014-2022 The Voxie Authors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

#pragma once

#include <VoxieBackend/VoxieBackend.hpp>

#include <VoxieBackend/Data/Data.hpp>

#include <VoxieClient/ObjectExport/Client.hpp>
#include <VoxieClient/ObjectExport/ExportedObject.hpp>

#include <QtCore/QPointer>

#include <QtDBus/QDBusAbstractAdaptor>
#include <QtDBus/QDBusObjectPath>

namespace vx {
class NodePrototype;
namespace io {
class Operation;
class RunFilterOperation;
}  // namespace io
class Exception;

class ExternalOperationAdaptorImpl;
class VOXIEBACKEND_EXPORT ExternalOperation : public vx::RefCountedObject {
  Q_OBJECT
  REFCOUNTEDOBJ_DECL(ExternalOperation)

  friend class ExternalOperationAdaptorImpl;

  QPointer<vx::Client> client = nullptr;

  QSharedPointer<vx::io::Operation> operation_;

 protected:
  // TODO: Get rid of this / replace it by operation()->isFinished()?
  bool isFinished = false;

  void checkClient();

  virtual void cleanup();

 public:
  explicit ExternalOperation(
      const QSharedPointer<vx::io::Operation>& operation);
  ~ExternalOperation() override;

  QWeakPointer<QSharedPointer<ExternalOperation>> initialReference;

  virtual QString action() = 0;

  virtual QString name() = 0;

  const QSharedPointer<vx::io::Operation>& operation() const {
    return operation_;
  }

  bool isClaimed();

 Q_SIGNALS:
  void error(const vx::Exception& error);

  // Emitted when the operation is claimed
  void claimed();
};

// TODO: Should probably be moved to ExtensionImporter / ExtensionExporter

class ExternalOperationImportAdaptorImpl;
class VOXIEBACKEND_EXPORT ExternalOperationImport : public ExternalOperation {
  Q_OBJECT
  REFCOUNTEDOBJ_DECL(ExternalOperationImport)

  friend class ExternalOperationImportAdaptorImpl;

  QString filename_;
  QMap<QString, QDBusVariant> properties_;
  QString name_;

 public:
  explicit ExternalOperationImport(
      const QSharedPointer<vx::io::Operation>& operation,
      const QString& filename, const QMap<QString, QDBusVariant>& properties,
      const QString& name);
  ~ExternalOperationImport() override;

  QString action() override;

  QString name() override;

  const QString& filename() { return filename_; }
  const QMap<QString, QDBusVariant>& properties() { return properties_; }

 Q_SIGNALS:
  void finished(const QSharedPointer<vx::Data>& data);
};

class ExternalOperationExportAdapterImpl;
class VOXIEBACKEND_EXPORT ExternalOperationExport : public ExternalOperation {
  Q_OBJECT
  REFCOUNTEDOBJ_DECL(ExternalOperationExport)

  friend class ExternalOperationExportAdaptorImpl;

  QString filename_;
  QString name_;
  QSharedPointer<vx::Data> data_;

 public:
  explicit ExternalOperationExport(
      const QSharedPointer<vx::io::Operation>& operation,
      const QString& filename, const QString& name,
      const QSharedPointer<vx::Data>& data);
  ~ExternalOperationExport() override;

  QString action() override;

  QString name() override;

  // TODO: data
  const QString& filename() { return filename_; }

  const QSharedPointer<vx::Data>& data() { return data_; }

 Q_SIGNALS:
  void finished();
};

}  // namespace vx
",C++
"// WinProm Copyright 2015 Edward Earl
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// DomapInfo_dlg.cpp : implementation file
//

#include ""stdafx.h""
#include ""winprom.h""
#include ""DomapInfo_dlg.h""

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif


/////////////////////////////////////////////////////////////////////////////
// CDomapInfo_dlg dialog

CDomapInfo_dlg::CDomapInfo_dlg(const Area_info& a, const Area_info& d,
			       const CString& n, bool m)
  : CMapInfo_dlg(a,d,n,m,CDomapInfo_dlg::IDD)
{
  //{{AFX_DATA_INIT(CDomapInfo_dlg)
  m_ndom_0peak = 0;
  m_ndom_1peak = 0;
  m_ndom_peaks = 0;
  m_ndom_total = 0;
  m_ndom_area = 0;
  //}}AFX_DATA_INIT
}

void CDomapInfo_dlg::DoDataExchange(CDataExchange* pDX)
{
  CMapInfo_dlg::DoDataExchange(pDX);
  //{{AFX_DATA_MAP(CDomapInfo_dlg)
  DDX_Text(pDX, IDC_NDOM_0PEAK, m_ndom_0peak);
  DDX_Text(pDX, IDC_NDOM_1PEAK, m_ndom_1peak);
  DDX_Text(pDX, IDC_NDOM_PEAKS, m_ndom_peaks);
  DDX_Text(pDX, IDC_NDOM, m_ndom_total);
  DDX_Text(pDX, IDC_NDOM_AREA, m_ndom_area);
  //}}AFX_DATA_MAP
}


BEGIN_MESSAGE_MAP(CDomapInfo_dlg, CMapInfo_dlg)
  //{{AFX_MSG_MAP(CDomapInfo_dlg)
    // NOTE: the ClassWizard will add message map macros here
  //}}AFX_MSG_MAP
END_MESSAGE_MAP()


/////////////////////////////////////////////////////////////////////////////
// CDomapInfo_dlg message handlers
",C++
"/*--------------------------------------------
 Created by Sina on 06/05/13.
 Copyright (c) 2013 MIT. All rights reserved.
 --------------------------------------------*/
#include ""elements.h""
#include ""mpi_compat.h""
#include ""gcmc.h""
#include ""memory.h""
#include ""random.h""
#include ""neighbor.h""
#include ""ff_md.h""
#include ""MAPP.h""
#include ""atoms_md.h""
#include ""comm.h""
#include ""dynamic_md.h""
using namespace MAPP_NS;
/*--------------------------------------------
 constructor
 --------------------------------------------*/
GCMC::GCMC(AtomsMD*& __atoms,ForceFieldMD*&__ff,DynamicMD*& __dynamic,elem_type __gas_type,type0 __mu,type0 __T,int seed):
gas_type(__gas_type),
T(__T),
mu(__mu),
natms_lcl(__atoms->natms_lcl),
natms_ph(__atoms->natms_ph),
cut_sq(__ff->cut_sq),
s_lo(__atoms->comm.s_lo),
s_hi(__atoms->comm.s_hi),
dynamic(__dynamic),
world(__atoms->comm.world),
atoms(__atoms),
ff(__ff),
ielem(gas_type)
{
    random=new Random(seed);
    s_trials=new type0*[__dim__];
    *s_trials=NULL;
    del_ids=NULL;
    del_ids_sz=del_ids_cpcty=0;
    vars=lcl_vars=NULL;
}
/*--------------------------------------------
 destructor
 --------------------------------------------*/
GCMC::~GCMC()
{
    delete [] del_ids;
    delete [] s_trials;
    delete random;
}
/*--------------------------------------------
 
 --------------------------------------------*/
void GCMC::add_del_id(int* new_ids,int no)
{
    if(del_ids_sz+no>del_ids_cpcty)
    {
        int* del_ids_=new int[del_ids_sz+no];
        memcpy(del_ids_,del_ids,del_ids_sz*sizeof(int));
        del_ids_cpcty=del_ids_sz+no;
        delete [] del_ids;
        del_ids=del_ids_;
    }
    memcpy(del_ids+del_ids_sz,new_ids,sizeof(int)*no);
    del_ids_sz+=no;
}
/*--------------------------------------------
 
 --------------------------------------------*/
int GCMC::get_new_id()
{
    if(del_ids_sz)
    {
        del_ids_sz--;
        return del_ids[del_ids_sz];
    }
    else
    {
        max_id++;
        return max_id;
    }
}
/*--------------------------------------------
 
 --------------------------------------------*/
void GCMC::init()
{
    cut=ff->cut[ielem][0];
    for(size_t i=1;i<atoms->elements.nelems;i++)
        cut=MAX(cut,ff->cut[ielem][i]);
    
    gas_mass=atoms->elements.masses[gas_type];
    kbT=atoms->kB*T;
    beta=1.0/kbT;
    lambda=atoms->hP/sqrt(2.0*M_PI*kbT*gas_mass);
    sigma=sqrt(kbT/gas_mass);
    z_fac=1.0;
    for(int i=0;i<__dim__;i++) z_fac/=lambda;
    z_fac*=exp(beta*mu);
    vol=1.0;
    for(int i=0;i<__dim__;i++)vol*=atoms->H[i][i];
    
    id_type max_id_=0;
    id_type* id=atoms->id->begin();
    for(int i=0;i<natms_lcl;i++)
        max_id_=MAX(id[i],max_id_);
    MPI_Allreduce(&max_id_,&max_id,1,Vec<id_type>::MPI_T,MPI_MAX,world);
    for(int i=0;i<del_ids_sz;i++)
        max_id=MAX(max_id,del_ids[i]);
        
    ngas_lcl=0;
    elem_type* elem=atoms->elem->begin();
    for(int i=0;i<natms_lcl;i++)
        if(elem[i]==gas_type) ngas_lcl++;
    MPI_Allreduce(&ngas_lcl,&ngas,1,MPI_INT,MPI_SUM,world);
}
/*--------------------------------------------
 
 --------------------------------------------*/
void GCMC::fin()
{
    
}
/*--------------------------------------------
 
 --------------------------------------------*/
void GCMC::box_setup()
{
    int sz=0;
    max_ntrial_atms=1;
    for(int i=0;i<__dim__;i++)
    {
        type0 tmp=0.0;
        for(int j=i;j<__dim__;j++)
            tmp+=atoms->B[j][i]*atoms->B[j][i];
        cut_s[i]=sqrt(tmp)*cut;
        

        
        s_lo_ph[i]=s_lo[i]-cut_s[i];
        s_hi_ph[i]=s_hi[i]+cut_s[i];
        nimages_per_dim[i][0]=static_cast<int>(floor(s_hi_ph[i]));
        nimages_per_dim[i][1]=-static_cast<int>(floor(s_lo_ph[i]));
        max_ntrial_atms*=1+nimages_per_dim[i][0]+nimages_per_dim[i][1];
        sz+=1+nimages_per_dim[i][0]+nimages_per_dim[i][1];

    }
    
    *s_trials=new type0[sz];
    for(int i=1;i<__dim__;i++)
        s_trials[i]=s_trials[i-1]+1+nimages_per_dim[i-1][0]+nimages_per_dim[i-1][1];
}
/*--------------------------------------------
 
 --------------------------------------------*/
void GCMC::box_dismantle()
{
    delete [] *s_trials;
    *s_trials=NULL;
}



",C++
"#include ""V3DResourceMemory.h""
#include ""V3DDevice.h""
#include ""V3DBuffer.h""
#include ""V3DImage.h""
#include ""V3DAdapter.h""

/******************************/
/* public - V3DResourceMemory */
/******************************/

V3DResourceMemory* V3DResourceMemory::Create()
{
	return V3D_NEW_T(V3DResourceMemory);
}

V3D_RESULT V3DResourceMemory::Initialize(IV3DDevice* pDevice, V3DFlags propertyFlags, uint64_t size, const wchar_t* pDebugName)
{
	V3D_ASSERT(pDevice != nullptr);
	V3D_ASSERT(propertyFlags != 0);
	V3D_ASSERT(size != 0);

	m_pDevice = V3D_TO_ADD_REF(static_cast<V3DDevice*>(pDevice));

	V3D_ADD_DEBUG_MEMORY_OBJECT(this, V3D_DEBUG_OBJECT_TYPE_RESOURCE_MEMORY, V3D_SAFE_NAME(this, pDebugName));

	m_Source.memoryPropertyFlags = ToVkMemoryPropertyFlags(propertyFlags);

	// ----------------------------------------------------------------------------------------------------
	// ðmÛ
	// ----------------------------------------------------------------------------------------------------

	VkMemoryAllocateInfo allocInfo{};
	allocInfo.sType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;
	allocInfo.pNext = nullptr;
	allocInfo.allocationSize = size;
	allocInfo.memoryTypeIndex = m_pDevice->GetInternalAdapterPtr()->Vulkan_GetMemoryTypeIndex(m_Source.memoryPropertyFlags);

	VkResult vkResult = vkAllocateMemory(m_pDevice->GetSource().device, &allocInfo, nullptr, &m_Source.deviceMemory);
	if (vkResult != VK_SUCCESS)
	{
		return ToV3DResult(vkResult);
	}

	m_Source.memoryMappedRange.memory = m_Source.deviceMemory;

	V3D_ADD_DEBUG_OBJECT(m_pDevice->GetInternalInstancePtr(), m_Source.deviceMemory, V3D_SAFE_NAME(this, pDebugName));

	// ----------------------------------------------------------------------------------------------------
	// LqðÝè
	// ----------------------------------------------------------------------------------------------------

	m_Desc.propertyFlags = propertyFlags;
	m_Desc.size = size;

	// ----------------------------------------------------------------------------------------------------

	return V3D_OK;
}

V3D_RESULT V3DResourceMemory::Initialize(IV3DDevice* pDevice, V3DFlags propertyFlags, uint32_t resourceCount, IV3DResource** ppResources, const wchar_t* pDebugName)
{
	V3D_ASSERT(pDevice != nullptr);
	V3D_ASSERT(propertyFlags != 0);
	V3D_ASSERT(resourceCount != 0);
	V3D_ASSERT(ppResources != nullptr);

	m_pDevice = V3D_TO_ADD_REF(static_cast<V3DDevice*>(pDevice));

	V3D_ADD_DEBUG_MEMORY_OBJECT(this, V3D_DEBUG_OBJECT_TYPE_RESOURCE_MEMORY, V3D_SAFE_NAME(this, pDebugName));

	// ----------------------------------------------------------------------------------------------------
	// \[XðACgÌå«¢É\[g
	// ----------------------------------------------------------------------------------------------------

	STLVector<IV3DResource*> resources;
	resources.reserve(resourceCount);

	for (uint32_t i = 0; i < resourceCount; i++)
	{
#ifdef V3D_DEBUG
		switch (ppResources[i]->GetResourceDesc().type)
		{
		case V3D_RESOURCE_TYPE_BUFFER:
			if (static_cast<V3DBuffer*>(ppResources[i])->CheckBindMemory() == true)
			{
				V3D_LOG_PRINT_ERROR(Log_Error_AlreadyBindResourceMemory, V3D_SAFE_NAME(this, pDebugName), V3D_LOG_TYPE(ppResources), i, static_cast<V3DBuffer*>(ppResources[i])->GetDebugName());
				return V3D_ERROR_FAIL;
			}
			break;
		case V3D_RESOURCE_TYPE_IMAGE:
			if (static_cast<IV3DImageBase*>(ppResources[i])->CheckBindMemory() == true)
			{
				V3D_LOG_PRINT_ERROR(Log_Error_AlreadyBindResourceMemory, V3D_SAFE_NAME(this, pDebugName), V3D_LOG_TYPE(ppResources), i, static_cast<IV3DImageBase*>(ppResources[i])->GetDebugName());
				return V3D_ERROR_FAIL;
			}
			break;
		}
#endif //V3D_DEBUG

		resources.push_back(ppResources[i]);
	}

	std::sort(resources.begin(), resources.end(), [](const IV3DResource* lh, const IV3DResource* rh) { return lh->GetResourceDesc().memoryAlignment > rh->GetResourceDesc().memoryAlignment; });

	// ----------------------------------------------------------------------------------------------------
	// ACgðCÉµÂÂAÌTCYðßé
	// ----------------------------------------------------------------------------------------------------

	uint64_t vkMinAlignment = m_pDevice->GetSource().deviceProps.limits.minMemoryMapAlignment;
	VkDeviceSize vkAllocSize = 0;

	STLVector<VkDeviceSize> vkOffsets;
	vkOffsets.resize(resourceCount);

	for (uint32_t i = 0; i < resourceCount; i++)
	{
		const V3DResourceDesc& resourceDesc = ppResources[i]->GetResourceDesc();

		VkDeviceSize vkAlignment = V3D_MAX(vkMinAlignment, resourceDesc.memoryAlignment);
		if (vkAllocSize % vkAlignment)
		{
			vkAllocSize = (vkAllocSize / vkAlignment) * vkAlignment + vkAlignment;
		}

		vkOffsets[i] = vkAllocSize;
		vkAllocSize += resourceDesc.memorySize;
	}

	// ----------------------------------------------------------------------------------------------------
	// ðì¬
	// ----------------------------------------------------------------------------------------------------

	m_Source.memoryPropertyFlags = ToVkMemoryPropertyFlags(propertyFlags);

	VkMemoryAllocateInfo allocInfo{};
	allocInfo.sType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;
	allocInfo.pNext = nullptr;
	allocInfo.allocationSize = vkAllocSize;
	allocInfo.memoryTypeIndex = m_pDevice->GetInternalAdapterPtr()->Vulkan_GetMemoryTypeIndex(m_Source.memoryPropertyFlags);

	VkResult vkResult = vkAllocateMemory(m_pDevice->GetSource().device, &allocInfo, nullptr, &m_Source.deviceMemory);
	if (vkResult != VK_SUCCESS)
	{
		return ToV3DResult(vkResult);
	}

	m_Source.memoryMappedRange.memory = m_Source.deviceMemory;

	V3D_ADD_DEBUG_OBJECT(m_pDevice->GetInternalInstancePtr(), m_Source.deviceMemory, V3D_SAFE_NAME(this, pDebugName));

	// ----------------------------------------------------------------------------------------------------
	// LqðÝè
	// ----------------------------------------------------------------------------------------------------

	m_Desc.propertyFlags = propertyFlags;
	m_Desc.size = vkAllocSize;

	// ----------------------------------------------------------------------------------------------------
	// \[XðoCh
	// ----------------------------------------------------------------------------------------------------

	V3D_RESULT result = V3D_ERROR_FAIL;

	for (uint32_t i = 0; i < resourceCount; i++)
	{
		IV3DResource* pResource = ppResources[i];

		switch (pResource->GetResourceDesc().type)
		{
		case V3D_RESOURCE_TYPE_BUFFER:
			result = static_cast<V3DBuffer*>(pResource)->BindMemory(this, vkOffsets[i]);
			if (result != V3D_OK)
			{
				return result;
			}
			break;

		case V3D_RESOURCE_TYPE_IMAGE:
			result = static_cast<V3DImage*>(pResource)->BindMemory(this, vkOffsets[i]);
			if (result != V3D_OK)
			{
				return result;
			}
			break;
		}
	}

	// ----------------------------------------------------------------------------------------------------

	return V3D_OK;
}

const V3DResourceMemory::Source& V3DResourceMemory::GetSource() const
{
	return m_Source;
}

V3D_RESULT V3DResourceMemory::Map(uint64_t offset, uint64_t size, void** ppMemory)
{
	if (m_Desc.size < (offset + size))
	{
		return V3D_ERROR_FAIL;
	}

	if (m_pMemory != nullptr)
	{
		*ppMemory = m_pMemory + offset;
		return V3D_OK;
	}

	if (m_Source.memoryMappedRange.size != 0)
	{
		return V3D_ERROR_FAIL;
	}

	VkResult vkResult = vkMapMemory(m_pDevice->GetSource().device, m_Source.deviceMemory, offset, size, 0, ppMemory);
	if (vkResult != VK_SUCCESS)
	{
		return ToV3DResult(vkResult);
	}

	m_Source.memoryMappedRange.offset = offset;
	m_Source.memoryMappedRange.size = size;

	if ((m_Source.memoryPropertyFlags & VK_MEMORY_PROPERTY_HOST_COHERENT_BIT) == 0)
	{
		vkResult = vkInvalidateMappedMemoryRanges(m_pDevice->GetSource().device, 1, &m_Source.memoryMappedRange);
		if (vkResult != VK_SUCCESS)
		{
			return ToV3DResult(vkResult);
		}
	}

	return V3D_OK;
}

V3D_RESULT V3DResourceMemory::Unmap()
{
	if (m_pMemory != nullptr)
	{
		return V3D_OK;
	}

	if (m_Source.memoryMappedRange.size == 0)
	{
		return V3D_ERROR_FAIL;
	}

	V3D_RESULT result = V3D_OK;

	if ((m_Source.memoryPropertyFlags & VK_MEMORY_PROPERTY_HOST_COHERENT_BIT) == 0)
	{
		VkResult vkResult = vkFlushMappedMemoryRanges(m_pDevice->GetSource().device, 1, &m_Source.memoryMappedRange);
		if (vkResult != VK_SUCCESS)
		{
			result = ToV3DResult(vkResult);
		}
	}

	m_Source.memoryMappedRange.offset = 0;
	m_Source.memoryMappedRange.size = 0;

	vkUnmapMemory(m_pDevice->GetSource().device, m_Source.deviceMemory);

	return result;
}

#ifdef V3D_DEBUG

bool V3DResourceMemory::Debug_CheckMemory(uint64_t offset, uint64_t size)
{
	return (m_Desc.size >= (offset + size));
}

#endif //V3D_DEBUG

/****************************************/
/* public override - IV3DResourceMemory */
/****************************************/

const V3DResourceMemoryDesc& V3DResourceMemory::GetDesc() const
{
	return m_Desc;
}

V3D_RESULT V3DResourceMemory::BeginMap()
{
	if (m_Source.memoryMappedRange.size != 0)
	{
		return V3D_ERROR_FAIL;
	}

	VkResult vkResult = vkMapMemory(m_pDevice->GetSource().device, m_Source.deviceMemory, 0, m_Desc.size, 0, reinterpret_cast<void**>(&m_pMemory));
	if (vkResult != VK_SUCCESS)
	{
		return ToV3DResult(vkResult);
	}

	m_Source.memoryMappedRange.offset = 0;
	m_Source.memoryMappedRange.size = m_Desc.size;

	if ((m_Source.memoryPropertyFlags & VK_MEMORY_PROPERTY_HOST_COHERENT_BIT) == 0)
	{
		vkResult = vkInvalidateMappedMemoryRanges(m_pDevice->GetSource().device, 1, &m_Source.memoryMappedRange);
		if (vkResult != VK_SUCCESS)
		{
			return ToV3DResult(vkResult);
		}
	}

	return V3D_OK;
}

V3D_RESULT V3DResourceMemory::EndMap()
{
	if (m_Source.memoryMappedRange.size == 0)
	{
		return V3D_ERROR_FAIL;
	}

	V3D_RESULT result = V3D_OK;

	if ((m_Source.memoryPropertyFlags & VK_MEMORY_PROPERTY_HOST_COHERENT_BIT) == 0)
	{
		VkResult vkResult = vkFlushMappedMemoryRanges(m_pDevice->GetSource().device, 1, &m_Source.memoryMappedRange);
		if (vkResult != VK_SUCCESS)
		{
			result = ToV3DResult(vkResult);
		}
	}

	m_Source.memoryMappedRange.offset = 0;
	m_Source.memoryMappedRange.size = 0;

	vkUnmapMemory(m_pDevice->GetSource().device, m_Source.deviceMemory);

	m_pMemory = nullptr;

	return result;
}

/*************************************/
/* public override - IV3DDeviceChild */
/*************************************/

void V3DResourceMemory::GetDevice(IV3DDevice** ppDevice)
{
	(*ppDevice) = V3D_TO_ADD_REF(m_pDevice);
}

/********************************/
/* public override - IV3DObject */
/********************************/

int64_t V3DResourceMemory::GetRefCount() const
{
	return m_RefCounter;
}

void V3DResourceMemory::AddRef()
{
	V3D_REF_INC(m_RefCounter);
}

void V3DResourceMemory::Release()
{
	if (V3D_REF_DEC(m_RefCounter))
	{
		V3D_REF_FENCE();
		V3D_DELETE_THIS_T(this, V3DResourceMemory);
	}
}

/*******************************/
/* private - V3DResourceMemory */
/*******************************/

V3DResourceMemory::V3DResourceMemory() :
	m_RefCounter(1),
	m_pDevice(nullptr),
	m_Desc({}),
	m_Source({}),
	m_pMemory(nullptr)
{
	m_Source.deviceMemory = VK_NULL_HANDLE;
	m_Source.memoryMappedRange.sType = VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE;
	m_Source.memoryMappedRange.pNext = nullptr;
}

V3DResourceMemory::~V3DResourceMemory()
{
	if (m_pDevice != nullptr)
	{
		m_pDevice->NotifyReleaseResourceMemory();
	}

	if (m_Source.deviceMemory != VK_NULL_HANDLE)
	{
		vkFreeMemory(m_pDevice->GetSource().device, m_Source.deviceMemory, nullptr);
		V3D_REMOVE_DEBUG_OBJECT(m_pDevice->GetInternalInstancePtr(), m_Source.deviceMemory);
	}

	V3D_REMOVE_DEBUG_MEMORY_OBJECT(this);

	V3D_RELEASE(m_pDevice);
}
",C++
"// Copyright (c) 2009-2010 Satoshi Nakamoto
// Copyright (c) 2009-2012 The Bitcoin developers
// Copyright (c) 2011-2012 Litecoin Developers
// Copyright (c) 2013 doriancoin Developers
// Distributed under the MIT/X11 software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#include ""wallet.h""
#include ""walletdb.h""
#include ""crypter.h""
#include ""ui_interface.h""
#include ""base58.h""

using namespace std;


//////////////////////////////////////////////////////////////////////////////
//
// mapWallet
//

struct CompareValueOnly
{
    bool operator()(const pair<int64, pair<const CWalletTx*, unsigned int> >& t1,
                    const pair<int64, pair<const CWalletTx*, unsigned int> >& t2) const
    {
        return t1.first < t2.first;
    }
};

CPubKey CWallet::GenerateNewKey()
{
    bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets

    RandAddSeedPerfmon();
    CKey key;
    key.MakeNewKey(fCompressed);

    // Compressed public keys were introduced in version 0.6.0
    if (fCompressed)
        SetMinVersion(FEATURE_COMPRPUBKEY);

    if (!AddKey(key))
        throw std::runtime_error(""CWallet::GenerateNewKey() : AddKey failed"");
    return key.GetPubKey();
}

bool CWallet::AddKey(const CKey& key)
{
    if (!CCryptoKeyStore::AddKey(key))
        return false;
    if (!fFileBacked)
        return true;
    if (!IsCrypted())
        return CWalletDB(strWalletFile).WriteKey(key.GetPubKey(), key.GetPrivKey());
    return true;
}

bool CWallet::AddCryptedKey(const CPubKey &vchPubKey, const vector<unsigned char> &vchCryptedSecret)
{
    if (!CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret))
        return false;
    if (!fFileBacked)
        return true;
    {
        LOCK(cs_wallet);
        if (pwalletdbEncryption)
            return pwalletdbEncryption->WriteCryptedKey(vchPubKey, vchCryptedSecret);
        else
            return CWalletDB(strWalletFile).WriteCryptedKey(vchPubKey, vchCryptedSecret);
    }
    return false;
}

bool CWallet::AddCScript(const CScript& redeemScript)
{
    if (!CCryptoKeyStore::AddCScript(redeemScript))
        return false;
    if (!fFileBacked)
        return true;
    return CWalletDB(strWalletFile).WriteCScript(Hash160(redeemScript), redeemScript);
}

bool CWallet::Unlock(const SecureString& strWalletPassphrase)
{
    if (!IsLocked())
        return false;

    CCrypter crypter;
    CKeyingMaterial vMasterKey;

    {
        LOCK(cs_wallet);
        BOOST_FOREACH(const MasterKeyMap::value_type& pMasterKey, mapMasterKeys)
        {
            if(!crypter.SetKeyFromPassphrase(strWalletPassphrase, pMasterKey.second.vchSalt, pMasterKey.second.nDeriveIterations, pMasterKey.second.nDerivationMethod))
                return false;
            if (!crypter.Decrypt(pMasterKey.second.vchCryptedKey, vMasterKey))
                return false;
            if (CCryptoKeyStore::Unlock(vMasterKey))
                return true;
        }
    }
    return false;
}

bool CWallet::ChangeWalletPassphrase(const SecureString& strOldWalletPassphrase, const SecureString& strNewWalletPassphrase)
{
    bool fWasLocked = IsLocked();

    {
        LOCK(cs_wallet);
        Lock();

        CCrypter crypter;
        CKeyingMaterial vMasterKey;
        BOOST_FOREACH(MasterKeyMap::value_type& pMasterKey, mapMasterKeys)
        {
            if(!crypter.SetKeyFromPassphrase(strOldWalletPassphrase, pMasterKey.second.vchSalt, pMasterKey.second.nDeriveIterations, pMasterKey.second.nDerivationMethod))
                return false;
            if (!crypter.Decrypt(pMasterKey.second.vchCryptedKey, vMasterKey))
                return false;
            if (CCryptoKeyStore::Unlock(vMasterKey))
            {
                int64 nStartTime = GetTimeMillis();
                crypter.SetKeyFromPassphrase(strNewWalletPassphrase, pMasterKey.second.vchSalt, pMasterKey.second.nDeriveIterations, pMasterKey.second.nDerivationMethod);
                pMasterKey.second.nDeriveIterations = pMasterKey.second.nDeriveIterations * (100 / ((double)(GetTimeMillis() - nStartTime)));

                nStartTime = GetTimeMillis();
                crypter.SetKeyFromPassphrase(strNewWalletPassphrase, pMasterKey.second.vchSalt, pMasterKey.second.nDeriveIterations, pMasterKey.second.nDerivationMethod);
                pMasterKey.second.nDeriveIterations = (pMasterKey.second.nDeriveIterations + pMasterKey.second.nDeriveIterations * 100 / ((double)(GetTimeMillis() - nStartTime))) / 2;

                if (pMasterKey.second.nDeriveIterations < 25000)
                    pMasterKey.second.nDeriveIterations = 25000;

                printf(""Wallet passphrase changed to an nDeriveIterations of %i\n"", pMasterKey.second.nDeriveIterations);

                if (!crypter.SetKeyFromPassphrase(strNewWalletPassphrase, pMasterKey.second.vchSalt, pMasterKey.second.nDeriveIterations, pMasterKey.second.nDerivationMethod))
                    return false;
                if (!crypter.Encrypt(vMasterKey, pMasterKey.second.vchCryptedKey))
                    return false;
                CWalletDB(strWalletFile).WriteMasterKey(pMasterKey.first, pMasterKey.second);
                if (fWasLocked)
                    Lock();
                return true;
            }
        }
    }

    return false;
}

void CWallet::SetBestChain(const CBlockLocator& loc)
{
    CWalletDB walletdb(strWalletFile);
    walletdb.WriteBestBlock(loc);
}

// This class implements an addrIncoming entry that causes pre-0.4
// clients to crash on startup if reading a private-key-encrypted wallet.
class CCorruptAddress
{
public:
    IMPLEMENT_SERIALIZE
    (
        if (nType & SER_DISK)
            READWRITE(nVersion);
    )
};

bool CWallet::SetMinVersion(enum WalletFeature nVersion, CWalletDB* pwalletdbIn, bool fExplicit)
{
    if (nWalletVersion >= nVersion)
        return true;

    // when doing an explicit upgrade, if we pass the max version permitted, upgrade all the way
    if (fExplicit && nVersion > nWalletMaxVersion)
            nVersion = FEATURE_LATEST;

    nWalletVersion = nVersion;

    if (nVersion > nWalletMaxVersion)
        nWalletMaxVersion = nVersion;

    if (fFileBacked)
    {
        CWalletDB* pwalletdb = pwalletdbIn ? pwalletdbIn : new CWalletDB(strWalletFile);
        if (nWalletVersion >= 40000)
        {
            // Versions prior to 0.4.0 did not support the ""minversion"" record.
            // Use a CCorruptAddress to make them crash instead.
            CCorruptAddress corruptAddress;
            pwalletdb->WriteSetting(""addrIncoming"", corruptAddress);
        }
        if (nWalletVersion > 40000)
            pwalletdb->WriteMinVersion(nWalletVersion);
        if (!pwalletdbIn)
            delete pwalletdb;
    }

    return true;
}

bool CWallet::SetMaxVersion(int nVersion)
{
    // cannot downgrade below current version
    if (nWalletVersion > nVersion)
        return false;

    nWalletMaxVersion = nVersion;

    return true;
}

bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)
{
    if (IsCrypted())
        return false;

    CKeyingMaterial vMasterKey;
    RandAddSeedPerfmon();

    vMasterKey.resize(WALLET_CRYPTO_KEY_SIZE);
    RAND_bytes(&vMasterKey[0], WALLET_CRYPTO_KEY_SIZE);

    CMasterKey kMasterKey;

    RandAddSeedPerfmon();
    kMasterKey.vchSalt.resize(WALLET_CRYPTO_SALT_SIZE);
    RAND_bytes(&kMasterKey.vchSalt[0], WALLET_CRYPTO_SALT_SIZE);

    CCrypter crypter;
    int64 nStartTime = GetTimeMillis();
    crypter.SetKeyFromPassphrase(strWalletPassphrase, kMasterKey.vchSalt, 25000, kMasterKey.nDerivationMethod);
    kMasterKey.nDeriveIterations = 2500000 / ((double)(GetTimeMillis() - nStartTime));

    nStartTime = GetTimeMillis();
    crypter.SetKeyFromPassphrase(strWalletPassphrase, kMasterKey.vchSalt, kMasterKey.nDeriveIterations, kMasterKey.nDerivationMethod);
    kMasterKey.nDeriveIterations = (kMasterKey.nDeriveIterations + kMasterKey.nDeriveIterations * 100 / ((double)(GetTimeMillis() - nStartTime))) / 2;

    if (kMasterKey.nDeriveIterations < 25000)
        kMasterKey.nDeriveIterations = 25000;

    printf(""Encrypting Wallet with an nDeriveIterations of %i\n"", kMasterKey.nDeriveIterations);

    if (!crypter.SetKeyFromPassphrase(strWalletPassphrase, kMasterKey.vchSalt, kMasterKey.nDeriveIterations, kMasterKey.nDerivationMethod))
        return false;
    if (!crypter.Encrypt(vMasterKey, kMasterKey.vchCryptedKey))
        return false;

    {
        LOCK(cs_wallet);
        mapMasterKeys[++nMasterKeyMaxID] = kMasterKey;
        if (fFileBacked)
        {
            pwalletdbEncryption = new CWalletDB(strWalletFile);
            if (!pwalletdbEncryption->TxnBegin())
                return false;
            pwalletdbEncryption->WriteMasterKey(nMasterKeyMaxID, kMasterKey);
        }

        if (!EncryptKeys(vMasterKey))
        {
            if (fFileBacked)
                pwalletdbEncryption->TxnAbort();
            exit(1); //We now probably have half of our keys encrypted in memory, and half not...die and let the user reload their unencrypted wallet.
        }

        // Encryption was introduced in version 0.4.0
        SetMinVersion(FEATURE_WALLETCRYPT, pwalletdbEncryption, true);

        if (fFileBacked)
        {
            if (!pwalletdbEncryption->TxnCommit())
                exit(1); //We now have keys encrypted in memory, but no on disk...die to avoid confusion and let the user reload their unencrypted wallet.

            delete pwalletdbEncryption;
            pwalletdbEncryption = NULL;
        }

        Lock();
        Unlock(strWalletPassphrase);
        NewKeyPool();
        Lock();

        // Need to completely rewrite the wallet file; if we don't, bdb might keep
        // bits of the unencrypted private key in slack space in the database file.
        CDB::Rewrite(strWalletFile);

    }
    NotifyStatusChanged(this);

    return true;
}

void CWallet::WalletUpdateSpent(const CTransaction &tx)
{
    // Anytime a signature is successfully verified, it's proof the outpoint is spent.
    // Update the wallet spent flag if it doesn't know due to wallet.dat being
    // restored from backup or the user making copies of wallet.dat.
    {
        LOCK(cs_wallet);
        BOOST_FOREACH(const CTxIn& txin, tx.vin)
        {
            map<uint256, CWalletTx>::iterator mi = mapWallet.find(txin.prevout.hash);
            if (mi != mapWallet.end())
            {
                CWalletTx& wtx = (*mi).second;
                if (!wtx.IsSpent(txin.prevout.n) && IsMine(wtx.vout[txin.prevout.n]))
                {
                    printf(""WalletUpdateSpent found spent coin %sbc %s\n"", FormatMoney(wtx.GetCredit()).c_str(), wtx.GetHash().ToString().c_str());
                    wtx.MarkSpent(txin.prevout.n);
                    wtx.WriteToDisk();
                    NotifyTransactionChanged(this, txin.prevout.hash, CT_UPDATED);
                }
            }
        }
    }
}

void CWallet::MarkDirty()
{
    {
        LOCK(cs_wallet);
        BOOST_FOREACH(PAIRTYPE(const uint256, CWalletTx)& item, mapWallet)
            item.second.MarkDirty();
    }
}

bool CWallet::AddToWallet(const CWalletTx& wtxIn)
{
    uint256 hash = wtxIn.GetHash();
    {
        LOCK(cs_wallet);
        // Inserts only if not already there, returns tx inserted or tx found
        pair<map<uint256, CWalletTx>::iterator, bool> ret = mapWallet.insert(make_pair(hash, wtxIn));
        CWalletTx& wtx = (*ret.first).second;
        wtx.BindWallet(this);
        bool fInsertedNew = ret.second;
        if (fInsertedNew)
            wtx.nTimeReceived = GetAdjustedTime();

        bool fUpdated = false;
        if (!fInsertedNew)
        {
            // Merge
            if (wtxIn.hashBlock != 0 && wtxIn.hashBlock != wtx.hashBlock)
            {
                wtx.hashBlock = wtxIn.hashBlock;
                fUpdated = true;
            }
            if (wtxIn.nIndex != -1 && (wtxIn.vMerkleBranch != wtx.vMerkleBranch || wtxIn.nIndex != wtx.nIndex))
            {
                wtx.vMerkleBranch = wtxIn.vMerkleBranch;
                wtx.nIndex = wtxIn.nIndex;
                fUpdated = true;
            }
            if (wtxIn.fFromMe && wtxIn.fFromMe != wtx.fFromMe)
            {
                wtx.fFromMe = wtxIn.fFromMe;
                fUpdated = true;
            }
            fUpdated |= wtx.UpdateSpent(wtxIn.vfSpent);
        }

        //// debug print
        printf(""AddToWallet %s  %s%s\n"", wtxIn.GetHash().ToString().substr(0,10).c_str(), (fInsertedNew ? ""new"" : """"), (fUpdated ? ""update"" : """"));

        // Write to disk
        if (fInsertedNew || fUpdated)
            if (!wtx.WriteToDisk())
                return false;
#ifndef QT_GUI
        // If default receiving address gets used, replace it with a new one
        CScript scriptDefaultKey;
        scriptDefaultKey.SetDestination(vchDefaultKey.GetID());
        BOOST_FOREACH(const CTxOut& txout, wtx.vout)
        {
            if (txout.scriptPubKey == scriptDefaultKey)
            {
                CPubKey newDefaultKey;
                if (GetKeyFromPool(newDefaultKey, false))
                {
                    SetDefaultKey(newDefaultKey);
                    SetAddressBookName(vchDefaultKey.GetID(), """");
                }
            }
        }
#endif
        // since AddToWallet is called directly for self-originating transactions, check for consumption of own coins
        WalletUpdateSpent(wtx);

        // Notify UI of new or updated transaction
        NotifyTransactionChanged(this, hash, fInsertedNew ? CT_NEW : CT_UPDATED);
    }
    return true;
}

// Add a transaction to the wallet, or update it.
// pblock is optional, but should be provided if the transaction is known to be in a block.
// If fUpdate is true, existing transactions will be updated.
bool CWallet::AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pblock, bool fUpdate, bool fFindBlock)
{
    uint256 hash = tx.GetHash();
    {
        LOCK(cs_wallet);
        bool fExisted = mapWallet.count(hash);
        if (fExisted && !fUpdate) return false;
        if (fExisted || IsMine(tx) || IsFromMe(tx))
        {
            CWalletTx wtx(this,tx);
            // Get merkle branch if transaction was found in a block
            if (pblock)
                wtx.SetMerkleBranch(pblock);
            return AddToWallet(wtx);
        }
        else
            WalletUpdateSpent(tx);
    }
    return false;
}

bool CWallet::EraseFromWallet(uint256 hash)
{
    if (!fFileBacked)
        return false;
    {
        LOCK(cs_wallet);
        if (mapWallet.erase(hash))
            CWalletDB(strWalletFile).EraseTx(hash);
    }
    return true;
}


bool CWallet::IsMine(const CTxIn &txin) const
{
    {
        LOCK(cs_wallet);
        map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(txin.prevout.hash);
        if (mi != mapWallet.end())
        {
            const CWalletTx& prev = (*mi).second;
            if (txin.prevout.n < prev.vout.size())
                if (IsMine(prev.vout[txin.prevout.n]))
                    return true;
        }
    }
    return false;
}

int64 CWallet::GetDebit(const CTxIn &txin) const
{
    {
        LOCK(cs_wallet);
        map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(txin.prevout.hash);
        if (mi != mapWallet.end())
        {
            const CWalletTx& prev = (*mi).second;
            if (txin.prevout.n < prev.vout.size())
                if (IsMine(prev.vout[txin.prevout.n]))
                    return prev.vout[txin.prevout.n].nValue;
        }
    }
    return 0;
}

bool CWallet::IsChange(const CTxOut& txout) const
{
    CTxDestination address;

    // TODO: fix handling of 'change' outputs. The assumption is that any
    // payment to a TX_PUBKEYHASH that is mine but isn't in the address book
    // is change. That assumption is likely to break when we implement multisignature
    // wallets that return change back into a multi-signature-protected address;
    // a better way of identifying which outputs are 'the send' and which are
    // 'the change' will need to be implemented (maybe extend CWalletTx to remember
    // which output, if any, was change).
    if (ExtractDestination(txout.scriptPubKey, address) && ::IsMine(*this, address))
    {
        LOCK(cs_wallet);
        if (!mapAddressBook.count(address))
            return true;
    }
    return false;
}

int64 CWalletTx::GetTxTime() const
{
    return nTimeReceived;
}

int CWalletTx::GetRequestCount() const
{
    // Returns -1 if it wasn't being tracked
    int nRequests = -1;
    {
        LOCK(pwallet->cs_wallet);
        if (IsCoinBase())
        {
            // Generated block
            if (hashBlock != 0)
            {
                map<uint256, int>::const_iterator mi = pwallet->mapRequestCount.find(hashBlock);
                if (mi != pwallet->mapRequestCount.end())
                    nRequests = (*mi).second;
            }
        }
        else
        {
            // Did anyone request this transaction?
            map<uint256, int>::const_iterator mi = pwallet->mapRequestCount.find(GetHash());
            if (mi != pwallet->mapRequestCount.end())
            {
                nRequests = (*mi).second;

                // How about the block it's in?
                if (nRequests == 0 && hashBlock != 0)
                {
                    map<uint256, int>::const_iterator mi = pwallet->mapRequestCount.find(hashBlock);
                    if (mi != pwallet->mapRequestCount.end())
                        nRequests = (*mi).second;
                    else
                        nRequests = 1; // If it's in someone else's block it must have got out
                }
            }
        }
    }
    return nRequests;
}

void CWalletTx::GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, list<pair<CTxDestination, int64> >& listReceived,
                           list<pair<CTxDestination, int64> >& listSent, int64& nFee, string& strSentAccount) const
{
    nGeneratedImmature = nGeneratedMature = nFee = 0;
    listReceived.clear();
    listSent.clear();
    strSentAccount = strFromAccount;

    if (IsCoinBase())
    {
        if (GetBlocksToMaturity() > 0)
            nGeneratedImmature = pwallet->GetCredit(*this);
        else
            nGeneratedMature = GetCredit();
        return;
    }

    // Compute fee:
    int64 nDebit = GetDebit();
    if (nDebit > 0) // debit>0 means we signed/sent this transaction
    {
        int64 nValueOut = GetValueOut();
        nFee = nDebit - nValueOut;
    }

    // Sent/received.
    BOOST_FOREACH(const CTxOut& txout, vout)
    {
        CTxDestination address;
        vector<unsigned char> vchPubKey;
        if (!ExtractDestination(txout.scriptPubKey, address))
        {
            printf(""CWalletTx::GetAmounts: Unknown transaction type found, txid %s\n"",
                   this->GetHash().ToString().c_str());
        }

        // Don't report 'change' txouts
        if (nDebit > 0 && pwallet->IsChange(txout))
            continue;

        if (nDebit > 0)
            listSent.push_back(make_pair(address, txout.nValue));

        if (pwallet->IsMine(txout))
            listReceived.push_back(make_pair(address, txout.nValue));
    }

}

void CWalletTx::GetAccountAmounts(const string& strAccount, int64& nGenerated, int64& nReceived,
                                  int64& nSent, int64& nFee) const
{
    nGenerated = nReceived = nSent = nFee = 0;

    int64 allGeneratedImmature, allGeneratedMature, allFee;
    allGeneratedImmature = allGeneratedMature = allFee = 0;
    string strSentAccount;
    list<pair<CTxDestination, int64> > listReceived;
    list<pair<CTxDestination, int64> > listSent;
    GetAmounts(allGeneratedImmature, allGeneratedMature, listReceived, listSent, allFee, strSentAccount);

    if (strAccount == """")
        nGenerated = allGeneratedMature;
    if (strAccount == strSentAccount)
    {
        BOOST_FOREACH(const PAIRTYPE(CTxDestination,int64)& s, listSent)
            nSent += s.second;
        nFee = allFee;
    }
    {
        LOCK(pwallet->cs_wallet);
        BOOST_FOREACH(const PAIRTYPE(CTxDestination,int64)& r, listReceived)
        {
            if (pwallet->mapAddressBook.count(r.first))
            {
                map<CTxDestination, string>::const_iterator mi = pwallet->mapAddressBook.find(r.first);
                if (mi != pwallet->mapAddressBook.end() && (*mi).second == strAccount)
                    nReceived += r.second;
            }
            else if (strAccount.empty())
            {
                nReceived += r.second;
            }
        }
    }
}

void CWalletTx::AddSupportingTransactions(CTxDB& txdb)
{
    vtxPrev.clear();

    const int COPY_DEPTH = 3;
    if (SetMerkleBranch() < COPY_DEPTH)
    {
        vector<uint256> vWorkQueue;
        BOOST_FOREACH(const CTxIn& txin, vin)
            vWorkQueue.push_back(txin.prevout.hash);

        // This critsect is OK because txdb is already open
        {
            LOCK(pwallet->cs_wallet);
            map<uint256, const CMerkleTx*> mapWalletPrev;
            set<uint256> setAlreadyDone;
            for (unsigned int i = 0; i < vWorkQueue.size(); i++)
            {
                uint256 hash = vWorkQueue[i];
                if (setAlreadyDone.count(hash))
                    continue;
                setAlreadyDone.insert(hash);

                CMerkleTx tx;
                map<uint256, CWalletTx>::const_iterator mi = pwallet->mapWallet.find(hash);
                if (mi != pwallet->mapWallet.end())
                {
                    tx = (*mi).second;
                    BOOST_FOREACH(const CMerkleTx& txWalletPrev, (*mi).second.vtxPrev)
                        mapWalletPrev[txWalletPrev.GetHash()] = &txWalletPrev;
                }
                else if (mapWalletPrev.count(hash))
                {
                    tx = *mapWalletPrev[hash];
                }
                else if (!fClient && txdb.ReadDiskTx(hash, tx))
                {
                    ;
                }
                else
                {
                    printf(""ERROR: AddSupportingTransactions() : unsupported transaction\n"");
                    continue;
                }

                int nDepth = tx.SetMerkleBranch();
                vtxPrev.push_back(tx);

                if (nDepth < COPY_DEPTH)
                {
                    BOOST_FOREACH(const CTxIn& txin, tx.vin)
                        vWorkQueue.push_back(txin.prevout.hash);
                }
            }
        }
    }

    reverse(vtxPrev.begin(), vtxPrev.end());
}

bool CWalletTx::WriteToDisk()
{
    return CWalletDB(pwallet->strWalletFile).WriteTx(GetHash(), *this);
}

// Scan the block chain (starting in pindexStart) for transactions
// from or to us. If fUpdate is true, found transactions that already
// exist in the wallet will be updated.
int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)
{
    int ret = 0;

    CBlockIndex* pindex = pindexStart;
    {
        LOCK(cs_wallet);
        while (pindex)
        {
            CBlock block;
            block.ReadFromDisk(pindex, true);
            BOOST_FOREACH(CTransaction& tx, block.vtx)
            {
                if (AddToWalletIfInvolvingMe(tx, &block, fUpdate))
                    ret++;
            }
            pindex = pindex->pnext;
        }
    }
    return ret;
}

int CWallet::ScanForWalletTransaction(const uint256& hashTx)
{
    CTransaction tx;
    tx.ReadFromDisk(COutPoint(hashTx, 0));
    if (AddToWalletIfInvolvingMe(tx, NULL, true, true))
        return 1;
    return 0;
}

void CWallet::ReacceptWalletTransactions()
{
    CTxDB txdb(""r"");
    bool fRepeat = true;
    while (fRepeat)
    {
        LOCK(cs_wallet);
        fRepeat = false;
        vector<CDiskTxPos> vMissingTx;
        BOOST_FOREACH(PAIRTYPE(const uint256, CWalletTx)& item, mapWallet)
        {
            CWalletTx& wtx = item.second;
            if (wtx.IsCoinBase() && wtx.IsSpent(0))
                continue;

            CTxIndex txindex;
            bool fUpdated = false;
            if (txdb.ReadTxIndex(wtx.GetHash(), txindex))
            {
                // Update fSpent if a tx got spent somewhere else by a copy of wallet.dat
                if (txindex.vSpent.size() != wtx.vout.size())
                {
                    printf(""ERROR: ReacceptWalletTransactions() : txindex.vSpent.size() %d != wtx.vout.size() %d\n"", txindex.vSpent.size(), wtx.vout.size());
                    continue;
                }
                for (unsigned int i = 0; i < txindex.vSpent.size(); i++)
                {
                    if (wtx.IsSpent(i))
                        continue;
                    if (!txindex.vSpent[i].IsNull() && IsMine(wtx.vout[i]))
                    {
                        wtx.MarkSpent(i);
                        fUpdated = true;
                        vMissingTx.push_back(txindex.vSpent[i]);
                    }
                }
                if (fUpdated)
                {
                    printf(""ReacceptWalletTransactions found spent coin %sbc %s\n"", FormatMoney(wtx.GetCredit()).c_str(), wtx.GetHash().ToString().c_str());
                    wtx.MarkDirty();
                    wtx.WriteToDisk();
                }
            }
            else
            {
                // Reaccept any txes of ours that aren't already in a block
                if (!wtx.IsCoinBase())
                    wtx.AcceptWalletTransaction(txdb, false);
            }
        }
        if (!vMissingTx.empty())
        {
            // TODO: optimize this to scan just part of the block chain?
            if (ScanForWalletTransactions(pindexGenesisBlock))
                fRepeat = true;  // Found missing transactions: re-do Reaccept.
        }
    }
}

void CWalletTx::RelayWalletTransaction(CTxDB& txdb)
{
    BOOST_FOREACH(const CMerkleTx& tx, vtxPrev)
    {
        if (!tx.IsCoinBase())
        {
            uint256 hash = tx.GetHash();
            if (!txdb.ContainsTx(hash))
                RelayMessage(CInv(MSG_TX, hash), (CTransaction)tx);
        }
    }
    if (!IsCoinBase())
    {
        uint256 hash = GetHash();
        if (!txdb.ContainsTx(hash))
        {
            printf(""Relaying wtx %s\n"", hash.ToString().substr(0,10).c_str());
            RelayMessage(CInv(MSG_TX, hash), (CTransaction)*this);
        }
    }
}

void CWalletTx::RelayWalletTransaction()
{
   CTxDB txdb(""r"");
   RelayWalletTransaction(txdb);
}

void CWallet::ResendWalletTransactions()
{
    // Do this infrequently and randomly to avoid giving away
    // that these are our transactions.
    static int64 nNextTime;
    if (GetTime() < nNextTime)
        return;
    bool fFirst = (nNextTime == 0);
    nNextTime = GetTime() + GetRand(30 * 60);
    if (fFirst)
        return;

    // Only do it if there's been a new block since last time
    static int64 nLastTime;
    if (nTimeBestReceived < nLastTime)
        return;
    nLastTime = GetTime();

    // Rebroadcast any of our txes that aren't in a block yet
    printf(""ResendWalletTransactions()\n"");
    CTxDB txdb(""r"");
    {
        LOCK(cs_wallet);
        // Sort them in chronological order
        multimap<unsigned int, CWalletTx*> mapSorted;
        BOOST_FOREACH(PAIRTYPE(const uint256, CWalletTx)& item, mapWallet)
        {
            CWalletTx& wtx = item.second;
            // Don't rebroadcast until it's had plenty of time that
            // it should have gotten in already by now.
            if (nTimeBestReceived - (int64)wtx.nTimeReceived > 5 * 60)
                mapSorted.insert(make_pair(wtx.nTimeReceived, &wtx));
        }
        BOOST_FOREACH(PAIRTYPE(const unsigned int, CWalletTx*)& item, mapSorted)
        {
            CWalletTx& wtx = *item.second;
            wtx.RelayWalletTransaction(txdb);
        }
    }
}






//////////////////////////////////////////////////////////////////////////////
//
// Actions
//


int64 CWallet::GetBalance() const
{
    int64 nTotal = 0;
    {
        LOCK(cs_wallet);
        for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)
        {
            const CWalletTx* pcoin = &(*it).second;
            if (pcoin->IsFinal() && pcoin->IsConfirmed())
                nTotal += pcoin->GetAvailableCredit();
        }
    }

    return nTotal;
}

int64 CWallet::GetUnconfirmedBalance() const
{
    int64 nTotal = 0;
    {
        LOCK(cs_wallet);
        for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)
        {
            const CWalletTx* pcoin = &(*it).second;
            if (!pcoin->IsFinal() || !pcoin->IsConfirmed())
                nTotal += pcoin->GetAvailableCredit();
        }
    }
    return nTotal;
}

int64 CWallet::GetImmatureBalance() const
{
    int64 nTotal = 0;
    {
        LOCK(cs_wallet);
        for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)
        {
            const CWalletTx& pcoin = (*it).second;
            if (pcoin.IsCoinBase() && pcoin.GetBlocksToMaturity() > 0 && pcoin.GetDepthInMainChain() >= 2)
                nTotal += GetCredit(pcoin);
        }
    }
    return nTotal;
}

// populate vCoins with vector of spendable COutputs
void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed) const
{
    vCoins.clear();

    {
        LOCK(cs_wallet);
        for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)
        {
            const CWalletTx* pcoin = &(*it).second;

            if (!pcoin->IsFinal())
                continue;

            if (fOnlyConfirmed && !pcoin->IsConfirmed())
                continue;

            if (pcoin->IsCoinBase() && pcoin->GetBlocksToMaturity() > 0)
                continue;

            // If output is less than minimum value, then don't include transaction.
            // This is to help deal with dust spam clogging up create transactions.
            for (unsigned int i = 0; i < pcoin->vout.size(); i++)
                if (!(pcoin->IsSpent(i)) && IsMine(pcoin->vout[i]) && pcoin->vout[i].nValue >= nMinimumInputValue)
                    vCoins.push_back(COutput(pcoin, i, pcoin->GetDepthInMainChain()));
        }
    }
}

static void ApproximateBestSubset(vector<pair<int64, pair<const CWalletTx*,unsigned int> > >vValue, int64 nTotalLower, int64 nTargetValue,
                                  vector<char>& vfBest, int64& nBest, int iterations = 1000)
{
    vector<char> vfIncluded;

    vfBest.assign(vValue.size(), true);
    nBest = nTotalLower;

    for (int nRep = 0; nRep < iterations && nBest != nTargetValue; nRep++)
    {
        vfIncluded.assign(vValue.size(), false);
        int64 nTotal = 0;
        bool fReachedTarget = false;
        for (int nPass = 0; nPass < 2 && !fReachedTarget; nPass++)
        {
            for (unsigned int i = 0; i < vValue.size(); i++)
            {
                if (nPass == 0 ? rand() % 2 : !vfIncluded[i])
                {
                    nTotal += vValue[i].first;
                    vfIncluded[i] = true;
                    if (nTotal >= nTargetValue)
                    {
                        fReachedTarget = true;
                        if (nTotal < nBest)
                        {
                            nBest = nTotal;
                            vfBest = vfIncluded;
                        }
                        nTotal -= vValue[i].first;
                        vfIncluded[i] = false;
                    }
                }
            }
        }
    }
}

bool CWallet::SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, vector<COutput> vCoins,
                                 set<pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet) const
{
    setCoinsRet.clear();
    nValueRet = 0;

    // List of values less than target
    pair<int64, pair<const CWalletTx*,unsigned int> > coinLowestLarger;
    coinLowestLarger.first = std::numeric_limits<int64>::max();
    coinLowestLarger.second.first = NULL;
    vector<pair<int64, pair<const CWalletTx*,unsigned int> > > vValue;
    int64 nTotalLower = 0;

    random_shuffle(vCoins.begin(), vCoins.end(), GetRandInt);

    BOOST_FOREACH(COutput output, vCoins)
    {
        const CWalletTx *pcoin = output.tx;

        if (output.nDepth < (pcoin->IsFromMe() ? nConfMine : nConfTheirs))
            continue;

        int i = output.i;
        int64 n = pcoin->vout[i].nValue;

        pair<int64,pair<const CWalletTx*,unsigned int> > coin = make_pair(n,make_pair(pcoin, i));

        if (n == nTargetValue)
        {
            setCoinsRet.insert(coin.second);
            nValueRet += coin.first;
            return true;
        }
        else if (n < nTargetValue + CENT)
        {
            vValue.push_back(coin);
            nTotalLower += n;
        }
        else if (n < coinLowestLarger.first)
        {
            coinLowestLarger = coin;
        }
    }

    if (nTotalLower == nTargetValue)
    {
        for (unsigned int i = 0; i < vValue.size(); ++i)
        {
            setCoinsRet.insert(vValue[i].second);
            nValueRet += vValue[i].first;
        }
        return true;
    }

    if (nTotalLower < nTargetValue)
    {
        if (coinLowestLarger.second.first == NULL)
            return false;
        setCoinsRet.insert(coinLowestLarger.second);
        nValueRet += coinLowestLarger.first;
        return true;
    }

    // Solve subset sum by stochastic approximation
    sort(vValue.rbegin(), vValue.rend(), CompareValueOnly());
    vector<char> vfBest;
    int64 nBest;

    ApproximateBestSubset(vValue, nTotalLower, nTargetValue, vfBest, nBest, 1000);
    if (nBest != nTargetValue && nTotalLower >= nTargetValue + CENT)
        ApproximateBestSubset(vValue, nTotalLower, nTargetValue + CENT, vfBest, nBest, 1000);

    // If we have a bigger coin and (either the stochastic approximation didn't find a good solution,
    //                                   or the next bigger coin is closer), return the bigger coin
    if (coinLowestLarger.second.first &&
        ((nBest != nTargetValue && nBest < nTargetValue + CENT) || coinLowestLarger.first <= nBest))
    {
        setCoinsRet.insert(coinLowestLarger.second);
        nValueRet += coinLowestLarger.first;
    }
    else {
        for (unsigned int i = 0; i < vValue.size(); i++)
            if (vfBest[i])
            {
                setCoinsRet.insert(vValue[i].second);
                nValueRet += vValue[i].first;
            }

        //// debug print
        printf(""SelectCoins() best subset: "");
        for (unsigned int i = 0; i < vValue.size(); i++)
            if (vfBest[i])
                printf(""%s "", FormatMoney(vValue[i].first).c_str());
        printf(""total %s\n"", FormatMoney(nBest).c_str());
    }

    return true;
}

bool CWallet::SelectCoins(int64 nTargetValue, set<pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet) const
{
    vector<COutput> vCoins;
    AvailableCoins(vCoins);

    return (SelectCoinsMinConf(nTargetValue, 1, 6, vCoins, setCoinsRet, nValueRet) ||
            SelectCoinsMinConf(nTargetValue, 1, 1, vCoins, setCoinsRet, nValueRet) ||
            SelectCoinsMinConf(nTargetValue, 0, 1, vCoins, setCoinsRet, nValueRet));
}




bool CWallet::CreateTransaction(const vector<pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet)
{
    int64 nValue = 0;
    BOOST_FOREACH (const PAIRTYPE(CScript, int64)& s, vecSend)
    {
        if (nValue < 0)
            return false;
        nValue += s.second;
    }
    if (vecSend.empty() || nValue < 0)
        return false;

    wtxNew.BindWallet(this);

    {
        LOCK2(cs_main, cs_wallet);
        // txdb must be opened before the mapWallet lock
        CTxDB txdb(""r"");
        {
            nFeeRet = nTransactionFee;
            loop
            {
                wtxNew.vin.clear();
                wtxNew.vout.clear();
                wtxNew.fFromMe = true;

                int64 nTotalValue = nValue + nFeeRet;
                double dPriority = 0;
                // vouts to the payees
                BOOST_FOREACH (const PAIRTYPE(CScript, int64)& s, vecSend)
                    wtxNew.vout.push_back(CTxOut(s.second, s.first));

                // Choose coins to use
                set<pair<const CWalletTx*,unsigned int> > setCoins;
                int64 nValueIn = 0;
                if (!SelectCoins(nTotalValue, setCoins, nValueIn))
                    return false;
                BOOST_FOREACH(PAIRTYPE(const CWalletTx*, unsigned int) pcoin, setCoins)
                {
                    int64 nCredit = pcoin.first->vout[pcoin.second].nValue;
                    dPriority += (double)nCredit * pcoin.first->GetDepthInMainChain();
                }

                int64 nChange = nValueIn - nValue - nFeeRet;
                // if sub-cent change is required, the fee must be raised to at least MIN_TX_FEE
                // or until nChange becomes zero
                // NOTE: this depends on the exact behaviour of GetMinFee
                if (nFeeRet < MIN_TX_FEE && nChange > 0 && nChange < CENT)
                {
                    int64 nMoveToFee = min(nChange, MIN_TX_FEE - nFeeRet);
                    nChange -= nMoveToFee;
                    nFeeRet += nMoveToFee;
                }

                if (nChange > 0)
                {
                    // Note: We use a new key here to keep it from being obvious which side is the change.
                    //  The drawback is that by not reusing a previous key, the change may be lost if a
                    //  backup is restored, if the backup doesn't have the new private key for the change.
                    //  If we reused the old key, it would be possible to add code to look for and
                    //  rediscover unknown transactions that were written with keys of ours to recover
                    //  post-backup change.

                    // Reserve a new key pair from key pool
                    CPubKey vchPubKey = reservekey.GetReservedKey();
                    // assert(mapKeys.count(vchPubKey));

                    // Fill a vout to ourself
                    // TODO: pass in scriptChange instead of reservekey so
                    // change transaction isn't always pay-to-bitcoin-address
                    CScript scriptChange;
                    scriptChange.SetDestination(vchPubKey.GetID());

                    // Insert change txn at random position:
                    vector<CTxOut>::iterator position = wtxNew.vout.begin()+GetRandInt(wtxNew.vout.size());
                    wtxNew.vout.insert(position, CTxOut(nChange, scriptChange));
                }
                else
                    reservekey.ReturnKey();

                // Fill vin
                BOOST_FOREACH(const PAIRTYPE(const CWalletTx*,unsigned int)& coin, setCoins)
                    wtxNew.vin.push_back(CTxIn(coin.first->GetHash(),coin.second));

                // Sign
                int nIn = 0;
                BOOST_FOREACH(const PAIRTYPE(const CWalletTx*,unsigned int)& coin, setCoins)
                    if (!SignSignature(*this, *coin.first, wtxNew, nIn++))
                        return false;

                // Limit size
                unsigned int nBytes = ::GetSerializeSize(*(CTransaction*)&wtxNew, SER_NETWORK, PROTOCOL_VERSION);
                if (nBytes >= MAX_BLOCK_SIZE_GEN/5)
                    return false;
                dPriority /= nBytes;

                // Check that enough fee is included
                int64 nPayFee = nTransactionFee * (1 + (int64)nBytes / 1000);
                bool fAllowFree = CTransaction::AllowFree(dPriority);
                int64 nMinFee = wtxNew.GetMinFee(1, fAllowFree, GMF_SEND);
                if (nFeeRet < max(nPayFee, nMinFee))
                {
                    nFeeRet = max(nPayFee, nMinFee);
                    continue;
                }

                // Fill vtxPrev by copying from previous transactions vtxPrev
                wtxNew.AddSupportingTransactions(txdb);
                wtxNew.fTimeReceivedIsTxTime = true;

                break;
            }
        }
    }
    return true;
}

bool CWallet::CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet)
{
    vector< pair<CScript, int64> > vecSend;
    vecSend.push_back(make_pair(scriptPubKey, nValue));
    return CreateTransaction(vecSend, wtxNew, reservekey, nFeeRet);
}

// Call after CreateTransaction unless you want to abort
bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)
{
    {
        LOCK2(cs_main, cs_wallet);
        printf(""CommitTransaction:\n%s"", wtxNew.ToString().c_str());
        {
            // This is only to keep the database open to defeat the auto-flush for the
            // duration of this scope.  This is the only place where this optimization
            // maybe makes sense; please don't do it anywhere else.
            CWalletDB* pwalletdb = fFileBacked ? new CWalletDB(strWalletFile,""r"") : NULL;

            // Take key pair from key pool so it won't be used again
            reservekey.KeepKey();

            // Add tx to wallet, because if it has change it's also ours,
            // otherwise just for transaction history.
            AddToWallet(wtxNew);

            // Mark old coins as spent
            set<CWalletTx*> setCoins;
            BOOST_FOREACH(const CTxIn& txin, wtxNew.vin)
            {
                CWalletTx &coin = mapWallet[txin.prevout.hash];
                coin.BindWallet(this);
                coin.MarkSpent(txin.prevout.n);
                coin.WriteToDisk();
                NotifyTransactionChanged(this, coin.GetHash(), CT_UPDATED);
            }

            if (fFileBacked)
                delete pwalletdb;
        }

        // Track how many getdata requests our transaction gets
        mapRequestCount[wtxNew.GetHash()] = 0;

        // Broadcast
        if (!wtxNew.AcceptToMemoryPool())
        {
            // This must not fail. The transaction has already been signed and recorded.
            printf(""CommitTransaction() : Error: Transaction not valid"");
            return false;
        }
        wtxNew.RelayWalletTransaction();
    }
    return true;
}




string CWallet::SendMoney(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, bool fAskFee)
{
    CReserveKey reservekey(this);
    int64 nFeeRequired;

    if (IsLocked())
    {
        string strError = _(""Error: Wallet locked, unable to create transaction  "");
        printf(""SendMoney() : %s"", strError.c_str());
        return strError;
    }
    if (!CreateTransaction(scriptPubKey, nValue, wtxNew, reservekey, nFeeRequired))
    {
        string strError;
        if (nValue + nFeeRequired > GetBalance())
            strError = strprintf(_(""Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds  ""), FormatMoney(nFeeRequired).c_str());
        else
            strError = _(""Error: Transaction creation failed  "");
        printf(""SendMoney() : %s"", strError.c_str());
        return strError;
    }

    if (fAskFee && !uiInterface.ThreadSafeAskFee(nFeeRequired, _(""Sending..."")))
        return ""ABORTED"";

    if (!CommitTransaction(wtxNew, reservekey))
        return _(""Error: The transaction was rejected.  This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here."");

    return """";
}



string CWallet::SendMoneyToDestination(const CTxDestination& address, int64 nValue, CWalletTx& wtxNew, bool fAskFee)
{
    // Check amount
    if (nValue <= 0)
        return _(""Invalid amount"");
    if (nValue + nTransactionFee > GetBalance())
        return _(""Insufficient funds"");

    // Parse Bitcoin address
    CScript scriptPubKey;
    scriptPubKey.SetDestination(address);

    return SendMoney(scriptPubKey, nValue, wtxNew, fAskFee);
}




int CWallet::LoadWallet(bool& fFirstRunRet)
{
    if (!fFileBacked)
        return false;
    fFirstRunRet = false;
    int nLoadWalletRet = CWalletDB(strWalletFile,""cr+"").LoadWallet(this);
    if (nLoadWalletRet == DB_NEED_REWRITE)
    {
        if (CDB::Rewrite(strWalletFile, ""\x04pool""))
        {
            setKeyPool.clear();
            // Note: can't top-up keypool here, because wallet is locked.
            // User will be prompted to unlock wallet the next operation
            // the requires a new key.
        }
        nLoadWalletRet = DB_NEED_REWRITE;
    }

    if (nLoadWalletRet != DB_LOAD_OK)
        return nLoadWalletRet;
    fFirstRunRet = !vchDefaultKey.IsValid();

    CreateThread(ThreadFlushWalletDB, &strWalletFile);
    return DB_LOAD_OK;
}


bool CWallet::SetAddressBookName(const CTxDestination& address, const string& strName)
{
    std::map<CTxDestination, std::string>::iterator mi = mapAddressBook.find(address);
    mapAddressBook[address] = strName;
    NotifyAddressBookChanged(this, address, strName, ::IsMine(*this, address), (mi == mapAddressBook.end()) ? CT_NEW : CT_UPDATED);
    if (!fFileBacked)
        return false;
    return CWalletDB(strWalletFile).WriteName(CBitcoinAddress(address).ToString(), strName);
}

bool CWallet::DelAddressBookName(const CTxDestination& address)
{
    mapAddressBook.erase(address);
    NotifyAddressBookChanged(this, address, """", ::IsMine(*this, address), CT_DELETED);
    if (!fFileBacked)
        return false;
    return CWalletDB(strWalletFile).EraseName(CBitcoinAddress(address).ToString());
}


void CWallet::PrintWallet(const CBlock& block)
{
    {
        LOCK(cs_wallet);
        if (mapWallet.count(block.vtx[0].GetHash()))
        {
            CWalletTx& wtx = mapWallet[block.vtx[0].GetHash()];
            printf(""    mine:  %d  %d  %d"", wtx.GetDepthInMainChain(), wtx.GetBlocksToMaturity(), wtx.GetCredit());
        }
    }
    printf(""\n"");
}

bool CWallet::GetTransaction(const uint256 &hashTx, CWalletTx& wtx)
{
    {
        LOCK(cs_wallet);
        map<uint256, CWalletTx>::iterator mi = mapWallet.find(hashTx);
        if (mi != mapWallet.end())
        {
            wtx = (*mi).second;
            return true;
        }
    }
    return false;
}

bool CWallet::SetDefaultKey(const CPubKey &vchPubKey)
{
    if (fFileBacked)
    {
        if (!CWalletDB(strWalletFile).WriteDefaultKey(vchPubKey))
            return false;
    }
    vchDefaultKey = vchPubKey;
    return true;
}

bool GetWalletFile(CWallet* pwallet, string &strWalletFileOut)
{
    if (!pwallet->fFileBacked)
        return false;
    strWalletFileOut = pwallet->strWalletFile;
    return true;
}

//
// Mark old keypool keys as used,
// and generate all new keys
//
bool CWallet::NewKeyPool()
{
    {
        LOCK(cs_wallet);
        CWalletDB walletdb(strWalletFile);
        BOOST_FOREACH(int64 nIndex, setKeyPool)
            walletdb.ErasePool(nIndex);
        setKeyPool.clear();

        if (IsLocked())
            return false;

        int64 nKeys = max(GetArg(""-keypool"", 100), (int64)0);
        for (int i = 0; i < nKeys; i++)
        {
            int64 nIndex = i+1;
            walletdb.WritePool(nIndex, CKeyPool(GenerateNewKey()));
            setKeyPool.insert(nIndex);
        }
        printf(""CWallet::NewKeyPool wrote %""PRI64d"" new keys\n"", nKeys);
    }
    return true;
}

bool CWallet::TopUpKeyPool()
{
    {
        LOCK(cs_wallet);

        if (IsLocked())
            return false;

        CWalletDB walletdb(strWalletFile);

        // Top up key pool
        unsigned int nTargetSize = max(GetArg(""-keypool"", 100), 0LL);
        while (setKeyPool.size() < (nTargetSize + 1))
        {
            int64 nEnd = 1;
            if (!setKeyPool.empty())
                nEnd = *(--setKeyPool.end()) + 1;
            if (!walletdb.WritePool(nEnd, CKeyPool(GenerateNewKey())))
                throw runtime_error(""TopUpKeyPool() : writing generated key failed"");
            setKeyPool.insert(nEnd);
            printf(""keypool added key %""PRI64d"", size=%d\n"", nEnd, setKeyPool.size());
        }
    }
    return true;
}

void CWallet::ReserveKeyFromKeyPool(int64& nIndex, CKeyPool& keypool)
{
    nIndex = -1;
    keypool.vchPubKey = CPubKey();
    {
        LOCK(cs_wallet);

        if (!IsLocked())
            TopUpKeyPool();

        // Get the oldest key
        if(setKeyPool.empty())
            return;

        CWalletDB walletdb(strWalletFile);

        nIndex = *(setKeyPool.begin());
        setKeyPool.erase(setKeyPool.begin());
        if (!walletdb.ReadPool(nIndex, keypool))
            throw runtime_error(""ReserveKeyFromKeyPool() : read failed"");
        if (!HaveKey(keypool.vchPubKey.GetID()))
            throw runtime_error(""ReserveKeyFromKeyPool() : unknown key in key pool"");
        assert(keypool.vchPubKey.IsValid());
        printf(""keypool reserve %""PRI64d""\n"", nIndex);
    }
}

int64 CWallet::AddReserveKey(const CKeyPool& keypool)
{
    {
        LOCK2(cs_main, cs_wallet);
        CWalletDB walletdb(strWalletFile);

        int64 nIndex = 1 + *(--setKeyPool.end());
        if (!walletdb.WritePool(nIndex, keypool))
            throw runtime_error(""AddReserveKey() : writing added key failed"");
        setKeyPool.insert(nIndex);
        return nIndex;
    }
    return -1;
}

void CWallet::KeepKey(int64 nIndex)
{
    // Remove from key pool
    if (fFileBacked)
    {
        CWalletDB walletdb(strWalletFile);
        walletdb.ErasePool(nIndex);
    }
    printf(""keypool keep %""PRI64d""\n"", nIndex);
}

void CWallet::ReturnKey(int64 nIndex)
{
    // Return to key pool
    {
        LOCK(cs_wallet);
        setKeyPool.insert(nIndex);
    }
    printf(""keypool return %""PRI64d""\n"", nIndex);
}

bool CWallet::GetKeyFromPool(CPubKey& result, bool fAllowReuse)
{
    int64 nIndex = 0;
    CKeyPool keypool;
    {
        LOCK(cs_wallet);
        ReserveKeyFromKeyPool(nIndex, keypool);
        if (nIndex == -1)
        {
            if (fAllowReuse && vchDefaultKey.IsValid())
            {
                result = vchDefaultKey;
                return true;
            }
            if (IsLocked()) return false;
            result = GenerateNewKey();
            return true;
        }
        KeepKey(nIndex);
        result = keypool.vchPubKey;
    }
    return true;
}

int64 CWallet::GetOldestKeyPoolTime()
{
    int64 nIndex = 0;
    CKeyPool keypool;
    ReserveKeyFromKeyPool(nIndex, keypool);
    if (nIndex == -1)
        return GetTime();
    ReturnKey(nIndex);
    return keypool.nTime;
}

CPubKey CReserveKey::GetReservedKey()
{
    if (nIndex == -1)
    {
        CKeyPool keypool;
        pwallet->ReserveKeyFromKeyPool(nIndex, keypool);
        if (nIndex != -1)
            vchPubKey = keypool.vchPubKey;
        else
        {
            printf(""CReserveKey::GetReservedKey(): Warning: using default key instead of a new key, top up your keypool."");
            vchPubKey = pwallet->vchDefaultKey;
        }
    }
    assert(vchPubKey.IsValid());
    return vchPubKey;
}

void CReserveKey::KeepKey()
{
    if (nIndex != -1)
        pwallet->KeepKey(nIndex);
    nIndex = -1;
    vchPubKey = CPubKey();
}

void CReserveKey::ReturnKey()
{
    if (nIndex != -1)
        pwallet->ReturnKey(nIndex);
    nIndex = -1;
    vchPubKey = CPubKey();
}

void CWallet::GetAllReserveKeys(set<CKeyID>& setAddress)
{
    setAddress.clear();

    CWalletDB walletdb(strWalletFile);

    LOCK2(cs_main, cs_wallet);
    BOOST_FOREACH(const int64& id, setKeyPool)
    {
        CKeyPool keypool;
        if (!walletdb.ReadPool(id, keypool))
            throw runtime_error(""GetAllReserveKeyHashes() : read failed"");
        assert(keypool.vchPubKey.IsValid());
        CKeyID keyID = keypool.vchPubKey.GetID();
        if (!HaveKey(keyID))
            throw runtime_error(""GetAllReserveKeyHashes() : unknown key in key pool"");
        setAddress.insert(keyID);
    }
}

void CWallet::UpdatedTransaction(const uint256 &hashTx)
{
    {
        LOCK(cs_wallet);
        // Only notify UI if this transaction is in this wallet
        map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(hashTx);
        if (mi != mapWallet.end())
            NotifyTransactionChanged(this, hashTx, CT_UPDATED);
    }
}
",C++
"/*  Copyright (c) MediaArea.net SARL. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license that can
 *  be found in the License.html file in the root of the source tree.
 */

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// Elements part
//
// Contributor: Lionel Duchateau, kurtnoise@free.fr
//
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//---------------------------------------------------------------------------
// Pre-compilation
#include ""MediaInfo/PreComp.h""
#ifdef __BORLANDC__
    #pragma hdrstop
#endif
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
#include ""MediaInfo/Setup.h""
#include <ZenLib/Ztring.h>
#include <string>
using namespace std;
using namespace ZenLib;
//---------------------------------------------------------------------------

//***************************************************************************
// Infos
//***************************************************************************

//---------------------------------------------------------------------------
#if defined(MEDIAINFO_RIFF_YES) || defined(MEDIAINFO_MK_YES)
//---------------------------------------------------------------------------

namespace MediaInfoLib
{

//---------------------------------------------------------------------------
std::string ExtensibleWave_ChannelMask (int32u ChannelMask)
{
    std::string Text;
    if ((ChannelMask&0x0007)!=0x0000)
        Text+=""Front:"";
    if (ChannelMask&0x0001)
        Text+="" L"";
    if (ChannelMask&0x0004)
        Text+="" C"";
    if (ChannelMask&0x0002)
        Text+="" R"";

    if ((ChannelMask&0x0600)!=0x0000)
        Text+="", Side:"";
    if (ChannelMask&0x0200)
        Text+="" L"";
    if (ChannelMask&0x0400)
        Text+="" R"";

    if ((ChannelMask&0x0130)!=0x0000)
        Text+="", Back:"";
    if (ChannelMask&0x0010)
        Text+="" L"";
    if (ChannelMask&0x0100)
        Text+="" C"";
    if (ChannelMask&0x0020)
        Text+="" R"";

    if ((ChannelMask&0x0008)!=0x0000)
        Text+="", LFE"";

    return Text;
}

//---------------------------------------------------------------------------
std::string ExtensibleWave_ChannelMask2 (int32u ChannelMask)
{
    std::string Text;
    int8u Count=0;
    if (ChannelMask&0x0001)
        Count++;
    if (ChannelMask&0x0004)
        Count++;
    if (ChannelMask&0x0002)
        Count++;
    Text+=Ztring::ToZtring(Count).To_UTF8();
    Count=0;

    if (ChannelMask&0x0200)
        Count++;
    if (ChannelMask&0x0400)
        Count++;
    Text+=""/""+Ztring::ToZtring(Count).To_UTF8();
    Count=0;

    if (ChannelMask&0x0010)
        Count++;
    if (ChannelMask&0x0100)
        Count++;
    if (ChannelMask&0x0020)
        Count++;
    Text+=""/""+Ztring::ToZtring(Count).To_UTF8();
    Count=0;

    if (ChannelMask&0x0008)
        Text+="".1"";

    return Text;
}

}

//---------------------------------------------------------------------------
#endif
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
#ifdef MEDIAINFO_RIFF_YES
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
#include ""MediaInfo/Multiple/File_Riff.h""
#if defined(MEDIAINFO_DVDIF_YES)
    #include ""MediaInfo/Multiple/File_DvDif.h""
#endif
#if defined(MEDIAINFO_OGG_YES)
    #include ""MediaInfo/Multiple/File_Ogg.h""
    #include ""MediaInfo/Multiple/File_Ogg_SubElement.h""
#endif
#if defined(MEDIAINFO_FFV1_YES)
    #include ""MediaInfo/Video/File_Ffv1.h""
#endif
#if defined(MEDIAINFO_HUFFYUV_YES)
    #include ""MediaInfo/Video/File_HuffYuv.h""
#endif
#if defined(MEDIAINFO_MPEG4V_YES)
    #include ""MediaInfo/Video/File_Mpeg4v.h""
#endif
#if defined(MEDIAINFO_MPEGV_YES)
    #include ""MediaInfo/Video/File_Mpegv.h""
#endif
#if defined(MEDIAINFO_PRORES_YES)
    #include ""MediaInfo/Video/File_ProRes.h""
#endif
#if defined(MEDIAINFO_AVC_YES)
    #include ""MediaInfo/Video/File_Avc.h""
#endif
#if defined(MEDIAINFO_CANOPUS_YES)
    #include ""MediaInfo/Video/File_Canopus.h""
#endif
#if defined(MEDIAINFO_FRAPS_YES)
    #include ""MediaInfo/Video/File_Fraps.h""
#endif
#if defined(MEDIAINFO_LAGARITH_YES)
    #include ""MediaInfo/Video/File_Lagarith.h""
#endif
#if defined(MEDIAINFO_MPEGA_YES)
    #include ""MediaInfo/Audio/File_Mpega.h""
#endif
#if defined(MEDIAINFO_AAC_YES)
    #include ""MediaInfo/Audio/File_Aac.h""
#endif
#if defined(MEDIAINFO_AC3_YES)
    #include ""MediaInfo/Audio/File_Ac3.h""
#endif
#if defined(MEDIAINFO_DTS_YES)
    #include ""MediaInfo/Audio/File_Dts.h""
#endif
#if defined(MEDIAINFO_JPEG_YES)
    #include ""MediaInfo/Image/File_Jpeg.h""
#endif
#if defined(MEDIAINFO_SUBRIP_YES)
    #include ""MediaInfo/Text/File_SubRip.h""
#endif
#if defined(MEDIAINFO_OTHERTEXT_YES)
    #include ""MediaInfo/Text/File_OtherText.h""
#endif
#if defined(MEDIAINFO_ADPCM_YES)
    #include ""MediaInfo/Audio/File_Adpcm.h""
#endif
#if defined(MEDIAINFO_PCM_YES)
    #include ""MediaInfo/Audio/File_Pcm.h""
#endif
#if defined(MEDIAINFO_SMPTEST0337_YES)
    #include ""MediaInfo/Audio/File_SmpteSt0337.h""
#endif
#if defined(MEDIAINFO_ID3_YES)
    #include ""MediaInfo/Tag/File_Id3.h""
#endif
#if defined(MEDIAINFO_ID3V2_YES)
    #include ""MediaInfo/Tag/File_Id3v2.h""
#endif
#if defined(MEDIAINFO_GXF_YES)
    #if defined(MEDIAINFO_CDP_YES)
        #include ""MediaInfo/Text/File_Cdp.h""
        #include <cstring>
    #endif
#endif //MEDIAINFO_GXF_YES
#include <vector>
#include ""MediaInfo/MediaInfo_Config_MediaInfo.h""
using namespace std;
//---------------------------------------------------------------------------

namespace MediaInfoLib
{

//***************************************************************************
// Const
//***************************************************************************

namespace Elements
{
    const int32u FORM=0x464F524D;
    const int32u LIST=0x4C495354;
    const int32u ON2_=0x4F4E3220;
    const int32u RIFF=0x52494646;
    const int32u RF64=0x52463634;

    const int32u AIFC=0x41494643;
    const int32u AIFC_COMM=0x434F4D4D;
    const int32u AIFC_COMT=0x434F4D54;
    const int32u AIFC_FVER=0x46564552;
    const int32u AIFC_SSND=0x53534E44;
    const int32u AIFF=0x41494646;
    const int32u AIFF_COMM=0x434F4D4D;
    const int32u AIFF_COMT=0x434F4D54;
    const int32u AIFF_SSND=0x53534E44;
    const int32u AIFF__c__=0x28632920;
    const int32u AIFF_ANNO=0x414E4E4F;
    const int32u AIFF_AUTH=0x41555448;
    const int32u AIFF_NAME=0x4E414D45;
    const int32u AIFF_ID3_=0x49443320;
    const int32u AVI_=0x41564920;
    const int32u AVI__cset=0x63736574;
    const int32u AVI__Cr8r=0x43723872;
    const int32u AVI__exif=0x65786966;
    const int32u AVI__exif_ecor=0x65636F72;
    const int32u AVI__exif_emdl=0x656D646C;
    const int32u AVI__exif_emnt=0x656D6E74;
    const int32u AVI__exif_erel=0x6572656C;
    const int32u AVI__exif_etim=0x6574696D;
    const int32u AVI__exif_eucm=0x6575636D;
    const int32u AVI__exif_ever=0x65766572;
    const int32u AVI__goog=0x676F6F67;
    const int32u AVI__goog_GDAT=0x47444154;
    const int32u AVI__GMET=0x474D4554;
    const int32u AVI__hdlr=0x6864726C;
    const int32u AVI__hdlr_avih=0x61766968;
    const int32u AVI__hdlr_JUNK=0x4A554E4B;
    const int32u AVI__hdlr_strl=0x7374726C;
    const int32u AVI__hdlr_strl_indx=0x696E6478;
    const int32u AVI__hdlr_strl_JUNK=0x4A554E4B;
    const int32u AVI__hdlr_strl_strd=0x73747264;
    const int32u AVI__hdlr_strl_strf=0x73747266;
    const int32u AVI__hdlr_strl_strh=0x73747268;
    const int32u AVI__hdlr_strl_strh_auds=0x61756473;
    const int32u AVI__hdlr_strl_strh_iavs=0x69617673;
    const int32u AVI__hdlr_strl_strh_mids=0x6D696473;
    const int32u AVI__hdlr_strl_strh_vids=0x76696473;
    const int32u AVI__hdlr_strl_strh_txts=0x74787473;
    const int32u AVI__hdlr_strl_strn=0x7374726E;
    const int32u AVI__hdlr_strl_vprp=0x76707270;
    const int32u AVI__hdlr_odml=0x6F646D6C;
    const int32u AVI__hdlr_odml_dmlh=0x646D6C68;
    const int32u AVI__hdlr_ON2h=0x4F4E3268;
    const int32u AVI__idx1=0x69647831;
    const int32u AVI__INFO=0x494E464F;
    const int32u AVI__INFO_IARL=0x4941524C;
    const int32u AVI__INFO_IART=0x49415254;
    const int32u AVI__INFO_IAS1=0x49415331;
    const int32u AVI__INFO_IAS2=0x49415332;
    const int32u AVI__INFO_IAS3=0x49415333;
    const int32u AVI__INFO_IAS4=0x49415334;
    const int32u AVI__INFO_IAS5=0x49415335;
    const int32u AVI__INFO_IAS6=0x49415336;
    const int32u AVI__INFO_IAS7=0x49415337;
    const int32u AVI__INFO_IAS8=0x49415338;
    const int32u AVI__INFO_IAS9=0x49415339;
    const int32u AVI__INFO_ICDS=0x49434453;
    const int32u AVI__INFO_ICMS=0x49434D53;
    const int32u AVI__INFO_ICMT=0x49434D54;
    const int32u AVI__INFO_ICNT=0x49434E54;
    const int32u AVI__INFO_ICOP=0x49434F50;
    const int32u AVI__INFO_ICNM=0x49434E4D;
    const int32u AVI__INFO_ICRD=0x49435244;
    const int32u AVI__INFO_ICRP=0x49435250;
    const int32u AVI__INFO_IDIM=0x4944494D;
    const int32u AVI__INFO_IDIT=0x49444954;
    const int32u AVI__INFO_IDPI=0x49445049;
    const int32u AVI__INFO_IDST=0x49445354;
    const int32u AVI__INFO_IEDT=0x49454454;
    const int32u AVI__INFO_IENG=0x49454E47;
    const int32u AVI__INFO_IFRM=0x4946524D;
    const int32u AVI__INFO_IGNR=0x49474E52;
    const int32u AVI__INFO_IID3=0x49494433;
    const int32u AVI__INFO_IKEY=0x494B4559;
    const int32u AVI__INFO_ILGT=0x494C4754;
    const int32u AVI__INFO_ILNG=0x494C4E47;
    const int32u AVI__INFO_ILYC=0x494C5943;
    const int32u AVI__INFO_IMED=0x494D4544;
    const int32u AVI__INFO_IMP3=0x494D5033;
    const int32u AVI__INFO_IMUS=0x494D5553;
    const int32u AVI__INFO_INAM=0x494E414D;
    const int32u AVI__INFO_IPLT=0x49504C54;
    const int32u AVI__INFO_IPDS=0x49504453;
    const int32u AVI__INFO_IPRD=0x49505244;
    const int32u AVI__INFO_IPRT=0x49505254;
    const int32u AVI__INFO_IPRO=0x4950524F;
    const int32u AVI__INFO_IRTD=0x49525444;
    const int32u AVI__INFO_ISBJ=0x4953424A;
    const int32u AVI__INFO_ISGN=0x4953474E;
    const int32u AVI__INFO_ISTD=0x49535444;
    const int32u AVI__INFO_ISTR=0x49535452;
    const int32u AVI__INFO_ISFT=0x49534654;
    const int32u AVI__INFO_ISHP=0x49534850;
    const int32u AVI__INFO_ISMP=0x49534D50;
    const int32u AVI__INFO_ISRC=0x49535243;
    const int32u AVI__INFO_ISRF=0x49535246;
    const int32u AVI__INFO_ITCH=0x49544348;
    const int32u AVI__INFO_IWEB=0x49574542;
    const int32u AVI__INFO_IWRI=0x49575249;
    const int32u AVI__INFO_JUNK=0x4A554E4B;
    const int32u AVI__JUNK=0x4A554E4B;
    const int32u AVI__MD5_=0x4D443520;
    const int32u AVI__movi=0x6D6F7669;
    const int32u AVI__movi_rec_=0x72656320;
    const int32u AVI__movi_xxxx_____=0x00005F5F;
    const int32u AVI__movi_xxxx___db=0x00006462;
    const int32u AVI__movi_xxxx___dc=0x00006463;
    const int32u AVI__movi_xxxx___sb=0x00007362;
    const int32u AVI__movi_xxxx___tx=0x00007478;
    const int32u AVI__movi_xxxx___wb=0x00007762;
    const int32u AVI__PrmA=0x50726D41;
    const int32u AVI__Tdat=0x54646174;
    const int32u AVI__Tdat_rn_A=0x726E5F41;
    const int32u AVI__Tdat_rn_O=0x726E5F4F;
    const int32u AVI__Tdat_tc_A=0x74635F41;
    const int32u AVI__Tdat_tc_O=0x74635F4F;
    const int32u AVIX=0x41564958;
    const int32u AVIX_idx1=0x69647831;
    const int32u AVIX_movi=0x6D6F7669;
    const int32u AVIX_movi_rec_=0x72656320;
    const int32u CADP=0x43414450;
    const int32u CDDA=0x43444441;
    const int32u CDDA_fmt_=0x666D7420;
    const int32u CMJP=0x434D4A50;
    const int32u CMP4=0x434D5034;
    const int32u IDVX=0x49445658;
    const int32u INDX=0x494E4458;
    const int32u JUNK=0x4A554E4B;
    const int32u menu=0x6D656E75;
    const int32u MThd=0x4D546864;
    const int32u MTrk=0x4D54726B;
    const int32u PAL_=0x50414C20;
    const int32u QLCM=0x514C434D;
    const int32u QLCM_fmt_=0x666D7420;
    const int32u rcrd=0x72637264;
    const int32u rcrd_desc=0x64657363;
    const int32u rcrd_fld_=0x666C6420;
    const int32u rcrd_fld__anc_=0x616E6320;
    const int32u rcrd_fld__anc__pos_=0x706F7320;
    const int32u rcrd_fld__anc__pyld=0x70796C64;
    const int32u rcrd_fld__finf=0x66696E66;
    const int32u RDIB=0x52444942;
    const int32u RMID=0x524D4944;
    const int32u RMMP=0x524D4D50;
    const int32u RMP3=0x524D5033;
    const int32u RMP3_data=0x64617461;
    const int32u RMP3_INFO=0x494E464F;
    const int32u RMP3_INFO_IID3=0x49494433;
    const int32u RMP3_INFO_ILYC=0x494C5943;
    const int32u RMP3_INFO_IMP3=0x494D5033;
    const int32u RMP3_INFO_JUNK=0x4A554E4B;
    const int32u SMV0=0x534D5630;
    const int32u SMV0_xxxx=0x534D563A;
    const int32u WAVE=0x57415645;
    const int32u WAVE__pmx=0x20786D70;
    const int32u WAVE_aXML=0x61584D4C;
    const int32u WAVE_bext=0x62657874;
    const int32u WAVE_cue_=0x63756520;
    const int32u WAVE_data=0x64617461;
    const int32u WAVE_ds64=0x64733634;
    const int32u WAVE_fact=0x66616374;
    const int32u WAVE_fmt_=0x666D7420;
    const int32u WAVE_ID3_=0x49443320;
    const int32u WAVE_id3_=0x69643320;
    const int32u WAVE_INFO=0x494E464F;
    const int32u WAVE_iXML=0x69584D4C;
    const int32u wave=0x77617665;
    const int32u wave_data=0x64617461;
    const int32u wave_fmt_=0x666D7420;
    const int32u W3DI=0x57334449;

    #define UUID(NAME, PART1, PART2, PART3, PART4, PART5) \
        const int64u NAME   =0x##PART3##PART2##PART1##ULL; \
        const int64u NAME##2=0x##PART4##PART5##ULL; \

    UUID(QLCM_QCELP1,                                           5E7F6D41, B115, 11D0, BA91, 00805FB4B97E)
    UUID(QLCM_QCELP2,                                           5E7F6D42, B115, 11D0, BA91, 00805FB4B97E)
    UUID(QLCM_EVRC,                                             E689D48D, 9076, 46B5, 91EF, 736A5100CEB4)
    UUID(QLCM_SMV,                                              8D7C2B75, A797, ED49, 985E, D53C8CC75F84)
}

//***************************************************************************
// Format
//***************************************************************************

//---------------------------------------------------------------------------
void File_Riff::Data_Parse()
{
    //Alignement specific
    Element_Size-=Alignement_ExtraByte;

    DATA_BEGIN
    LIST(AIFC)
        ATOM_BEGIN
        ATOM(AIFC_COMM)
        ATOM(AIFC_COMT)
        ATOM(AIFC_FVER)
        ATOM(AIFC_SSND)
        ATOM_DEFAULT(AIFC_xxxx)
        ATOM_END_DEFAULT
    LIST(AIFF)
        ATOM_BEGIN
        ATOM(AIFF_COMM)
        ATOM(AIFF_COMT)
        ATOM(AIFF_ID3_)
        LIST_SKIP(AIFF_SSND)
        ATOM_DEFAULT(AIFF_xxxx)
        ATOM_END_DEFAULT
    LIST(AVI_)
        ATOM_BEGIN
        ATOM(AVI__Cr8r);
        ATOM(AVI__cset)
        LIST(AVI__exif)
            ATOM_DEFAULT_ALONE(AVI__exif_xxxx)
        LIST(AVI__goog)
            ATOM_BEGIN
            ATOM(AVI__goog_GDAT)
            ATOM_END
        ATOM(AVI__GMET)
        LIST(AVI__hdlr)
            ATOM_BEGIN
            ATOM(AVI__hdlr_avih)
            ATOM(AVI__hdlr_JUNK)
            LIST(AVI__hdlr_strl)
                ATOM_BEGIN
                ATOM(AVI__hdlr_strl_indx)
                ATOM(AVI__hdlr_strl_JUNK)
                ATOM(AVI__hdlr_strl_strd)
                ATOM(AVI__hdlr_strl_strf)
                ATOM(AVI__hdlr_strl_strh)
                ATOM(AVI__hdlr_strl_strn)
                ATOM(AVI__hdlr_strl_vprp)
                ATOM_END
            LIST(AVI__hdlr_odml)
                ATOM_BEGIN
                ATOM(AVI__hdlr_odml_dmlh)
                ATOM_END
            ATOM(AVI__hdlr_ON2h)
            LIST(AVI__INFO)
                ATOM_BEGIN
                ATOM(AVI__INFO_IID3)
                ATOM(AVI__INFO_ILYC)
                ATOM(AVI__INFO_IMP3)
                ATOM(AVI__INFO_JUNK)
                ATOM_DEFAULT(AVI__INFO_xxxx)
                ATOM_END_DEFAULT
            ATOM_DEFAULT(AVI__hdlr_xxxx)
            ATOM_END_DEFAULT
        ATOM(AVI__idx1)
        LIST(AVI__INFO)
            ATOM_BEGIN
            ATOM(AVI__INFO_IID3)
            ATOM(AVI__INFO_ILYC)
            ATOM(AVI__INFO_IMP3)
            ATOM(AVI__INFO_JUNK)
            ATOM_DEFAULT(AVI__INFO_xxxx)
            ATOM_END_DEFAULT
        ATOM(AVI__JUNK)
        ATOM(AVI__MD5_)
        LIST(AVI__movi)
            ATOM_BEGIN
            LIST(AVI__movi_rec_)
                ATOM_DEFAULT_ALONE(AVI__movi_xxxx)
            ATOM_DEFAULT(AVI__movi_xxxx)
            ATOM_END_DEFAULT
        ATOM(AVI__PrmA);
        LIST(AVI__Tdat)
            ATOM_BEGIN
            ATOM(AVI__Tdat_rn_A)
            ATOM(AVI__Tdat_rn_O)
            ATOM(AVI__Tdat_tc_A)
            ATOM(AVI__Tdat_tc_O)
            ATOM_END
        ATOM_DEFAULT(AVI__xxxx)
        ATOM_END_DEFAULT
    LIST(AVIX) //OpenDML
        ATOM_BEGIN
        ATOM(AVIX_idx1)
        LIST(AVIX_movi)
            ATOM_BEGIN
            LIST(AVIX_movi_rec_)
                ATOM_DEFAULT_ALONE(AVIX_movi_xxxx)
            ATOM_DEFAULT(AVIX_movi_xxxx)
            ATOM_END_DEFAULT
        ATOM_END
    ATOM_PARTIAL(CADP)
    LIST(CDDA)
        ATOM_BEGIN
        ATOM(CDDA_fmt_)
        ATOM_END
    ATOM_PARTIAL(CMJP)
    ATOM(CMP4)
    ATOM(IDVX)
    LIST(INDX)
        ATOM_DEFAULT_ALONE(INDX_xxxx)
    LIST_SKIP(JUNK)
    LIST_SKIP(menu)
    ATOM(MThd)
    LIST_SKIP(MTrk)
    LIST_SKIP(PAL_)
    LIST(QLCM)
        ATOM_BEGIN
        ATOM(QLCM_fmt_)
        ATOM_END
    #if defined(MEDIAINFO_GXF_YES)
    LIST(rcrd)
        ATOM_BEGIN
        ATOM(rcrd_desc)
        LIST(rcrd_fld_)
            ATOM_BEGIN
            LIST(rcrd_fld__anc_)
                ATOM_BEGIN
                ATOM(rcrd_fld__anc__pos_)
                ATOM(rcrd_fld__anc__pyld)
                ATOM_END
            ATOM(rcrd_fld__finf)
            ATOM_END
        ATOM_END
    #endif //defined(MEDIAINFO_GXF_YES)
    LIST_SKIP(RDIB)
    LIST_SKIP(RMID)
    LIST_SKIP(RMMP)
    LIST(RMP3)
        ATOM_BEGIN
        LIST(RMP3_data)
            break;
        LIST(RMP3_INFO)
            ATOM_BEGIN
            ATOM(RMP3_INFO_IID3)
            ATOM(RMP3_INFO_ILYC)
            ATOM(RMP3_INFO_IMP3)
            ATOM(RMP3_INFO_JUNK)
            ATOM_DEFAULT(RMP3_INFO_xxxx)
            ATOM_END_DEFAULT
        ATOM_END
    ATOM(SMV0)
    ATOM(SMV0_xxxx)
    ATOM(W3DI)
    LIST(WAVE)
        ATOM_BEGIN
        ATOM(WAVE__pmx)
        ATOM(WAVE_aXML)
        ATOM(WAVE_bext)
        LIST(WAVE_data)
            break;
        ATOM(WAVE_cue_)
        ATOM(WAVE_ds64)
        ATOM(WAVE_fact)
        ATOM(WAVE_fmt_)
        ATOM(WAVE_ID3_)
        ATOM(WAVE_id3_)
        LIST(WAVE_INFO)
            ATOM_DEFAULT_ALONE(WAVE_INFO_xxxx)
        ATOM(WAVE_iXML)
        ATOM_END
    LIST(wave)
        ATOM_BEGIN
        LIST(wave_data)
            break;
        ATOM(wave_fmt_)
        ATOM_END
    DATA_END

    if (Alignement_ExtraByte)
    {
        Element_Size+=Alignement_ExtraByte;
        if (Element_Offset+Alignement_ExtraByte==Element_Size)
            Skip_XX(Alignement_ExtraByte,                       ""Alignement"");
    }
}

//***************************************************************************
// Elements
//***************************************************************************

//---------------------------------------------------------------------------
void File_Riff::AIFC()
{
    Data_Accept(""AIFF Compressed"");
    Element_Name(""AIFF Compressed"");

    //Filling
    Fill(Stream_General, 0, General_Format, ""AIFF"");
    Stream_Prepare(Stream_Audio);
    Kind=Kind_Aiff;
    #if MEDIAINFO_EVENTS
        StreamIDs_Width[0]=0;
    #endif //MEDIAINFO_EVENTS
}

//---------------------------------------------------------------------------
void File_Riff::AIFC_COMM()
{
    AIFF_COMM();
}

//---------------------------------------------------------------------------
void File_Riff::AIFC_COMT()
{
    AIFF_COMT();
}

//---------------------------------------------------------------------------
void File_Riff::AIFC_FVER()
{
    Element_Name(""Format Version"");

    //Parsing
    Skip_B4(                                                    ""Version"");
}

//---------------------------------------------------------------------------
void File_Riff::AIFC_SSND()
{
    AIFF_SSND();
}

//---------------------------------------------------------------------------
void File_Riff::AIFC_xxxx()
{
    AIFF_xxxx();
}

//---------------------------------------------------------------------------
void File_Riff::AIFF()
{
    Data_Accept(""AIFF"");
    Element_Name(""AIFF"");

    //Filling
    Fill(Stream_General, 0, General_Format, ""AIFF"");
    Stream_Prepare(Stream_Audio);
    Kind=Kind_Aiff;
    #if MEDIAINFO_EVENTS
        StreamIDs_Width[0]=0;
    #endif //MEDIAINFO_EVENTS
}

//---------------------------------------------------------------------------
void File_Riff::AIFF_COMM()
{
    Element_Name(""Common"");

    int32u numSampleFrames;
    int16u numChannels, sampleSize;
    float80 sampleRate;
    //Parsing
    Get_B2 (numChannels,                                    ""numChannels"");
    Get_B4 (numSampleFrames,                                ""numSampleFrames"");
    Get_B2 (sampleSize,                                     ""sampleSize"");
    Get_BF10(sampleRate,                                    ""sampleRate"");
    if (Data_Remain()) //AIFC
    {
        int32u compressionType;
        Get_C4 (compressionType,                            ""compressionType"");
        Skip_PA(                                            ""compressionName"");

        //Filling
        CodecID_Fill(Ztring().From_CC4(compressionType), Stream_Audio, StreamPos_Last, InfoCodecID_Format_Mpeg4);
        Fill(Stream_Audio, StreamPos_Last, Audio_Codec, Ztring().From_CC4(compressionType));
    }
    else
    {
        //Filling
        Fill(Stream_Audio, StreamPos_Last, Audio_Format, ""PCM"");
        Fill(Stream_Audio, StreamPos_Last, Audio_Codec, ""PCM"");
    }

    //Filling
    Fill(Stream_Audio, StreamPos_Last, Audio_Channel_s_, numChannels);
    Fill(Stream_Audio, StreamPos_Last, Audio_BitDepth, sampleSize);
    if (sampleRate)
        Fill(Stream_Audio, StreamPos_Last, Audio_Duration, numSampleFrames/sampleRate*1000);
    Fill(Stream_Audio, StreamPos_Last, Audio_SamplingRate, sampleRate, 0);

    //Compute the current codec ID
    Element_Code=(int64u)-1;
    Stream_ID=(int32u)-1;
    stream_Count=1;

    //Specific cases
    #if defined(MEDIAINFO_SMPTEST0337_YES)
    if (Retrieve(Stream_Audio, 0, Audio_CodecID).empty() && numChannels==2 && sampleSize<=32 && sampleRate==48000) //Some SMPTE ST 337 streams are hidden in PCM stream
    {
        File_SmpteSt0337* Parser=new File_SmpteSt0337;
        Parser->Endianness='B';
        Parser->Container_Bits=(int8u)sampleSize;
        Parser->ShouldContinueParsing=true;
        #if MEDIAINFO_DEMUX
            if (Config->Demux_Unpacketize_Get())
            {
                Parser->Demux_Level=2; //Container
                Parser->Demux_UnpacketizeContainer=true;
                Demux_Level=4; //Intermediate
            }
        #endif //MEDIAINFO_DEMUX
        Stream[Stream_ID].Parsers.push_back(Parser);
    }
    #endif

    stream& StreamItem = Stream[Stream_ID];
    #if defined(MEDIAINFO_PCM_YES)
        File_Pcm* Parser=new File_Pcm;
        Parser->Codec=Retrieve(Stream_Audio, StreamPos_Last, Audio_CodecID);
        if (Parser->Codec.empty() || Parser->Codec==__T(""NONE""))
            Parser->Endianness='B';
        Parser->BitDepth=(int8u)sampleSize;
        #if MEDIAINFO_DEMUX
            if (Demux_Rate)
                Parser->Frame_Count_Valid = float64_int64s(Demux_Rate);
            if (Config->Demux_Unpacketize_Get())
            {
                Parser->Demux_Level=2; //Container
                Parser->Demux_UnpacketizeContainer=true;
                Demux_Level=4; //Intermediate
            }
        #else //MEDIAINFO_DEMUX
            Parser->Frame_Count_Valid=(int64u)-1; //Disabling it, waiting for SMPTE ST 337 parser reject
        #endif //MEDIAINFO_DEMUX
        StreamItem.Parsers.push_back(Parser);
        StreamItem.IsPcm=true;
        StreamItem.StreamKind=Stream_Audio;
    #endif
    #if MEDIAINFO_DEMUX
        BlockAlign=numChannels*sampleSize/8;
        AvgBytesPerSec=(int32u)float64_int64s(BlockAlign*(float64)sampleRate);
    #endif //MEDIAINFO_DEMUX

    Element_Code=(int64u)-1;
    Open_Buffer_Init_All();
}

//---------------------------------------------------------------------------
void File_Riff::AIFF_COMT()
{
    //Parsing
    int16u numComments;
    Get_B2(numComments,                                         ""numComments"");
    for (int16u Pos=0; Pos<=numComments; Pos++)
    {
        Ztring text;
        int16u count;
        Element_Begin1(""Comment"");
        Skip_B4(                                                ""timeStamp"");
        Skip_B4(                                                ""marker"");
        Get_B2 (count,                                          ""count"");
        count+=count%1; //always even
        Get_Local(count, text,                                  ""text"");
        Element_End0();

        //Filling
        Fill(Stream_General, 0, General_Comment, text);
    }
}

//---------------------------------------------------------------------------
void File_Riff::AIFF_SSND()
{
    WAVE_data();
}

//---------------------------------------------------------------------------
void File_Riff::AIFF_SSND_Continue()
{
    WAVE_data_Continue();
}

//---------------------------------------------------------------------------
void File_Riff::AIFF_xxxx()
{
    #define ELEMENT_CASE(_ELEMENT, _NAME) \
        case Elements::_ELEMENT : Element_Name(_NAME); Name=_NAME; break;

    //Known?
    std::string Name;
    switch(Element_Code)
    {
        ELEMENT_CASE(AIFF__c__, ""Copyright"");
        ELEMENT_CASE(AIFF_ANNO, ""Comment"");
        ELEMENT_CASE(AIFF_AUTH, ""Performer"");
        ELEMENT_CASE(AIFF_NAME, ""Title"");
        default : Skip_XX(Element_Size,                         ""Unknown"");
                  return;
    }

    //Parsing
    Ztring text;
    Get_Local(Element_Size, text,                               ""text"");

    //Filling
    Fill(Stream_General, 0, Name.c_str(), text);
}

//---------------------------------------------------------------------------
void File_Riff::AVI_()
{
    Element_Name(""AVI"");

    //Test if there is only one AVI chunk
    if (Status[IsAccepted])
    {
        Element_Info1(""Problem: 2 AVI chunks, this is not normal"");
        Skip_XX(Element_TotalSize_Get(),                        ""Data"");
        return;
    }

    Data_Accept(""AVI"");

    //Filling
    Fill(Stream_General, 0, General_Format, ""AVI"");
    Kind=Kind_Avi;

    //Configuration
    Buffer_MaximumSize=64*1024*1024; //Some big frames are possible (e.g YUV 4:2:2 10 bits 1080p)
}

//---------------------------------------------------------------------------
void File_Riff::AVI__Cr8r()
{
    Element_Name(""Adobe Premiere Cr8r"");

    //Parsing
    Skip_C4(                                                    ""FourCC"");
    Skip_B4(                                                    ""Size"");
    Skip_XX(Element_Size-Element_Offset,                        ""Unknown"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__cset()
{
    Element_Name(""Regional settings"");

    //Parsing
    Skip_L2(                                                    ""CodePage""); //TODO: take a look about IBM/MS RIFF/MCI Specification 1.0
    Skip_L2(                                                    ""CountryCode"");
    Skip_L2(                                                    ""LanguageCode"");
    Skip_L2(                                                    ""Dialect"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__exif()
{
    Element_Name(""Exif (Exchangeable Image File Format)"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__exif_xxxx()
{
    Element_Name(""Value"");

    //Parsing
    Ztring Value;
    Get_Local(Element_Size, Value,                              ""Value"");

    //Filling
    switch (Element_Code)
    {
        case Elements::AVI__exif_ecor : Fill(Stream_General, 0, ""Make"", Value); break;
        case Elements::AVI__exif_emdl : Fill(Stream_General, 0, ""Model"", Value); break;
        case Elements::AVI__exif_emnt : Fill(Stream_General, 0, ""MakerNotes"", Value); break;
        case Elements::AVI__exif_erel : Fill(Stream_General, 0, ""RelatedImageFile"", Value); break;
        case Elements::AVI__exif_etim : Fill(Stream_General, 0, ""Written_Date"", Value); break;
        case Elements::AVI__exif_eucm : Fill(Stream_General, 0, General_Comment, Value); break;
        case Elements::AVI__exif_ever : break; //Exif version
        default:                    Fill(Stream_General, 0, Ztring().From_CC4((int32u)Element_Code).To_Local().c_str(), Value);
    }
}

//---------------------------------------------------------------------------
void File_Riff::AVI__goog()
{
    Element_Name(""Google specific"");

    //Filling
    Fill(Stream_General, 0, General_Format, ""Google Video"", Unlimited, false, true);
}

//---------------------------------------------------------------------------
void File_Riff::AVI__goog_GDAT()
{
    Element_Name(""Google datas"");
}

//---------------------------------------------------------------------------
// Google Metadata
//
void File_Riff::AVI__GMET()
{
    Element_Name(""Google Metadatas"");

    //Parsing
    Ztring Value; Value.From_Local((const char*)(Buffer+Buffer_Offset+0), (size_t)Element_Size);
    ZtringListList List;
    List.Separator_Set(0, __T(""\n""));
    List.Separator_Set(1, __T("":""));
    List.Max_Set(1, 2);
    List.Write(Value);

    //Details
    #if MEDIAINFO_TRACE
        if (Config_Trace_Level)
        {
            //for (size_t Pos=0; Pos<List.size(); Pos++)
            //    Details_Add_Info(Pos, List(Pos, 0).To_Local().c_str(), List(Pos, 1));
        }
    #endif //MEDIAINFO_TRACE

    //Filling
    for (size_t Pos=0; Pos<List.size(); Pos++)
    {
        if (List(Pos, 0)==__T(""title""))          Fill(Stream_General, 0, General_Title, List(Pos, 1));
        if (List(Pos, 0)==__T(""description""))    Fill(Stream_General, 0, General_Title_More, List(Pos, 1));
        if (List(Pos, 0)==__T(""url""))            Fill(Stream_General, 0, General_Title_Url, List(Pos, 1));
        if (List(Pos, 0)==__T(""docid""))          Fill(Stream_General, 0, General_UniqueID, List(Pos, 1));
    }
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr()
{
    Element_Name(""AVI Header"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_avih()
{
    Element_Name(""File header"");

    //Parsing
    int32u MicrosecPerFrame, Flags;
    Get_L4 (MicrosecPerFrame,                                   ""MicrosecPerFrame"");
    Skip_L4(                                                    ""MaxBytesPerSec"");
    Skip_L4(                                                    ""PaddingGranularity"");
    Get_L4 (Flags,                                              ""Flags"");
        Skip_Flags(Flags,  4,                                   ""HasIndex"");
        Skip_Flags(Flags,  5,                                   ""MustUseIndex"");
        Skip_Flags(Flags,  8,                                   ""IsInterleaved"");
        Skip_Flags(Flags,  9,                                   ""UseCKTypeToFindKeyFrames"");
        Skip_Flags(Flags, 11,                                   ""TrustCKType"");
        Skip_Flags(Flags, 16,                                   ""WasCaptureFile"");
        Skip_Flags(Flags, 17,                                   ""Copyrighted"");
    Get_L4 (avih_TotalFrame,                                    ""TotalFrames"");
    Skip_L4(                                                    ""InitialFrames"");
    Skip_L4(                                                    ""StreamsCount"");
    Skip_L4(                                                    ""SuggestedBufferSize"");
    Skip_L4(                                                    ""Width"");
    Skip_L4(                                                    ""Height"");
    Skip_L4(                                                    ""Reserved"");
    Skip_L4(                                                    ""Reserved"");
    Skip_L4(                                                    ""Reserved"");
    Skip_L4(                                                    ""Reserved"");
    if(Element_Offset<Element_Size)
        Skip_XX(Element_Size-Element_Offset,                    ""Unknown"");

    //Filling
    if (MicrosecPerFrame>0)
        avih_FrameRate=1000000.0/MicrosecPerFrame;
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_JUNK()
{
    Element_Name(""Garbage"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_odml()
{
    Element_Name(""OpenDML"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_odml_dmlh()
{
    Element_Name(""OpenDML Header"");

    //Parsing
    Get_L4(dmlh_TotalFrame,                                     ""GrandFrames"");
    if (Element_Offset<Element_Size)
        Skip_XX(Element_Size-Element_Offset,                    ""Unknown"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_ON2h()
{
    Element_Name(""On2 header"");

    //Parsing
    Skip_XX(Element_Size,                                       ""Unknown"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl()
{
    Element_Name(""Stream info"");
    Element_Info1(stream_Count);

    //Clean up
    StreamKind_Last=Stream_Max;
    StreamPos_Last=(size_t)-1;

    //Compute the current codec ID
    Stream_ID=(('0'+stream_Count/10)*0x01000000
              +('0'+stream_Count   )*0x00010000);
    stream_Count++;
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_indx()
{
    Element_Name(""Index"");

    int32u Entry_Count, ChunkId;
    int16u LongsPerEntry;
    int8u  IndexType, IndexSubType;
    Get_L2 (LongsPerEntry,                                      ""LongsPerEntry""); //Size of each entry in aIndex array
    Get_L1 (IndexSubType,                                       ""IndexSubType"");
    Get_L1 (IndexType,                                          ""IndexType"");
    Get_L4 (Entry_Count,                                        ""EntriesInUse""); //Index of first unused member in aIndex array
    Get_C4 (ChunkId,                                            ""ChunkId""); //FCC of what is indexed

    //Depends of size of structure...
    switch (IndexType)
    {
        case 0x01 : //AVI_INDEX_OF_CHUNKS
                    switch (IndexSubType)
                    {
                        case 0x00 : AVI__hdlr_strl_indx_StandardIndex(Entry_Count, ChunkId); break;
                        case 0x01 : AVI__hdlr_strl_indx_FieldIndex(Entry_Count, ChunkId); break; //AVI_INDEX_2FIELD
                        default: Skip_XX(Element_Size-Element_Offset, ""Unknown"");
                    }
                    break;
        case 0x0 : //AVI_INDEX_OF_INDEXES
                    switch (IndexSubType)
                    {
                        case 0x00 :
                        case 0x01 : AVI__hdlr_strl_indx_SuperIndex(Entry_Count, ChunkId); break; //AVI_INDEX_2FIELD
                        default: Skip_XX(Element_Size-Element_Offset, ""Unknown"");
                    }
                    break;
        default: Skip_XX(Element_Size-Element_Offset,           ""Unknown"");
    }
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_indx_StandardIndex(int32u Entry_Count, int32u ChunkId)
{
    Element_Name(""Standard Index"");

    //Parsing
    int64u BaseOffset, StreamSize=0;
    Get_L8 (BaseOffset,                                         ""BaseOffset"");
    Skip_L4(                                                    ""Reserved3"");
    for (int32u Pos=0; Pos<Entry_Count; Pos++)
    {
        //Is too slow
        /*
        Element_Begin1(""Index"");
        int32u Offset, Size;
        Get_L4 (Offset,                                         ""Offset""); //BaseOffset + this is absolute file offset
        Get_L4 (Size,                                           ""Size""); //Bit 31 is set if this is NOT a keyframe
        Element_Info1(Size&0x7FFFFFFF);
        if (Size)
            Element_Info1(""KeyFrame"");
        Element_End0();
        */

        //Faster method
        if (Element_Offset+8>Element_Size)
            break; //Malformed index
        int32u Offset=LittleEndian2int32u(Buffer+Buffer_Offset+(size_t)Element_Offset  );
        int32u Size  =LittleEndian2int32u(Buffer+Buffer_Offset+(size_t)Element_Offset+4)&0x7FFFFFFF;
        Element_Offset+=8;

        //Stream Position and size
        if (Pos<300 || MediaInfoLib::Config.ParseSpeed_Get()==1.00)
        {
            Stream_Structure[BaseOffset+Offset-8].Name=ChunkId&0xFFFF0000;
            Stream_Structure[BaseOffset+Offset-8].Size=Size;
        }
        StreamSize+=(Size&0x7FFFFFFF);
        Stream[ChunkId&0xFFFF0000].PacketCount++;

        //Interleaved
        if (Pos==  0 && (ChunkId&0xFFFF0000)==0x30300000 && Interleaved0_1  ==0)
            Interleaved0_1 =BaseOffset+Offset-8;
        if (Pos==Entry_Count/10 && (ChunkId&0xFFFF0000)==0x30300000 && Interleaved0_10==0)
            Interleaved0_10=BaseOffset+Offset-8;
        if (Pos==  0 && (ChunkId&0xFFFF0000)==0x30310000 && Interleaved1_1  ==0)
            Interleaved1_1 =BaseOffset+Offset-8;
        if (Pos==Entry_Count/10 && (ChunkId&0xFFFF0000)==0x30310000 && Interleaved1_10==0)
            Interleaved1_10=BaseOffset+Offset-8;
    }
    Stream[ChunkId&0xFFFF0000].StreamSize+=StreamSize;
    if (Element_Offset<Element_Size)
        Skip_XX(Element_Size-Element_Offset,                    ""Garbage"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_indx_FieldIndex(int32u Entry_Count, int32u)
{
    Element_Name(""Field Index"");

    //Parsing
    Skip_L8(                                                    ""Offset"");
    Skip_L4(                                                    ""Reserved2"");
    for (int32u Pos=0; Pos<Entry_Count; Pos++)
    {
        Element_Begin1(""Index"");
        Skip_L4(                                                ""Offset""); //BaseOffset + this is absolute file offset
        Skip_L4(                                                ""Size""); //Bit 31 is set if this is NOT a keyframe
        Skip_L4(                                                ""OffsetField2""); //Offset to second field
        Element_End0();
    }
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_indx_SuperIndex(int32u Entry_Count, int32u ChunkId)
{
    Element_Name(""Index of Indexes"");

    //Parsing
    int64u Offset;
    Skip_L4(                                                    ""Reserved0"");
    Skip_L4(                                                    ""Reserved1"");
    Skip_L4(                                                    ""Reserved2"");
    stream& StreamItem = Stream[Stream_ID];
    for (int32u Pos=0; Pos<Entry_Count; Pos++)
    {
        int32u Duration;
        Element_Begin1(""Index of Indexes"");
        Get_L8 (Offset,                                         ""Offset"");
        Skip_L4(                                                ""Size""); //Size of index chunk at this offset
        Get_L4 (Duration,                                       ""Duration""); //time span in stream ticks
        Index_Pos[Offset]=ChunkId;
        StreamItem.indx_Duration+=Duration;
        Element_End0();
    }

    //We needn't anymore Old version
    NeedOldIndex=false;
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_JUNK()
{
    Element_Name(""Garbage"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strd()
{
    Element_Name(""Stream datas"");

    //Parsing
    Skip_XX(Element_Size,                                       ""Unknown"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strf()
{
    Element_Name(""Stream format"");

    //Parse depending of kind of stream
    stream& StreamItem = Stream[Stream_ID];
    switch (StreamItem.fccType)
    {
        case Elements::AVI__hdlr_strl_strh_auds : AVI__hdlr_strl_strf_auds(); break;
        case Elements::AVI__hdlr_strl_strh_iavs : AVI__hdlr_strl_strf_iavs(); break;
        case Elements::AVI__hdlr_strl_strh_mids : AVI__hdlr_strl_strf_mids(); break;
        case Elements::AVI__hdlr_strl_strh_txts : AVI__hdlr_strl_strf_txts(); break;
        case Elements::AVI__hdlr_strl_strh_vids : AVI__hdlr_strl_strf_vids(); break;
        default :                                 Element_Info1(""Unknown"");
    }

    //Registering stream
    StreamItem.StreamKind=StreamKind_Last;
    StreamItem.StreamPos=StreamPos_Last;
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strf_auds()
{
    Element_Info1(""Audio"");

    //Parsing
    #if !MEDIAINFO_DEMUX
        int32u AvgBytesPerSec;
    #endif //!MEDIAINFO_DEMUX
    int16u FormatTag, Channels;
    BitsPerSample=0;
    Get_L2 (FormatTag,                                          ""FormatTag"");
    Get_L2 (Channels,                                           ""Channels"");
    Get_L4 (SamplesPerSec,                                      ""SamplesPerSec"");
    Get_L4 (AvgBytesPerSec,                                     ""AvgBytesPerSec"");
    #if MEDIAINFO_DEMUX
        Get_L2 (BlockAlign,                                     ""BlockAlign"");
    #else //MEDIAINFO_DEMUX
        Skip_L2(                                                ""BlockAlign"");
    #endif //MEDIAINFO_DEMUX
    if (Element_Offset+2<=Element_Size)
        Get_L2 (BitsPerSample,                                  ""BitsPerSample"");

    if (FormatTag==1) //Only for PCM
    {
        //Coherancy
        if (BitsPerSample && SamplesPerSec*BitsPerSample*Channels/8==AvgBytesPerSec*8)
            AvgBytesPerSec*=8; //Found in one file. TODO: Provide information to end user about such error

        //Computing of missing value
        if (!BitsPerSample && AvgBytesPerSec && SamplesPerSec && Channels)
            BitsPerSample=(int16u)(AvgBytesPerSec*8/SamplesPerSec/Channels);
    }

    //Filling
    Stream_Prepare(Stream_Audio);
    stream& StreamItem = Stream[Stream_ID];
    StreamItem.Compression=FormatTag;
    Ztring Codec; Codec.From_Number(FormatTag, 16);
    Codec.MakeUpperCase();
    CodecID_Fill(Codec, Stream_Audio, StreamPos_Last, InfoCodecID_Format_Riff);
    Fill(Stream_Audio, StreamPos_Last, Audio_Codec, Codec); //May be replaced by codec parser
    Fill(Stream_Audio, StreamPos_Last, Audio_Codec_CC, Codec);
    if (Channels)
        Fill(Stream_Audio, StreamPos_Last, Audio_Channel_s_, (Channels!=5 || FormatTag==0xFFFE)?Channels:6);
    if (SamplesPerSec)
        Fill(Stream_Audio, StreamPos_Last, Audio_SamplingRate, SamplesPerSec);
    if (AvgBytesPerSec)
        Fill(Stream_Audio, StreamPos_Last, Audio_BitRate, AvgBytesPerSec*8);
    if (BitsPerSample)
        Fill(Stream_Audio, StreamPos_Last, Audio_BitDepth, BitsPerSample);
    StreamItem.AvgBytesPerSec=AvgBytesPerSec; //Saving bitrate for each stream
    if (SamplesPerSec && TimeReference!=(int64u)-1)
    {
        Fill(Stream_Audio, 0, Audio_Delay, float64_int64s(((float64)TimeReference)*1000/SamplesPerSec));
        Fill(Stream_Audio, 0, Audio_Delay_Source, ""Container (bext)"");
    }

    //Specific cases
    #if defined(MEDIAINFO_DTS_YES) || defined(MEDIAINFO_SMPTEST0337_YES)
    if (FormatTag==0x1 && Retrieve(Stream_General, 0, General_Format)==__T(""Wave"")) //Some DTS or SMPTE ST 337 streams are coded ""1""
    {
        #if defined(MEDIAINFO_DTS_YES)
        {
            File_Dts* Parser=new File_Dts;
            Parser->Frame_Count_Valid=2;
            Parser->ShouldContinueParsing=true;
            #if MEDIAINFO_DEMUX
                if (Config->Demux_Unpacketize_Get() && Retrieve(Stream_General, 0, General_Format)==__T(""Wave""))
                {
                    Parser->Demux_Level=2; //Container
                    Parser->Demux_UnpacketizeContainer=true;
                    Demux_Level=4; //Intermediate
                }
            #endif //MEDIAINFO_DEMUX
            StreamItem.Parsers.push_back(Parser);
        }
        #endif

        #if defined(MEDIAINFO_SMPTEST0337_YES)
        {
            File_SmpteSt0337* Parser=new File_SmpteSt0337;
            Parser->Container_Bits=(int8u)BitsPerSample;
            Parser->Aligned=true;
            Parser->ShouldContinueParsing=true;
            #if MEDIAINFO_DEMUX
                if (Config->Demux_Unpacketize_Get() && Retrieve(Stream_General, 0, General_Format)==__T(""Wave""))
                {
                    Parser->Demux_Level=2; //Container
                    Parser->Demux_UnpacketizeContainer=true;
                    Demux_Level=4; //Intermediate
                }
            #endif //MEDIAINFO_DEMUX
            StreamItem.Parsers.push_back(Parser);
        }
        #endif
    }
    #endif

    //Creating the parser
         if (0);
    #if defined(MEDIAINFO_MPEGA_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Audio, InfoCodecID_Format_Riff, Codec)==__T(""MPEG Audio""))
    {
        File_Mpega* Parser=new File_Mpega;
        Parser->CalculateDelay=true;
        Parser->ShouldContinueParsing=true;
        StreamItem.Parsers.push_back(Parser);
    }
    #endif
    #if defined(MEDIAINFO_AC3_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Audio, InfoCodecID_Format_Riff, Codec)==__T(""AC-3""))
    {
        File_Ac3* Parser=new File_Ac3;
        Parser->Frame_Count_Valid=2;
        Parser->CalculateDelay=true;
        Parser->ShouldContinueParsing=true;
        StreamItem.Parsers.push_back(Parser);
    }
    #endif
    #if defined(MEDIAINFO_DTS_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Audio, InfoCodecID_Format_Riff, Codec)==__T(""DTS""))
    {
        File_Dts* Parser=new File_Dts;
        Parser->Frame_Count_Valid=2;
        Parser->ShouldContinueParsing=true;
        StreamItem.Parsers.push_back(Parser);
    }
    #endif
    #if defined(MEDIAINFO_AAC_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Audio, InfoCodecID_Format_Riff, Codec)==__T(""AAC""))
    {
        File_Aac* Parser=new File_Aac;
        Parser->Mode=File_Aac::Mode_ADTS;
        Parser->Frame_Count_Valid=1;
        Parser->ShouldContinueParsing=true;
        StreamItem.Parsers.push_back(Parser);
    }
    #endif
    #if defined(MEDIAINFO_PCM_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Audio, InfoCodecID_Format_Riff, Codec)==__T(""PCM""))
    {
        File_Pcm* Parser=new File_Pcm;
        Parser->Codec=Codec;
        Parser->Endianness='L';
        Parser->BitDepth=(int8u)BitsPerSample;
        #if MEDIAINFO_DEMUX
            if (Demux_Rate)
                Parser->Frame_Count_Valid = float64_int64s(Demux_Rate);
            if (Config->Demux_Unpacketize_Get() && Retrieve(Stream_General, 0, General_Format)==__T(""Wave""))
            {
                Parser->Demux_Level=2; //Container
                Parser->Demux_UnpacketizeContainer=true;
                Demux_Level=4; //Intermediate
            }
        #else //MEDIAINFO_DEMUX
            Parser->Frame_Count_Valid=(int64u)-1; //Disabling it, waiting for SMPTE ST 337 parser reject
        #endif //MEDIAINFO_DEMUX
        stream& StreamItem = Stream[Stream_ID];
        StreamItem.Parsers.push_back(Parser);
        StreamItem.IsPcm=true;
    }
    #endif
    #if defined(MEDIAINFO_ADPCM_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Audio, InfoCodecID_Format_Riff, Codec)==__T(""ADPCM""))
    {
        //Creating the parser
        File_Adpcm MI;
        MI.Codec=Codec;

        //Parsing
        Open_Buffer_Init(&MI);
        Open_Buffer_Continue(&MI, 0);

        //Filling
        Finish(&MI);
        Merge(MI, StreamKind_Last, 0, StreamPos_Last);
    }
    #endif
    #if defined(MEDIAINFO_OGG_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Audio, InfoCodecID_Format_Riff, Codec)==__T(""Vorbis"")
          && FormatTag!=0x566F) //0x566F has config in this chunk
    {
        File_Ogg* Parser=new File_Ogg;
        Parser->ShouldContinueParsing=true;
        StreamItem.Parsers.push_back(Parser);
    }
    #endif
    Open_Buffer_Init_All();

    //Options
    if (Element_Offset+2>Element_Size)
        return; //No options

    //Parsing
    int16u Option_Size;
    Get_L2 (Option_Size,                                        ""cbSize"");

    //Filling
    if (Option_Size>0)
    {
             if (0);
        else if (MediaInfoLib::Config.CodecID_Get(Stream_Audio, InfoCodecID_Format_Riff, Codec)==__T(""MPEG Audio""))
        {
            if (Option_Size==12)
                AVI__hdlr_strl_strf_auds_Mpega();
            else
                Skip_XX(Option_Size,                            ""MPEG Audio - Uknown"");
        }
        else if (Codec==__T(""AAC"") || Codec==__T(""FF"") || Codec==__T(""8180""))
            AVI__hdlr_strl_strf_auds_Aac();
        else if (FormatTag==0x566F) //Vorbis with Config in this chunk
            AVI__hdlr_strl_strf_auds_Vorbis();
        else if (FormatTag==0x6750) //Vorbis with Config in this chunk
            AVI__hdlr_strl_strf_auds_Vorbis2();
        else if (FormatTag==0xFFFE) //Extensible Wave
            AVI__hdlr_strl_strf_auds_ExtensibleWave();
        else if (Element_Offset+Option_Size<=Element_Size)
            Skip_XX(Option_Size,                               ""Unknown"");
        else if (Element_Offset!=Element_Size)
            Skip_XX(Element_Size-Element_Offset,               ""Error"");
    }
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strf_auds_Mpega()
{
    //Parsing
    Element_Begin1(""MPEG Audio options"");
    Skip_L2(                                                    ""ID"");
    Skip_L4(                                                    ""Flags"");
    Skip_L2(                                                    ""BlockSize"");
    Skip_L2(                                                    ""FramesPerBlock"");
    Skip_L2(                                                    ""CodecDelay"");
    Element_End0();
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strf_auds_Aac()
{
    //Parsing
    Element_Begin1(""AAC options"");
    #if defined(MEDIAINFO_AAC_YES)
        File_Aac* MI=new File_Aac();
        MI->Mode=File_Aac::Mode_AudioSpecificConfig;
        Open_Buffer_Init(MI);
        Open_Buffer_Continue(MI);
        Finish(MI);
        Merge(*MI, StreamKind_Last, 0, StreamPos_Last);
        delete MI; //MI=NULL;
    #else //MEDIAINFO_MPEG4_YES
        Skip_XX(Element_Size-Element_Offset,                    ""(AudioSpecificConfig)"");
    #endif
    Element_End0();
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strf_auds_Vorbis()
{
    //Parsing
    Element_Begin1(""Vorbis options"");
    #if defined(MEDIAINFO_OGG_YES)
        File_Ogg_SubElement MI;
        Open_Buffer_Init(&MI);
        Element_Begin1(""Element sizes"");
            //All elements parsing, except last one
            std::vector<size_t> Elements_Size;
            size_t Elements_TotalSize=0;
            int8u Elements_Count;
            Get_L1(Elements_Count,                                  ""Element count"");
            Elements_Size.resize(Elements_Count+1); //+1 for the last block
            for (int8u Pos=0; Pos<Elements_Count; Pos++)
            {
                int8u Size;
                Get_L1(Size,                                        ""Size"");
                Elements_Size[Pos]=Size;
                Elements_TotalSize+=Size;
            }
        Element_End0();
        if (Element_Offset+Elements_TotalSize>Element_Size)
            return;
        //Adding the last block
        Elements_Size[Elements_Count]=(size_t)(Element_Size-(Element_Offset+Elements_TotalSize));
        Elements_Count++;
        //Parsing blocks
        for (int8u Pos=0; Pos<Elements_Count; Pos++)
        {
            Open_Buffer_Continue(&MI, Elements_Size[Pos]);
            Open_Buffer_Continue(&MI, 0);
            Element_Offset+=Elements_Size[Pos];
        }
        //Finalizing
        Finish(&MI);
        Merge(MI, StreamKind_Last, 0, StreamPos_Last);
        Clear(Stream_Audio, StreamPos_Last, Audio_BitDepth); //Resolution is not valid for Vorbis
        Element_Show();
    #else //MEDIAINFO_MPEG4_YES
        Skip_XX(Element_Size-Element_Offset,                    ""(Vorbis headers)"");
    #endif
    Element_End0();
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strf_auds_Vorbis2()
{
    //Parsing
    Skip_XX(8,                                                  ""Vorbis Unknown"");
    Element_Begin1(""Vorbis options"");
    #if defined(MEDIAINFO_OGG_YES)
        stream& StreamItem = Stream[Stream_ID];
        Open_Buffer_Continue(StreamItem.Parsers[0]);
        Open_Buffer_Continue(StreamItem.Parsers[0], 0);
        Finish(StreamItem.Parsers[0]);
        Merge(*StreamItem.Parsers[0], StreamKind_Last, 0, StreamPos_Last);
        Element_Show();
    #else //MEDIAINFO_MPEG4_YES
        Skip_XX(Element_Size-Element_Offset,                    ""(Vorbis headers)"");
    #endif
    Element_End0();
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strf_auds_ExtensibleWave()
{
    //Parsing
    int128u SubFormat;
    int32u ChannelMask;
    Skip_L2(                                                    ""ValidBitsPerSample / SamplesPerBlock"");
    Get_L4 (ChannelMask,                                        ""ChannelMask"");
    Get_GUID(SubFormat,                                         ""SubFormat"");

    FILLING_BEGIN();
        if ((SubFormat.hi&0xFFFFFFFFFFFF0000LL)==0x0010000000000000LL && SubFormat.lo==0x800000AA00389B71LL)
        {
            CodecID_Fill(Ztring().From_Number((int16u)SubFormat.hi, 16), Stream_Audio, StreamPos_Last, InfoCodecID_Format_Riff);
            Fill(Stream_Audio, StreamPos_Last, Audio_CodecID, Ztring().From_GUID(SubFormat), true);
            Fill(Stream_Audio, StreamPos_Last, Audio_Codec, MediaInfoLib::Config.Codec_Get(Ztring().From_Number((int16u)SubFormat.hi, 16)), true);

            //Creating the parser
                 if (0);
            #if defined(MEDIAINFO_PCM_YES)
            else if (MediaInfoLib::Config.CodecID_Get(Stream_Audio, InfoCodecID_Format_Riff, Ztring().From_Number((int16u)SubFormat.hi, 16))==__T(""PCM""))
            {
                //Creating the parser
                File_Pcm* Parser=new File_Pcm;
                Parser->Codec=Ztring().From_GUID(SubFormat);
                Parser->Endianness='L';
                Parser->Sign='S';
                Parser->BitDepth=(int8u)BitsPerSample;
                #if MEDIAINFO_DEMUX
                    if (Config->Demux_Unpacketize_Get() && Retrieve(Stream_General, 0, General_Format)==__T(""Wave""))
                    {
                        Parser->Demux_Level=2; //Container
                        Parser->Demux_UnpacketizeContainer=true;
                        Demux_Level=4; //Intermediate
                    }
                #endif //MEDIAINFO_DEMUX
                stream& StreamItem = Stream[Stream_ID];
                StreamItem.Parsers.push_back(Parser);
                StreamItem.IsPcm=true;
            }
            #endif
            Open_Buffer_Init_All();
        }
        else
        {
            CodecID_Fill(Ztring().From_GUID(SubFormat), Stream_Audio, StreamPos_Last, InfoCodecID_Format_Riff);
        }
        Fill(Stream_Audio, StreamPos_Last, Audio_ChannelPositions, ExtensibleWave_ChannelMask(ChannelMask));
        Fill(Stream_Audio, StreamPos_Last, Audio_ChannelPositions_String2, ExtensibleWave_ChannelMask2(ChannelMask));
    FILLING_END();
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strf_iavs()
{
    //Standard video header before Iavs?
    if (Element_Size==72)
    {
        Element_Begin0();
            AVI__hdlr_strl_strf_vids();
        Element_End0();
    }

    Element_Info1(""Interleaved Audio/Video"");

    #ifdef MEDIAINFO_DVDIF_YES
        if (Element_Size<8*4)
            return;

        //Parsing
        DV_FromHeader=new File_DvDif();
        Open_Buffer_Init(DV_FromHeader);

        //DVAAuxSrc
        ((File_DvDif*)DV_FromHeader)->AuxToAnalyze=0x50; //Audio source
        Open_Buffer_Continue(DV_FromHeader, 4);
        //DVAAuxCtl
        ((File_DvDif*)DV_FromHeader)->AuxToAnalyze=0x51; //Audio control
        Open_Buffer_Continue(DV_FromHeader, Buffer+Buffer_Offset+(size_t)Element_Offset, 4);
        Element_Offset+=4;
        //DVAAuxSrc1
        Skip_L4(                                                ""DVAAuxSrc1"");
        //DVAAuxCtl1
        Skip_L4(                                                ""DVAAuxCtl1"");
        //DVVAuxSrc
        ((File_DvDif*)DV_FromHeader)->AuxToAnalyze=0x60; //Video source
        Open_Buffer_Continue(DV_FromHeader, 4);
        //DVAAuxCtl
        ((File_DvDif*)DV_FromHeader)->AuxToAnalyze=0x61; //Video control
        Open_Buffer_Continue(DV_FromHeader, 4);
        //Reserved
        if (Element_Offset<Element_Size)
        {
            Skip_L4(                                            ""DVReserved"");
            Skip_L4(                                            ""DVReserved"");
        }

        Finish(DV_FromHeader);

        Stream_Prepare(Stream_Video);
        stream& StreamItem = Stream[Stream_ID];
        StreamItem.Parsers.push_back(new File_DvDif);
        Open_Buffer_Init(StreamItem.Parsers[0]);

    #else //MEDIAINFO_DVDIF_YES
        //Parsing
        Skip_L4(                                                ""DVAAuxSrc"");
        Skip_L4(                                                ""DVAAuxCtl"");
        Skip_L4(                                                ""DVAAuxSrc1"");
        Skip_L4(                                                ""DVAAuxCtl1"");
        Skip_L4(                                                ""DVVAuxSrc"");
        Skip_L4(                                                ""DVVAuxCtl"");
        Skip_L4(                                                ""DVReserved"");
        Skip_L4(                                                ""DVReserved"");

        //Filling
        Ztring Codec; Codec.From_CC4(Stream[Stream_ID].fccHandler);
        Stream_Prepare(Stream_Video);
        float32 FrameRate=Retrieve(Stream_Video, StreamPos_Last, Video_FrameRate).To_float32();
        Fill(Stream_Video, StreamPos_Last, Video_Codec, Codec); //May be replaced by codec parser
        Fill(Stream_Video, StreamPos_Last, Video_Codec_CC, Codec);
             if (Codec==__T(""dvsd"")
              || Codec==__T(""dvsl""))
        {
                                        Fill(Stream_Video, StreamPos_Last, Video_Width,  720);
                 if (FrameRate==25.000) Fill(Stream_Video, StreamPos_Last, Video_Height, 576);
            else if (FrameRate==29.970) Fill(Stream_Video, StreamPos_Last, Video_Height, 480);
            Fill(Stream_Video, StreamPos_Last, Video_DisplayAspectRatio, 4.0/3, 3, true);
        }
        else if (Codec==__T(""dvhd""))
        {
                                        Fill(Stream_Video, StreamPos_Last, Video_Width,  1440);
                 if (FrameRate==25.000) Fill(Stream_Video, StreamPos_Last, Video_Height, 1152);
            else if (FrameRate==30.000) Fill(Stream_Video, StreamPos_Last, Video_Height,  960);
            Fill(Stream_Video, StreamPos_Last, Video_DisplayAspectRatio, 4.0/3, 3, true);
        }
        Stream_Prepare(Stream_Audio);
        CodecID_Fill(Codec, Stream_Audio, StreamPos_Last, InfoCodecID_Format_Riff);
        Fill(Stream_Audio, StreamPos_Last, Audio_Codec, Codec); //May be replaced by codec parser
        Fill(Stream_Audio, StreamPos_Last, Audio_Codec_CC, Codec);
    #endif //MEDIAINFO_DVDIF_YES
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strf_mids()
{
    Element_Info1(""Midi"");

    //Filling
    Stream_Prepare(Stream_Audio);
    Fill(Stream_Audio, StreamPos_Last, Audio_Format, ""MIDI"");
    Fill(Stream_Audio, StreamPos_Last, Audio_Codec, ""Midi"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strf_txts()
{
    Element_Info1(""Text"");

    //Parsing
    Ztring Format;
    if (Element_Size)
    {
        Get_Local(10, Format,                                   ""Format"");
        Skip_XX(22,                                             ""Unknown"");
    }

    FILLING_BEGIN_PRECISE();
        Stream_Prepare(Stream_Text);

        if (Element_Size==0)
        {
            //Creating the parser
            stream& StreamItem = Stream[Stream_ID];
            #if defined(MEDIAINFO_SUBRIP_YES)
            StreamItem.Parsers.push_back(new File_SubRip);
            #endif
            #if defined(MEDIAINFO_OTHERTEXT_YES)
            StreamItem.Parsers.push_back(new File_OtherText); //For SSA
            #endif

            Open_Buffer_Init_All();
        }
        else
        {
            Fill(Stream_Text, StreamPos_Last, Text_Format, Format);
        }
    FILLING_END();
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strf_vids()
{
    Element_Info1(""Video"");

    //Parsing
    int32u Compression, Width, Height;
    int16u Resolution;
    Skip_L4(                                                    ""Size"");
    Get_L4 (Width,                                              ""Width"");
    Get_L4 (Height,                                             ""Height"");
    Skip_L2(                                                    ""Planes"");
    Get_L2 (Resolution,                                         ""BitCount""); //Do not use it
    Get_C4 (Compression,                                        ""Compression"");
    Skip_L4(                                                    ""SizeImage"");
    Skip_L4(                                                    ""XPelsPerMeter"");
    Skip_L4(                                                    ""YPelsPerMeter"");
    Skip_L4(                                                    ""ClrUsed"");
    Skip_L4(                                                    ""ClrImportant"");

    //Filling
    Stream[Stream_ID].Compression=Compression;

    if (Compression==CC4(""DXSB""))
    {
        //Divx.com hack for subtitle, this is a text stream in a DivX Format
        Fill(Stream_General, 0, General_Format, ""DivX"", Unlimited, true, true);
        Stream_Prepare(Stream_Text);
    }
    else
        Stream_Prepare(Stream_Video);

    //Filling
    CodecID_Fill(Ztring().From_CC4(Compression), StreamKind_Last, StreamPos_Last, InfoCodecID_Format_Riff);
    Fill(StreamKind_Last, StreamPos_Last, Fill_Parameter(StreamKind_Last, Generic_Codec), Ztring().From_CC4(Compression).To_Local().c_str()); //FormatTag, may be replaced by codec parser
    Fill(StreamKind_Last, StreamPos_Last, Fill_Parameter(StreamKind_Last, Generic_Codec_CC), Ztring().From_CC4(Compression).To_Local().c_str()); //FormatTag
    Fill(StreamKind_Last, StreamPos_Last, ""Width"", Width, 10, true);
    Fill(StreamKind_Last, StreamPos_Last, ""Height"", Height>=0x80000000?(-((int32s)Height)):Height, 10, true); // AVI can use negative height for raw to signal that it's coded top-down, not bottom-up
    if (Resolution==32 && Compression==0x74736363) //tscc
        Fill(StreamKind_Last, StreamPos_Last, ""BitDepth"", 8);
    else if (Compression==0x44495633) //DIV3
        Fill(StreamKind_Last, StreamPos_Last, ""BitDepth"", 8);
    else if (MediaInfoLib::Config.CodecID_Get(StreamKind_Last, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression)).find(__T(""Canopus""))!=std::string::npos) //Canopus codecs
        Fill(StreamKind_Last, StreamPos_Last, ""BitDepth"", Resolution/3);
        else if (Compression==0x44585342) //DXSB
        Fill(StreamKind_Last, StreamPos_Last, ""BitDepth"", Resolution);
    else if (MediaInfoLib::Config.CodecID_Get(StreamKind_Last, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression), InfoCodecID_ColorSpace).find(__T(""RGBA""))!=std::string::npos) //RGB codecs
        Fill(StreamKind_Last, StreamPos_Last, ""BitDepth"", Resolution/4);
    else if (Compression==0x00000000 //RGB
            || MediaInfoLib::Config.CodecID_Get(StreamKind_Last, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression), InfoCodecID_ColorSpace).find(__T(""RGB""))!=std::string::npos) //RGB codecs
    {
        if (Resolution==32)
        {
            Fill(StreamKind_Last, StreamPos_Last, Fill_Parameter(StreamKind_Last, Generic_Format), ""RGBA"", Unlimited, true, true);
            Fill(StreamKind_Last, StreamPos_Last, ""BitDepth"", Resolution/4); //With Alpha
        }
        else
            Fill(StreamKind_Last, StreamPos_Last, ""BitDepth"", Resolution<=16?8:(Resolution/3)); //indexed or normal
    }
    else if (Compression==0x56503632 //VP62
            || MediaInfoLib::Config.CodecID_Get(StreamKind_Last, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression), InfoCodecID_Format)==__T(""H.263"") //H.263
            || MediaInfoLib::Config.CodecID_Get(StreamKind_Last, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression), InfoCodecID_Format)==__T(""VC-1"")) //VC-1
        Fill(StreamKind_Last, StreamPos_Last, ""BitDepth"", Resolution/3);
    Stream[Stream_ID].StreamKind=StreamKind_Last;

    //Creating the parser
         if (0);
    #if defined(MEDIAINFO_FFV1_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Video, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression), InfoCodecID_Format)==__T(""FFV1""))
    {
        File_Ffv1* Parser=new File_Ffv1;
        Parser->Width=Width;
        Parser->Height=Height;
        Stream[Stream_ID].Parsers.push_back(Parser);
    }
    #endif
    #if defined(MEDIAINFO_HUFFYUV_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Video, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression), InfoCodecID_Format)==__T(""HuffYUV""))
    {
        File_HuffYuv* Parser=new File_HuffYuv;
        Stream[Stream_ID].Parsers.push_back(Parser);
    }
    #endif
    #if defined(MEDIAINFO_MPEGV_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Video, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression), InfoCodecID_Format)==__T(""MPEG Video""))
    {
        File_Mpegv* Parser=new File_Mpegv;
        Parser->FrameIsAlwaysComplete=true;
        Parser->TimeCodeIsNotTrustable=true;
        Stream[Stream_ID].Parsers.push_back(Parser);
    }
    #endif
    #if defined(MEDIAINFO_MPEG4V_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Video, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression))==__T(""MPEG-4 Visual""))
    {
        File_Mpeg4v* Parser=new File_Mpeg4v;
        Stream[Stream_ID].Specific_IsMpeg4v=true;
        Parser->FrameIsAlwaysComplete=true;
        if (MediaInfoLib::Config.ParseSpeed_Get()>=0.5)
            Parser->ShouldContinueParsing=true;
        Stream[Stream_ID].Parsers.push_back(Parser);
    }
    #endif
    #if defined(MEDIAINFO_PRORES_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Video, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression), InfoCodecID_Format)==__T(""ProRes""))
    {
        File_ProRes* Parser=new File_ProRes;
        Stream[Stream_ID].Parsers.push_back(Parser);
    }
    #endif
    #if defined(MEDIAINFO_AVC_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Video, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression))==__T(""AVC""))
    {
        File_Avc* Parser=new File_Avc;
        Parser->FrameIsAlwaysComplete=true;
        Stream[Stream_ID].Parsers.push_back(Parser);
    }
    #endif
    #if defined(MEDIAINFO_CANOPUS_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Video, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression))==__T(""Canopus HQ""))
    {
        File_Canopus* Parser=new File_Canopus;
        Stream[Stream_ID].Parsers.push_back(Parser);
    }
    #endif
    #if defined(MEDIAINFO_JPEG_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Video, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression))==__T(""JPEG""))
    {
        File_Jpeg* Parser=new File_Jpeg;
        Parser->StreamKind=Stream_Video;
        Stream[Stream_ID].Parsers.push_back(Parser);
    }
    #endif
    #if defined(MEDIAINFO_DVDIF_YES)
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Video, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression))==__T(""DV""))
    {
        File_DvDif* Parser=new File_DvDif;
        Parser->IgnoreAudio=true;
        Stream[Stream_ID].Parsers.push_back(Parser);
    }
    #endif
    #if defined(MEDIAINFO_FRAPS_YES)
    else if (Compression==0x46505331) //""FPS1""
    {
        File_Fraps* Parser=new File_Fraps;
        Stream[Stream_ID].Parsers.push_back(Parser);
    }
    #endif
    else if (Compression==0x48465955) //""HFUY""
    {
        switch (Resolution)
        {
            case 16 : Fill(Stream_Video, StreamPos_Last, Video_ColorSpace, ""YUV""); Fill(Stream_Video, StreamPos_Last, Video_ChromaSubsampling, ""4:2:2""); Fill(Stream_Video, StreamPos_Last, Video_BitDepth, 8); break;
            case 24 : Fill(Stream_Video, StreamPos_Last, Video_ColorSpace, ""RGB""); Fill(Stream_Video, StreamPos_Last, Video_BitDepth, 8); break;
            case 32 : Fill(Stream_Video, StreamPos_Last, Video_ColorSpace, ""RGBA""); Fill(Stream_Video, StreamPos_Last, Video_BitDepth, 8); break;
            default : ;
        }
    }
    #if defined(MEDIAINFO_LAGARITH_YES)
    else if (Compression==0x4C414753) //""LAGS""
    {
        File_Lagarith* Parser=new File_Lagarith;
        Stream[Stream_ID].Parsers.push_back(Parser);
    }
    #endif
    Open_Buffer_Init_All();

    //Options
    if (Element_Offset>=Element_Size)
        return; //No options

    //Filling
         if (0);
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Video, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression))==__T(""AVC""))
        AVI__hdlr_strl_strf_vids_Avc();
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Video, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression))==__T(""FFV1""))
        AVI__hdlr_strl_strf_vids_Ffv1();
    else if (MediaInfoLib::Config.CodecID_Get(Stream_Video, InfoCodecID_Format_Riff, Ztring().From_CC4(Compression))==__T(""HuffYUV""))
        AVI__hdlr_strl_strf_vids_HuffYUV(Resolution, Height);
    else Skip_XX(Element_Size-Element_Offset,                   ""Unknown"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strf_vids_Avc()
{
    //Parsing
    Element_Begin1(""AVC options"");
    #if defined(MEDIAINFO_AVC_YES)
        //Can be sized block or with 000001
        stream& StreamItem = Stream[Stream_ID];
        File_Avc* Parser=(File_Avc*)StreamItem.Parsers[0];
        Parser->MustParse_SPS_PPS=false;
        Parser->SizedBlocks=false;
        Parser->MustSynchronize=true;
        int64u Element_Offset_Save=Element_Offset;
        Open_Buffer_Continue(Parser);
        if (!Parser->Status[IsAccepted])
        {
            Element_Offset=Element_Offset_Save;
            delete StreamItem.Parsers[0]; StreamItem.Parsers[0]=new File_Avc;
            Parser=(File_Avc*)StreamItem.Parsers[0];
            Open_Buffer_Init(Parser);
            Parser->FrameIsAlwaysComplete=true;
            Parser->MustParse_SPS_PPS=true;
            Parser->SizedBlocks=true;
            Parser->MustSynchronize=false;
            Open_Buffer_Continue(Parser);
            Element_Show();
        }
    #else //MEDIAINFO_AVC_YES
        Skip_XX(Element_Size-Element_Offset,                    ""(AVC headers)"");
    #endif
    Element_End0();
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strf_vids_Ffv1()
{
    //Parsing
    Element_Begin1(""FFV1 options"");
    #if defined(MEDIAINFO_FFV1_YES)
        File_Ffv1* Parser=(File_Ffv1*)Stream[Stream_ID].Parsers[0];
        Open_Buffer_OutOfBand(Parser);
    #else //MEDIAINFO_FFV1_YES
        Skip_XX(Element_Size-Element_Offset,                    ""(FFV1 headers)"");
    #endif
    Element_End0();
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strf_vids_HuffYUV(int16u BitCount, int32u Height)
{
    //Parsing
    Element_Begin1(""HuffYUV options"");
    #if defined(MEDIAINFO_HUFFYUV_YES)
        File_HuffYuv* Parser=(File_HuffYuv*)Stream[Stream_ID].Parsers[0];
        Parser->IsOutOfBandData=true;
        Parser->BitCount=BitCount;
        Parser->Height=Height;
        Open_Buffer_Continue(Parser);
    #else //MEDIAINFO_HUFFYUV_YES
        Skip_XX(Element_Size-Element_Offset,                    ""(HuffYUV headers)"");
    #endif
    Element_End0();
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strh()
{
    Element_Name(""Stream header"");

    //Parsing
    int32u fccType, fccHandler, Scale, Rate, Start, Length;
    int16u Left, Top, Right, Bottom;
    Get_C4 (fccType,                                            ""fccType"");
    switch (fccType)
    {
        case Elements::AVI__hdlr_strl_strh_auds :
            Get_L4 (fccHandler,                                 ""fccHandler"");
            break;
        default:
            Get_C4 (fccHandler,                                 ""fccHandler"");
    }
    Skip_L4(                                                    ""Flags"");
    Skip_L2(                                                    ""Priority"");
    Skip_L2(                                                    ""Language"");
    Skip_L4(                                                    ""InitialFrames"");
    Get_L4 (Scale,                                              ""Scale"");
    Get_L4 (Rate,                                               ""Rate""); //Rate/Scale is stream tick rate in ticks/sec
    Get_L4 (Start,                                              ""Start"");
    Get_L4 (Length,                                             ""Length"");
    Skip_L4(                                                    ""SuggestedBufferSize"");
    Skip_L4(                                                    ""Quality"");
    Skip_L4(                                                    ""SampleSize"");
    Get_L2 (Left,                                               ""Frame_Left"");
    Get_L2 (Top,                                                ""Frame_Top"");
    Get_L2 (Right,                                              ""Frame_Right"");
    Get_L2 (Bottom,                                             ""Frame_Bottom"");
    if(Element_Offset<Element_Size)
        Skip_XX(Element_Size-Element_Offset,                    ""Unknown"");

    //Filling
    float32 FrameRate=0;
    if (Rate>0 && Scale>0)
    {
        //FrameRate (without known value detection)
        FrameRate=((float32)Rate)/Scale;
        if (FrameRate>1)
        {
            float32 Rest=FrameRate-(int32u)FrameRate;
            if (Rest<0.01)
                FrameRate-=Rest;
            else if (Rest>0.99)
                FrameRate+=1-Rest;
            else
            {
                float32 Rest1001=FrameRate*1001/1000-(int32u)(FrameRate*1001/1000);
                if (Rest1001<0.001)
                    FrameRate=(float32)((int32u)(FrameRate*1001/1000))*1000/1001;
                if (Rest1001>0.999)
                    FrameRate=(float32)((int32u)(FrameRate*1001/1000)+1)*1000/1001;
            }
        }

        //Duration
        if (FrameRate)
        {
            int64u Duration=float32_int64s((1000*(float32)Length)/FrameRate);
            if (avih_TotalFrame>0 //avih_TotalFrame is here because some files have a wrong Audio Duration if TotalFrame==0 (which is a bug, of course!)
            && (avih_FrameRate==0 || Duration<((float32)avih_TotalFrame)/avih_FrameRate*1000*1.10)  //Some file have a nearly perfect header, except that the value is false, trying to detect it (false if 10% more than 1st video)
            && (avih_FrameRate==0 || Duration>((float32)avih_TotalFrame)/avih_FrameRate*1000*0.90)) //Some file have a nearly perfect header, except that the value is false, trying to detect it (false if 10% less than 1st video)
            {
                Fill(StreamKind_Last, StreamPos_Last, ""Duration"", Duration);
            }
        }
    }
    switch (fccType)
    {
        case Elements::AVI__hdlr_strl_strh_vids :
            if (FrameRate>0)  Fill(Stream_Video, StreamPos_Last, Video_FrameRate, FrameRate, 3);
            if (Right-Left>0) Fill(Stream_Video, StreamPos_Last, Video_Width,  Right-Left, 10, true);
            if (Bottom-Top>0) Fill(Stream_Video, StreamPos_Last, Video_Height, Bottom-Top, 10, true);
            break;
        case Elements::AVI__hdlr_strl_strh_txts :
            if (Right-Left>0) Fill(Stream_Text, StreamPos_Last, Text_Width,  Right-Left, 10, true);
            if (Bottom-Top>0) Fill(Stream_Text, StreamPos_Last, Text_Height, Bottom-Top, 10, true);
            break;
        default: ;
    }
    stream& StreamItem = Stream[Stream_ID];
    StreamItem.fccType=fccType;
    StreamItem.fccHandler=fccHandler;
    StreamItem.Scale=Scale;
    StreamItem.Rate=Rate;
    StreamItem.Start=Start;
    StreamItem.Length=Length;
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_strn()
{
    Element_Name(""Stream name"");

    //Parsing
    Ztring Title;
    Get_Local(Element_Size, Title,                              ""StreamName"");

    //Filling
    Fill(StreamKind_Last, StreamPos_Last, ""Title"", Title);
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_strl_vprp()
{
    Element_Name(""Video properties"");

    //Parsing
    int32u FieldPerFrame;
    int16u FrameAspectRatio_H, FrameAspectRatio_W;
    Skip_L4(                                                    ""VideoFormatToken"");
    Skip_L4(                                                    ""VideoStandard"");
    Skip_L4(                                                    ""VerticalRefreshRate"");
    Skip_L4(                                                    ""HTotalInT"");
    Skip_L4(                                                    ""VTotalInLines"");
    Get_L2 (FrameAspectRatio_H,                                 ""FrameAspectRatio Height"");
    Get_L2 (FrameAspectRatio_W,                                 ""FrameAspectRatio Width"");
    Skip_L4(                                                    ""FrameWidthInPixels"");
    Skip_L4(                                                    ""FrameHeightInLines"");
    Get_L4 (FieldPerFrame,                                      ""FieldPerFrame"");
    vector<int32u> VideoYValidStartLines;
    for (int32u Pos=0; Pos<FieldPerFrame; Pos++)
    {
        Element_Begin1(""Field"");
        int32u VideoYValidStartLine;
        Skip_L4(                                                ""CompressedBMHeight"");
        Skip_L4(                                                ""CompressedBMWidth"");
        Skip_L4(                                                ""ValidBMHeight"");
        Skip_L4(                                                ""ValidBMWidth"");
        Skip_L4(                                                ""ValidBMXOffset"");
        Skip_L4(                                                ""ValidBMYOffset"");
        Skip_L4(                                                ""VideoXOffsetInT"");
        Get_L4 (VideoYValidStartLine,                           ""VideoYValidStartLine"");
        VideoYValidStartLines.push_back(VideoYValidStartLine);
        Element_End0();
    }
    if(Element_Offset<Element_Size)
        Skip_XX(Element_Size-Element_Offset,                    ""Unknown"");

    FILLING_BEGIN();
        if (FrameAspectRatio_H && FrameAspectRatio_W)
            Fill(Stream_Video, 0, Video_DisplayAspectRatio, ((float32)FrameAspectRatio_W)/FrameAspectRatio_H, 3);
        switch (FieldPerFrame)
        {
            case 1 :
                        Fill(Stream_Video, 0, Video_ScanType, ""Progressive"");
                        break;
            case 2 :
                        Fill(Stream_Video, 0, Video_ScanType, ""Interlaced"");
                        if (VideoYValidStartLines.size()==2 && VideoYValidStartLines[0]<VideoYValidStartLines[1])
                            Fill(Stream_Video, 0, Video_ScanOrder, ""TFF"");
                        if (VideoYValidStartLines.size()==2 && VideoYValidStartLines[0]>VideoYValidStartLines[1])
                            Fill(Stream_Video, 0, Video_ScanOrder, ""BFF"");
            default: ;
        }
    FILLING_END();
}

//---------------------------------------------------------------------------
void File_Riff::AVI__hdlr_xxxx()
{
    AVI__INFO_xxxx();
}

//---------------------------------------------------------------------------
void File_Riff::AVI__idx1()
{
    Element_Name(""Index (old)"");

    //Tests
    if (!NeedOldIndex || Idx1_Offset==(int64u)-1)
    {
        Skip_XX(Element_Size,                                   ""Data"");
        return;
    }

    //Testing malformed index (index is based on start of the file, wrong)
    if (16<=Element_Size && Idx1_Offset+4==LittleEndian2int32u(Buffer+Buffer_Offset+(size_t)Element_Offset+ 8))
        Idx1_Offset=0; //Fixing base of movi atom, the index think it is the start of the file

    //Parsing
    while (Element_Offset+16<=Element_Size)
    {
        //Is too slow
        /*
        int32u ChunkID, Offset, Size;
        Element_Begin1(""Index"");
        Get_C4 (ChunkID,                                        ""ChunkID""); //Bit 31 is set if this is NOT a keyframe
        Info_L4(Flags,                                          ""Flags"");
            Skip_Flags(Flags, 0,                                ""NoTime"");
            Skip_Flags(Flags, 1,                                ""Lastpart"");
            Skip_Flags(Flags, 2,                                ""Firstpart"");
            Skip_Flags(Flags, 3,                                ""Midpart"");
            Skip_Flags(Flags, 4,                                ""KeyFrame"");
        Get_L4 (Offset,                                         ""Offset""); //qwBaseOffset + this is absolute file offset
        Get_L4 (Size,                                           ""Size""); //Bit 31 is set if this is NOT a keyframe
        Element_Info1(Ztring().From_CC4(ChunkID));
        Element_Info1(Size);

        //Stream Pos and Size
        int32u StreamID=(ChunkID&0xFFFF0000);
        Stream[StreamID].StreamSize+=Size;
        Stream[StreamID].PacketCount++;
        Stream_Structure[Idx1_Offset+Offset].Name=StreamID;
        Stream_Structure[Idx1_Offset+Offset].Size=Size;
        Element_End0();
        */

        //Faster method
        int32u StreamID=BigEndian2int32u   (Buffer+Buffer_Offset+(size_t)Element_Offset   )&0xFFFF0000;
        int32u Offset  =LittleEndian2int32u(Buffer+Buffer_Offset+(size_t)Element_Offset+ 8);
        int32u Size    =LittleEndian2int32u(Buffer+Buffer_Offset+(size_t)Element_Offset+12);
        stream& Stream_Item=Stream[StreamID];
        Stream_Item.StreamSize+=Size;
        Stream_Item.PacketCount++;
        stream_structure& Stream_Structure_Item=Stream_Structure[Idx1_Offset+Offset];
        Stream_Structure_Item.Name=StreamID;
        Stream_Structure_Item.Size=Size;
        Element_Offset+=16;
    }

    //Interleaved
    size_t Pos0=0;
    size_t Pos1=0;
    for (std::map<int64u, stream_structure>::iterator Temp=Stream_Structure.begin(); Temp!=Stream_Structure.end(); ++Temp)
    {
        switch (Temp->second.Name)
        {
            case 0x30300000 :
                if (Interleaved0_1==0) Interleaved0_1=Temp->first;
                if (Interleaved0_10==0)
                {
                    Pos0++;
                    if (Pos0>1)
                        Interleaved0_10=Temp->first;
                }
                break;
            case 0x30310000 :
                if (Interleaved1_1==0) Interleaved1_1=Temp->first;
                if (Interleaved1_10==0)
                {
                    Pos1++;
                    if (Pos1>1)
                        Interleaved1_10=Temp->first;
                }
                break;
            default:;
        }
    }
}

//---------------------------------------------------------------------------
void File_Riff::AVI__INFO()
{
    Element_Name(""Tags"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__INFO_IID3()
{
    Element_Name(""ID3 Tag"");

    //Parsing
    #if defined(MEDIAINFO_ID3_YES)
        File_Id3 MI;
        Open_Buffer_Init(&MI);
        Open_Buffer_Continue(&MI);
        Finish(&MI);
        Merge(MI, Stream_General, 0, 0);
    #endif
}

//---------------------------------------------------------------------------
void File_Riff::AVI__INFO_ILYC()
{
    Element_Name(""Lyrics"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__INFO_IMP3()
{
    Element_Name(""MP3 Information"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__INFO_JUNK()
{
    Element_Name(""Garbage"");
}

//---------------------------------------------------------------------------
// List of information atoms
// Name                             X bytes, Pos=0
//
void File_Riff::AVI__INFO_xxxx()
{
    //Parsing
    Ztring Value;
    Get_Local(Element_Size, Value,                              ""Value"");

    //Filling
    stream_t StreamKind=Stream_General;
    size_t StreamPos=0;
    size_t Parameter=(size_t)-1;
    switch (Element_Code)
    {
        case 0x00000000               : Parameter=General_Comment; break;
        case Elements::AVI__INFO_IARL : Parameter=General_Archival_Location; break;
        case Elements::AVI__INFO_IART : Parameter=General_Director; break;
        case Elements::AVI__INFO_IAS1 : Parameter=Audio_Language; StreamKind=Stream_Audio; StreamPos=0; break;
        case Elements::AVI__INFO_IAS2 : Parameter=Audio_Language; StreamKind=Stream_Audio; StreamPos=1; break;
        case Elements::AVI__INFO_IAS3 : Parameter=Audio_Language; StreamKind=Stream_Audio; StreamPos=2; break;
        case Elements::AVI__INFO_IAS4 : Parameter=Audio_Language; StreamKind=Stream_Audio; StreamPos=3; break;
        case Elements::AVI__INFO_IAS5 : Parameter=Audio_Language; StreamKind=Stream_Audio; StreamPos=4; break;
        case Elements::AVI__INFO_IAS6 : Parameter=Audio_Language; StreamKind=Stream_Audio; StreamPos=5; break;
        case Elements::AVI__INFO_IAS7 : Parameter=Audio_Language; StreamKind=Stream_Audio; StreamPos=6; break;
        case Elements::AVI__INFO_IAS8 : Parameter=Audio_Language; StreamKind=Stream_Audio; StreamPos=7; break;
        case Elements::AVI__INFO_IAS9 : Parameter=Audio_Language; StreamKind=Stream_Audio; StreamPos=8; break;
        case Elements::AVI__INFO_ICDS : Parameter=General_CostumeDesigner; break;
        case Elements::AVI__INFO_ICMS : Parameter=General_CommissionedBy; break;
        case Elements::AVI__INFO_ICMT : Parameter=General_Comment; break;
        case Elements::AVI__INFO_ICNM : Parameter=General_DirectorOfPhotography; break;
        case Elements::AVI__INFO_ICNT : Parameter=General_Movie_Country; break;
        case Elements::AVI__INFO_ICOP : Parameter=General_Copyright; break;
        case Elements::AVI__INFO_ICRD : Parameter=General_Recorded_Date; Value.Date_From_String(Value.To_Local().c_str()); break;
        case Elements::AVI__INFO_ICRP : Parameter=General_Cropped; break;
        case Elements::AVI__INFO_IDIM : Parameter=General_Dimensions; break;
        case Elements::AVI__INFO_IDIT : Parameter=General_Mastered_Date; Value.Date_From_String(Value.To_Local().c_str()); break;
        case Elements::AVI__INFO_IDPI : Parameter=General_DotsPerInch; break;
        case Elements::AVI__INFO_IDST : Parameter=General_DistributedBy; break;
        case Elements::AVI__INFO_IEDT : Parameter=General_EditedBy; break;
        case Elements::AVI__INFO_IENG : Parameter=General_EncodedBy; break;
        case Elements::AVI__INFO_IGNR : Parameter=General_Genre; break;
        case Elements::AVI__INFO_IFRM : Parameter=General_Part_Position_Total; break;
        case Elements::AVI__INFO_IKEY : Parameter=General_Keywords; break;
        case Elements::AVI__INFO_ILGT : Parameter=General_Lightness; break;
        case Elements::AVI__INFO_ILNG : Parameter=Audio_Language; StreamKind=Stream_Audio; break;
        case Elements::AVI__INFO_IMED : Parameter=General_OriginalSourceMedium; break;
        case Elements::AVI__INFO_IMUS : Parameter=General_MusicBy; break;
        case Elements::AVI__INFO_INAM : Parameter=General_Title; break;
        case Elements::AVI__INFO_IPDS : Parameter=General_ProductionDesigner; break;
        case Elements::AVI__INFO_IPLT : Parameter=General_OriginalSourceForm_NumColors; break;
        case Elements::AVI__INFO_IPRD : Parameter=General_OriginalSourceForm_Name; break;
        case Elements::AVI__INFO_IPRO : Parameter=General_Producer; break;
        case Elements::AVI__INFO_IPRT : Parameter=General_Part_Position; break;
        case Elements::AVI__INFO_IRTD : Parameter=General_LawRating; break;
        case Elements::AVI__INFO_ISBJ : Parameter=General_Subject; break;
        case Elements::AVI__INFO_ISFT : Parameter=General_Encoded_Application; break;
        case Elements::AVI__INFO_ISGN : Parameter=General_Genre; break;
        case Elements::AVI__INFO_ISHP : Parameter=General_OriginalSourceForm_Sharpness; break;
        case Elements::AVI__INFO_ISRC : Parameter=General_OriginalSourceForm_DistributedBy; break;
        case Elements::AVI__INFO_ISRF : Parameter=General_OriginalSourceForm; break;
        case Elements::AVI__INFO_ISTD : Parameter=General_ProductionStudio; break;
        case Elements::AVI__INFO_ISTR : Parameter=General_Performer; break;
        case Elements::AVI__INFO_ITCH : Parameter=General_EncodedBy; break;
        case Elements::AVI__INFO_IWEB : Parameter=General_Movie_Url; break;
        case Elements::AVI__INFO_IWRI : Parameter=General_WrittenBy; break;
        default                       : ;
    }
    Element_Name(MediaInfoLib::Config.Info_Get(StreamKind, Parameter, Info_Name));
    Element_Info1(Value);

    switch (Element_Code)
    {
        case Elements::AVI__INFO_ISMP : INFO_ISMP=Value;
                                        break;
        case Elements::AVI__INFO_IGNR :
                                        {
                                            Ztring ISGN=Retrieve(Stream_General, 0, General_Genre);
                                            Clear(Stream_General, 0, General_Genre);
                                            Fill(StreamKind, StreamPos, General_Genre, Value);
                                            if (!ISGN.empty())
                                                Fill(StreamKind, StreamPos, General_Genre, ISGN);
                                        }
                                        break;
        default                      :
                                        if (!Value.empty())
                                        {
                                            if (Parameter!=(size_t)-1)
                                                Fill(StreamKind, StreamPos, Parameter, Value);
                                            else
                                                Fill(StreamKind, StreamPos, Ztring().From_CC4((int32u)Element_Code).To_Local().c_str(), Value, true);
                                        }
    }
}

//---------------------------------------------------------------------------
void File_Riff::AVI__JUNK()
{
    Element_Name(""Garbage""); //Library defined size for padding, often used to store library name

    if (Element_Size<8)
    {
        Skip_XX(Element_Size,                                   ""Junk"");
        return;
    }

    //Detect DivX files
         if (CC5(Buffer+Buffer_Offset)==CC5(""DivX ""))
    {
        Fill(Stream_General, 0, General_Format, ""DivX"", Unlimited, true, true);
    }
    //MPlayer
    else if (CC8(Buffer+Buffer_Offset)==CC8(""[= MPlay"") && Retrieve(Stream_General, 0, General_Encoded_Library).empty())
        Fill(Stream_General, 0, General_Encoded_Library, ""MPlayer"");
    //Scenalyzer
    else if (CC8(Buffer+Buffer_Offset)==CC8(""scenalyz"") && Retrieve(Stream_General, 0, General_Encoded_Library).empty())
        Fill(Stream_General, 0, General_Encoded_Library, ""Scenalyzer"");
    //FFMpeg broken files detection
    else if (CC8(Buffer+Buffer_Offset)==CC8(""odmldmlh""))
        dmlh_TotalFrame=0; //this is not normal to have this string in a JUNK block!!! and in files tested, in this case TotalFrame is broken too
    //VirtualDubMod
    else if (CC8(Buffer+Buffer_Offset)==CC8(""INFOISFT""))
    {
        int32u Size=LittleEndian2int32u(Buffer+Buffer_Offset+8);
        if (Size>Element_Size-12)
            Size=(int32u)Element_Size-12;
        Fill(Stream_General, 0, General_Encoded_Library, (const char*)(Buffer+Buffer_Offset+12), Size);
    }
    else if (CC8(Buffer+Buffer_Offset)==CC8(""INFOIENG""))
    {
        int32u Size=LittleEndian2int32u(Buffer+Buffer_Offset+8);
        if (Size>Element_Size-12)
            Size=(int32u)Element_Size-12;
        Fill(Stream_General, 0, General_Encoded_Library, (const char*)(Buffer+Buffer_Offset+12), Size);
    }
    //Other libraries?
    else if (CC1(Buffer+Buffer_Offset)>=CC1(""A"") && CC1(Buffer+Buffer_Offset)<=CC1(""z"") && Retrieve(Stream_General, 0, General_Encoded_Library).empty())
        Fill(Stream_General, 0, General_Encoded_Library, (const char*)(Buffer+Buffer_Offset), (size_t)Element_Size);

    Skip_XX(Element_Size,                                       ""Data"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__MD5_()
{
    //Parsing
    while (Element_Offset<Element_Size)
    {
        int128u MD5Stored;
        Get_L16   (MD5Stored,                                   ""MD5"");
        Ztring MD5_PerItem;
        MD5_PerItem.From_Number(MD5Stored, 16);
        while (MD5_PerItem.size()<32)
            MD5_PerItem.insert(MD5_PerItem.begin(), '0'); //Padding with 0, this must be a 32-byte string
        MD5_PerItem.MakeLowerCase();
        MD5s.push_back(MD5_PerItem);
    }
}

//---------------------------------------------------------------------------
void File_Riff::AVI__movi()
{
    Element_Name(""Datas"");

    //Only the first time, no need in AVIX
    if (movi_Size==0)
    {
        Idx1_Offset=File_Offset+Buffer_Offset-4;
        BookMark_Set(); //Remenbering this place, for stream parsing in phase 2

        //For each stream
        std::map<int32u, stream>::iterator Temp=Stream.begin();
        while (Temp!=Stream.end())
        {
            if ((Temp->second.Parsers.empty() || Temp->second.Parsers[0]==NULL) && Temp->second.fccType!=Elements::AVI__hdlr_strl_strh_txts)
            {
                Temp->second.SearchingPayload=false;
                stream_Count--;
            }
            ++Temp;
        }
    }

    //Probing rec (with index, this is not always tested in the flow
    if (Element_Size<12)
    {
        Element_WaitForMoreData();
        return;
    }
    if (CC4(Buffer+Buffer_Offset+8)==0x72656320) //""rec ""
        rec__Present=true;

    //Filling
    if (!SecondPass)
        movi_Size+=Element_TotalSize_Get();

    //We must parse moov?
    if (NeedOldIndex || (stream_Count==0 && Index_Pos.empty()))
    {
        //Jumping
        #if MEDIAINFO_TRACE
            if (Trace_Activated)
                Param(""Data"", Ztring(""("")+Ztring::ToZtring(Element_TotalSize_Get())+Ztring("" bytes)""));
        #endif //MEDIAINFO_TRACE
        Element_Offset=Element_TotalSize_Get(); //Not using Skip_XX() because we want to skip data we don't have, and Skip_XX() does a test on size of buffer
        return;
    }

    //Jump to next useful data
    AVI__movi_StreamJump();
}

//---------------------------------------------------------------------------
void File_Riff::AVI__movi_rec_()
{
    Element_Name(""Syncronisation"");

    rec__Present=true;
}

//---------------------------------------------------------------------------
void File_Riff::AVI__movi_rec__xxxx()
{
    AVI__movi_xxxx();
}

//---------------------------------------------------------------------------
void File_Riff::AVI__movi_xxxx()
{
    if (Element_Code==Elements::AVI__JUNK)
    {
        Skip_XX(Element_Size,                                    ""Junk"");
        AVI__movi_StreamJump();
        return;
    }

    if (Element_Code!=(int64u)-1)
        Stream_ID=(int32u)(Element_Code&0xFFFF0000);
    else
        Stream_ID=(int32u)-1;

    if (Stream_ID==0x69780000) //ix..
    {
        //AVI Standard Index Chunk
        AVI__hdlr_strl_indx();
        Stream_ID=(int32u)(Element_Code&0x0000FFFF)<<16;
        AVI__movi_StreamJump();
        return;
    }
    if ((Element_Code&0x0000FFFF)==0x00006978) //..ix (Out of specs, but found in a Adobe After Effects CS4 DV file
    {
        //AVI Standard Index Chunk
        AVI__hdlr_strl_indx();
        Stream_ID=(int32u)(Element_Code&0xFFFF0000);
        AVI__movi_StreamJump();
        return;
    }

    stream& StreamItem = Stream[Stream_ID];
    #if MEDIAINFO_DEMUX
        if (StreamItem.Rate) //AVI
        {
            int64u Element_Code_Old=Element_Code;
            Element_Code=((Element_Code_Old>>24)&0xF)*10+((Element_Code_Old>>16)&0xF);
            Frame_Count_NotParsedIncluded= StreamItem.PacketPos;
            FrameInfo.DTS=Frame_Count_NotParsedIncluded*1000000000* StreamItem.Scale/ StreamItem.Rate;
            Demux(Buffer+Buffer_Offset, (size_t)Element_Size, ContentType_MainStream);
            Element_Code=Element_Code_Old;
            Frame_Count_NotParsedIncluded=(int64u)-1;
        }
        else //WAV
        {
            //TODO
        }
    #endif //MEDIAINFO_DEMUX

        StreamItem.PacketPos++;

    //Finished?
    if (!StreamItem.SearchingPayload)
    {
        Element_DoNotShow();
        AVI__movi_StreamJump();
        return;
    }

    #if MEDIAINFO_TRACE
        if (Config_Trace_Level)
        {
            switch (Element_Code&0x0000FFFF) //2 last bytes
            {
                case Elements::AVI__movi_xxxx_____ : Element_Info1(""DV""); break;
                case Elements::AVI__movi_xxxx___db :
                case Elements::AVI__movi_xxxx___dc : Element_Info1(""Video""); break;
                case Elements::AVI__movi_xxxx___sb :
                case Elements::AVI__movi_xxxx___tx : Element_Info1(""Text""); break;
                case Elements::AVI__movi_xxxx___wb : Element_Info1(""Audio""); break;
                default :                            Element_Info1(""Unknown""); break;
            }
            Element_Info1(Stream[Stream_ID].PacketPos);
        }
    #endif //MEDIAINFO_TRACE

    //Some specific stuff
    switch (Element_Code&0x0000FFFF) //2 last bytes
    {
        case Elements::AVI__movi_xxxx___tx : AVI__movi_xxxx___tx(); break;
        default : ;
    }

    //Parsing
    for (size_t Pos=0; Pos<StreamItem.Parsers.size(); Pos++)
        if (StreamItem.Parsers[Pos])
        {
            if (FrameInfo.PTS!=(int64u)-1)
                StreamItem.Parsers[Pos]->FrameInfo.PTS=FrameInfo.PTS;
            if (FrameInfo.DTS!=(int64u)-1)
                StreamItem.Parsers[Pos]->FrameInfo.DTS=FrameInfo.DTS;

            Open_Buffer_Continue(StreamItem.Parsers[Pos], Buffer+Buffer_Offset+(size_t)Element_Offset, (size_t)(Element_Size-Element_Offset));
            Element_Show();
            if (StreamItem.Parsers.size()==1 && StreamItem.Parsers[Pos]->Buffer_Size>0)
                StreamItem.ChunksAreComplete=false;

            if (StreamItem.Parsers.size()>1)
            {
                if (!StreamItem.Parsers[Pos]->Status[IsAccepted] && StreamItem.Parsers[Pos]->Status[IsFinished])
                {
                    delete *(StreamItem.Parsers.begin()+Pos);
                    StreamItem.Parsers.erase(StreamItem.Parsers.begin()+Pos);
                    Pos--;
                }
                else if (StreamItem.Parsers.size()>1 && StreamItem.Parsers[Pos]->Status[IsAccepted])
                {
                    File__Analyze* Parser= StreamItem.Parsers[Pos];
                    for (size_t Pos2=0; Pos2<StreamItem.Parsers.size(); Pos2++)
                    {
                        if (Pos2!=Pos)
                            delete *(StreamItem.Parsers.begin()+Pos2);
                    }
                    StreamItem.Parsers.clear();
                    StreamItem.Parsers.push_back(Parser);
                    Pos=0;
                }
            }

            #if MEDIAINFO_DEMUX
                if (Config->Demux_EventWasSent)
                {
                    Demux_Parser= StreamItem.Parsers[Pos];
                    return;
                }
            #endif //MEDIAINFO_DEMUX
        }
    Element_Offset=Element_Size;

    //Some specific stuff
    switch (Element_Code&0x0000FFFF) //2 last bytes
    {
        case Elements::AVI__movi_xxxx_____ :
        case Elements::AVI__movi_xxxx___db :
        case Elements::AVI__movi_xxxx___dc : AVI__movi_xxxx___dc(); break;
        case Elements::AVI__movi_xxxx___wb : AVI__movi_xxxx___wb(); break;
        default : ;
    }

    //We must always parse moov?
    AVI__movi_StreamJump();

    Element_Show();
}

//---------------------------------------------------------------------------
void File_Riff::AVI__movi_xxxx___dc()
{
    //Finish (if requested)
    stream& StreamItem = Stream[Stream_ID];
    if (StreamItem.Parsers.empty()
     || StreamItem.Parsers[0]->Status[IsFinished]
     || (StreamItem.PacketPos>=300 && MediaInfoLib::Config.ParseSpeed_Get()<1.00))
    {
        StreamItem.SearchingPayload=false;
        stream_Count--;
        return;
    }
}

//---------------------------------------------------------------------------
void File_Riff::AVI__movi_xxxx___tx()
{
    //Parsing
    int32u Name_Size;
    Ztring Value;
    int32u GAB2;
    Peek_B4(GAB2);
    if (GAB2==0x47414232 && Element_Size>=17)
    {
        Skip_C4(                                                    ""GAB2"");
        Skip_L1(                                                    ""Zero"");
        Skip_L2(                                                    ""CodePage""); //2=Unicode
        Get_L4 (Name_Size,                                          ""Name_Size"");
        Skip_UTF16L(Name_Size,                                      ""Name"");
        Skip_L2(                                                    ""Four"");
        Skip_L4(                                                    ""File_Size"");

        if (Element_Offset>Element_Size)
            Element_Offset=Element_Size; //Problem
    }

    //Skip it
    Stream[Stream_ID].SearchingPayload=false;
    stream_Count--;
}

//---------------------------------------------------------------------------
void File_Riff::AVI__movi_xxxx___wb()
{
    //Finish (if requested)
    stream& StreamItem = Stream[Stream_ID];
    if (StreamItem.PacketPos>=4 //For having the chunk alignement
     && (StreamItem.Parsers.empty()
      || StreamItem.Parsers[0]->Status[IsFinished]
      || (StreamItem.PacketPos>=300 && MediaInfoLib::Config.ParseSpeed_Get()<1.00)))
    {
        StreamItem.SearchingPayload=false;
        stream_Count--;
    }
}

//---------------------------------------------------------------------------
void File_Riff::AVI__movi_StreamJump()
{
    //Jump to next useful data
    if (!Index_Pos.empty())
    {
        if (Index_Pos.begin()->first<=File_Offset+Buffer_Offset && Element_Code!=Elements::AVI__movi)
            Index_Pos.erase(Index_Pos.begin());
        int64u ToJump=File_Size;
        if (!Index_Pos.empty())
            ToJump=Index_Pos.begin()->first;
        if (ToJump>File_Size)
            ToJump=File_Size;
        if (ToJump>=File_Offset+Buffer_Offset+Element_TotalSize_Get(Element_Level-2)) //We want always Element movi
        {
            #if MEDIAINFO_HASH
                if (Config->File_Hash_Get().to_ulong() && SecondPass)
                    Hash_ParseUpTo=File_Offset+Buffer_Offset+Element_TotalSize_Get(Element_Level-2);
                else
            #endif //MEDIAINFO_HASH
                    GoTo(File_Offset+Buffer_Offset+Element_TotalSize_Get(Element_Level-2), ""AVI""); //Not in this chunk
        }
        else if (ToJump!=File_Offset+Buffer_Offset+(Element_Code==Elements::AVI__movi?0:Element_Size))
        {
            #if MEDIAINFO_HASH
                if (Config->File_Hash_Get().to_ulong() && SecondPass)
                    Hash_ParseUpTo=File_Offset+Buffer_Offset+Element_TotalSize_Get(Element_Level-2);
                else
            #endif //MEDIAINFO_HASH
                    GoTo(ToJump, ""AVI""); //Not just after
        }
    }
    else if (stream_Count==0)
    {
        //Jumping
        Element_Show();
        if (rec__Present)
            Element_End0();
        Info(""movi, Jumping to end of chunk"");
        if (SecondPass)
        {
            std::map<int32u, stream>::iterator Temp=Stream.begin();
            while (Temp!=Stream.end())
            {
                for (size_t Pos=0; Pos<Temp->second.Parsers.size(); ++Pos)
                {
                    Temp->second.Parsers[Pos]->Fill();
                    Temp->second.Parsers[Pos]->Open_Buffer_Unsynch();
                }
                ++Temp;
            }
            Finish(""AVI""); //The rest is already parsed
        }
        else
            GoTo(File_Offset+Buffer_Offset+Element_TotalSize_Get(), ""AVI"");
    }
    else if (Stream_Structure_Temp!=Stream_Structure.end())
    {
        do
            Stream_Structure_Temp++;
        while (Stream_Structure_Temp!=Stream_Structure.end() && !(Stream[(int32u)Stream_Structure_Temp->second.Name].SearchingPayload && Config->ParseSpeed<1.0));
        if (Stream_Structure_Temp!=Stream_Structure.end())
        {
            int64u ToJump=Stream_Structure_Temp->first;
            if (ToJump>=File_Offset+Buffer_Offset+Element_TotalSize_Get(Element_Level-2))
            {
                #if MEDIAINFO_HASH
                    if (Config->File_Hash_Get().to_ulong() && SecondPass)
                        Hash_ParseUpTo=File_Offset+Buffer_Offset+Element_TotalSize_Get(Element_Level-2);
                    else
                #endif //MEDIAINFO_HASH
                        GoTo(File_Offset+Buffer_Offset+Element_TotalSize_Get(Element_Level-2), ""AVI""); //Not in this chunk
            }
            else if (ToJump!=File_Offset+Buffer_Offset+Element_Size)
            {
                #if MEDIAINFO_HASH
                    if (Config->File_Hash_Get().to_ulong() && SecondPass)
                        Hash_ParseUpTo=ToJump;
                    else
                #endif //MEDIAINFO_HASH
                        GoTo(ToJump, ""AVI""); //Not just after
            }
        }
        else
            Finish(""AVI"");
    }
}

//---------------------------------------------------------------------------
void File_Riff::AVI__PrmA()
{
    Element_Name(""Adobe Premiere PrmA"");

    //Parsing
    int32u FourCC, Size;
    Get_C4 (FourCC,                                             ""FourCC"");
    Get_B4 (Size,                                               ""Size"");
    switch (FourCC)
    {
        case 0x50415266:
                        if (Size==20)
                        {
                        int32u PAR_X, PAR_Y;
                        Skip_B4(                                                    ""Unknown"");
                        Get_B4 (PAR_X,                                              ""PAR_X"");
                        Get_B4 (PAR_Y,                                              ""PAR_Y"");

                        if (PAR_Y)
                            PAR=((float64)PAR_X)/PAR_Y;
                        }
                        else
                            Skip_XX(Element_Size-Element_Offset,                    ""Unknown"");
                        break;
        default:
                        for (int32u Pos=8; Pos<Size; Pos++)
                            Skip_B4(                                                ""Unknown"");
    }
}

//---------------------------------------------------------------------------
void File_Riff::AVI__Tdat()
{
    Element_Name(""Adobe Premiere Tdat"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__Tdat_tc_A()
{
    Element_Name(""tc_A"");

    //Parsing
    Ztring Value;
    Get_Local(Element_Size, Value,                              ""Unknown"");

    if (Value.find_first_not_of(__T(""0123456789:;""))==string::npos)
        Tdat_tc_A=Value;
}

//---------------------------------------------------------------------------
void File_Riff::AVI__Tdat_tc_O()
{
    Element_Name(""tc_O"");

    //Parsing
    Ztring Value;
    Get_Local(Element_Size, Value,                              ""Unknown"");

    if (Value.find_first_not_of(__T(""0123456789:;""))==string::npos)
        Tdat_tc_O=Value;
}

//---------------------------------------------------------------------------
void File_Riff::AVI__Tdat_rn_A()
{
    Element_Name(""rn_A"");

    //Parsing
    Skip_Local(Element_Size,                                    ""Unknown"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__Tdat_rn_O()
{
    Element_Name(""rn_O"");

    //Parsing
    Skip_Local(Element_Size,                                    ""Unknown"");
}

//---------------------------------------------------------------------------
void File_Riff::AVI__xxxx()
{
    Stream_ID=(int32u)(Element_Code&0xFFFF0000);

    if (Stream_ID==0x69780000) //ix..
    {
        //AVI Standard Index Chunk
        AVI__hdlr_strl_indx();
        Stream_ID=(int32u)(Element_Code&0x0000FFFF)<<16;
        AVI__movi_StreamJump();
        return;
    }
    if ((Element_Code&0x0000FFFF)==0x00006978) //..ix (Out of specs, but found in a Adobe After Effects CS4 DV file
    {
        //AVI Standard Index Chunk
        AVI__hdlr_strl_indx();
        Stream_ID=(int32u)(Element_Code&0xFFFF0000);
        AVI__movi_StreamJump();
        return;
    }
}

//---------------------------------------------------------------------------
void File_Riff::AVIX()
{
    //Filling
    Fill(Stream_General, 0, General_Format_Profile, ""OpenDML"", Unlimited, true, true);
}

//---------------------------------------------------------------------------
void File_Riff::AVIX_idx1()
{
    AVI__idx1();
}

//---------------------------------------------------------------------------
void File_Riff::AVIX_movi()
{
    AVI__movi();
}

//---------------------------------------------------------------------------
void File_Riff::AVIX_movi_rec_()
{
    AVI__movi_rec_();
}

//---------------------------------------------------------------------------
void File_Riff::AVIX_movi_rec__xxxx()
{
    AVIX_movi_xxxx();
}

//---------------------------------------------------------------------------
void File_Riff::AVIX_movi_xxxx()
{
    AVI__movi_xxxx();
}

//---------------------------------------------------------------------------
void File_Riff::CADP()
{
    Element_Name(""CMP4 - ADPCM"");

    //Testing if we have enough data
    if (Element_Size<4)
    {
        Element_WaitForMoreData();
        return;
    }

    //Parsing
    int32u Codec;
    Get_C4 (Codec,                                              ""Codec"");
    #if MEDIAINFO_TRACE
        if (Trace_Activated)
            Param(""Data"", Ztring(""("")+Ztring::ToZtring(Element_TotalSize_Get()-Element_Offset)+Ztring("" bytes)""));
    #endif //MEDIAINFO_TRACE
    Element_Offset=Element_TotalSize_Get(); //Not using Skip_XX() because we want to skip data we don't have, and Skip_XX() does a test on size of buffer

    FILLING_BEGIN();
        Stream_Prepare(Stream_Audio);
        if (Codec==0x41647063) //Adpc
            Fill(Stream_Audio, StreamPos_Last, Audio_Format, ""ADPCM"");
        Fill(Stream_Audio, StreamPos_Last, Audio_StreamSize, Element_TotalSize_Get());
    FILLING_END();
}

//---------------------------------------------------------------------------
void File_Riff::CDDA()
{
    Element_Name(""Compact Disc for Digital Audio"");

    //Filling
    Accept(""CDDA"");
}

//---------------------------------------------------------------------------
void File_Riff::CDDA_fmt_()
{
    //Specs: http://fr.wikipedia.org/wiki/Compact_Disc_Audio_track
    //Specs: http://www.moon-soft.com/program/FORMAT/sound/cda.htm

    Element_Name(""Stream format"");

    //Parsing
    int32u id;
    int16u Version, tracknb=1;
    int8u TPositionF=0, TPositionS=0, TPositionM=0, TDurationF=0, TDurationS=0, TDurationM=0;
    Get_L2 (Version,                                            ""Version""); // Always 1
    if (Version!=1)
    {
        //Not supported
        Skip_XX(Element_Size-2,                                 ""Data"");
        return;
    }
    Get_L2 (tracknb,                                            ""Number""); // Start at 1
    Get_L4 (id,                                                 ""id"");
    Skip_L4(                                                    ""offset""); // in frames //Priority of FSM format
    Skip_L4(                                                    ""Duration""); // in frames //Priority of FSM format
    Get_L1 (TPositionF,                                         ""Track_PositionF""); // in frames
    Get_L1 (TPositionS,                                         ""Track_PositionS""); // in seconds
    Get_L1 (TPositionM,                                         ""Track_PositionM""); // in minutes
    Skip_L1(                                                    ""empty"");
    Get_L1 (TDurationF,                                         ""Track_DurationF""); // in frames
    Get_L1 (TDurationS,                                         ""Track_DurationS""); // in seconds
    Get_L1 (TDurationM,                                         ""Track_DurationM""); // in minutes
    Skip_L1(                                                    ""empty"");

    FILLING_BEGIN();
        int32u TPosition=TPositionM*60*75+TPositionS*75+TPositionF;
        int32u TDuration=TDurationM*60*75+TDurationS*75+TDurationF;

        Fill(Stream_General, 0, General_Track_Position, tracknb);
        Fill(Stream_General, 0, General_Format, ""CDDA"");
        Fill(Stream_General, 0, General_Format_Info, ""Compact Disc for Digital Audio"");
        Fill(Stream_General, 0, General_UniqueID, id);
        Fill(Stream_General, 0, General_FileSize, File_Size+TDuration*2352, 10, true);

        Stream_Prepare(Stream_Audio);
        Fill(Stream_Audio, 0, Audio_Format, ""PCM"");
        Fill(Stream_Audio, 0, Audio_Format_Settings_Endianness, ""Little"");
        Fill(Stream_Audio, 0, Audio_BitDepth, 16);
        Fill(Stream_Audio, 0, Audio_Channel_s_, 2);
        Fill(Stream_Audio, 0, Audio_SamplingRate, 44100);
        Fill(Stream_Audio, 0, Audio_FrameRate, (float)75);
        Fill(Stream_Audio, 0, Audio_BitRate, 1411200);
        Fill(Stream_Audio, 0, Audio_Compression_Mode, ""Lossless"");
        Fill(Stream_Audio, 0, Audio_FrameCount, TDuration);
        Fill(Stream_Audio, 0, Audio_Duration, float32_int32s(((float32)TDuration)*1000/75));
        Fill(Stream_Audio, 0, Audio_Delay, float32_int32s(((float32)TPosition)*1000/75));

        //No more need data
        Finish(""CDDA"");
    FILLING_END();
}

//---------------------------------------------------------------------------
void File_Riff::CMJP()
{
    Element_Name(""CMP4 - JPEG"");

    //Parsing
    #ifdef MEDIAINFO_JPEG_YES
        Stream_ID=0;
        File_Jpeg* Parser=new File_Jpeg;
        Open_Buffer_Init(Parser);
        Parser->StreamKind=Stream_Video;
        Open_Buffer_Continue(Parser);
        Element_Offset=Element_TotalSize_Get(); //Not using Skip_XX() because we want to skip data we don't have, and Skip_XX() does a test on size of buffer

        FILLING_BEGIN();
            Stream_Prepare(Stream_Video);
            Fill(Stream_Video, StreamPos_Last, Video_StreamSize, Element_TotalSize_Get());
            Finish(Parser);
            Merge(*Parser, StreamKind_Last, 0, StreamPos_Last);
        FILLING_END();

        Stream[Stream_ID].Parsers.push_back(Parser);
    #else
        Element_Offset=Element_TotalSize_Get(); //Not using Skip_XX() because we want to skip data we don't have, and Skip_XX() does a test on size of buffer

        FILLING_BEGIN();
            Stream_Prepare(Stream_Video);
            Fill(Stream_Video, StreamPos_Last, Video_Format, ""JPEG"");
            Fill(Stream_Video, StreamPos_Last, Video_StreamSize, Element_TotalSize_Get());
        FILLING_END();
    #endif
}

//---------------------------------------------------------------------------
void File_Riff::CMP4()
{
    Accept(""CMP4"");
    Element_Name(""CMP4 - Header"");

    //Parsing
    Ztring Title;
    Get_Local(Element_Size, Title,                              ""Title"");

    FILLING_BEGIN();
        Fill(Stream_General, 0, General_Format, ""CMP4"");
        Fill(Stream_General, 0, ""Title"", Title);
    FILLING_END();
}

//---------------------------------------------------------------------------
void File_Riff::IDVX()
{
    Element_Name(""Tags"");
}

//---------------------------------------------------------------------------
void File_Riff::INDX()
{
    Element_Name(""Index (from which spec?)"");
}

//---------------------------------------------------------------------------
void File_Riff::INDX_xxxx()
{
    Stream_ID=(int32u)(Element_Code&0xFFFF0000);

    if (Stream_ID==0x69780000) //ix..
    {
        //Index
        int32u Entry_Count, ChunkId;
        int16u LongsPerEntry;
        int8u  IndexType, IndexSubType;
        Get_L2 (LongsPerEntry,                                      ""LongsPerEntry""); //Size of each entry in aIndex array
        Get_L1 (IndexSubType,                                       ""IndexSubType"");
        Get_L1 (IndexType,                                          ""IndexType"");
        Get_L4 (Entry_Count,                                        ""EntriesInUse""); //Index of first unused member in aIndex array
        Get_C4 (ChunkId,                                            ""ChunkId""); //FCC of what is indexed

        Skip_L4(                                                    ""Unknown"");
        Skip_L4(                                                    ""Unknown"");
        Skip_L4(                                                    ""Unknown"");

        for (int32u Pos=0; Pos<Entry_Count; Pos++)
        {
            Skip_L8(                                                ""Offset"");
            Skip_L4(                                                ""Size"");
            Skip_L4(                                                ""Frame number?"");
            Skip_L4(                                                ""Frame number?"");
            Skip_L4(                                                ""Zero"");
        }
    }

    //Currently, we do not use the index
    //TODO: use the index
    Stream_Structure.clear();
}

//---------------------------------------------------------------------------
void File_Riff::JUNK()
{
    Element_Name(""Junk"");

    //Parse
    #if MEDIAINFO_TRACE
        if (Trace_Activated)
            Param(""Junk"", Ztring(""("")+Ztring::ToZtring(Element_TotalSize_Get())+Ztring("" bytes)""));
    #endif //MEDIAINFO_TRACE
    Element_Offset=Element_TotalSize_Get(); //Not using Skip_XX() because we want to skip data we don't have, and Skip_XX() does a test on size of buffer
}

//---------------------------------------------------------------------------
void File_Riff::menu()
{
    Element_Name(""DivX Menu"");

    //Filling
    Stream_Prepare(Stream_Menu);
    Fill(Stream_Menu, StreamPos_Last, Menu_Format, ""DivX Menu"");
    Fill(Stream_Menu, StreamPos_Last, Menu_Codec, ""DivX"");
}

//---------------------------------------------------------------------------
void File_Riff::MThd()
{
    Element_Name(""MIDI header"");

    //Parsing
    Skip_B2(                                                    ""format"");
    Skip_B2(                                                    ""ntrks"");
    Skip_B2(                                                    ""division"");

    FILLING_BEGIN_PRECISE();
        Accept(""MIDI"");
        Fill(Stream_General, 0, General_Format, ""MIDI"");
    FILLING_ELSE();
        Reject(""MIDI"");
    FILLING_END();
}

//---------------------------------------------------------------------------
void File_Riff::MTrk()
{
    Element_Name(""MIDI Track"");

    //Parsing
    #if MEDIAINFO_TRACE
        if (Trace_Activated)
            Param(""Data"", Ztring(""("")+Ztring::ToZtring(Element_TotalSize_Get())+Ztring("" bytes)""));
    #endif //MEDIAINFO_TRACE
    Element_Offset=Element_TotalSize_Get(); //Not using Skip_XX() because we want to skip data we don't have, and Skip_XX() does a test on size of buffer

    FILLING_BEGIN();
        Stream_Prepare(Stream_Audio);
        Fill(Stream_Audio, StreamPos_Last, Audio_Format, ""MIDI"");
        Fill(Stream_Audio, StreamPos_Last, Audio_Codec, ""Midi"");

        Finish(""MIDI"");
    FILLING_END();
}

//---------------------------------------------------------------------------
void File_Riff::PAL_()
{
    Data_Accept(""RIFF Palette"");
    Element_Name(""RIFF Palette"");

    //Filling
    Fill(Stream_General, 0, General_Format, ""RIFF Palette"");
}

//---------------------------------------------------------------------------
void File_Riff::QLCM()
{
    Data_Accept(""QLCM"");
    Element_Name(""QLCM"");

    //Filling
    Fill(Stream_General, 0, General_Format, ""QLCM"");
}

//---------------------------------------------------------------------------
void File_Riff::QLCM_fmt_()
{
    //Parsing
    Ztring codec_name;
    int128u codec_guid;
    int32u num_rates;
    int16u codec_version, average_bps, packet_size, block_size, sampling_rate, sample_size;
    int8u major, minor;
    Get_L1 (major,                                              ""major"");
    Get_L1 (minor,                                              ""minor"");
    Get_GUID(codec_guid,                                        ""codec-guid"");
    Get_L2 (codec_version,                                      ""codec-version"");
    Get_Local(80, codec_name,                                   ""codec-name"");
    Get_L2 (average_bps,                                        ""average-bps"");
    Get_L2 (packet_size,                                        ""packet-size"");
    Get_L2 (block_size,                                         ""block-size"");
    Get_L2 (sampling_rate,                                      ""sampling-rate"");
    Get_L2 (sample_size,                                        ""sample-size"");
    Element_Begin1(""rate-map-table"");
        Get_L4 (num_rates,                                      ""num-rates"");
        for (int32u rate=0; rate<num_rates; rate++)
        {
            Skip_L2(                                            ""rate-size"");
            Skip_L2(                                            ""rate-octet"");
        }
    Element_End0();
    Skip_L4(                                                    ""Reserved"");
    Skip_L4(                                                    ""Reserved"");
    Skip_L4(                                                    ""Reserved"");
    Skip_L4(                                                    ""Reserved"");
    if (Element_Offset<Element_Size)
        Skip_L4(                                                ""Reserved""); //Some files don't have the 5th reserved dword

    FILLING_BEGIN_PRECISE();
        Stream_Prepare (Stream_Audio);
        switch (codec_guid.hi)
        {
            case Elements::QLCM_QCELP1 :
            case Elements::QLCM_QCELP2 : Fill(Stream_Audio, 0, Audio_Format, ""QCELP""); Fill(Stream_Audio, 0, Audio_Codec, ""QCELP""); break;
            case Elements::QLCM_EVRC   : Fill(Stream_Audio, 0, Audio_Format, ""EVRC""); Fill(Stream_Audio, 0, Audio_Codec, ""EVRC""); break;
            case Elements::QLCM_SMV    : Fill(Stream_Audio, 0, Audio_Format, ""SMV""); Fill(Stream_Audio, 0, Audio_Codec, ""SMV""); break;
            default :                    ;
        }
        Fill(Stream_Audio, 0, Audio_BitRate, average_bps);
        Fill(Stream_Audio, 0, Audio_SamplingRate, sampling_rate);
        Fill(Stream_Audio, 0, Audio_BitDepth, sample_size);
        Fill(Stream_Audio, 0, Audio_Channel_s_, 1);
    FILLING_END();
}

#if defined(MEDIAINFO_GXF_YES)
//---------------------------------------------------------------------------
void File_Riff::rcrd()
{
    Data_Accept(""Ancillary media packets"");
    Element_Name(""Ancillary media packets"");

    //Filling
    if (Retrieve(Stream_General, 0, General_Format).empty())
        Fill(Stream_General, 0, General_Format, ""Ancillary media packets""); //GXF, RDD14-2007

    //Clearing old data
    if (Ancillary)
    {
        (*Ancillary)->FrameInfo.DTS=FrameInfo.DTS;
        Open_Buffer_Continue(*Ancillary, Buffer, 0);
    }
}

//---------------------------------------------------------------------------
void File_Riff::rcrd_desc()
{
    Element_Name(""Ancillary media packet description"");

    //Parsing
    int32u Version;
    Get_L4 (Version,                                            ""Version"");
    if (Version==2)
    {
        Skip_L4(                                                ""Number of fields"");
        Skip_L4(                                                ""Length of the ancillary data field descriptions"");
        Skip_L4(                                                ""Byte size of the complete ancillary media packet"");
        Skip_L4(                                                ""Format of the video"");
    }
    else
        Skip_XX(Element_Size-Element_Offset,                    ""Unknown"");
}

//---------------------------------------------------------------------------
void File_Riff::rcrd_fld_()
{
    Element_Name(""Ancillary data field description"");
}

//---------------------------------------------------------------------------
void File_Riff::rcrd_fld__anc_()
{
    Element_Name(""Ancillary data sample description"");

    rcrd_fld__anc__pos__LineNumber=(int32u)-1;
}

//---------------------------------------------------------------------------
void File_Riff::rcrd_fld__anc__pos_()
{
    Element_Name(""Ancillary data sample description"");

    //Parsing
    Get_L4 (rcrd_fld__anc__pos__LineNumber,                     ""Video line number"");
    Skip_L4(                                                    ""Ancillary video color difference or luma space"");
    Skip_L4(                                                    ""Ancillary video space"");
}

//---------------------------------------------------------------------------
void File_Riff::rcrd_fld__anc__pyld()
{
    Element_Name(""Ancillary data sample payload"");

    if (Ancillary)
    {
        (*Ancillary)->FrameInfo.DTS=FrameInfo.DTS;
        (*Ancillary)->LineNumber=rcrd_fld__anc__pos__LineNumber;
        Open_Buffer_Continue(*Ancillary);
    }
}

//---------------------------------------------------------------------------
void File_Riff::rcrd_fld__finf()
{
    Element_Name(""Data field description"");

    //Parsing
    Skip_L4(                                                    ""Video field identifier"");
}
#endif //MEDIAINFO_GXF_YES

//---------------------------------------------------------------------------
void File_Riff::RDIB()
{
    Data_Accept(""RIFF DIB"");
    Element_Name(""RIFF DIB"");

    //Filling
    Fill(Stream_General, 0, General_Format, ""RIFF DIB"");
}

//---------------------------------------------------------------------------
void File_Riff::RMID()
{
    Data_Accept(""RIFF MIDI"");
    Element_Name(""RIFF MIDI"");

    //Filling
    Fill(Stream_General, 0, General_Format, ""RIFF MIDI"");
}

//---------------------------------------------------------------------------
void File_Riff::RMMP()
{
    Data_Accept(""RIFF MMP"");
    Element_Name(""RIFF MMP"");

    //Filling
    Fill(Stream_General, 0, General_Format, ""RIFF MMP"");
}

//---------------------------------------------------------------------------
void File_Riff::RMP3()
{
    Data_Accept(""RMP3"");
    Element_Name(""RMP3"");

    //Filling
    Fill(Stream_General, 0, General_Format, ""RMP3"");
    Kind=Kind_Rmp3;
}

//---------------------------------------------------------------------------
void File_Riff::RMP3_data()
{
    Element_Name(""Raw datas"");

    Fill(Stream_Audio, 0, Audio_StreamSize, Buffer_DataToParse_End-Buffer_DataToParse_Begin);
    Stream_Prepare(Stream_Audio);

    //Creating parser
    #if defined(MEDIAINFO_MPEGA_YES)
        File_Mpega* Parser=new File_Mpega;
        Parser->CalculateDelay=true;
        Parser->ShouldContinueParsing=true;
        Open_Buffer_Init(Parser);
        stream& StreamItem=Stream[(int32u)-1];
        StreamItem.StreamKind=Stream_Audio;
        StreamItem.StreamPos=0;
        StreamItem.Parsers.push_back(Parser);
    #else //MEDIAINFO_MPEG4_YES
        Fill(Stream_Audio, 0, Audio_Format, ""MPEG Audio"");
        Skip_XX(Buffer_DataToParse_End-Buffer_DataToParse_Begin, ""Data"");
    #endif
}

//---------------------------------------------------------------------------
void File_Riff::RMP3_data_Continue()
{
    #if MEDIAINFO_DEMUX
        if (Element_Size)
        {
            Demux_random_access=true;
            Demux(Buffer+Buffer_Offset, (size_t)Element_Size, ContentType_MainStream);
        }
    #endif //MEDIAINFO_DEMUX

    Element_Code=(int64u)-1;
    AVI__movi_xxxx();
}

//---------------------------------------------------------------------------
void File_Riff::SMV0()
{
    Accept(""SMV"");

    //Parsing
    int8u Version;
    Skip_C1(                                                    ""Identifier (continuing)"");
    Get_C1 (Version,                                            ""Version"");
    Skip_C3(                                                    ""Identifier (continuing)"");
    if (Version=='1')
    {
        int32u Width, Height, FrameRate, BlockSize, FrameCount;
        Get_B3 (Width,                                          ""Width"");
        Get_B3 (Height,                                         ""Height"");
        Skip_B3(                                                ""0x000010"");
        Skip_B3(                                                ""0x000001"");
        Get_B3 (BlockSize,                                      ""Block size"");
        Get_B3 (FrameRate,                                      ""Frame rate"");
        Get_B3 (FrameCount,                                     ""Frame count"");
        Skip_B3(                                                ""0x000000"");
        Skip_B3(                                                ""0x000000"");
        Skip_B3(                                                ""0x000000"");
        Skip_B3(                                                ""0x010101"");
        Skip_B3(                                                ""0x010101"");
        Skip_B3(                                                ""0x010101"");
        Skip_B3(                                                ""0x010101"");

        //Filling
        Fill(Stream_General, 0, General_Format_Profile, ""SMV v1"");
        Stream_Prepare(Stream_Video);
        Fill(Stream_Video, 0, Video_MuxingMode, ""SMV v1"");
        Fill(Stream_Video, 0, Video_Width, Width);
        Fill(Stream_Video, 0, Video_Height, Height);
        Fill(Stream_Video, 0, Video_FrameRate, (float)FrameRate);
        Fill(Stream_Video, 0, Video_FrameCount, FrameCount);

        Finish(""SMV"");
    }
    else if (Version=='2')
    {
        int32u Width, Height, FrameRate;
        Get_L3 (Width,                                          ""Width"");
        Get_L3 (Height,                                         ""Height"");
        Skip_L3(                                                ""0x000010"");
        Skip_L3(                                                ""0x000001"");
        Get_L3 (SMV_BlockSize,                                  ""Block size"");
        Get_L3 (FrameRate,                                      ""Frame rate"");
        Get_L3 (SMV_FrameCount,                                 ""Frame count"");
        Skip_L3(                                                ""0x000001"");
        Skip_L3(                                                ""0x000000"");
        Skip_L3(                                                ""Frame rate"");
        Skip_L3(                                                ""0x010101"");
        Skip_L3(                                                ""0x010101"");
        Skip_L3(                                                ""0x010101"");
        Skip_L3(                                                ""0x010101"");

        //Filling
        SMV_BlockSize+=3;
        SMV_FrameCount++;
        Fill(Stream_General, 0, General_Format_Profile, ""SMV v2"");
        Stream_Prepare(Stream_Video);
        Fill(Stream_Video, 0, Video_Format, ""JPEG"");
        Fill(Stream_Video, 0, Video_Codec,  ""JPEG"");
        Fill(Stream_Video, 0, Video_MuxingMode, ""SMV v2"");
        Fill(Stream_Video, 0, Video_Width, Width);
        Fill(Stream_Video, 0, Video_Height, Height);
        Fill(Stream_Video, 0, Video_FrameRate, FrameRate);
        Fill(Stream_Video, 0, Video_FrameCount, SMV_FrameCount);
        Fill(Stream_Video, 0, Video_StreamSize, SMV_BlockSize*SMV_FrameCount);
    }
    else
        Finish(""SMV"");
}

//---------------------------------------------------------------------------
void File_Riff::SMV0_xxxx()
{
    //Parsing
    int32u Size;
    Get_L3 (Size,                                              ""Size"");
    #if defined(MEDIAINFO_JPEG_YES)
        //Creating the parser
        File_Jpeg MI;
        Open_Buffer_Init(&MI);

        //Parsing
        Open_Buffer_Continue(&MI, Size);

        //Filling
        Finish(&MI);
        Merge(MI, Stream_Video, 0, StreamPos_Last);

        //Positioning
        Element_Offset+=Size;
    #else
        //Parsing
        Skip_XX(Size,                                           ""JPEG data"");
    #endif
    Skip_XX(Element_Size-Element_Offset,                        ""Padding"");

    //Filling
    #if MEDIAINFO_HASH
        if (Config->File_Hash_Get().to_ulong())
            Element_Offset=Element_Size+(SMV_FrameCount-1)*SMV_BlockSize;
    #endif //MEDIAINFO_HASH
            Data_GoTo(File_Offset+Buffer_Offset+(size_t)Element_Size+(SMV_FrameCount-1)*SMV_BlockSize, ""SMV"");
    SMV_BlockSize=0;
}

//---------------------------------------------------------------------------
void File_Riff::WAVE()
{
    Data_Accept(""Wave"");
    Element_Name(""Wave"");

    //Filling
    Fill(Stream_General, 0, General_Format, ""Wave"");
    Kind=Kind_Wave;
    #if MEDIAINFO_EVENTS
        StreamIDs_Width[0]=0;
    #endif //MEDIAINFO_EVENTS
}

//---------------------------------------------------------------------------
void File_Riff::WAVE__pmx()
{
    Element_Name(""XMP"");

    //Parsing
    Ztring XML_Data;
    Get_Local(Element_Size, XML_Data,                           ""XML data"");
}

//---------------------------------------------------------------------------
void File_Riff::WAVE_aXML()
{
    Element_Name(""aXML"");

    //Parsing
    Skip_Local(Element_Size,                                    ""XML data"");
}

//---------------------------------------------------------------------------
void File_Riff::WAVE_bext()
{
    Element_Name(""Broadcast extension"");

    //Parsing
    Ztring Description, Originator, OriginatorReference, OriginationDate, OriginationTime, History;
    int16u Version;
    Get_Local(256, Description,                                 ""Description"");
    Get_Local( 32, Originator,                                  ""Originator"");
    Get_Local( 32, OriginatorReference,                         ""OriginatorReference"");
    Get_Local( 10, OriginationDate,                             ""OriginationDate"");
    Get_Local(  8, OriginationTime,                             ""OriginationTime"");
    Get_L8   (     TimeReference,                               ""TimeReference""); //To be divided by SamplesPerSec
    Get_L2   (     Version,                                     ""Version"");
    if (Version==1)
        Skip_UUID(                                              ""UMID"");
    Skip_XX  (602-Element_Offset,                               ""Reserved"");
    if (Element_Offset<Element_Size)
        Get_Local(Element_Size-Element_Offset, History,         ""History"");

    FILLING_BEGIN();
        Fill(Stream_General, 0, General_Description, Description);
        Fill(Stream_General, 0, General_Producer, Originator);
        Fill(Stream_General, 0, ""Producer_Reference"", OriginatorReference);
        Fill(Stream_General, 0, General_Encoded_Date, OriginationDate+__T(' ')+OriginationTime);
        Fill(Stream_General, 0, General_Encoded_Library_Settings, History);
        if (SamplesPerSec && TimeReference!=(int64u)-1)
        {
            Fill(Stream_Audio, 0, Audio_Delay, float64_int64s(((float64)TimeReference)*1000/SamplesPerSec));
            Fill(Stream_Audio, 0, Audio_Delay_Source, ""Container (bext)"");
        }
    FILLING_END();
}

//---------------------------------------------------------------------------
void File_Riff::WAVE_cue_()
{
    Element_Name(""Cue points"");

    //Parsing
    int32u numCuePoints;
    Get_L4(numCuePoints,                                        ""numCuePoints"");
    for (int32u Pos=0; Pos<numCuePoints; Pos++)
    {
        Element_Begin1(""Cue point"");
        Skip_L4(                                                ""ID"");
        Skip_L4(                                                ""Position"");
        Skip_C4(                                                ""DataChunkID"");
        Skip_L4(                                                ""ChunkStart"");
        Skip_L4(                                                ""BlockStart"");
        Skip_L4(                                                ""SampleOffset"");
        Element_End0();
    }
}

//---------------------------------------------------------------------------
void File_Riff::WAVE_data()
{
    Element_Name(""Raw datas"");

    if (Buffer_DataToParse_End-Buffer_DataToParse_Begin<100)
    {
        Skip_XX(Buffer_DataToParse_End-Buffer_Offset,           ""Unknown"");
        return; //This is maybe embeded in another container, and there is only the header (What is the junk?)
    }

    FILLING_BEGIN();
        Fill(Stream_Audio, 0, Audio_StreamSize, Buffer_DataToParse_End-Buffer_DataToParse_Begin);
    FILLING_END();

    //Parsing
    Element_Code=(int64u)-1;

    FILLING_BEGIN();
        int64u Duration=Retrieve(Stream_Audio, 0, Audio_Duration).To_int64u();
        int64u BitRate=Retrieve(Stream_Audio, 0, Audio_BitRate).To_int64u();
        if (Duration)
        {
            int64u BitRate_New=(Buffer_DataToParse_End-Buffer_DataToParse_Begin)*8*1000/Duration;
            if (BitRate_New<BitRate*0.95 || BitRate_New>BitRate*1.05)
                Fill(Stream_Audio, 0, Audio_BitRate, BitRate_New, 10, true); //Correcting the bitrate, it was false in the header
        }
        else if (BitRate)
        {
            if (IsSub)
                //Retrieving ""data"" real size, in case of truncated files and/or wave header in another container
                Duration=((int64u)LittleEndian2int32u(Buffer+Buffer_Offset-4))*8*1000/BitRate; //TODO: RF64 is not handled
            else
                Duration=(Buffer_DataToParse_End-Buffer_DataToParse_Begin)*8*1000/BitRate;
            Fill(Stream_General, 0, General_Duration, Duration, 10, true);
            Fill(Stream_Audio, 0, Audio_Duration, Duration, 10, true);
        }
    FILLING_END();
}

//---------------------------------------------------------------------------
void File_Riff::WAVE_data_Continue()
{
    #if MEDIAINFO_DEMUX
        Element_Code=(int64u)-1;
        if (AvgBytesPerSec && Demux_Rate)
        {
            FrameInfo.DTS=float64_int64s((File_Offset+Buffer_Offset-Buffer_DataToParse_Begin)*1000000000.0/AvgBytesPerSec);
            FrameInfo.PTS=FrameInfo.DTS;
            Frame_Count_NotParsedIncluded=float64_int64s(((float64)FrameInfo.DTS)/1000000000.0*Demux_Rate);
        }
        Demux_random_access=true;
        Demux(Buffer+Buffer_Offset, (size_t)Element_Size, ContentType_MainStream);
        Frame_Count_NotParsedIncluded=(int64u)-1;
    #endif //MEDIAINFO_DEMUX

    Element_Code=(int64u)-1;
    AVI__movi_xxxx();
}

//---------------------------------------------------------------------------
void File_Riff::WAVE_ds64()
{
    Element_Name(""DataSize64"");

    //Parsing
    int32u tableLength;
    Skip_L8(                                                    ""riffSize""); //Is directly read from the header parser
    Get_L8 (WAVE_data_Size,                                     ""dataSize"");
    Get_L8 (WAVE_fact_samplesCount,                             ""sampleCount"");
    Get_L4 (tableLength,                                        ""tableLength"");
    for (int32u Pos=0; Pos<tableLength; Pos++)
        Skip_L8(                                                ""table[]"");
}

//---------------------------------------------------------------------------
void File_Riff::WAVE_fact()
{
    Element_Name(""Sample count"");

    //Parsing
    int64u SamplesCount64;
    int32u SamplesCount;
    Get_L4 (SamplesCount,                                       ""SamplesCount"");
    SamplesCount64=SamplesCount;
    if (SamplesCount64==0xFFFFFFFF)
        SamplesCount64=WAVE_fact_samplesCount;

    FILLING_BEGIN();
        int32u SamplingRate=Retrieve(Stream_Audio, 0, Audio_SamplingRate).To_int32u();
        if (SamplingRate)
        {
            //Calculating
            int64u Duration=(SamplesCount64*1000)/SamplingRate;

            //Coherency test
            bool IsOK=true;
            if (File_Size!=(int64u)-1)
            {
                int64u BitRate=Retrieve(Stream_Audio, 0, Audio_BitRate).To_int64u();
                if (BitRate)
                {
                    int64u Duration_FromBitRate = File_Size * 8 * 1000 / BitRate;
                    if (Duration_FromBitRate > Duration*1.10 || Duration_FromBitRate < Duration*0.9)
                        IsOK = false;
                }
            }

            //Filling
            if (IsOK)
                Fill(Stream_Audio, 0, Audio_Duration, Duration);
        }
    FILLING_END();
}

//---------------------------------------------------------------------------
void File_Riff::WAVE_fmt_()
{
    //Compute the current codec ID
    Element_Code=(int64u)-1;
    Stream_ID=(int32u)-1;
    stream_Count=1;

    Stream[(int32u)-1].fccType=Elements::AVI__hdlr_strl_strh_auds;
    AVI__hdlr_strl_strf();
}

//---------------------------------------------------------------------------
void File_Riff::WAVE_ID3_()
{
    Element_Name(""ID3v2 tags"");

    //Parsing
    #if defined(MEDIAINFO_ID3V2_YES)
        File_Id3v2 MI;
        Open_Buffer_Init(&MI);
        Open_Buffer_Continue(&MI);
        Finish(&MI);
        Merge(MI, Stream_General, 0, 0);
    #endif
}

//---------------------------------------------------------------------------
void File_Riff::WAVE_iXML()
{
    Element_Name(""iXML"");

    //Parsing
    Skip_Local(Element_Size,                                    ""XML data"");
}

//---------------------------------------------------------------------------
void File_Riff::wave()
{
    Data_Accept(""Wave64"");
    Element_Name(""Wave64"");

    //Filling
    Fill(Stream_General, 0, General_Format, ""Wave64"");
}

//---------------------------------------------------------------------------
void File_Riff::W3DI()
{
    Element_Name(""IDVX tags (Out of specs!)"");

    //Parsing
    int32u Size=(int32u)Element_Size;
    Ztring Title, Artist, Album, Unknown, Genre, Comment;
    int32u TrackPos;
    Get_Local(Size, Title,                                      ""Title"");
    Element_Offset=(int32u)Title.size();
    Size-=(int32u)Title.size();
    if (Size==0) return;
    Skip_L1(                                                    ""Zero""); Size--; //NULL char
    Get_Local(Size, Artist,                                     ""Artist"");
    Element_Offset=(int32u)Title.size()+1+(int32u)Artist.size();
    Size-=(int32u)Artist.size();
    if (Size==0) return;
    Skip_L1(                                                    ""Zero""); Size--; //NULL char
    Get_Local(Size, Album,                                      ""Album"");
    Element_Offset=(int32u)Title.size()+1+(int32u)Artist.size()+1+(int32u)Album.size();
    Size-=(int32u)Album.size();
    if (Size==0) return;
    Skip_L1(                                                    ""Zero""); Size--; //NULL char
    Get_Local(Size, Unknown,                                    ""Unknown"");
    Element_Offset=(int32u)Title.size()+1+(int32u)Artist.size()+1+(int32u)Album.size()+1+(int32u)Unknown.size();
    Size-=(int32u)Unknown.size();
    if (Size==0) return;
    Skip_L1(                                                    ""Zero""); Size--; //NULL char
    Get_Local(Size, Genre,                                      ""Genre"");
    Element_Offset=(int32u)Title.size()+1+(int32u)Artist.size()+1+(int32u)Album.size()+1+(int32u)Unknown.size()+1+(int32u)Genre.size();
    Size-=(int32u)Genre.size();
    if (Size==0) return;
    Skip_L1(                                                    ""Zero""); Size--; //NULL char
    Get_Local(Size, Comment,                                    ""Comment"");
    Element_Offset=(int32u)Title.size()+1+(int32u)Artist.size()+1+(int32u)Album.size()+1+(int32u)Unknown.size()+1+(int32u)Genre.size()+1+(int32u)Comment.size();
    Size-=(int32u)Comment.size();
    if (Size==0) return;
    Skip_L1(                                                    ""Zero""); Size--; //NULL char
    Get_L4 (TrackPos,                                           ""Track_Position"");
    if(Element_Offset+8<Element_Size)
        Skip_XX(Element_Size-Element_Offset,                    ""Unknown"");
    Element_Begin1(""Footer"");
        Skip_L4(                                                ""Size"");
        Skip_C4(                                                ""Name"");
    Element_End0();

    //Filling
    Fill(Stream_General, 0, General_Track, Title);
    Fill(Stream_General, 0, General_Performer, Artist);
    Fill(Stream_General, 0, General_Album, Album);
    Fill(Stream_General, 0, ""Unknown"", Unknown);
    Fill(Stream_General, 0, General_Genre, Genre);
    Fill(Stream_General, 0, General_Comment, Comment);
    Fill(Stream_General, 0, General_Track_Position, TrackPos);
}
void File_Riff::Open_Buffer_Init_All()
{
    stream& StreamItem = Stream[Stream_ID];
    for (size_t Pos = 0; Pos<StreamItem.Parsers.size(); Pos++)
        Open_Buffer_Init(StreamItem.Parsers[Pos]);
}
//***************************************************************************
// C++
//***************************************************************************

} //NameSpace

#endif //MEDIAINFO_RIFF_YES


",C++
"#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;

const double EPS = 1e-9;

inline char DBLCMP(double d)
{
	if (fabs(d) < EPS) return 0;
	return d>0 ? 1 : -1;
}

struct spoint
{
	double x, y, z;
	spoint() {}
	spoint(double xx, double yy, double zz): x(xx), y(yy), z(zz) {}
	void read()
	{scanf(""%lf%lf%lf"", &x, &y, &z);}
};

spoint operator - (const spoint &v1, const spoint &v2)
{return spoint(v1.x-v2.x, v1.y-v2.y, v1.z-v2.z);}

double dot(const spoint &v1, const spoint &v2)
{return v1.x*v2.x+v1.y*v2.y+v1.z*v2.z;}

double norm(const spoint &v)
{return sqrt(v.x*v.x+v.y*v.y+v.z*v.z);}

double dis(const spoint &p1, const spoint &p2)
{return norm(p2-p1);}

spoint c, n, s, v, p;
double r, t1, t2, i, j, k;

//ax+b=0
//0 for no solution, 1 for one solution, 2 for infinitive solution
char lneq(double a, double b, double &x)
{
	if (DBLCMP(a) == 0)
	{
		if (DBLCMP(b) == 0) return 2;
		return 0;
	}
	x = -b/a;
	return 1;
}

//ax^2+bx+c=0, a!=0
//0 for no solution, 1 for one solution, 2 for 2 solutions
//x1 <= x2
char qdeq(double a, double b, double c, double &x1, double &x2)
{
	double delta = b*b-4*a*c;
	if (delta < 0) return 0;
	x1 = (-b+sqrt(delta))/(2*a);
	x2 = (-b-sqrt(delta))/(2*a);
	if (x1 > x2) swap(x1, x2);
	return DBLCMP(delta) ? 2 : 1;
}

int main()
{
	c.read();
	n.read();
	scanf(""%lf"", &r);
	//printf(""##%f\n"", dis(spoint(0,0,0), spoint(1,1,1)));
	s.read();
	v.read();
	i = -5.0*n.z; j = dot(n, v); k = dot(n, s-c);
	if (DBLCMP(i)==0)
	{
		char sta = lneq(j, k, t1);
		if (sta==0 || sta==2 || DBLCMP(t1) <= 0)
		{
			puts(""MISSED"");
			return 0;
		}
		p.x = s.x+v.x*t1;
		p.y = s.y+v.y*t1;
		p.z = s.z+v.z*t1-5.0*t1*t1;
		if (DBLCMP(dis(p, c)-r) < 0)
		{
			puts(""HIT"");
			return 0;
		}
		puts(""MISSED"");
		return 0;
	}
	if (!qdeq(i, j, k, t1, t2))
	{
		puts(""MISSED"");
		return 0;
	}
	if (DBLCMP(t1) > 0)
	{
		p.x = s.x+v.x*t1;
		p.y = s.y+v.y*t1;
		p.z = s.z+v.z*t1-5.0*t1*t1;
		if (DBLCMP(dis(p, c)-r) < 0)
		{
			puts(""HIT"");
			return 0;
		}
	}
	if (DBLCMP(t2) > 0)
	{
		p.x = s.x+v.x*t2;
		p.y = s.y+v.y*t2;
		p.z = s.z+v.z*t2-5.0*t2*t2;
		if (DBLCMP(dis(p, c)-r) < 0)
		{
			puts(""HIT"");
			return 0;
		}
	}
	puts(""MISSED"");
	return 0;
}
",C++
"#include ""stdafx.h""
#include ""GPUResource.h""
#include <algorithm>
#include ""D3D12DeviceContext.h""
CreateChecker(GPUResource);
GPUResource::GPUResource()
{}

GPUResource::GPUResource(ID3D12Resource* Target, D3D12_RESOURCE_STATES InitalState) :GPUResource(Target, InitalState, (D3D12DeviceContext*)RHI::GetDefaultDevice())
{}

GPUResource::GPUResource(ID3D12Resource * Target, D3D12_RESOURCE_STATES InitalState, DeviceContext * device)
{
	AddCheckerRef(GPUResource, this);
	resource = Target;
	NAME_D3D12_OBJECT(Target);
	CurrentResourceState = InitalState;
	Device = (D3D12DeviceContext*)device;
}

GPUResource::~GPUResource()
{
	if (!IsReleased)
	{
		Release();
	}
}

void GPUResource::SetName(LPCWSTR name)
{
	resource->SetName(name);
}

void GPUResource::CreateHeap()
{

	Block.Heaps.push_back(nullptr);

	ID3D12Heap*  pHeap = Block.Heaps[0];
	int RemainingSize = 1 * TILE_SIZE;
	D3D12_HEAP_DESC heapDesc = {};

	heapDesc.SizeInBytes = std::min(RemainingSize, MAX_HEAP_SIZE);
	heapDesc.Alignment = 0;
	heapDesc.Properties.Type = D3D12_HEAP_TYPE_DEFAULT;
	heapDesc.Properties.CPUPageProperty = D3D12_CPU_PAGE_PROPERTY_UNKNOWN;
	heapDesc.Properties.MemoryPoolPreference = D3D12_MEMORY_POOL_UNKNOWN;

	//
	// Tier 1 heaps have restrictions on the type of information that can be stored in
	// a heap. To accommodate this, we will retsrict the content to only shader resources.
	// The heap cannot store textures that are used as render targets, depth-stencil
	// output, or buffers. But this is okay, since we do not use these heaps for those
	// purposes.
	//
	heapDesc.Flags = D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES | D3D12_HEAP_FLAG_DENY_BUFFERS;

	//ThrowIfFailed( D3D12RHI::GetDevice()->CreateHeap(&heapDesc, IID_PPV_ARGS(&pHeap)));
}

void GPUResource::Evict()
{
	ensure(currentState != eResourceState::Evicted);
	ID3D12Pageable* Pageableresource = resource;
	ThrowIfFailed(Device->GetDevice()->Evict(1, &Pageableresource));
	currentState = eResourceState::Evicted;
}

void GPUResource::MakeResident()
{
	ensure(currentState != eResourceState::Resident);
	ID3D12Pageable* Pageableresource = resource;
	ThrowIfFailed(Device->GetDevice()->MakeResident(1, &Pageableresource));
	currentState = eResourceState::Resident;
}

bool GPUResource::IsResident()
{
	return (currentState == eResourceState::Resident);
}

GPUResource::eResourceState GPUResource::GetState()
{
	return currentState;
}

void GPUResource::SetResourceState(ID3D12GraphicsCommandList* List, D3D12_RESOURCE_STATES newstate)
{
	if (newstate != CurrentResourceState)
	{
		List->ResourceBarrier(1, &CD3DX12_RESOURCE_BARRIER::Transition(resource, CurrentResourceState, newstate));
		CurrentResourceState = newstate;
		TargetState = newstate;
	}
}
//todo More Detailed Error checking!
void GPUResource::StartResourceTransition(ID3D12GraphicsCommandList * List, D3D12_RESOURCE_STATES newstate)
{
	if (newstate != CurrentResourceState)
	{
		D3D12_RESOURCE_BARRIER BarrierDesc = {};
		BarrierDesc.Type = D3D12_RESOURCE_BARRIER_TYPE_TRANSITION;
		BarrierDesc.Flags = D3D12_RESOURCE_BARRIER_FLAG_BEGIN_ONLY;
		BarrierDesc.Transition.StateBefore = CurrentResourceState;
		BarrierDesc.Transition.StateAfter = newstate;
		BarrierDesc.Transition.pResource = resource;
		List->ResourceBarrier(1, &BarrierDesc);
		TargetState = newstate;
	}
}

void GPUResource::EndResourceTransition(ID3D12GraphicsCommandList * List, D3D12_RESOURCE_STATES newstate)
{
	if (newstate != CurrentResourceState)
	{
		D3D12_RESOURCE_BARRIER BarrierDesc = {};
		BarrierDesc.Type = D3D12_RESOURCE_BARRIER_TYPE_TRANSITION;
		BarrierDesc.Flags = D3D12_RESOURCE_BARRIER_FLAG_END_ONLY;
		BarrierDesc.Transition.StateBefore = CurrentResourceState;
		BarrierDesc.Transition.StateAfter = newstate;
		BarrierDesc.Transition.pResource = resource;
		List->ResourceBarrier(1, &BarrierDesc);
		CurrentResourceState = newstate;
	}
}
bool GPUResource::IsTransitioning()
{
	return (CurrentResourceState != TargetState);
}
D3D12_RESOURCE_STATES GPUResource::GetCurrentState()
{
	return CurrentResourceState;
}

ID3D12Resource * GPUResource::GetResource()
{
	return resource;
}

void GPUResource::Release()
{
	IRHIResourse::Release();
	SafeRelease(resource);
	RemoveCheckerRef(GPUResource, this);
}


",C++
"// Copyright (c) 2011-2015 The Bitcoin Core developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#include <qt/trafficgraphwidget.h>

#include <interfaces/node.h>
#include <qt/clientmodel.h>

#include <QColor>
#include <QPainter>
#include <QPainterPath>
#include <QTimer>

#include <cmath>

#define DESIRED_SAMPLES 800

#define XMARGIN 10
#define YMARGIN 10

TrafficGraphWidget::TrafficGraphWidget(QWidget *parent)
    : QWidget(parent), timer(nullptr), fMax(0.0f), nMins(0), vSamplesIn(),
      vSamplesOut(), nLastBytesIn(0), nLastBytesOut(0), clientModel(nullptr) {
    timer = new QTimer(this);
    connect(timer, &QTimer::timeout, this, &TrafficGraphWidget::updateRates);
}

void TrafficGraphWidget::setClientModel(ClientModel *model) {
    clientModel = model;
    if (model) {
        nLastBytesIn = model->node().getTotalBytesRecv();
        nLastBytesOut = model->node().getTotalBytesSent();
    }
}

int TrafficGraphWidget::getGraphRangeMins() const {
    return nMins;
}

void TrafficGraphWidget::paintPath(QPainterPath &path, QQueue<float> &samples) {
    int sampleCount = samples.size();
    if (sampleCount > 0) {
        int h = height() - YMARGIN * 2, w = width() - XMARGIN * 2;
        int x = XMARGIN + w;
        path.moveTo(x, YMARGIN + h);
        for (int i = 0; i < sampleCount; ++i) {
            x = XMARGIN + w - w * i / DESIRED_SAMPLES;
            int y = YMARGIN + h - (int)(h * samples.at(i) / fMax);
            path.lineTo(x, y);
        }
        path.lineTo(x, YMARGIN + h);
    }
}

void TrafficGraphWidget::paintEvent(QPaintEvent *) {
    QPainter painter(this);
    painter.fillRect(rect(), Qt::black);

    if (fMax <= 0.0f) {
        return;
    }

    QColor axisCol(Qt::gray);
    int h = height() - YMARGIN * 2;
    painter.setPen(axisCol);
    painter.drawLine(XMARGIN, YMARGIN + h, width() - XMARGIN, YMARGIN + h);

    // decide what order of magnitude we are
    int base = floor(log10(fMax));
    float val = pow(10.0f, base);

    const QString units = tr(""KB/s"");
    const float yMarginText = 2.0;

    // draw lines
    painter.setPen(axisCol);
    painter.drawText(XMARGIN, YMARGIN + h - h * val / fMax - yMarginText,
                     QString(""%1 %2"").arg(val).arg(units));
    for (float y = val; y < fMax; y += val) {
        int yy = YMARGIN + h - h * y / fMax;
        painter.drawLine(XMARGIN, yy, width() - XMARGIN, yy);
    }
    // if we drew 3 or fewer lines, break them up at the next lower order of
    // magnitude
    if (fMax / val <= 3.0f) {
        axisCol = axisCol.darker();
        val = pow(10.0f, base - 1);
        painter.setPen(axisCol);
        painter.drawText(XMARGIN, YMARGIN + h - h * val / fMax - yMarginText,
                         QString(""%1 %2"").arg(val).arg(units));
        int count = 1;
        for (float y = val; y < fMax; y += val, count++) {
            // don't overwrite lines drawn above
            if (count % 10 == 0) {
                continue;
            }
            int yy = YMARGIN + h - h * y / fMax;
            painter.drawLine(XMARGIN, yy, width() - XMARGIN, yy);
        }
    }

    if (!vSamplesIn.empty()) {
        QPainterPath p;
        paintPath(p, vSamplesIn);
        painter.fillPath(p, QColor(0, 255, 0, 128));
        painter.setPen(Qt::green);
        painter.drawPath(p);
    }
    if (!vSamplesOut.empty()) {
        QPainterPath p;
        paintPath(p, vSamplesOut);
        painter.fillPath(p, QColor(255, 0, 0, 128));
        painter.setPen(Qt::red);
        painter.drawPath(p);
    }
}

void TrafficGraphWidget::updateRates() {
    if (!clientModel) {
        return;
    }

    quint64 bytesIn = clientModel->node().getTotalBytesRecv(),
            bytesOut = clientModel->node().getTotalBytesSent();
    float inRate =
        (bytesIn - nLastBytesIn) / 1024.0f * 1000 / timer->interval();
    float outRate =
        (bytesOut - nLastBytesOut) / 1024.0f * 1000 / timer->interval();
    vSamplesIn.push_front(inRate);
    vSamplesOut.push_front(outRate);
    nLastBytesIn = bytesIn;
    nLastBytesOut = bytesOut;

    while (vSamplesIn.size() > DESIRED_SAMPLES) {
        vSamplesIn.pop_back();
    }
    while (vSamplesOut.size() > DESIRED_SAMPLES) {
        vSamplesOut.pop_back();
    }

    float tmax = 0.0f;
    for (const float f : vSamplesIn) {
        if (f > tmax) {
            tmax = f;
        }
    }
    for (const float f : vSamplesOut) {
        if (f > tmax) {
            tmax = f;
        }
    }
    fMax = tmax;
    update();
}

void TrafficGraphWidget::setGraphRangeMins(int mins) {
    nMins = mins;
    int msecsPerSample = nMins * 60 * 1000 / DESIRED_SAMPLES;
    timer->stop();
    timer->setInterval(msecsPerSample);

    clear();
}

void TrafficGraphWidget::clear() {
    timer->stop();

    vSamplesOut.clear();
    vSamplesIn.clear();
    fMax = 0.0f;

    if (clientModel) {
        nLastBytesIn = clientModel->node().getTotalBytesRecv();
        nLastBytesOut = clientModel->node().getTotalBytesSent();
    }
    timer->start();
}
",C++
"#include ""binary_buffer.hpp""

#include <iterator>
#include <algorithm>
#include <sstream>
#include <boost/endian/conversion.hpp>

using boost::endian::native_to_big;
using boost::endian::big_to_native;

namespace {
    using aria::byte;

    template <typename P>
    void append_bytes_to_vector(std::vector<byte> & vec, P primitive)
    {
        auto * begin = reinterpret_cast<byte *>(&primitive);
        auto * end = begin + sizeof(primitive);
        std::copy(begin, end, std::back_inserter(vec));
    }

    template <typename P>
    P read_primitive_and_advance(const byte * buffer, size_t size, size_t & offset, const std::string & name)
    {
        size_t stride = sizeof(P);
        if (offset + stride <= size) {
            auto i = reinterpret_cast<const P *>(buffer + offset);
            offset += stride;
            return big_to_native(*i);
        } else {
            throw aria::internal::buffer_error(""Insufficient bytes available to read "" + name + ""."");
        }
    }
}

aria::internal::buffer_error::buffer_error(const char *what)
    :   std::runtime_error(what)
{

}

aria::internal::buffer_error::buffer_error(const std::string &what)
    :   std::runtime_error(what)
{

}

void aria::internal::binary_buffer_writer::write_uint8(uint8_t i)
{
    _bytes.push_back(static_cast<byte>(i));
}

void aria::internal::binary_buffer_writer::write_uint16(uint16_t i)
{
    append_bytes_to_vector(_bytes, native_to_big(i));
}

void aria::internal::binary_buffer_writer::write_uint32(uint32_t i)
{
    append_bytes_to_vector(_bytes, native_to_big(i));
}

void aria::internal::binary_buffer_writer::write_uint64(uint64_t i)
{
    append_bytes_to_vector(_bytes, native_to_big(i));
}

void aria::internal::binary_buffer_writer::write_string(const std::string &str)
{
    write_uint32(str.size());

    for (auto c : str) {
        _bytes.push_back(static_cast<byte>(c));
    }
}

void aria::internal::binary_buffer_writer::write_bytes(const std::vector<aria::byte> &bytes)
{
    write_uint32(bytes.size());
    std::copy(bytes.begin(), bytes.end(), std::back_inserter(_bytes));
}

std::vector<aria::byte> aria::internal::binary_buffer_writer::take_buffer()
{
    std::vector<byte> buffer;
    _bytes.swap(buffer);
    return buffer;
}

aria::internal::binary_buffer_reader::binary_buffer_reader(const std::vector<byte> * buffer)
    :   _buffer_start(buffer->data()), _buffer_size(buffer->size()), _offset(0)
{

}

uint8_t aria::internal::binary_buffer_reader::read_uint8()
{
    return read_primitive_and_advance<uint8_t>(_buffer_start, _buffer_size, _offset, ""uint8"");
}

uint16_t aria::internal::binary_buffer_reader::read_uint16()
{
    return read_primitive_and_advance<uint16_t>(_buffer_start, _buffer_size, _offset, ""uint16"");
}

uint32_t aria::internal::binary_buffer_reader::read_uint32()
{
    return read_primitive_and_advance<uint32_t>(_buffer_start, _buffer_size, _offset, ""uint32"");
}

uint64_t aria::internal::binary_buffer_reader::read_uint64()
{
    return read_primitive_and_advance<uint64_t>(_buffer_start, _buffer_size, _offset, ""uint64"");
}

std::string aria::internal::binary_buffer_reader::read_string()
{
    uint32_t size;
    try {
        size = read_uint32();
    } catch (buffer_error) {
        throw buffer_error(""Insufficient bytes available to read string size."");
    }

    if (_offset + size <= _buffer_size) {
        auto data = reinterpret_cast<const char *>(_buffer_start + _offset);
        _offset += size;
        return std::string(data, size);;
    } else {
        assert(_offset <= _buffer_size);
        auto available = _buffer_size - _offset;
        std::stringstream ss;
        ss << ""Expected "" << size << "" bytes of string data, but only "" << available
           << "" available bytes in buffer."";
        throw buffer_error(ss.str());
    }
}

std::vector<byte> aria::internal::binary_buffer_reader::read_bytes()
{
    uint32_t size;
    try {
        size = read_uint32();
    } catch (buffer_error) {
        throw buffer_error(""Insufficient bytes available to read data size."");
    }

    if (_offset + size <= _buffer_size) {
        auto data = _buffer_start + _offset;
        _offset += size;
        return std::vector<byte>(data, data + size);
    } else {
        assert(_offset <= _buffer_size);
        auto available = _buffer_size - _offset;
        std::stringstream ss;
        ss << ""Expected "" << size << "" bytes of data, but only "" << available
           << "" available bytes in buffer."";
        throw buffer_error(ss.str());
    }
}
",C++
"// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include <common/common.h>


START_ATF_NAMESPACE
    enum MENUPARTS
    {
      MENUPartFiller0 = 0x0,
      MP_MENUITEM = 0x1,
      MP_MENUDROPDOWN = 0x2,
      MP_MENUBARITEM = 0x3,
      MP_MENUBARDROPDOWN = 0x4,
      MP_CHEVRON = 0x5,
      MP_SEPARATOR = 0x6,
    };
END_ATF_NAMESPACE
",C++
"#define BOOST_TEST_MODULE test_dsu
#define BOOST_TEST_DYN_LINK

#include ""test.hpp""
#include ""dsu.hpp""

using bdata::make;
using bdata::xrange;


BOOST_AUTO_TEST_CASE(one) {
    auto dsu = DisjointSetUnion<int>();

    dsu.push_back(1);

    BOOST_TEST(dsu.xs[1] == 1);
    BOOST_TEST(dsu.ws[1] == 1);
}

BOOST_AUTO_TEST_CASE(two) {
    auto dsu = DisjointSetUnion<int>();

    dsu.push_back(1);
    dsu.push_back(2);

    BOOST_TEST(dsu.xs[1] == 1);
    BOOST_TEST(dsu.ws[1] == 1);

    BOOST_TEST(dsu.xs[2] == 2);
    BOOST_TEST(dsu.ws[2] == 1);
}

BOOST_AUTO_TEST_CASE(unite2) {
    auto dsu = DisjointSetUnion<int>({1, 2});

    dsu.unite(1, 2);

    BOOST_TEST((dsu.find(1) == dsu.find(2)));
}

BOOST_DATA_TEST_CASE(unite_all_0, xrange(2, 256) * xrange(10), n, s) {
    auto xs = create_vector(n, s);

    auto dsu = DisjointSetUnion<int>(xs.begin(), xs.end());

    for (auto i = 1; i < n; ++i) {
        dsu.unite(xs[0], xs[i]);
    }

    for (auto i = 1; i < n; ++i) {
        BOOST_TEST((dsu.find(xs[0]) == dsu.find(xs[i])));
    }
}

BOOST_DATA_TEST_CASE(unite_all_1, xrange(2, 256) * xrange(10), n, s) {
    auto xs = create_vector(n, s);

    auto dsu = DisjointSetUnion<int>(xs.begin(), xs.end());

    for (auto i = 1; i < n; ++i) {
        dsu.unite(xs[i - 1], xs[i]);
    }

    for (auto i = 1; i < n; ++i) {
        BOOST_TEST((dsu.find(xs[0]) == dsu.find(xs[i])));
    }
}


BOOST_DATA_TEST_CASE(check_xs_ys, xrange(2, 256) * xrange(10), n, s) {
    auto xs = create_vector(n, s);
    auto ys = xs;

    auto engine = std::default_random_engine{};
    std::shuffle(ys.begin(), ys.end(), engine);

    auto dsu = DisjointSetUnion<int>(xs.begin(), xs.end());

    for (auto i = 0; i < n; ++i) {
        dsu.unite(xs[i], ys[i]);
    }

    for (auto i = 0; i < n; ++i) {
        BOOST_TEST((dsu.find(xs[i]) == dsu.find(ys[i])));
    }
}
",C++
"#include <boost/lexical_cast.hpp>

#include <disccord/models/user.hpp>

namespace disccord
{
    namespace models
    {
        user::user()
            : username(""""), avatar(), email(), discriminator(0),
            bot(false), mfa_enabled(), verified()
        { }

        user::~user()
        { }

        void user::decode(web::json::value json)
        {
            entity::decode(json);

            username = json.at(""username"").as_string();
            // HACK: use boost::lexical_cast here since it safely
            // validates values
            auto str_js = json.at(""discriminator"");
            discriminator = boost::lexical_cast<uint16_t>(str_js.as_string());

            #define get_field(var, conv) \
                if (json.has_field(#var)) { \
                    auto field = json.at(#var); \
                    if (!field.is_null()) { \
                        var = decltype(var)(field.conv()); \
                    } else { \
                        var = decltype(var)::no_value(); \
                    } \
                } else { \
                    var = decltype(var)(); \
                }

            get_field(avatar, as_string);
            bot = json.at(""bot"").as_bool();
            //get_field(bot, as_bool);
            get_field(mfa_enabled, as_bool);
            get_field(verified, as_bool);
            get_field(email, as_string);

            #undef get_field
        }

        void user::encode_to(std::unordered_map<std::string,
                                                web::json::value> &info)
        {
            entity::encode_to(info);

            info[""username""] = web::json::value(get_username());
            info[""discriminator""] =
                web::json::value(std::to_string(get_discriminator()));
            if (get_avatar().is_specified())
                info[""avatar""] = get_avatar();
            info[""bot""] = web::json::value(get_bot());
            if (get_mfa_enabled().is_specified())
                info[""mfa_enabled""] = get_mfa_enabled();
            if (get_verified().is_specified())
                info[""verified""] = get_verified();
            if (get_email().is_specified())
                info[""email""] = get_email();
        }

        #define define_get_method(field_name) \
            decltype(user::field_name) user::get_##field_name() { \
                return field_name; \
            }

        define_get_method(username)
        define_get_method(discriminator)
        define_get_method(avatar)
        define_get_method(bot)
        define_get_method(mfa_enabled)
        define_get_method(verified)
        define_get_method(email)
        
        util::optional<std::string> user::get_avatar_url()
        {
            if (get_avatar().is_specified())
            {
                std::string url = ""https://cdn.discordapp.com/avatars/"" + 
                                  std::to_string(get_id()) + ""/"" +
                                  get_avatar().get_value()+"".png?size=1024"";
                return util::optional<std::string>(url);
            }
            else
                return util::optional<std::string>::no_value();
        }

        #undef define_get_method
    }
}
",C++
"// Copyright (c) 2009-2010 Satoshi Nakamoto
// Copyright (c) 2009-2012 The Bitcoin developers
// Copyright (c) 2011-2012 Litecoin Developers
// Copyright (c) 2013 Fastcoin Developers
// Distributed under the MIT/X11 software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#include ""irc.h""
#include ""net.h""
#include ""strlcpy.h""
#include ""base58.h""

using namespace std;
using namespace boost;

int nGotIRCAddresses = 0;

void ThreadIRCSeed2(void* parg);




#pragma pack(push, 1)
struct ircaddr
{
    struct in_addr ip;
    short port;
};
#pragma pack(pop)

string EncodeAddress(const CService& addr)
{
    struct ircaddr tmp;
    if (addr.GetInAddr(&tmp.ip))
    {
        tmp.port = htons(addr.GetPort());

        vector<unsigned char> vch(UBEGIN(tmp), UEND(tmp));
        return string(""u"") + EncodeBase58Check(vch);
    }
    return """";
}

bool DecodeAddress(string str, CService& addr)
{
    vector<unsigned char> vch;
    if (!DecodeBase58Check(str.substr(1), vch))
        return false;

    struct ircaddr tmp;
    if (vch.size() != sizeof(tmp))
        return false;
    memcpy(&tmp, &vch[0], sizeof(tmp));

    addr = CService(tmp.ip, ntohs(tmp.port));
    return true;
}






static bool Send(SOCKET hSocket, const char* pszSend)
{
    if (strstr(pszSend, ""PONG"") != pszSend)
        printf(""IRC SENDING: %s\n"", pszSend);
    const char* psz = pszSend;
    const char* pszEnd = psz + strlen(psz);
    while (psz < pszEnd)
    {
        int ret = send(hSocket, psz, pszEnd - psz, MSG_NOSIGNAL);
        if (ret < 0)
            return false;
        psz += ret;
    }
    return true;
}

bool RecvLineIRC(SOCKET hSocket, string& strLine)
{
    loop
    {
        bool fRet = RecvLine(hSocket, strLine);
        if (fRet)
        {
            if (fShutdown)
                return false;
            vector<string> vWords;
            ParseString(strLine, ' ', vWords);
            if (vWords.size() >= 1 && vWords[0] == ""PING"")
            {
                strLine[1] = 'O';
                strLine += '\r';
                Send(hSocket, strLine.c_str());
                continue;
            }
        }
        return fRet;
    }
}

int RecvUntil(SOCKET hSocket, const char* psz1, const char* psz2=NULL, const char* psz3=NULL, const char* psz4=NULL)
{
    loop
    {
        string strLine;
        strLine.reserve(10000);
        if (!RecvLineIRC(hSocket, strLine))
            return 0;
        printf(""IRC %s\n"", strLine.c_str());
        if (psz1 && strLine.find(psz1) != string::npos)
            return 1;
        if (psz2 && strLine.find(psz2) != string::npos)
            return 2;
        if (psz3 && strLine.find(psz3) != string::npos)
            return 3;
        if (psz4 && strLine.find(psz4) != string::npos)
            return 4;
    }
}

bool Wait(int nSeconds)
{
    if (fShutdown)
        return false;
    printf(""IRC waiting %d seconds to reconnect\n"", nSeconds);
    for (int i = 0; i < nSeconds; i++)
    {
        if (fShutdown)
            return false;
        Sleep(1000);
    }
    return true;
}

bool RecvCodeLine(SOCKET hSocket, const char* psz1, string& strRet)
{
    strRet.clear();
    loop
    {
        string strLine;
        if (!RecvLineIRC(hSocket, strLine))
            return false;

        vector<string> vWords;
        ParseString(strLine, ' ', vWords);
        if (vWords.size() < 2)
            continue;

        if (vWords[1] == psz1)
        {
            printf(""IRC %s\n"", strLine.c_str());
            strRet = strLine;
            return true;
        }
    }
}

bool GetIPFromIRC(SOCKET hSocket, string strMyName, CNetAddr& ipRet)
{
    Send(hSocket, strprintf(""USERHOST %s\r"", strMyName.c_str()).c_str());

    string strLine;
    if (!RecvCodeLine(hSocket, ""302"", strLine))
        return false;

    vector<string> vWords;
    ParseString(strLine, ' ', vWords);
    if (vWords.size() < 4)
        return false;

    string str = vWords[3];
    if (str.rfind(""@"") == string::npos)
        return false;
    string strHost = str.substr(str.rfind(""@"")+1);

    // Hybrid IRC used by lfnet always returns IP when you userhost yourself,
    // but in case another IRC is ever used this should work.
    printf(""GetIPFromIRC() got userhost %s\n"", strHost.c_str());
    CNetAddr addr(strHost, true);
    if (!addr.IsValid())
        return false;
    ipRet = addr;

    return true;
}



void ThreadIRCSeed(void* parg)
{
    IMPLEMENT_RANDOMIZE_STACK(ThreadIRCSeed(parg));

    // Make this thread recognisable as the IRC seeding thread
    RenameThread(""bitcoin-ircseed"");

    try
    {
        ThreadIRCSeed2(parg);
    }
    catch (std::exception& e) {
        PrintExceptionContinue(&e, ""ThreadIRCSeed()"");
    } catch (...) {
        PrintExceptionContinue(NULL, ""ThreadIRCSeed()"");
    }
    printf(""ThreadIRCSeed exited\n"");
}

void ThreadIRCSeed2(void* parg)
{
    /* Dont advertise on IRC if we don't allow incoming connections */
    if (mapArgs.count(""-connect"") || fNoListen)
        return;

    if (!GetBoolArg(""-irc"", false))
        return;

    printf(""ThreadIRCSeed started\n"");
    int nErrorWait = 10;
    int nRetryWait = 10;

    while (!fShutdown)
    {
        CService addrConnect(""92.243.23.21"", 6667); // irc.lfnet.org

        CService addrIRC(""irc.lfnet.org"", 6667, true);
        if (addrIRC.IsValid())
            addrConnect = addrIRC;

        SOCKET hSocket;
        if (!ConnectSocket(addrConnect, hSocket))
        {
            printf(""IRC connect failed\n"");
            nErrorWait = nErrorWait * 11 / 10;
            if (Wait(nErrorWait += 60))
                continue;
            else
                return;
        }

        if (!RecvUntil(hSocket, ""Found your hostname"", ""using your IP address instead"", ""Couldn't look up your hostname"", ""ignoring hostname""))
        {
            closesocket(hSocket);
            hSocket = INVALID_SOCKET;
            nErrorWait = nErrorWait * 11 / 10;
            if (Wait(nErrorWait += 60))
                continue;
            else
                return;
        }

        CNetAddr addrIPv4(""1.2.3.4""); // arbitrary IPv4 address to make GetLocal prefer IPv4 addresses
        CService addrLocal;
        string strMyName;
        if (GetLocal(addrLocal, &addrIPv4))
            strMyName = EncodeAddress(GetLocalAddress(&addrConnect));
        if (strMyName == """")
            strMyName = strprintf(""x%u"", GetRand(1000000000));

        Send(hSocket, strprintf(""NICK %s\r"", strMyName.c_str()).c_str());
        Send(hSocket, strprintf(""USER %s 8 * : %s\r"", strMyName.c_str(), strMyName.c_str()).c_str());

        int nRet = RecvUntil(hSocket, "" 004 "", "" 433 "");
        if (nRet != 1)
        {
            closesocket(hSocket);
            hSocket = INVALID_SOCKET;
            if (nRet == 2)
            {
                printf(""IRC name already in use\n"");
                Wait(10);
                continue;
            }
            nErrorWait = nErrorWait * 11 / 10;
            if (Wait(nErrorWait += 60))
                continue;
            else
                return;
        }
        Sleep(500);

        // Get our external IP from the IRC server and re-nick before joining the channel
        CNetAddr addrFromIRC;
        if (GetIPFromIRC(hSocket, strMyName, addrFromIRC))
        {
            printf(""GetIPFromIRC() returned %s\n"", addrFromIRC.ToString().c_str());
            if (addrFromIRC.IsRoutable())
            {
                // IRC lets you to re-nick
                AddLocal(addrFromIRC, LOCAL_IRC);
                strMyName = EncodeAddress(GetLocalAddress(&addrConnect));
                Send(hSocket, strprintf(""NICK %s\r"", strMyName.c_str()).c_str());
            }
        }
        
        if (fTestNet) {
            Send(hSocket, ""JOIN #fastcoinTEST3\r"");
            Send(hSocket, ""WHO #fastcoinTEST3\r"");
        } else {
            // randomly join #fastcoin00-#fastcoin99
            int channel_number = GetRandInt(100);
            channel_number = 0; // Fastcoin: for now, just use one channel
            Send(hSocket, strprintf(""JOIN #fastcoin%02d\r"", channel_number).c_str());
            Send(hSocket, strprintf(""WHO #fastcoin%02d\r"", channel_number).c_str());
        }

        int64 nStart = GetTime();
        string strLine;
        strLine.reserve(10000);
        while (!fShutdown && RecvLineIRC(hSocket, strLine))
        {
            if (strLine.empty() || strLine.size() > 900 || strLine[0] != ':')
                continue;

            vector<string> vWords;
            ParseString(strLine, ' ', vWords);
            if (vWords.size() < 2)
                continue;

            char pszName[10000];
            pszName[0] = '\0';

            if (vWords[1] == ""352"" && vWords.size() >= 8)
            {
                // index 7 is limited to 16 characters
                // could get full length name at index 10, but would be different from join messages
                strlcpy(pszName, vWords[7].c_str(), sizeof(pszName));
                printf(""IRC got who\n"");
            }

            if (vWords[1] == ""JOIN"" && vWords[0].size() > 1)
            {
                // :username!username@50000007.F000000B.90000002.IP JOIN :#channelname
                strlcpy(pszName, vWords[0].c_str() + 1, sizeof(pszName));
                if (strchr(pszName, '!'))
                    *strchr(pszName, '!') = '\0';
                printf(""IRC got join\n"");
            }

            if (pszName[0] == 'u')
            {
                CAddress addr;
                if (DecodeAddress(pszName, addr))
                {
                    addr.nTime = GetAdjustedTime();
                    if (addrman.Add(addr, addrConnect, 51 * 60))
                        printf(""IRC got new address: %s\n"", addr.ToString().c_str());
                    nGotIRCAddresses++;
                }
                else
                {
                    printf(""IRC decode failed\n"");
                }
            }
        }
        closesocket(hSocket);
        hSocket = INVALID_SOCKET;

        if (GetTime() - nStart > 20 * 60)
        {
            nErrorWait /= 3;
            nRetryWait /= 3;
        }

        nRetryWait = nRetryWait * 11 / 10;
        if (!Wait(nRetryWait += 60))
            return;
    }
}










#ifdef TEST
int main(int argc, char *argv[])
{
    WSADATA wsadata;
    if (WSAStartup(MAKEWORD(2,2), &wsadata) != NO_ERROR)
    {
        printf(""Error at WSAStartup()\n"");
        return false;
    }

    ThreadIRCSeed(NULL);

    WSACleanup();
    return 0;
}
#endif
",C++
"// This file auto generated by plugin for ida pro. Generated code only for x64. Please, dont change manually
#pragma once

#include <common/common.h>


START_ATF_NAMESPACE
    typedef SLR_FLAGS __MIDL___MIDL_itf_shobjidl_0212_0001;
END_ATF_NAMESPACE
",C++
"#include <stdio.h>
#include <set>
#include <utility>
#include <vector>

using namespace std;

const int MAXN = 1e+2;

int n, x0, y0;

typedef pair<int, int> point;

set<point> s;

int cross(int x0, int y0, const point &a, const point &b) {
    return (a.first - x0) * (b.second - y0) - (a.second - y0) * (b.first - x0);
}

int main() {
    scanf(""%d %d %d"", &n, &x0, &y0);
    int x, y;
    for (int i = 0; i < n; i++) {
        scanf(""%d %d"", &x, &y);
        s.emplace(x, y);
    }
    int n = s.size();
    vector<point> v(s.begin(), s.end());
    vector<bool> dead(n);
    int count = 0;
    for (int i = 0; i < n; i++) {
        if (dead[i]) {
            continue;
        }
        dead[i] = true;
        count++;
        for (int j = i + 1; j < n; j++) {
            if (dead[j]) {
                continue;
            }
            if (!cross(x0, y0, v[i], v[j])) {
                dead[j] = true;
            }
        }
    }
    printf(""%d\n"", count);
}",C++
"/*

DISKSPD

Copyright(c) Microsoft Corporation
All rights reserved.

MIT License

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

*/

#include ""StdAfx.h""
#include ""XmlResultParser.UnitTests.h""
#include ""Common.h""
#include ""xmlresultparser.h""
#include <stdlib.h>
#include <vector>

using namespace WEX::TestExecution;
using namespace WEX::Logging;
using namespace std;

namespace UnitTests
{
    void XmlResultParserUnitTests::Test_ParseResults()
    {
        Profile profile;
        TimeSpan timeSpan;
        Target target;
        XmlResultParser parser;

        Results results;
        results.fUseETW = false;
        double fTime = 120.0;
        results.ullTimeCount = PerfTimer::SecondsToPerfTime(fTime);

        // First group has 1 core
        SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION systemProcessorInfo = {};
        systemProcessorInfo.UserTime.QuadPart = static_cast<LONGLONG>(fTime * 30 * 100000);
        systemProcessorInfo.IdleTime.QuadPart = static_cast<LONGLONG>(fTime * 45 * 100000);
        systemProcessorInfo.KernelTime.QuadPart = static_cast<LONGLONG>(fTime * 70 * 100000);
        results.vSystemProcessorPerfInfo.push_back(systemProcessorInfo);

        // Second group has a maximum of 4 cores with 2 active
        SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION zeroSystemProcessorInfo = { 0 };
        zeroSystemProcessorInfo.UserTime.QuadPart = static_cast<LONGLONG>(fTime * 0 * 100000);
        zeroSystemProcessorInfo.IdleTime.QuadPart = static_cast<LONGLONG>(fTime * 100 * 100000);
        zeroSystemProcessorInfo.KernelTime.QuadPart = static_cast<LONGLONG>(fTime * 100 * 100000);
        results.vSystemProcessorPerfInfo.push_back(zeroSystemProcessorInfo);
        results.vSystemProcessorPerfInfo.push_back(zeroSystemProcessorInfo);
        results.vSystemProcessorPerfInfo.push_back(zeroSystemProcessorInfo);
        results.vSystemProcessorPerfInfo.push_back(zeroSystemProcessorInfo);
        
        // TODO: multiple target cases, full profile/result variations
        target.SetPath(""testfile1.dat"");
        target.SetCacheMode(TargetCacheMode::DisableOSCache);
        target.SetWriteThroughMode(WriteThroughMode::On);
        target.SetThroughputIOPS(1000);
        
        timeSpan.AddTarget(target);
        timeSpan.SetCalculateIopsStdDev(true);

        TargetResults targetResults;
        targetResults.sPath = ""testfile1.dat"";
        targetResults.ullFileSize = 10 * 1024 * 1024;
        targetResults.ullReadBytesCount = 4 * 1024 * 1024;
        targetResults.ullReadIOCount = 6;
        targetResults.ullWriteBytesCount = 2 * 1024 * 1024;
        targetResults.ullWriteIOCount = 10;
        targetResults.ullBytesCount = targetResults.ullReadBytesCount + targetResults.ullWriteBytesCount;
        targetResults.ullIOCount = targetResults.ullReadIOCount + targetResults.ullWriteIOCount;

        // TODO: Histogram<float> readLatencyHistogram;
        // TODO: Histogram<float> writeLatencyHistogram;
        // TODO: IoBucketizer writeBucketizer;

        targetResults.readBucketizer.Initialize(1000, timeSpan.GetDuration());
        for (size_t i = 0; i < timeSpan.GetDuration(); i++)
        {
            // add an io halfway through the bucket's time interval
            targetResults.readBucketizer.Add(i*1000 + 500, 0);
        }

        ThreadResults threadResults;
        threadResults.vTargetResults.push_back(targetResults);
        results.vThreadResults.push_back(threadResults);

        vector<Results> vResults;
        vResults.push_back(results);

        // just throw away the computername and reset the timestamp - for the ut, it's
        // as useful (and simpler) to verify statics as anything else.  Reconstruct
        // processor topo to a fixed example as well.
        SystemInformation system;
        system.ResetTime();
        system.sComputerName.clear();
        system.processorTopology._ulProcCount = 5;
        system.processorTopology._ulActiveProcCount = 3;

        system.processorTopology._vProcessorGroupInformation.clear();
        system.processorTopology._vProcessorGroupInformation.emplace_back((BYTE)1, (BYTE)1, (WORD)0, (KAFFINITY)0x1);
        system.processorTopology._vProcessorGroupInformation.emplace_back((BYTE)4, (BYTE)2, (WORD)1, (KAFFINITY)0x6);

        system.processorTopology._vProcessorNumaInformation.clear();
        system.processorTopology._vProcessorNumaInformation.emplace_back((DWORD)0, (WORD)0, (KAFFINITY)0x1);
        system.processorTopology._vProcessorNumaInformation.emplace_back((DWORD)1, (WORD)1, (KAFFINITY)0x6);

        ProcessorSocketInformation socket;
        socket._vProcessorMasks.emplace_back((WORD)0, (KAFFINITY)0x1);
        socket._vProcessorMasks.emplace_back((WORD)1, (KAFFINITY)0x6);
        system.processorTopology._vProcessorSocketInformation.clear();
        system.processorTopology._vProcessorSocketInformation.push_back(socket);

        system.processorTopology._vProcessorHyperThreadInformation.clear();
        system.processorTopology._vProcessorHyperThreadInformation.emplace_back((WORD)0, (KAFFINITY)0x1);
        system.processorTopology._vProcessorHyperThreadInformation.emplace_back((WORD)1, (KAFFINITY)0x6);

        // finally, add the timespan to the profile and dump.
        profile.AddTimeSpan(timeSpan);

        string sResults = parser.ParseResults(profile, system, vResults);

        // stringify random text, quoting ""'s and adding newline/preserving tabs
        // gc some.txt |% { write-host $(""`""{0}\n`"""" -f $($_ -replace ""`"""",""\`"""" -replace ""`t"",""\t"")) }

        const char *pcszExpectedOutput = \
            ""<Results>\n""
            ""  <System>\n""
            ""    <ComputerName></ComputerName>\n""
            ""    <Tool>\n""
            ""      <Version>"" DISKSPD_NUMERIC_VERSION_STRING ""</Version>\n""
            ""      <VersionDate>"" DISKSPD_DATE_VERSION_STRING ""</VersionDate>\n""
            ""    </Tool>\n""
            ""    <RunTime></RunTime>\n""
            ""    <ProcessorTopology>\n""
            ""      <Group Group=\""0\"" MaximumProcessors=\""1\"" ActiveProcessors=\""1\"" ActiveProcessorMask=\""0x1\""/>\n""
            ""      <Group Group=\""1\"" MaximumProcessors=\""4\"" ActiveProcessors=\""2\"" ActiveProcessorMask=\""0x6\""/>\n""
            ""      <Node Node=\""0\"" Group=\""0\"" Processors=\""0x1\""/>\n""
            ""      <Node Node=\""1\"" Group=\""1\"" Processors=\""0x6\""/>\n""
            ""      <Socket>\n""
            ""        <Group Group=\""0\"" Processors=\""0x1\""/>\n""
            ""        <Group Group=\""1\"" Processors=\""0x6\""/>\n""
            ""      </Socket>\n""
            ""      <HyperThread Group=\""0\"" Processors=\""0x1\""/>\n""
            ""      <HyperThread Group=\""1\"" Processors=\""0x6\""/>\n""
            ""    </ProcessorTopology>\n""
            ""  </System>\n""
            ""  <Profile>\n""
            ""    <Progress>0</Progress>\n""
            ""    <ResultFormat>text</ResultFormat>\n""
            ""    <Verbose>false</Verbose>\n""
            ""    <TimeSpans>\n""
            ""      <TimeSpan>\n""
            ""        <CompletionRoutines>false</CompletionRoutines>\n""
            ""        <MeasureLatency>false</MeasureLatency>\n""
            ""        <CalculateIopsStdDev>true</CalculateIopsStdDev>\n""
            ""        <DisableAffinity>false</DisableAffinity>\n""
            ""        <Duration>10</Duration>\n""
            ""        <Warmup>5</Warmup>\n""
            ""        <Cooldown>0</Cooldown>\n""
            ""        <ThreadCount>0</ThreadCount>\n""
            ""        <RequestCount>0</RequestCount>\n""
            ""        <IoBucketDuration>1000</IoBucketDuration>\n""
            ""        <RandSeed>0</RandSeed>\n""
            ""        <Targets>\n""
            ""          <Target>\n""
            ""            <Path>testfile1.dat</Path>\n""
            ""            <BlockSize>65536</BlockSize>\n""
            ""            <BaseFileOffset>0</BaseFileOffset>\n""
            ""            <SequentialScan>false</SequentialScan>\n""
            ""            <RandomAccess>false</RandomAccess>\n""
            ""            <TemporaryFile>false</TemporaryFile>\n""
            ""            <UseLargePages>false</UseLargePages>\n""
            ""            <DisableOSCache>true</DisableOSCache>\n""
            ""            <WriteThrough>true</WriteThrough>\n""
            ""            <WriteBufferContent>\n""
            ""              <Pattern>sequential</Pattern>\n""
            ""            </WriteBufferContent>\n""
            ""            <ParallelAsyncIO>false</ParallelAsyncIO>\n""
            ""            <StrideSize>65536</StrideSize>\n""
            ""            <InterlockedSequential>false</InterlockedSequential>\n""
            ""            <ThreadStride>0</ThreadStride>\n""
            ""            <MaxFileSize>0</MaxFileSize>\n""
            ""            <RequestCount>2</RequestCount>\n""
            ""            <WriteRatio>0</WriteRatio>\n""
            ""            <Throughput unit=\""IOPS\"">1000</Throughput>\n""
            ""            <ThreadsPerFile>1</ThreadsPerFile>\n""
            ""            <IOPriority>3</IOPriority>\n""
            ""            <Weight>1</Weight>\n""
            ""          </Target>\n""
            ""        </Targets>\n""
            ""      </TimeSpan>\n""
            ""    </TimeSpans>\n""
            ""  </Profile>\n""
            ""  <TimeSpan>\n""
            ""    <TestTimeSeconds>120.00</TestTimeSeconds>\n""
            ""    <ThreadCount>1</ThreadCount>\n""
            ""    <RequestCount>0</RequestCount>\n""
            ""    <ProcCount>3</ProcCount>\n""
            ""    <CpuUtilization>\n""
            ""      <CPU>\n""
            ""        <Group>0</Group>\n""
            ""        <Id>0</Id>\n""
            ""        <UsagePercent>55.00</UsagePercent>\n""
            ""        <UserPercent>30.00</UserPercent>\n""
            ""        <KernelPercent>25.00</KernelPercent>\n""
            ""        <IdlePercent>45.00</IdlePercent>\n""
            ""      </CPU>\n""
            ""      <CPU>\n""
            ""        <Group>1</Group>\n""
            ""        <Id>1</Id>\n""
            ""        <UsagePercent>0.00</UsagePercent>\n""
            ""        <UserPercent>0.00</UserPercent>\n""
            ""        <KernelPercent>0.00</KernelPercent>\n""
            ""        <IdlePercent>100.00</IdlePercent>\n""
            ""      </CPU>\n""
            ""      <CPU>\n""
            ""        <Group>1</Group>\n""
            ""        <Id>2</Id>\n""
            ""        <UsagePercent>0.00</UsagePercent>\n""
            ""        <UserPercent>0.00</UserPercent>\n""
            ""        <KernelPercent>0.00</KernelPercent>\n""
            ""        <IdlePercent>100.00</IdlePercent>\n""
            ""      </CPU>\n""
            ""      <Average>\n""
            ""        <UsagePercent>18.33</UsagePercent>\n""
            ""        <UserPercent>10.00</UserPercent>\n""
            ""        <KernelPercent>8.33</KernelPercent>\n""
            ""        <IdlePercent>81.67</IdlePercent>\n""
            ""      </Average>\n""
            ""    </CpuUtilization>\n""
            ""    <Iops>\n""
            ""      <ReadIopsStdDev>0.000</ReadIopsStdDev>\n""
            ""      <IopsStdDev>0.000</IopsStdDev>\n""
            ""      <Bucket SampleMillisecond=\""1000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""      <Bucket SampleMillisecond=\""2000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""      <Bucket SampleMillisecond=\""3000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""      <Bucket SampleMillisecond=\""4000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""      <Bucket SampleMillisecond=\""5000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""      <Bucket SampleMillisecond=\""6000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""      <Bucket SampleMillisecond=\""7000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""      <Bucket SampleMillisecond=\""8000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""      <Bucket SampleMillisecond=\""9000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""      <Bucket SampleMillisecond=\""10000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""    </Iops>\n""
            ""    <Thread>\n""
            ""      <Id>0</Id>\n""
            ""      <Target>\n""
            ""        <Path>testfile1.dat</Path>\n""
            ""        <BytesCount>6291456</BytesCount>\n""
            ""        <FileSize>10485760</FileSize>\n""
            ""        <IOCount>16</IOCount>\n""
            ""        <ReadBytes>4194304</ReadBytes>\n""
            ""        <ReadCount>6</ReadCount>\n""
            ""        <WriteBytes>2097152</WriteBytes>\n""
            ""        <WriteCount>10</WriteCount>\n""
            ""        <Iops>\n""
            ""          <ReadIopsStdDev>0.000</ReadIopsStdDev>\n""
            ""          <IopsStdDev>0.000</IopsStdDev>\n""
            ""          <Bucket SampleMillisecond=\""1000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""          <Bucket SampleMillisecond=\""2000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""          <Bucket SampleMillisecond=\""3000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""          <Bucket SampleMillisecond=\""4000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""          <Bucket SampleMillisecond=\""5000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""          <Bucket SampleMillisecond=\""6000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""          <Bucket SampleMillisecond=\""7000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""          <Bucket SampleMillisecond=\""8000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""          <Bucket SampleMillisecond=\""9000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""          <Bucket SampleMillisecond=\""10000\"" Read=\""1\"" Write=\""0\"" Total=\""1\"" ReadMinLatencyMilliseconds=\""0.000\"" ReadMaxLatencyMilliseconds=\""0.000\"" ReadAvgLatencyMilliseconds=\""0.000\"" ReadLatencyStdDev=\""0.000\"" WriteMinLatencyMilliseconds=\""0.000\"" WriteMaxLatencyMilliseconds=\""0.000\"" WriteAvgLatencyMilliseconds=\""0.000\"" WriteLatencyStdDev=\""0.000\""/>\n""
            ""        </Iops>\n""
            ""      </Target>\n""
            ""    </Thread>\n""
            ""  </TimeSpan>\n""
            ""</Results>"";

#if 0
        HANDLE h;
        DWORD written;
        h = CreateFileW(L""g:\\xmlresult-received.txt"", GENERIC_WRITE, FILE_SHARE_READ, NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);
        WriteFile(h, sResults.c_str(), (DWORD)sResults.length(), &written, NULL);
        VERIFY_ARE_EQUAL(sResults.length(), written);
        CloseHandle(h);

        h = CreateFileW(L""g:\\xmlresult-expected.txt"", GENERIC_WRITE, FILE_SHARE_READ, NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);
        WriteFile(h, pcszExpectedOutput, (DWORD)strlen(pcszExpectedOutput), &written, NULL);
        VERIFY_ARE_EQUAL((DWORD)strlen(pcszExpectedOutput), written);
        CloseHandle(h);

        printf(""--\n%s\n"", sResults.c_str());
        printf(""-------------------------------------------------\n"");
        printf(""--\n%s\n"", pcszExpectedOutput);
#endif

        VERIFY_ARE_EQUAL(0, strcmp(sResults.c_str(), pcszExpectedOutput));
    }

    void XmlResultParserUnitTests::Test_ParseProfile()
    {
        Profile profile;
        XmlResultParser parser;
        TimeSpan timeSpan;
        Target target;

        timeSpan.AddTarget(target);
        profile.AddTimeSpan(timeSpan);

        string s = parser.ParseProfile(profile);
        const char *pcszExpectedOutput = ""<Profile>\n""
            ""  <Progress>0</Progress>\n""
            ""  <ResultFormat>text</ResultFormat>\n""
            ""  <Verbose>false</Verbose>\n""
            ""  <TimeSpans>\n""
            ""    <TimeSpan>\n""
            ""      <CompletionRoutines>false</CompletionRoutines>\n""
            ""      <MeasureLatency>false</MeasureLatency>\n""
            ""      <CalculateIopsStdDev>false</CalculateIopsStdDev>\n""
            ""      <DisableAffinity>false</DisableAffinity>\n""
            ""      <Duration>10</Duration>\n""
            ""      <Warmup>5</Warmup>\n""
            ""      <Cooldown>0</Cooldown>\n""
            ""      <ThreadCount>0</ThreadCount>\n""
            ""      <RequestCount>0</RequestCount>\n""
            ""      <IoBucketDuration>1000</IoBucketDuration>\n""
            ""      <RandSeed>0</RandSeed>\n""
            ""      <Targets>\n""
            ""        <Target>\n""
            ""          <Path></Path>\n""
            ""          <BlockSize>65536</BlockSize>\n""
            ""          <BaseFileOffset>0</BaseFileOffset>\n""
            ""          <SequentialScan>false</SequentialScan>\n""
            ""          <RandomAccess>false</RandomAccess>\n""
            ""          <TemporaryFile>false</TemporaryFile>\n""
            ""          <UseLargePages>false</UseLargePages>\n""
            ""          <WriteBufferContent>\n""
            ""            <Pattern>sequential</Pattern>\n""
            ""          </WriteBufferContent>\n""
            ""          <ParallelAsyncIO>false</ParallelAsyncIO>\n""
            ""          <StrideSize>65536</StrideSize>\n""
            ""          <InterlockedSequential>false</InterlockedSequential>\n""
            ""          <ThreadStride>0</ThreadStride>\n""
            ""          <MaxFileSize>0</MaxFileSize>\n""
            ""          <RequestCount>2</RequestCount>\n""
            ""          <WriteRatio>0</WriteRatio>\n""
            ""          <Throughput>0</Throughput>\n""
            ""          <ThreadsPerFile>1</ThreadsPerFile>\n""
            ""          <IOPriority>3</IOPriority>\n""
            ""          <Weight>1</Weight>\n""
            ""        </Target>\n""
            ""      </Targets>\n""
            ""    </TimeSpan>\n""
            ""  </TimeSpans>\n""
            ""</Profile>\n"";

        //VERIFY_ARE_EQUAL(pcszExpectedOutput, s.c_str());
        VERIFY_ARE_EQUAL(strlen(pcszExpectedOutput), s.length());
        VERIFY_IS_TRUE(!strcmp(pcszExpectedOutput, s.c_str()));
    }

    void XmlResultParserUnitTests::Test_ParseTargetProfile()
    {
        Target target;
        string sResults;
        char pszExpectedOutput[4096];
        int nWritten;

        const char *pcszOutputTemplate = \
            ""<Target>\n""
            ""  <Path>testfile1.dat</Path>\n""
            ""  <BlockSize>65536</BlockSize>\n""
            ""  <BaseFileOffset>0</BaseFileOffset>\n""
            ""  <SequentialScan>false</SequentialScan>\n""
            ""  <RandomAccess>false</RandomAccess>\n""
            ""  <TemporaryFile>false</TemporaryFile>\n""
            ""  <UseLargePages>false</UseLargePages>\n""
            ""  <DisableOSCache>true</DisableOSCache>\n""
            ""  <WriteThrough>true</WriteThrough>\n""
            ""  <WriteBufferContent>\n""
            ""    <Pattern>sequential</Pattern>\n""
            ""  </WriteBufferContent>\n""
            ""  <ParallelAsyncIO>false</ParallelAsyncIO>\n""
            ""  <StrideSize>65536</StrideSize>\n""
            ""  <InterlockedSequential>false</InterlockedSequential>\n""
            ""  <ThreadStride>0</ThreadStride>\n""
            ""  <MaxFileSize>0</MaxFileSize>\n""
            ""  <RequestCount>2</RequestCount>\n""
            ""  <WriteRatio>0</WriteRatio>\n""
            ""  <Throughput%s>%s</Throughput>\n""       // 2 param
            ""  <ThreadsPerFile>1</ThreadsPerFile>\n""
            ""  <IOPriority>3</IOPriority>\n""
            ""  <Weight>1</Weight>\n""
            ""</Target>\n"";

        target.SetPath(""testfile1.dat"");
        target.SetCacheMode(TargetCacheMode::DisableOSCache);
        target.SetWriteThroughMode(WriteThroughMode::On);
        
        // Base case - no limit
 
        nWritten = sprintf_s(pszExpectedOutput, sizeof(pszExpectedOutput),
                             pcszOutputTemplate, """", ""0"");
        VERIFY_IS_GREATER_THAN(nWritten, 0);
        sResults = target.GetXml(0);
        VERIFY_ARE_EQUAL(sResults, pszExpectedOutput);

        // IOPS - with units

        target.SetThroughputIOPS(1000);
        nWritten = sprintf_s(pszExpectedOutput, sizeof(pszExpectedOutput),
                             pcszOutputTemplate, "" unit=\""IOPS\"""", ""1000"");
        VERIFY_IS_GREATER_THAN(nWritten, 0);
        sResults = target.GetXml(0);
        VERIFY_ARE_EQUAL(sResults, pszExpectedOutput);
 
        // BPMS - not specified with units in output

        target.SetThroughput(1000);
        nWritten = sprintf_s(pszExpectedOutput, sizeof(pszExpectedOutput),
                             pcszOutputTemplate, """", ""1000"");
        VERIFY_IS_GREATER_THAN(nWritten, 0);
        sResults = target.GetXml(0);
        VERIFY_ARE_EQUAL(sResults, pszExpectedOutput);
    }
}",C++
"#include <iostream>

using namespace std;

int main()
{
    int a,b,c,d;
    int sum=1080;

    while(cin>>a>>b>>c>>d)
    {
        if(a==0&&b==0&&c==0&&d==0)
            break;
        if(a>b)
        {
            sum=(a-b)*9+sum;
        }
        else if(a<b)
        {
            sum=((40-b)+a)*9+sum;
        }
        if(c>b)
        {
            sum=(c-b)*9+sum;
        }
        else if(c<b)
        {
            sum=((40-b)+c)*9+sum;
        }
          if(c>d)
        {
            sum=(c-d)*9+sum;
        }
        else if(c<d)
        {
            sum=((40-d)+c)*9+sum;
        }
        cout<<sum<<endl;
        sum=1080;
    }


    return 0;
}
",C++
"import { Component, OnInit } from '@angular/core';

// import { TreeModule, TreeNode } from ""primeng/primeng"";

import { BlogPostService } from '../shared/blog-post.service';
import { BlogPostDetails } from '../shared/blog-post.model';

@Component({
  selector: 'ejc-blog-archive',
  templateUrl: './blog-archive.component.html',
  styleUrls: ['./blog-archive.component.scss']
})
export class BlogArchiveComponent implements OnInit {

  constructor(
    // private postService: BlogPostService
  ) { }

  ngOnInit() {
  }

  // // it would be best if the data in the blog post details file was already organized into tree nodes
  // private buildTreeNodes(): TreeNode[] {}

}
",TypeScript
"import * as _ from 'lodash';
import * as AWS from 'aws-sdk';

import * as config from './config';

export interface Secrets {
  REDDIT_CLIENT_ID: string;
  REDDIT_CLIENT_TOKEN: string;
  REDDIT_USERNAME: string;
  REDDIT_PASSWORD: string;
  STEAM_API_KEY: string;
}

export async function resolve(): Promise<Secrets> {
  if (config.isLocalDev() && !process.env.USE_SECRETS) {
    console.info('Getting secrets from ENV instead of encrypted bundle.');
    return _.pick(process.env, [
      'REDDIT_CLIENT_ID',
      'REDDIT_CLIENT_TOKEN',
      'REDDIT_PASSWORD',
      'STEAM_API_KEY',
    ]) as any;
  }

  const kms = new AWS.KMS({
    region: 'us-west-2',
  });
  console.log('Resolving secrets.');
  const secrets = await kms.decrypt({
    CiphertextBlob: Buffer.from(process.env.SECRETS, 'base64'),
  }).promise();

  return JSON.parse(secrets.Plaintext.toString());
}
",TypeScript
"import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';
import { Filter, FilterType } from 'lib/filter';

@Component({
  selector: 'iw-filter-input',
  templateUrl: './filter-input.component.html',
  styleUrls: ['./filter-input.component.css']
})
export class FilterInputComponent implements OnInit {
  @Input() filter: Filter;
  @Output() change = new EventEmitter<Filter>();

  constructor() { }

  ngOnInit() {
  }

  get FilterType() {
    return FilterType;
  }

  applyFilter(filter: Filter, value: string) {
    filter.value = value;
    this.change.emit(filter);
  }


  itemsForField(filter: Filter) {
    if (filter.options) {
      return filter.options;
    }
    // put to initialization
    // if (!this.rows) { return []; }
    // const items = [];
    // this.rows.forEach((r) => {
    //   if (items.indexOf(r[filter.key]) < 0) {
    //     items.push(r[filter.key]);
    //   }
    // });
    // return items;
  }
}

/*

  filterData(key: string, value: any) {
    let filter: Filter = this.filters
      .find((f) => f.key === key);
    if (!filter) {
      filter = {
        type: FilterType.String, key, value
      };
      this.filters.push(filter);
    } else {
      // overwritte previous value
      filter.value = value;
    }
    this.filterChange.emit();
  }
}

*/
",TypeScript
"import { Component } from '@angular/core';
import { ContactService } from './contact.service';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  title = 'Simple Contacts Application';
  constructor(private contactService:ContactService){

  }
}
",TypeScript
"import { autoinject } from 'aurelia-framework';
import { Customers } from './customers';
import { Router } from 'aurelia-router';

@autoinject()
export class List {
  heading = 'Customer management';

  customerList = [];

  customers: Customers;
  router: Router;

  constructor(customers: Customers, router: Router) {
    this.customers = customers;
    this.router = router;
  }

  gotoCustomer(customer: any) {
    this.router.navigateToRoute('edit', {id: customer.id});
  }

  new() {
    this.router.navigateToRoute('create');
  }

  activate() {
    return this.customers.getAll()
      .then(customerList => this.customerList = customerList);
  }
}
",TypeScript
"import {statementType} from ""../_utils"";
import * as Statements from ""../../../src/abap/statements/"";

const tests = [
  ""METHOD zfoobar."",
  ""METHOD foobar by kernel module foobar fail."",
  ""METHOD foobar by kernel module foobar ignore."",
  ""METHOD if_foo~write BY KERNEL MODULE foobar."",
  ""METHOD foobar BY DATABASE PROCEDURE FOR HDB LANGUAGE SQLSCRIPT."",
  ""METHOD blah BY DATABASE PROCEDURE FOR HDB LANGUAGE SQLSCRIPT OPTIONS READ-ONLY."",
];

statementType(tests, ""METHOD"", Statements.Method);",TypeScript
"/// <reference path=""../../../typings/index.d.ts"" />

import * as React from 'react';
import * as ReactDOM from 'react-dom';

import { UserList } from '../components/users';

export class People extends React.Component<{}, {}> {

  render () {
    return (
      <div className=""row"">
        <div id=""content"">
          <UserList />
        </div>
      </div>
    );
  }
}",TypeScript
"import { Physics as EightBittrPhysics } from ""eightbittr"";

import { FullScreenPokemon } from ""../FullScreenPokemon"";

import { Direction } from ""./Constants"";
import { Character, Grass, Actor } from ""./Actors"";

/**
 * Physics functions to move Actors around.
 */
export class Physics<Game extends FullScreenPokemon> extends EightBittrPhysics<Game> {
    /**
     * Determines the bordering direction from one Actor to another.
     *
     * @param actor   The source Actor.
     * @param other   The destination Actor.
     * @returns The direction from actor to other.
     */
    public getDirectionBordering(actor: Actor, other: Actor): Direction | undefined {
        if (Math.abs(actor.top - (other.bottom - other.tolBottom)) < 4) {
            return Direction.Top;
        }

        if (Math.abs(actor.right - other.left) < 4) {
            return Direction.Right;
        }

        if (Math.abs(actor.bottom - other.top) < 4) {
            return Direction.Bottom;
        }

        if (Math.abs(actor.left - other.right) < 4) {
            return Direction.Left;
        }

        return undefined;
    }

    /**
     * Determines the direction from one Actor to another.
     *
     * @param actor   The source Actor.
     * @param other   The destination Actor.
     * @returns The direction from actor to other.
     * @remarks Like getDirectionBordering, but for cases where the two Actors
     *          aren't necessarily touching.
     */
    public getDirectionBetween(actor: Actor, other: Actor): Direction {
        const dx: number = this.getMidX(other) - this.getMidX(actor);
        const dy: number = this.getMidY(other) - this.getMidY(actor);

        if (Math.abs(dx) > Math.abs(dy)) {
            return dx > 0 ? Direction.Right : Direction.Left;
        }

        return dy > 0 ? Direction.Bottom : Direction.Top;
    }

    /**
     * Checks whether one Actor is overlapping another.
     *
     * @param actor   An in-game Actor.
     * @param other   An in-game Actor.
     * @returns Whether actor and other are overlapping.
     */
    public isActorWithinOther(actor: Actor, other: Actor): boolean {
        return (
            actor.top >= other.top &&
            actor.right <= other.right &&
            actor.bottom <= other.bottom &&
            actor.left >= other.left
        );
    }

    /**
     * Determines whether a Character is visually within grass.
     *
     * @param actor   An in-game Character.
     * @param other   Grass that actor might be in.
     * @returns Whether actor is visually within other.
     */
    public isActorWActorrass(actor: Character, other: Grass): boolean {
        if (actor.right <= other.left) {
            return false;
        }

        if (actor.left >= other.right) {
            return false;
        }

        if (other.top > actor.top + actor.height / 2) {
            return false;
        }

        if (other.bottom < actor.top + actor.height / 2) {
            return false;
        }

        return true;
    }

    /**
     * Shifts a Character according to its xvel and yvel.
     *
     * @param actor   A Character to shift.
     */
    public shiftCharacter(actor: Character): void {
        if (actor.bordering[Direction.Top] && actor.yvel < 0) {
            actor.yvel = 0;
        }

        if (actor.bordering[Direction.Right] && actor.xvel > 0) {
            actor.xvel = 0;
        }

        if (actor.bordering[Direction.Bottom] && actor.yvel > 0) {
            actor.yvel = 0;
        }

        if (actor.bordering[Direction.Left] && actor.xvel < 0) {
            actor.xvel = 0;
        }

        this.shiftBoth(actor, actor.xvel, actor.yvel);
    }

    /**
     * Snaps a moving Actor to a predictable grid position.
     *
     * @param actor   An Actor to snap the position of.
     */
    public snapToGrid(actor: Actor): void {
        const grid = 32;
        const x: number = (this.game.mapScreener.left + actor.left) / grid;
        const y: number = (this.game.mapScreener.top + actor.top) / grid;

        this.setLeft(actor, Math.round(x) * grid - this.game.mapScreener.left);
        this.setTop(actor, Math.round(y) * grid - this.game.mapScreener.top);
    }
}
",TypeScript
"/**
 * Angular 2 decorators and services
 */
import { Component, OnInit, ViewEncapsulation } from '@angular/core';
import { environment } from 'environments/environment';
import { AppState } from './app.service';

/**
 * App Component
 * Top Level Component
 */
@Component({
  selector: 'my-app',
  encapsulation: ViewEncapsulation.None,
  template: `
    <nav>
      <a [routerLink]="" ['./'] ""
        routerLinkActive=""active"" [routerLinkActiveOptions]= ""{exact: true}"">
        Index
      </a>
    </nav>

    <main>
      <router-outlet></router-outlet>
    </main>

    <pre class=""app-state"">this.appState.state = {{ appState.state | json }}</pre>

    <footer>
      <span>Angular Starter by <a [href]=""twitter"">@gdi2290</a></span>
      <div>
        <a [href]=""url"">
          <img [src]=""tipe"" width=""25%"">
        </a>
      </div>
    </footer>
  `
})
export class AppComponent implements OnInit {
  public name = 'Angular Starter';
  public tipe = 'assets/img/tipe.png';
  public twitter = 'https://twitter.com/gdi2290';
  public url = 'https://tipe.io';
  public showDevModule: boolean = environment.showDevModule;

  constructor(
    public appState: AppState
  ) {}

  public ngOnInit() {
    console.log('Initial App State', this.appState.state);
  }

}

/**
 * Please review the https://github.com/AngularClass/angular2-examples/ repo for
 * more angular app examples that you may copy/paste
 * (The examples may not be updated as quickly. Please open an issue on github for us to update it)
 * For help or questions please contact us at @AngularClass on twitter
 * or our chat on Slack at https://AngularClass.com/slack-join
 */
",TypeScript
"<?xml version=""1.0"" ?><!DOCTYPE TS><TS language=""lv_LV"" version=""2.0"">
<defaultcodec>UTF-8</defaultcodec>
<context>
    <name>AboutDialog</name>
    <message>
        <location filename=""../forms/aboutdialog.ui"" line=""+14""/>
        <source>About Hirocoin</source>
        <translation>Par Hirocoin</translation>
    </message>
    <message>
        <location line=""+39""/>
        <source>&lt;b&gt;Hirocoin&lt;/b&gt; version</source>
        <translation>&lt;b&gt;Hirocoin&lt;/b&gt; versija</translation>
    </message>
    <message>
        <location line=""+57""/>
        <source>
This is experimental software.

Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.

This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location filename=""../aboutdialog.cpp"" line=""+14""/>
        <source>Copyright</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>The Hirocoin developers</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>AddressBookPage</name>
    <message>
        <location filename=""../forms/addressbookpage.ui"" line=""+14""/>
        <source>Address Book</source>
        <translation>Adrešu grāmata</translation>
    </message>
    <message>
        <location line=""+19""/>
        <source>Double-click to edit address or label</source>
        <translation>Adresi vai nosaukumu rediģē ar dubultklikšķi</translation>
    </message>
    <message>
        <location line=""+27""/>
        <source>Create a new address</source>
        <translation>Izveidot jaunu adresi</translation>
    </message>
    <message>
        <location line=""+14""/>
        <source>Copy the currently selected address to the system clipboard</source>
        <translation>Kopēt iezīmēto adresi uz starpliktuvi</translation>
    </message>
    <message>
        <location line=""-11""/>
        <source>&amp;New Address</source>
        <translation>&amp;Jauna adrese</translation>
    </message>
    <message>
        <location filename=""../addressbookpage.cpp"" line=""+63""/>
        <source>These are your Hirocoin addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location filename=""../forms/addressbookpage.ui"" line=""+14""/>
        <source>&amp;Copy Address</source>
        <translation>&amp;Kopēt adresi</translation>
    </message>
    <message>
        <location line=""+11""/>
        <source>Show &amp;QR Code</source>
        <translation>Parādīt &amp;QR kodu</translation>
    </message>
    <message>
        <location line=""+11""/>
        <source>Sign a message to prove you own a Hirocoin address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Sign &amp;Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+25""/>
        <source>Delete the currently selected address from the list</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+27""/>
        <source>Export the data in the current tab to a file</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Export</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-44""/>
        <source>Verify a message to ensure it was signed with a specified Hirocoin address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Verify Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>&amp;Delete</source>
        <translation>&amp;Dzēst</translation>
    </message>
    <message>
        <location filename=""../addressbookpage.cpp"" line=""-5""/>
        <source>These are your Hirocoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>Copy &amp;Label</source>
        <translation>Kopēt &amp;Nosaukumu</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>&amp;Edit</source>
        <translation>&amp;Rediģēt</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Send &amp;Coins</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+260""/>
        <source>Export Address Book Data</source>
        <translation>Eksportēt adreses</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Comma separated file (*.csv)</source>
        <translation>Fails ar komatu kā atdalītāju (*.csv)</translation>
    </message>
    <message>
        <location line=""+13""/>
        <source>Error exporting</source>
        <translation>Kļūda eksportējot</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Could not write to file %1.</source>
        <translation>Nevar ierakstīt failā %1.</translation>
    </message>
</context>
<context>
    <name>AddressTableModel</name>
    <message>
        <location filename=""../addresstablemodel.cpp"" line=""+144""/>
        <source>Label</source>
        <translation>Nosaukums</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Address</source>
        <translation>Adrese</translation>
    </message>
    <message>
        <location line=""+36""/>
        <source>(no label)</source>
        <translation>(bez nosaukuma)</translation>
    </message>
</context>
<context>
    <name>AskPassphraseDialog</name>
    <message>
        <location filename=""../forms/askpassphrasedialog.ui"" line=""+26""/>
        <source>Passphrase Dialog</source>
        <translation>Paroles dialogs</translation>
    </message>
    <message>
        <location line=""+21""/>
        <source>Enter passphrase</source>
        <translation>Ierakstiet paroli</translation>
    </message>
    <message>
        <location line=""+14""/>
        <source>New passphrase</source>
        <translation>Jauna parole</translation>
    </message>
    <message>
        <location line=""+14""/>
        <source>Repeat new passphrase</source>
        <translation>Jaunā parole vēlreiz</translation>
    </message>
    <message>
        <location filename=""../askpassphrasedialog.cpp"" line=""+33""/>
        <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>
        <translation>Ierakstiet maciņa jauno paroli.&lt;br/&gt;Lūdzu izmantojiet &lt;b&gt;10 vai vairāk nejauši izvēlētas zīmes&lt;/b&gt;, vai &lt;b&gt;astoņus un vairāk vārdus&lt;/b&gt;.</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Encrypt wallet</source>
        <translation>Šifrēt maciņu</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>This operation needs your wallet passphrase to unlock the wallet.</source>
        <translation>Lai veikto šo darbību, maciņš jāatslēdz ar paroli.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Unlock wallet</source>
        <translation>Atslēgt maciņu</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>
        <translation>Šai darbībai maciņš jāatšifrē ar maciņa paroli.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Decrypt wallet</source>
        <translation>Atšifrēt maciņu</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Change passphrase</source>
        <translation>Mainīt paroli</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Enter the old and new passphrase to the wallet.</source>
        <translation>Ierakstiet maciņa veco un jauno paroli.</translation>
    </message>
    <message>
        <location line=""+46""/>
        <source>Confirm wallet encryption</source>
        <translation>Apstiprināt maciņa šifrēšanu</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR HIROCOINS&lt;/b&gt;!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>Are you sure you wish to encrypt your wallet?</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+15""/>
        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+100""/>
        <location line=""+24""/>
        <source>Warning: The Caps Lock key is on!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-130""/>
        <location line=""+58""/>
        <source>Wallet encrypted</source>
        <translation>Maciņš nošifrēts</translation>
    </message>
    <message>
        <location line=""-56""/>
        <source>Hirocoin will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your hirocoins from being stolen by malware infecting your computer.</source>
        <translation>Hirocoin aizvērsies, lai pabeigtu šifrēšanu. Atcerieties, ka maciņa šifrēšana nevar pilnībā novērst bitkoinu zādzību, ko veic datorā ieviesušās kaitīgas programmas.</translation>
    </message>
    <message>
        <location line=""+13""/>
        <location line=""+7""/>
        <location line=""+42""/>
        <location line=""+6""/>
        <source>Wallet encryption failed</source>
        <translation>Maciņa šifrēšana neizdevās</translation>
    </message>
    <message>
        <location line=""-54""/>
        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>
        <translation>Maciņa šifrēšana neizdevās programmas kļūdas dēļ. Jūsu maciņš netika šifrēts.</translation>
    </message>
    <message>
        <location line=""+7""/>
        <location line=""+48""/>
        <source>The supplied passphrases do not match.</source>
        <translation>Ievadītās paroles nav vienādas.</translation>
    </message>
    <message>
        <location line=""-37""/>
        <source>Wallet unlock failed</source>
        <translation>Maciņu atšifrēt neizdevās</translation>
    </message>
    <message>
        <location line=""+1""/>
        <location line=""+11""/>
        <location line=""+19""/>
        <source>The passphrase entered for the wallet decryption was incorrect.</source>
        <translation>Maciņa atšifrēšanai ievadītā parole nav pareiza.</translation>
    </message>
    <message>
        <location line=""-20""/>
        <source>Wallet decryption failed</source>
        <translation>Maciņu neizdevās atšifrēt</translation>
    </message>
    <message>
        <location line=""+14""/>
        <source>Wallet passphrase was successfully changed.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>BitcoinGUI</name>
    <message>
        <location filename=""../bitcoingui.cpp"" line=""+233""/>
        <source>Sign &amp;message...</source>
        <translation>Parakstīt &amp;ziņojumu...</translation>
    </message>
    <message>
        <location line=""+280""/>
        <source>Synchronizing with network...</source>
        <translation>Sinhronizācija ar tīklu...</translation>
    </message>
    <message>
        <location line=""-349""/>
        <source>&amp;Overview</source>
        <translation>&amp;Pārskats</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show general overview of wallet</source>
        <translation>Rādīt vispārēju maciņa pārskatu</translation>
    </message>
    <message>
        <location line=""+20""/>
        <source>&amp;Transactions</source>
        <translation>&amp;Transakcijas</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Browse transaction history</source>
        <translation>Skatīt transakciju vēsturi</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Edit the list of stored addresses and labels</source>
        <translation>Rediģēt saglabātās adreses un nosaukumus</translation>
    </message>
    <message>
        <location line=""-14""/>
        <source>Show the list of addresses for receiving payments</source>
        <translation>Rādīt maksājumu saņemšanas adreses</translation>
    </message>
    <message>
        <location line=""+31""/>
        <source>E&amp;xit</source>
        <translation>&amp;Iziet</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Quit application</source>
        <translation>Aizvērt programmu</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Show information about Hirocoin</source>
        <translation>Parādīt informāciju par Hirocoin</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>About &amp;Qt</source>
        <translation>Par &amp;Qt</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show information about Qt</source>
        <translation>Parādīt informāciju par Qt</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>&amp;Options...</source>
        <translation>&amp;Iespējas</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>&amp;Encrypt Wallet...</source>
        <translation>Š&amp;ifrēt maciņu...</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Backup Wallet...</source>
        <translation>&amp;Izveidot maciņa rezerves kopiju</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>&amp;Change Passphrase...</source>
        <translation>&amp;Mainīt paroli</translation>
    </message>
    <message>
        <location line=""+285""/>
        <source>Importing blocks from disk...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Reindexing blocks on disk...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-347""/>
        <source>Send coins to a Hirocoin address</source>
        <translation>Nosūtīt bitkoinus uz Hirocoin adresi</translation>
    </message>
    <message>
        <location line=""+49""/>
        <source>Modify configuration options for Hirocoin</source>
        <translation>Mainīt Hirocoin konfigurācijas uzstādījumus</translation>
    </message>
    <message>
        <location line=""+9""/>
        <source>Backup wallet to another location</source>
        <translation>Izveidot maciņa rezerves kopiju citur</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Change the passphrase used for wallet encryption</source>
        <translation>Mainīt maciņa šifrēšanas paroli</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>&amp;Debug window</source>
        <translation>&amp;Debug logs</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Open debugging and diagnostic console</source>
        <translation>Atvērt atkļūdošanas un diagnostikas konsoli</translation>
    </message>
    <message>
        <location line=""-4""/>
        <source>&amp;Verify message...</source>
        <translation>&amp;Pārbaudīt ziņojumu...</translation>
    </message>
    <message>
        <location line=""-165""/>
        <location line=""+530""/>
        <source>Hirocoin</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-530""/>
        <source>Wallet</source>
        <translation>Maciņš</translation>
    </message>
    <message>
        <location line=""+101""/>
        <source>&amp;Send</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Receive</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>&amp;Addresses</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+22""/>
        <source>&amp;About Hirocoin</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+9""/>
        <source>&amp;Show / Hide</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show or hide the main Window</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Encrypt the private keys that belong to your wallet</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Sign messages with your Hirocoin addresses to prove you own them</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Verify messages to ensure they were signed with specified Hirocoin addresses</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+28""/>
        <source>&amp;File</source>
        <translation>&amp;Fails</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Settings</source>
        <translation>&amp;Uzstādījumi</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>&amp;Help</source>
        <translation>&amp;Palīdzība</translation>
    </message>
    <message>
        <location line=""+9""/>
        <source>Tabs toolbar</source>
        <translation>Ciļņu rīkjosla</translation>
    </message>
    <message>
        <location line=""+17""/>
        <location line=""+10""/>
        <source>[testnet]</source>
        <translation>[testnet]</translation>
    </message>
    <message>
        <location line=""+47""/>
        <source>Hirocoin client</source>
        <translation>Hirocoin klients</translation>
    </message>
    <message numerus=""yes"">
        <location line=""+141""/>
        <source>%n active connection(s) to Hirocoin network</source>
        <translation><numerusform>%n aktīvu savienojumu ar Hirocoin tīklu</numerusform><numerusform>%n aktīvs savienojums ar Hirocoin tīklu</numerusform><numerusform>%n aktīvu savienojumu as Hirocoin tīklu</numerusform></translation>
    </message>
    <message>
        <location line=""+22""/>
        <source>No block source available...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+12""/>
        <source>Processed %1 of %2 (estimated) blocks of transaction history.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>Processed %1 blocks of transaction history.</source>
        <translation type=""unfinished""/>
    </message>
    <message numerus=""yes"">
        <location line=""+20""/>
        <source>%n hour(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message numerus=""yes"">
        <location line=""+4""/>
        <source>%n day(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message numerus=""yes"">
        <location line=""+4""/>
        <source>%n week(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>%1 behind</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>Last received block was generated %1 ago.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Transactions after this will not yet be visible.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+22""/>
        <source>Error</source>
        <translation>Kļūda</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning</source>
        <translation>Brīdinājums</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Information</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+70""/>
        <source>This transaction is over the size limit. You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network. Do you want to pay the fee?</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-140""/>
        <source>Up to date</source>
        <translation>Sinhronizēts</translation>
    </message>
    <message>
        <location line=""+31""/>
        <source>Catching up...</source>
        <translation>Sinhronizējos...</translation>
    </message>
    <message>
        <location line=""+113""/>
        <source>Confirm transaction fee</source>
        <translation>Apstiprināt transakcijas maksu</translation>
    </message>
    <message>
        <location line=""+8""/>
        <source>Sent transaction</source>
        <translation>Transakcija nosūtīta</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Incoming transaction</source>
        <translation>Ienākoša transakcija</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Date: %1
Amount: %2
Type: %3
Address: %4
</source>
        <translation>Datums: %1
Daudzums: %2
Tips: %3
Adrese: %4
</translation>
    </message>
    <message>
        <location line=""+33""/>
        <location line=""+23""/>
        <source>URI handling</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-23""/>
        <location line=""+23""/>
        <source>URI can not be parsed! This can be caused by an invalid Hirocoin address or malformed URI parameters.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+17""/>
        <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>
        <translation>Maciņš ir &lt;b&gt;šifrēts&lt;/b&gt; un pašlaik &lt;b&gt;atslēgts&lt;/b&gt;</translation>
    </message>
    <message>
        <location line=""+8""/>
        <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>
        <translation>Maciņš ir &lt;b&gt;šifrēts&lt;/b&gt; un pašlaik &lt;b&gt;slēgts&lt;/b&gt;</translation>
    </message>
    <message>
        <location filename=""../bitcoin.cpp"" line=""+111""/>
        <source>A fatal error occurred. Hirocoin can no longer continue safely and will quit.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>ClientModel</name>
    <message>
        <location filename=""../clientmodel.cpp"" line=""+104""/>
        <source>Network Alert</source>
        <translation>Tīkla brīdinājums</translation>
    </message>
</context>
<context>
    <name>EditAddressDialog</name>
    <message>
        <location filename=""../forms/editaddressdialog.ui"" line=""+14""/>
        <source>Edit Address</source>
        <translation>Mainīt adrese</translation>
    </message>
    <message>
        <location line=""+11""/>
        <source>&amp;Label</source>
        <translation>&amp;Nosaukums</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>The label associated with this address book entry</source>
        <translation>Adrešu grāmatas ieraksta nosaukums</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Address</source>
        <translation>&amp;Adrese</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>The address associated with this address book entry. This can only be modified for sending addresses.</source>
        <translation>Adrese adrešu grāmatas ierakstā. To var mainīt tikai nosūtīšanas adresēm.</translation>
    </message>
    <message>
        <location filename=""../editaddressdialog.cpp"" line=""+21""/>
        <source>New receiving address</source>
        <translation>Jauna saņemšanas adrese</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>New sending address</source>
        <translation>Jauna nosūtīšanas adrese</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Edit receiving address</source>
        <translation>Mainīt saņemšanas adresi</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Edit sending address</source>
        <translation>Mainīt nosūtīšanas adresi</translation>
    </message>
    <message>
        <location line=""+76""/>
        <source>The entered address &quot;%1&quot; is already in the address book.</source>
        <translation>Nupat ierakstītā adrese &quot;%1&quot; jau atrodas adrešu grāmatā.</translation>
    </message>
    <message>
        <location line=""-5""/>
        <source>The entered address &quot;%1&quot; is not a valid Hirocoin address.</source>
        <translation>Ierakstītā adrese &quot;%1&quot; nav derīga Hirocoin adrese.</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Could not unlock wallet.</source>
        <translation>Nav iespējams atslēgt maciņu.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>New key generation failed.</source>
        <translation>Neizdevās ģenerēt jaunu atslēgu.</translation>
    </message>
</context>
<context>
    <name>GUIUtil::HelpMessageBox</name>
    <message>
        <location filename=""../guiutil.cpp"" line=""+424""/>
        <location line=""+12""/>
        <source>Hirocoin-Qt</source>
        <translation>Hirocoin-Qt</translation>
    </message>
    <message>
        <location line=""-12""/>
        <source>version</source>
        <translation>versija</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Usage:</source>
        <translation>Lietojums:</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>command-line options</source>
        <translation>komandrindas izvēles</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>UI options</source>
        <translation>Lietotāja interfeisa izvēlnes</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>
        <translation>Uzstādiet valodu, piemēram &quot;de_DE&quot; (pēc noklusēšanas: sistēmas lokāle)</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Start minimized</source>
        <translation>Sākt minimizētu</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show splash screen on startup (default: 1)</source>
        <translation>Uzsākot, parādīt programmas informācijas logu (pēc noklusēšanas: 1)</translation>
    </message>
</context>
<context>
    <name>OptionsDialog</name>
    <message>
        <location filename=""../forms/optionsdialog.ui"" line=""+14""/>
        <source>Options</source>
        <translation>Iespējas</translation>
    </message>
    <message>
        <location line=""+16""/>
        <source>&amp;Main</source>
        <translation>&amp;Galvenais</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+15""/>
        <source>Pay transaction &amp;fee</source>
        <translation>&amp;Maksāt par transakciju</translation>
    </message>
    <message>
        <location line=""+31""/>
        <source>Automatically start Hirocoin after logging in to the system.</source>
        <translation>Automātiski sākt Hirocoin pēc pieteikšanās sistēmā.</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Start Hirocoin on system login</source>
        <translation>&amp;Sākt Hirocoin reizē ar sistēmu</translation>
    </message>
    <message>
        <location line=""+35""/>
        <source>Reset all client options to default.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Reset Options</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>&amp;Network</source>
        <translation>&amp;Tīkls</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>Automatically open the Hirocoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
        <translation>Uz rūtera automātiski atvērt Hirocoin klienta portu. Tas strādā tikai tad, ja rūteris atbalsta UPnP un tas ir ieslēgts.</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Map port using &amp;UPnP</source>
        <translation>Kartēt portu, izmantojot &amp;UPnP</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Connect to the Hirocoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Connect through SOCKS proxy:</source>
        <translation>&amp;Savienoties caur SOCKS proxy:</translation>
    </message>
    <message>
        <location line=""+9""/>
        <source>Proxy &amp;IP:</source>
        <translation>Proxy &amp;IP:</translation>
    </message>
    <message>
        <location line=""+19""/>
        <source>IP address of the proxy (e.g. 127.0.0.1)</source>
        <translation>proxy IP adrese (piem. 127.0.0.1)</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Port:</source>
        <translation>&amp;Ports:</translation>
    </message>
    <message>
        <location line=""+19""/>
        <source>Port of the proxy (e.g. 9050)</source>
        <translation>Proxy ports (piem. 9050)</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>SOCKS &amp;Version:</source>
        <translation>SOCKS &amp;Versija:</translation>
    </message>
    <message>
        <location line=""+13""/>
        <source>SOCKS version of the proxy (e.g. 5)</source>
        <translation>proxy SOCKS versija (piem. 5)</translation>
    </message>
    <message>
        <location line=""+36""/>
        <source>&amp;Window</source>
        <translation>&amp;Logs</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>Show only a tray icon after minimizing the window.</source>
        <translation>Pēc loga minimizācijas rādīt tikai ikonu sistēmas teknē.</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Minimize to the tray instead of the taskbar</source>
        <translation>&amp;Minimizēt uz sistēmas tekni, nevis rīkjoslu</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Quit in the menu.</source>
        <translation>Logu aizverot, minimizēt, nevis beigt darbu. Kad šī izvēlne iespējota, programma aizvērsies tikai pēc Beigt komandas izvēlnē.</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>M&amp;inimize on close</source>
        <translation>M&amp;inimizēt aizverot</translation>
    </message>
    <message>
        <location line=""+21""/>
        <source>&amp;Display</source>
        <translation>&amp;Izskats</translation>
    </message>
    <message>
        <location line=""+8""/>
        <source>User Interface &amp;language:</source>
        <translation>Lietotāja interfeiss un &amp;valoda:</translation>
    </message>
    <message>
        <location line=""+13""/>
        <source>The user interface language can be set here. This setting will take effect after restarting Hirocoin.</source>
        <translation>Šeit var iestatīt lietotāja valodu. Iestatījums aktivizēsies pēc Hirocoin pārstartēšanas.</translation>
    </message>
    <message>
        <location line=""+11""/>
        <source>&amp;Unit to show amounts in:</source>
        <translation>&amp;Vienības, kurās attēlot daudzumus:</translation>
    </message>
    <message>
        <location line=""+13""/>
        <source>Choose the default subdivision unit to show in the interface and when sending coins.</source>
        <translation>Izvēlēties dalījuma vienību pēc noklusēšanas, ko izmantot interfeisā un nosūtot bitkoinus.</translation>
    </message>
    <message>
        <location line=""+9""/>
        <source>Whether to show Hirocoin addresses in the transaction list or not.</source>
        <translation>Rādīt vai nē Hirocoin adreses transakciju sarakstā.</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Display addresses in transaction list</source>
        <translation>&amp;Attēlot adreses transakciju sarakstā</translation>
    </message>
    <message>
        <location line=""+71""/>
        <source>&amp;OK</source>
        <translation>&amp;OK</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Cancel</source>
        <translation>&amp;Atcelt</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>&amp;Apply</source>
        <translation>&amp;Pielietot</translation>
    </message>
    <message>
        <location filename=""../optionsdialog.cpp"" line=""+53""/>
        <source>default</source>
        <translation>pēc noklusēšanas</translation>
    </message>
    <message>
        <location line=""+130""/>
        <source>Confirm options reset</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Some settings may require a client restart to take effect.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>Do you want to proceed?</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+42""/>
        <location line=""+9""/>
        <source>Warning</source>
        <translation>Brīdinājums</translation>
    </message>
    <message>
        <location line=""-9""/>
        <location line=""+9""/>
        <source>This setting will take effect after restarting Hirocoin.</source>
        <translation>Iestatījums aktivizēsies pēc Bitkoin pārstartēšanas.</translation>
    </message>
    <message>
        <location line=""+29""/>
        <source>The supplied proxy address is invalid.</source>
        <translation>Norādītā proxy adrese nav derīga.</translation>
    </message>
</context>
<context>
    <name>OverviewPage</name>
    <message>
        <location filename=""../forms/overviewpage.ui"" line=""+14""/>
        <source>Form</source>
        <translation>Forma</translation>
    </message>
    <message>
        <location line=""+50""/>
        <location line=""+166""/>
        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Hirocoin network after a connection is established, but this process has not completed yet.</source>
        <translation>Attēlotā informācija var būt novecojusi. Jūsu maciņš pēc savienojuma izveides automātiski sinhronizējas ar Hirocoin tīklu, taču šis process vēl nav beidzies.</translation>
    </message>
    <message>
        <location line=""-124""/>
        <source>Balance:</source>
        <translation>Bilance:</translation>
    </message>
    <message>
        <location line=""+29""/>
        <source>Unconfirmed:</source>
        <translation>Neapstiprinātas:</translation>
    </message>
    <message>
        <location line=""-78""/>
        <source>Wallet</source>
        <translation>Maciņš</translation>
    </message>
    <message>
        <location line=""+107""/>
        <source>Immature:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>Mined balance that has not yet matured</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+46""/>
        <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>
        <translation>&lt;b&gt;Pēdējās transakcijas&lt;/b&gt;</translation>
    </message>
    <message>
        <location line=""-101""/>
        <source>Your current balance</source>
        <translation>Jūsu tekošā bilance</translation>
    </message>
    <message>
        <location line=""+29""/>
        <source>Total of transactions that have yet to be confirmed, and do not yet count toward the current balance</source>
        <translation>Kopējā apstiprināmo transakciju vērtība, vēl nav ieskaitīta kopējā bilancē</translation>
    </message>
    <message>
        <location filename=""../overviewpage.cpp"" line=""+116""/>
        <location line=""+1""/>
        <source>out of sync</source>
        <translation>nav sinhronizēts</translation>
    </message>
</context>
<context>
    <name>PaymentServer</name>
    <message>
        <location filename=""../paymentserver.cpp"" line=""+107""/>
        <source>Cannot start hirocoin: click-to-pay handler</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>QRCodeDialog</name>
    <message>
        <location filename=""../forms/qrcodedialog.ui"" line=""+14""/>
        <source>QR Code Dialog</source>
        <translation>QR koda dialogs</translation>
    </message>
    <message>
        <location line=""+59""/>
        <source>Request Payment</source>
        <translation>Pieprasīt maksājumu</translation>
    </message>
    <message>
        <location line=""+56""/>
        <source>Amount:</source>
        <translation>Daudzums:</translation>
    </message>
    <message>
        <location line=""-44""/>
        <source>Label:</source>
        <translation>Nosaukums:</translation>
    </message>
    <message>
        <location line=""+19""/>
        <source>Message:</source>
        <translation>Ziņojums:</translation>
    </message>
    <message>
        <location line=""+71""/>
        <source>&amp;Save As...</source>
        <translation>&amp;Saglabāt kā...</translation>
    </message>
    <message>
        <location filename=""../qrcodedialog.cpp"" line=""+62""/>
        <source>Error encoding URI into QR Code.</source>
        <translation>Kļūda kodējot URI QR kodā.</translation>
    </message>
    <message>
        <location line=""+40""/>
        <source>The entered amount is invalid, please check.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+23""/>
        <source>Resulting URI too long, try to reduce the text for label / message.</source>
        <translation>Rezultāta URI pārāk garš, mēģiniet saīsināt nosaukumu vai ziņojumu. </translation>
    </message>
    <message>
        <location line=""+25""/>
        <source>Save QR Code</source>
        <translation>Saglabāt QR kodu</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>PNG Images (*.png)</source>
        <translation>PNG attēli (*.png)</translation>
    </message>
</context>
<context>
    <name>RPCConsole</name>
    <message>
        <location filename=""../forms/rpcconsole.ui"" line=""+46""/>
        <source>Client name</source>
        <translation>Klienta vārds</translation>
    </message>
    <message>
        <location line=""+10""/>
        <location line=""+23""/>
        <location line=""+26""/>
        <location line=""+23""/>
        <location line=""+23""/>
        <location line=""+36""/>
        <location line=""+53""/>
        <location line=""+23""/>
        <location line=""+23""/>
        <location filename=""../rpcconsole.cpp"" line=""+339""/>
        <source>N/A</source>
        <translation>N/A</translation>
    </message>
    <message>
        <location line=""-217""/>
        <source>Client version</source>
        <translation>Klienta versija</translation>
    </message>
    <message>
        <location line=""-45""/>
        <source>&amp;Information</source>
        <translation>&amp;Informācija</translation>
    </message>
    <message>
        <location line=""+68""/>
        <source>Using OpenSSL version</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+49""/>
        <source>Startup time</source>
        <translation>Sākuma laiks</translation>
    </message>
    <message>
        <location line=""+29""/>
        <source>Network</source>
        <translation>Tīkls</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Number of connections</source>
        <translation>Savienojumu skaits</translation>
    </message>
    <message>
        <location line=""+23""/>
        <source>On testnet</source>
        <translation>Testa tīklā</translation>
    </message>
    <message>
        <location line=""+23""/>
        <source>Block chain</source>
        <translation>Bloku virkne</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Current number of blocks</source>
        <translation>Pašreizējais bloku skaits</translation>
    </message>
    <message>
        <location line=""+23""/>
        <source>Estimated total blocks</source>
        <translation>Bloku skaita novērtējums</translation>
    </message>
    <message>
        <location line=""+23""/>
        <source>Last block time</source>
        <translation>Pēdējā bloka laiks</translation>
    </message>
    <message>
        <location line=""+52""/>
        <source>&amp;Open</source>
        <translation>&amp;Atvērt</translation>
    </message>
    <message>
        <location line=""+16""/>
        <source>Command-line options</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Show the Hirocoin-Qt help message to get a list with possible Hirocoin command-line options.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Show</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+24""/>
        <source>&amp;Console</source>
        <translation>&amp;Konsole</translation>
    </message>
    <message>
        <location line=""-260""/>
        <source>Build date</source>
        <translation>Kompilācijas datums</translation>
    </message>
    <message>
        <location line=""-104""/>
        <source>Hirocoin - Debug window</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+25""/>
        <source>Hirocoin Core</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+279""/>
        <source>Debug log file</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Open the Hirocoin debug log file from the current data directory. This can take a few seconds for large log files.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+102""/>
        <source>Clear console</source>
        <translation>Notīrīt konsoli</translation>
    </message>
    <message>
        <location filename=""../rpcconsole.cpp"" line=""-30""/>
        <source>Welcome to the Hirocoin RPC console.</source>
        <translation>Laipni lūgti Hirocoin RPC konsolē.</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>
        <translation>Izmantojiet bultiņas uz augšu un leju, lai pārvietotos pa vēsturi, un &lt;b&gt;Ctrl-L&lt;/b&gt; ekrāna notīrīšanai.</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Type &lt;b&gt;help&lt;/b&gt; for an overview of available commands.</source>
        <translation>Ierakstiet &lt;b&gt;help&lt;/b&gt; lai iegūtu pieejamo komandu sarakstu.</translation>
    </message>
</context>
<context>
    <name>SendCoinsDialog</name>
    <message>
        <location filename=""../forms/sendcoinsdialog.ui"" line=""+14""/>
        <location filename=""../sendcoinsdialog.cpp"" line=""+124""/>
        <location line=""+5""/>
        <location line=""+5""/>
        <location line=""+5""/>
        <location line=""+6""/>
        <location line=""+5""/>
        <location line=""+5""/>
        <source>Send Coins</source>
        <translation>Sūtīt bitkoinus</translation>
    </message>
    <message>
        <location line=""+50""/>
        <source>Send to multiple recipients at once</source>
        <translation>Sūtīt vairākiem saņēmējiem uzreiz</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Add &amp;Recipient</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+20""/>
        <source>Remove all transaction fields</source>
        <translation>Dzēst visus transakcijas laukus</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Clear &amp;All</source>
        <translation>&amp;Notīrīt visu</translation>
    </message>
    <message>
        <location line=""+22""/>
        <source>Balance:</source>
        <translation>Bilance:</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>123.456 BTC</source>
        <translation>123,456 BTC</translation>
    </message>
    <message>
        <location line=""+31""/>
        <source>Confirm the send action</source>
        <translation>Apstiprināt nosūtīšanu</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>S&amp;end</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location filename=""../sendcoinsdialog.cpp"" line=""-59""/>
        <source>&lt;b&gt;%1&lt;/b&gt; to %2 (%3)</source>
        <translation>&lt;b&gt;%1&lt;/b&gt; līdz %2 (%3)</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Confirm send coins</source>
        <translation>Apstiprināt bitkoinu sūtīšanu</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Are you sure you want to send %1?</source>
        <translation>Vai tiešām vēlaties nosūtīt %1?</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source> and </source>
        <translation>un</translation>
    </message>
    <message>
        <location line=""+23""/>
        <source>The recipient address is not valid, please recheck.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>The amount to pay must be larger than 0.</source>
        <translation>Nosūtāmajai summai jābūt lielākai par 0.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>The amount exceeds your balance.</source>
        <translation>Daudzums pārsniedz pieejamo.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>The total exceeds your balance when the %1 transaction fee is included.</source>
        <translation>Kopsumma pārsniedz pieejamo, ja pieskaitīta %1 transakcijas maksa.</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>Duplicate address found, can only send to each address once per send operation.</source>
        <translation>Atrastas divas vienādas adreses, vienā nosūtīšanas reizē uz katru adresi var sūtīt tikai vienreiz.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Error: Transaction creation failed!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>
        <translation>Kļūda: transakcija tika atteikta. Tā var gadīties, ja kāds no maciņā esošiem bitkoiniem jau iztērēts, piemēram, izmantojot wallet.dat kopiju, kurā nav atzīmēti iztērētie bitkoini.</translation>
    </message>
</context>
<context>
    <name>SendCoinsEntry</name>
    <message>
        <location filename=""../forms/sendcoinsentry.ui"" line=""+14""/>
        <source>Form</source>
        <translation>Forma</translation>
    </message>
    <message>
        <location line=""+15""/>
        <source>A&amp;mount:</source>
        <translation>Apjo&amp;ms</translation>
    </message>
    <message>
        <location line=""+13""/>
        <source>Pay &amp;To:</source>
        <translation>&amp;Saņēmējs:</translation>
    </message>
    <message>
        <location line=""+34""/>
        <source>The address to send the payment to (e.g. H7QEPyCg1Yv3UZUALDha9bNYXuYbfMe9Lp)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+60""/>
        <location filename=""../sendcoinsentry.cpp"" line=""+26""/>
        <source>Enter a label for this address to add it to your address book</source>
        <translation>Lai pievienotu adresi adrešu grāmatai, tai jādod nosaukums</translation>
    </message>
    <message>
        <location line=""-78""/>
        <source>&amp;Label:</source>
        <translation>&amp;Nosaukums:</translation>
    </message>
    <message>
        <location line=""+28""/>
        <source>Choose address from address book</source>
        <translation>Izvēlēties adresi no adrešu grāmatas</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Alt+A</source>
        <translation>Alt+A</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Paste address from clipboard</source>
        <translation>ielīmēt adresi no starpliktuves</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Alt+P</source>
        <translation>Alt+P</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Remove this recipient</source>
        <translation>Dzēst šo saņēmēju</translation>
    </message>
    <message>
        <location filename=""../sendcoinsentry.cpp"" line=""+1""/>
        <source>Enter a Hirocoin address (e.g. H7QEPyCg1Yv3UZUALDha9bNYXuYbfMe9Lp)</source>
        <translation>Ierakstiet Hirocoin adresi (piem. H7QEPyCg1Yv3UZUALDha9bNYXuYbfMe9Lp)</translation>
    </message>
</context>
<context>
    <name>SignVerifyMessageDialog</name>
    <message>
        <location filename=""../forms/signverifymessagedialog.ui"" line=""+14""/>
        <source>Signatures - Sign / Verify a Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>&amp;Sign Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>You can sign messages with your addresses to prove you own them. Be careful not to sign anything vague, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+18""/>
        <source>The address to sign the message with (e.g. H7QEPyCg1Yv3UZUALDha9bNYXuYbfMe9Lp)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+10""/>
        <location line=""+213""/>
        <source>Choose an address from the address book</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-203""/>
        <location line=""+213""/>
        <source>Alt+A</source>
        <translation>Alt+A</translation>
    </message>
    <message>
        <location line=""-203""/>
        <source>Paste address from clipboard</source>
        <translation>ielīmēt adresi no starpliktuves</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Alt+P</source>
        <translation>Alt+P</translation>
    </message>
    <message>
        <location line=""+12""/>
        <source>Enter the message you want to sign here</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Signature</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+27""/>
        <source>Copy the current signature to the system clipboard</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+21""/>
        <source>Sign the message to prove you own this Hirocoin address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Sign &amp;Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>Reset all sign message fields</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <location line=""+146""/>
        <source>Clear &amp;All</source>
        <translation>&amp;Notīrīt visu</translation>
    </message>
    <message>
        <location line=""-87""/>
        <source>&amp;Verify Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>Enter the signing address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+21""/>
        <source>The address the message was signed with (e.g. H7QEPyCg1Yv3UZUALDha9bNYXuYbfMe9Lp)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+40""/>
        <source>Verify the message to ensure it was signed with the specified Hirocoin address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Verify &amp;Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>Reset all verify message fields</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location filename=""../signverifymessagedialog.cpp"" line=""+27""/>
        <location line=""+3""/>
        <source>Enter a Hirocoin address (e.g. H7QEPyCg1Yv3UZUALDha9bNYXuYbfMe9Lp)</source>
        <translation>Ierakstiet Hirocoin adresi (piem. H7QEPyCg1Yv3UZUALDha9bNYXuYbfMe9Lp)</translation>
    </message>
    <message>
        <location line=""-2""/>
        <source>Click &quot;Sign Message&quot; to generate signature</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Enter Hirocoin signature</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+82""/>
        <location line=""+81""/>
        <source>The entered address is invalid.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-81""/>
        <location line=""+8""/>
        <location line=""+73""/>
        <location line=""+8""/>
        <source>Please check the address and try again.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-81""/>
        <location line=""+81""/>
        <source>The entered address does not refer to a key.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-73""/>
        <source>Wallet unlock was cancelled.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>Private key for the entered address is not available.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+12""/>
        <source>Message signing failed.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Message signed.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+59""/>
        <source>The signature could not be decoded.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <location line=""+13""/>
        <source>Please check the signature and try again.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>The signature did not match the message digest.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Message verification failed.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Message verified.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>SplashScreen</name>
    <message>
        <location filename=""../splashscreen.cpp"" line=""+22""/>
        <source>The Hirocoin developers</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>[testnet]</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>TransactionDesc</name>
    <message>
        <location filename=""../transactiondesc.cpp"" line=""+20""/>
        <source>Open until %1</source>
        <translation>Atvērts līdz %1</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>%1/offline</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>%1/unconfirmed</source>
        <translation>%1/neapstiprinātas</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>%1 confirmations</source>
        <translation>%1 apstiprinājumu</translation>
    </message>
    <message>
        <location line=""+18""/>
        <source>Status</source>
        <translation type=""unfinished""/>
    </message>
    <message numerus=""yes"">
        <location line=""+7""/>
        <source>, broadcast through %n node(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Date</source>
        <translation>Datums</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Source</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>Generated</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <location line=""+17""/>
        <source>From</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <location line=""+22""/>
        <location line=""+58""/>
        <source>To</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-77""/>
        <location line=""+2""/>
        <source>own address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-2""/>
        <source>label</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+37""/>
        <location line=""+12""/>
        <location line=""+45""/>
        <location line=""+17""/>
        <location line=""+30""/>
        <source>Credit</source>
        <translation type=""unfinished""/>
    </message>
    <message numerus=""yes"">
        <location line=""-102""/>
        <source>matures in %n more block(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>not accepted</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+44""/>
        <location line=""+8""/>
        <location line=""+15""/>
        <location line=""+30""/>
        <source>Debit</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-39""/>
        <source>Transaction fee</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+16""/>
        <source>Net amount</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Comment</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Transaction ID</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Generated coins must mature 120 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Debug information</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>Transaction</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Inputs</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+23""/>
        <source>Amount</source>
        <translation>Daudzums</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>true</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>false</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-209""/>
        <source>, has not been successfully broadcast yet</source>
        <translation>, vēl nav veiksmīgi izziņots</translation>
    </message>
    <message numerus=""yes"">
        <location line=""-35""/>
        <source>Open for %n more block(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+70""/>
        <source>unknown</source>
        <translation>nav zināms</translation>
    </message>
</context>
<context>
    <name>TransactionDescDialog</name>
    <message>
        <location filename=""../forms/transactiondescdialog.ui"" line=""+14""/>
        <source>Transaction details</source>
        <translation>Transakcijas detaļas</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>This pane shows a detailed description of the transaction</source>
        <translation>Šis panelis parāda transakcijas detaļas</translation>
    </message>
</context>
<context>
    <name>TransactionTableModel</name>
    <message>
        <location filename=""../transactiontablemodel.cpp"" line=""+225""/>
        <source>Date</source>
        <translation>Datums</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Type</source>
        <translation>Tips</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Address</source>
        <translation>Adrese</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Amount</source>
        <translation>Daudzums</translation>
    </message>
    <message numerus=""yes"">
        <location line=""+57""/>
        <source>Open for %n more block(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Open until %1</source>
        <translation>Atvērts līdz %1</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Offline (%1 confirmations)</source>
        <translation>Nav pieslēgts (%1 apstiprinājumu)</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Unconfirmed (%1 of %2 confirmations)</source>
        <translation>Nav apstiprināts (%1 no %2 apstiprinājumu)</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Confirmed (%1 confirmations)</source>
        <translation>Apstiprināts (%1 apstiprinājumu)</translation>
    </message>
    <message numerus=""yes"">
        <location line=""+8""/>
        <source>Mined balance will be available when it matures in %n more block(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>This block was not received by any other nodes and will probably not be accepted!</source>
        <translation>Neviens cits mezgls šo bloku nav saņēmis un droši vien netiks akceptēts!</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Generated but not accepted</source>
        <translation>Ģenerēts, taču nav akceptēts</translation>
    </message>
    <message>
        <location line=""+43""/>
        <source>Received with</source>
        <translation>Saņemts ar</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Received from</source>
        <translation>Saņemts no</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Sent to</source>
        <translation>Nosūtīts</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Payment to yourself</source>
        <translation>Maksājums sev</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Mined</source>
        <translation>Atrasts</translation>
    </message>
    <message>
        <location line=""+38""/>
        <source>(n/a)</source>
        <translation>(nav pieejams)</translation>
    </message>
    <message>
        <location line=""+199""/>
        <source>Transaction status. Hover over this field to show number of confirmations.</source>
        <translation>Transakcijas statuss. Turiet peli virs šī lauka, lai redzētu apstiprinājumu skaitu.</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Date and time that the transaction was received.</source>
        <translation>Transakcijas saņemšanas datums un laiks.</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Type of transaction.</source>
        <translation>Transakcijas tips.</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Destination address of transaction.</source>
        <translation>Transakcijas mērķa adrese.</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Amount removed from or added to balance.</source>
        <translation>Bilancei pievienotais vai atņemtais daudzums.</translation>
    </message>
</context>
<context>
    <name>TransactionView</name>
    <message>
        <location filename=""../transactionview.cpp"" line=""+52""/>
        <location line=""+16""/>
        <source>All</source>
        <translation>Visi</translation>
    </message>
    <message>
        <location line=""-15""/>
        <source>Today</source>
        <translation>Šodien</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>This week</source>
        <translation>Šonedēļ</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>This month</source>
        <translation>Šomēnes</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Last month</source>
        <translation>Pēdējais mēnesis</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>This year</source>
        <translation>Šogad</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Range...</source>
        <translation>Diapazons...</translation>
    </message>
    <message>
        <location line=""+11""/>
        <source>Received with</source>
        <translation>Saņemts ar</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Sent to</source>
        <translation>Nosūtīts</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>To yourself</source>
        <translation>Sev</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Mined</source>
        <translation>Atrasts</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Other</source>
        <translation>Cits</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Enter address or label to search</source>
        <translation>Ierakstiet meklējamo nosaukumu vai adresi</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Min amount</source>
        <translation>Minimālais daudzums</translation>
    </message>
    <message>
        <location line=""+34""/>
        <source>Copy address</source>
        <translation>Kopēt adresi</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Copy label</source>
        <translation>Kopēt nosaukumu</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Copy amount</source>
        <translation>Kopēt daudzumu</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Copy transaction ID</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Edit label</source>
        <translation>Mainīt nosaukumu</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show transaction details</source>
        <translation>Rādīt transakcijas detaļas</translation>
    </message>
    <message>
        <location line=""+139""/>
        <source>Export Transaction Data</source>
        <translation>Eksportēt transakcijas datus</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Comma separated file (*.csv)</source>
        <translation>Fails ar komatu kā atdalītāju (*.csv)</translation>
    </message>
    <message>
        <location line=""+8""/>
        <source>Confirmed</source>
        <translation>Apstiprināts</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Date</source>
        <translation>Datums</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Type</source>
        <translation>Tips</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Label</source>
        <translation>Nosaukums</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Address</source>
        <translation>Adrese</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Amount</source>
        <translation>Daudzums</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>ID</source>
        <translation>ID</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Error exporting</source>
        <translation>Eksportēšanas kļūda</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Could not write to file %1.</source>
        <translation>Nevar ierakstīt failā %1.</translation>
    </message>
    <message>
        <location line=""+100""/>
        <source>Range:</source>
        <translation>Diapazons:</translation>
    </message>
    <message>
        <location line=""+8""/>
        <source>to</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>WalletModel</name>
    <message>
        <location filename=""../walletmodel.cpp"" line=""+193""/>
        <source>Send Coins</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>WalletView</name>
    <message>
        <location filename=""../walletview.cpp"" line=""+42""/>
        <source>&amp;Export</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Export the data in the current tab to a file</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+193""/>
        <source>Backup Wallet</source>
        <translation>Izveidot maciņa rezerves kopiju</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Wallet Data (*.dat)</source>
        <translation>Maciņa dati (*.dat)</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Backup Failed</source>
        <translation>Rezerves kopēšana neizdevās</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>There was an error trying to save the wallet data to the new location.</source>
        <translation>Kļūda, saglabājot maciņu jaunajā vietā.</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Backup Successful</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>The wallet data was successfully saved to the new location.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>bitcoin-core</name>
    <message>
        <location filename=""../bitcoinstrings.cpp"" line=""+94""/>
        <source>Hirocoin version</source>
        <translation>Hirocoin versija</translation>
    </message>
    <message>
        <location line=""+102""/>
        <source>Usage:</source>
        <translation>Lietojums:</translation>
    </message>
    <message>
        <location line=""-29""/>
        <source>Send command to -server or hirocoind</source>
        <translation>Nosūtīt komantu uz -server vai hirocoind</translation>
    </message>
    <message>
        <location line=""-23""/>
        <source>List commands</source>
        <translation>Komandu saraksts</translation>
    </message>
    <message>
        <location line=""-12""/>
        <source>Get help for a command</source>
        <translation>Palīdzība par komandu</translation>
    </message>
    <message>
        <location line=""+24""/>
        <source>Options:</source>
        <translation>Iespējas:</translation>
    </message>
    <message>
        <location line=""+24""/>
        <source>Specify configuration file (default: hirocoin.conf)</source>
        <translation>Norādiet konfigurācijas failu (pēc noklusēšanas: hirocoin.conf)</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Specify pid file (default: hirocoind.pid)</source>
        <translation>Norādiet pid failu (pēc noklusēšanas: hirocoind.pid)</translation>
    </message>
    <message>
        <location line=""-1""/>
        <source>Specify data directory</source>
        <translation>Norādiet datu direktoriju</translation>
    </message>
    <message>
        <location line=""-9""/>
        <source>Set database cache size in megabytes (default: 25)</source>
        <translation>Uzstādiet datu bāzes bufera izmēru megabaitos (pēc noklusēšanas: 25)</translation>
    </message>
    <message>
        <location line=""-28""/>
        <source>Listen for connections on &lt;port&gt; (default: 9348 or testnet: 19348)</source>
        <translation>Gaidīt savienojumus portā &lt;port&gt; (pēc noklusēšanas: 9348 vai testnet: 19348)</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Maintain at most &lt;n&gt; connections to peers (default: 125)</source>
        <translation>Uzturēt līdz &lt;n&gt; savienojumiem ar citiem mezgliem(pēc noklusēšanas: 125)</translation>
    </message>
    <message>
        <location line=""-48""/>
        <source>Connect to a node to retrieve peer addresses, and disconnect</source>
        <translation>Pievienoties mezglam, lai iegūtu citu mezglu adreses, un atvienoties</translation>
    </message>
    <message>
        <location line=""+82""/>
        <source>Specify your own public address</source>
        <translation>Norādiet savu publisko adresi</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Threshold for disconnecting misbehaving peers (default: 100)</source>
        <translation>Slieksnis pārkāpējmezglu atvienošanai (pēc noklusēšanas: 100)</translation>
    </message>
    <message>
        <location line=""-134""/>
        <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>
        <translation>Sekundes, cik ilgi atturēt pārkāpējmezglus no atkārtotas pievienošanās (pēc noklusēšanas: 86400)</translation>
    </message>
    <message>
        <location line=""-29""/>
        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+27""/>
        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 9347 or testnet: 19347)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+37""/>
        <source>Accept command line and JSON-RPC commands</source>
        <translation>Pieņemt komandrindas un JSON-RPC komandas</translation>
    </message>
    <message>
        <location line=""+76""/>
        <source>Run in the background as a daemon and accept commands</source>
        <translation>Darbināt fonā kā servisu un pieņemt komandas</translation>
    </message>
    <message>
        <location line=""+37""/>
        <source>Use the test network</source>
        <translation>Izmantot testa tīklu</translation>
    </message>
    <message>
        <location line=""-112""/>
        <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-80""/>
        <source>%s, you must set a rpcpassword in the configuration file:
%s
It is recommended you use the following random password:
rpcuser=hirocoinrpc
rpcpassword=%s
(you do not need to remember this password)
The username and password MUST NOT be the same.
If the file does not exist, create it with owner-readable-only file permissions.
It is also recommended to set alertnotify so you are notified of problems;
for example: alertnotify=echo %%s | mail -s &quot;Hirocoin Alert&quot; admin@foo.com
</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+17""/>
        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Cannot obtain a lock on data directory %s. Hirocoin is probably already running.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Execute command when a relevant alert is received (%s in cmd is replaced by message)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+11""/>
        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning: Displayed transactions may not be correct! You may need to upgrade, or other nodes may need to upgrade.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning: Please check that your computer&apos;s date and time are correct! If your clock is wrong Hirocoin will not work properly.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>Attempt to recover private keys from a corrupt wallet.dat</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Block creation options:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Connect only to the specified node(s)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Corrupted block database detected</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Discover own IP address (default: 1 when listening and no -externalip)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Do you want to rebuild the block database now?</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Error initializing block database</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error initializing wallet database environment %s!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error loading block database</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>Error opening block database</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Error: Disk space is low!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error: Wallet locked, unable to create transaction!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error: system error: </source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to read block info</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to read block</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to sync block index</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write block index</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write block info</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write block</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write file info</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write to coin database</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write transaction index</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write undo data</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Find peers using DNS lookup (default: 1 unless -connect)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Generate coins (default: 0)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>How many blocks to check at startup (default: 288, 0 = all)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>How thorough the block verification is (0-4, default: 3)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+19""/>
        <source>Not enough file descriptors available.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>Rebuild block chain index from current blk000??.dat files</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+16""/>
        <source>Set the number of threads to service RPC calls (default: 4)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+26""/>
        <source>Verifying blocks...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Verifying wallet...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-69""/>
        <source>Imports blocks from external blk000??.dat file</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-76""/>
        <source>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+77""/>
        <source>Information</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Invalid -tor address: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Invalid amount for -minrelaytxfee=&lt;amount&gt;: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Invalid amount for -mintxfee=&lt;amount&gt;: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>Maintain a full transaction index (default: 0)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: 5000)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: 1000)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Only accept block chain matching built-in checkpoints (default: 1)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Only connect to nodes in network &lt;net&gt; (IPv4, IPv6 or Tor)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Output extra debugging information. Implies all other -debug* options</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Output extra network debugging information</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Prepend debug output with timestamp</source>
        <translation>Debug izvadei sākumā pievienot laika zīmogu</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>SSL options: (see the Hirocoin Wiki for SSL setup instructions)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Select the version of socks proxy to use (4-5, default: 5)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Send trace/debug info to console instead of debug.log file</source>
        <translation>Debug/trace informāciju izvadīt konsolē, nevis debug.log failā</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Send trace/debug info to debugger</source>
        <translation>Debug/trace informāciju izvadīt debug programmai</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Set maximum block size in bytes (default: 250000)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Set minimum block size in bytes (default: 0)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Shrink debug.log file on client startup (default: 1 when no -debug)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Signing transaction failed</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Specify connection timeout in milliseconds (default: 5000)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>System error: </source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>Transaction amount too small</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Transaction amounts must be positive</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Transaction too large</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Use UPnP to map the listening port (default: 0)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Username for JSON-RPC connections</source>
        <translation>JSON-RPC savienojumu lietotājvārds</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Warning</source>
        <translation>Brīdinājums</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Warning: This version is obsolete, upgrade required!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>You need to rebuild the databases using -reindex to change -txindex</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>wallet.dat corrupt, salvage failed</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-50""/>
        <source>Password for JSON-RPC connections</source>
        <translation>JSON-RPC savienojumu parole</translation>
    </message>
    <message>
        <location line=""-67""/>
        <source>Allow JSON-RPC connections from specified IP address</source>
        <translation>Atļaut JSON-RPC savienojumus no norādītās IP adreses</translation>
    </message>
    <message>
        <location line=""+76""/>
        <source>Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)</source>
        <translation>Nosūtīt komandas mezglam, kas darbojas adresē &lt;ip&gt; (pēc noklusēšanas: 127.0.0.1)</translation>
    </message>
    <message>
        <location line=""-120""/>
        <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>
        <translation>Izpildīt komandu, kad labāk atbilstošais bloks izmainās (%s cmd aizvieto ar bloka hešu)</translation>
    </message>
    <message>
        <location line=""+147""/>
        <source>Upgrade wallet to latest format</source>
        <translation>Atjaunot maciņa formātu uz jaunāko</translation>
    </message>
    <message>
        <location line=""-21""/>
        <source>Set key pool size to &lt;n&gt; (default: 100)</source>
        <translation>Uzstādīt atslēgu bufera izmēru uz &lt;n&gt; (pēc noklusēšanas: 100)</translation>
    </message>
    <message>
        <location line=""-12""/>
        <source>Rescan the block chain for missing wallet transactions</source>
        <translation>Atkārtoti skanēt bloku virkni, meklējot trūkstošās maciņa transakcijas</translation>
    </message>
    <message>
        <location line=""+35""/>
        <source>Use OpenSSL (https) for JSON-RPC connections</source>
        <translation>JSON-RPC savienojumiem izmantot OpenSSL (https)</translation>
    </message>
    <message>
        <location line=""-26""/>
        <source>Server certificate file (default: server.cert)</source>
        <translation>Servera sertifikāta fails (pēc noklusēšanas: server.cert)</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Server private key (default: server.pem)</source>
        <translation>Servera privātā atslēga (pēc noklusēšanas: server.pem)</translation>
    </message>
    <message>
        <location line=""-151""/>
        <source>Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)</source>
        <translation>Pieņemamie šifri (pēc noklusēšanas: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)</translation>
    </message>
    <message>
        <location line=""+165""/>
        <source>This help message</source>
        <translation>Šis palīdzības paziņojums</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>Unable to bind to %s on this computer (bind returned error %d, %s)</source>
        <translation>Nevar pievienoties pie %s šajā datorā (pievienošanās atgrieza kļūdu %d, %s)</translation>
    </message>
    <message>
        <location line=""-91""/>
        <source>Connect through socks proxy</source>
        <translation>Savienoties caurs socks proxy</translation>
    </message>
    <message>
        <location line=""-10""/>
        <source>Allow DNS lookups for -addnode, -seednode and -connect</source>
        <translation>Atļaut DNS uzmeklēšanu priekš -addnode, -seednode un -connect</translation>
    </message>
    <message>
        <location line=""+55""/>
        <source>Loading addresses...</source>
        <translation>Ielādē adreses...</translation>
    </message>
    <message>
        <location line=""-35""/>
        <source>Error loading wallet.dat: Wallet corrupted</source>
        <translation>Nevar ielādēt wallet.dat: maciņš bojāts</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error loading wallet.dat: Wallet requires newer version of Hirocoin</source>
        <translation>Nevar ielādēt wallet.dat: maciņa atvēršanai nepieciešama jaunāka Hirocoin versija</translation>
    </message>
    <message>
        <location line=""+93""/>
        <source>Wallet needed to be rewritten: restart Hirocoin to complete</source>
        <translation>Bija nepieciešams pārstartēt maciņu: pabeigšanai pārstartējiet Hirocoin</translation>
    </message>
    <message>
        <location line=""-95""/>
        <source>Error loading wallet.dat</source>
        <translation>Kļūda ielādējot wallet.dat</translation>
    </message>
    <message>
        <location line=""+28""/>
        <source>Invalid -proxy address: &apos;%s&apos;</source>
        <translation>Nederīga -proxy adrese: &apos;%s&apos;</translation>
    </message>
    <message>
        <location line=""+56""/>
        <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>
        <translation>-onlynet komandā norādīts nepazīstams tīkls: &apos;%s&apos;</translation>
    </message>
    <message>
        <location line=""-1""/>
        <source>Unknown -socks proxy version requested: %i</source>
        <translation>Pieprasīta nezināma -socks proxy versija: %i</translation>
    </message>
    <message>
        <location line=""-96""/>
        <source>Cannot resolve -bind address: &apos;%s&apos;</source>
        <translation>Nevar uzmeklēt -bind adresi: &apos;%s&apos;</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Cannot resolve -externalip address: &apos;%s&apos;</source>
        <translation>Nevar atrisināt -externalip adresi: &apos;%s&apos;</translation>
    </message>
    <message>
        <location line=""+44""/>
        <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>
        <translation>Nederīgs daudzums priekš -paytxfree=&lt;amount&gt;: &apos;%s&apos;</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Invalid amount</source>
        <translation>Nederīgs daudzums</translation>
    </message>
    <message>
        <location line=""-6""/>
        <source>Insufficient funds</source>
        <translation>Nepietiek bitkoinu</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Loading block index...</source>
        <translation>Ielādē bloku indeksu...</translation>
    </message>
    <message>
        <location line=""-57""/>
        <source>Add a node to connect to and attempt to keep the connection open</source>
        <translation>Pievienot mezglu, kam pievienoties un turēt savienojumu atvērtu</translation>
    </message>
    <message>
        <location line=""-25""/>
        <source>Unable to bind to %s on this computer. Hirocoin is probably already running.</source>
        <translation>Nevar pievienoties %s uz šī datora. Hirocoin droši vien jau darbojas.</translation>
    </message>
    <message>
        <location line=""+64""/>
        <source>Fee per KB to add to transactions you send</source>
        <translation>Maksa par KB, ko pievienot nosūtāmajām transakcijām</translation>
    </message>
    <message>
        <location line=""+19""/>
        <source>Loading wallet...</source>
        <translation>Ielādē maciņu...</translation>
    </message>
    <message>
        <location line=""-52""/>
        <source>Cannot downgrade wallet</source>
        <translation>Nevar maciņa formātu padarīt vecāku</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Cannot write default address</source>
        <translation>Nevar ierakstīt adresi pēc noklusēšanas</translation>
    </message>
    <message>
        <location line=""+64""/>
        <source>Rescanning...</source>
        <translation>Skanēju no jauna...</translation>
    </message>
    <message>
        <location line=""-57""/>
        <source>Done loading</source>
        <translation>Ielāde pabeigta</translation>
    </message>
    <message>
        <location line=""+82""/>
        <source>To use the %s option</source>
        <translation>Izmantot opciju %s</translation>
    </message>
    <message>
        <location line=""-74""/>
        <source>Error</source>
        <translation>Kļūda</translation>
    </message>
    <message>
        <location line=""-31""/>
        <source>You must set rpcpassword=&lt;password&gt; in the configuration file:
%s
If the file does not exist, create it with owner-readable-only file permissions.</source>
        <translation>Konfigurācijas failā jāuzstāda rpcpassword=&lt;password&gt;:
%s
Ja fails neeksistē, izveidojiet to ar atļauju lasīšanai tikai īpašniekam.</translation>
    </message>
</context>
</TS>
",TypeScript
"import Store from '../../Store';
import Expires from '../../Expires';
import { lpush } from '../lpush';
import { lpushx } from '../lpushx';

describe('Test lpushx command', () => {
  it('should prepend values to list', () => {
    const redis = new MockRedis();
    redis.set('mylist', []);
    expect((<any>redis).lpushx('mylist', 'v1')).toBe(1);
    expect((<any>redis).lpushx('mylist1', 'v2')).toBe(0);
    expect(redis.get('mylist1')).toBeNull();
  });
});

class MockRedis {
  private data: Store;
  constructor() {
    this.data = new Store(new Expires());
    (<any>this)['lpush'] = lpush.bind(this);
    (<any>this)['lpushx'] = lpushx.bind(this);
  }
  get(key: string) {
    return this.data.get(key) || null;
  }
  set(key: string, value: any) {
    return this.data.set(key, value);
  }
}
",TypeScript
"<?xml version=""1.0"" ?><!DOCTYPE TS><TS language=""hr"" version=""2.0"">
<defaultcodec>UTF-8</defaultcodec>
<context>
    <name>AboutDialog</name>
    <message>
        <location filename=""../forms/aboutdialog.ui"" line=""+14""/>
        <source>About TelcoCoin</source>
        <translation>O TelcoCoin-u</translation>
    </message>
    <message>
        <location line=""+39""/>
        <source>&lt;b&gt;TelcoCoin&lt;/b&gt; version</source>
        <translation>&lt;b&gt;TelcoCoin&lt;/b&gt; verzija</translation>
    </message>
    <message>
        <location line=""+57""/>
        <source>
This is experimental software.

Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.

This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location filename=""../aboutdialog.cpp"" line=""+14""/>
        <source>Copyright</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>The TelcoCoin developers</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>AddressBookPage</name>
    <message>
        <location filename=""../forms/addressbookpage.ui"" line=""+14""/>
        <source>Address Book</source>
        <translation>Adresar</translation>
    </message>
    <message>
        <location line=""+19""/>
        <source>Double-click to edit address or label</source>
        <translation>Dvostruki klik za uređivanje adrese ili oznake</translation>
    </message>
    <message>
        <location line=""+27""/>
        <source>Create a new address</source>
        <translation>Dodajte novu adresu</translation>
    </message>
    <message>
        <location line=""+14""/>
        <source>Copy the currently selected address to the system clipboard</source>
        <translation>Kopiraj trenutno odabranu adresu u međuspremnik</translation>
    </message>
    <message>
        <location line=""-11""/>
        <source>&amp;New Address</source>
        <translation>&amp;Nova adresa</translation>
    </message>
    <message>
        <location filename=""../addressbookpage.cpp"" line=""+63""/>
        <source>These are your TelcoCoin addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you.</source>
        <translation>Ovo su vaše TelcoCoin adrese za primanje isplate. Možda želite dati drukčiju adresu svakom primatelju tako da možete pratiti tko je platio.</translation>
    </message>
    <message>
        <location filename=""../forms/addressbookpage.ui"" line=""+14""/>
        <source>&amp;Copy Address</source>
        <translation>&amp;Kopirati adresu</translation>
    </message>
    <message>
        <location line=""+11""/>
        <source>Show &amp;QR Code</source>
        <translation>Prikaži &amp;QR Kôd</translation>
    </message>
    <message>
        <location line=""+11""/>
        <source>Sign a message to prove you own a TelcoCoin address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Sign &amp;Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+25""/>
        <source>Delete the currently selected address from the list</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+27""/>
        <source>Export the data in the current tab to a file</source>
        <translation>Izvoz podataka iz trenutnog taba u datoteku</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Export</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-44""/>
        <source>Verify a message to ensure it was signed with a specified TelcoCoin address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Verify Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>&amp;Delete</source>
        <translation>&amp;Brisanje</translation>
    </message>
    <message>
        <location filename=""../addressbookpage.cpp"" line=""-5""/>
        <source>These are your TelcoCoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>Copy &amp;Label</source>
        <translation>Kopirati &amp;oznaku</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>&amp;Edit</source>
        <translation>&amp;Izmjeniti</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Send &amp;Coins</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+260""/>
        <source>Export Address Book Data</source>
        <translation>Izvoz podataka adresara</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Comma separated file (*.csv)</source>
        <translation>Datoteka vrijednosti odvojenih zarezom (*. csv)</translation>
    </message>
    <message>
        <location line=""+13""/>
        <source>Error exporting</source>
        <translation>Pogreška kod izvoza</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Could not write to file %1.</source>
        <translation>Ne mogu pisati u datoteku %1.</translation>
    </message>
</context>
<context>
    <name>AddressTableModel</name>
    <message>
        <location filename=""../addresstablemodel.cpp"" line=""+144""/>
        <source>Label</source>
        <translation>Oznaka</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Address</source>
        <translation>Adresa</translation>
    </message>
    <message>
        <location line=""+36""/>
        <source>(no label)</source>
        <translation>(bez oznake)</translation>
    </message>
</context>
<context>
    <name>AskPassphraseDialog</name>
    <message>
        <location filename=""../forms/askpassphrasedialog.ui"" line=""+26""/>
        <source>Passphrase Dialog</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+21""/>
        <source>Enter passphrase</source>
        <translation>Unesite lozinku</translation>
    </message>
    <message>
        <location line=""+14""/>
        <source>New passphrase</source>
        <translation>Nova lozinka</translation>
    </message>
    <message>
        <location line=""+14""/>
        <source>Repeat new passphrase</source>
        <translation>Ponovite novu lozinku</translation>
    </message>
    <message>
        <location filename=""../askpassphrasedialog.cpp"" line=""+33""/>
        <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>
        <translation>Unesite novi lozinku za novčanik. &lt;br/&gt; Molimo Vas da koristite zaporku od &lt;b&gt;10 ili više slučajnih znakova,&lt;/b&gt; ili &lt;b&gt;osam ili više riječi.&lt;/b&gt;</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Encrypt wallet</source>
        <translation>Šifriranje novčanika</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>This operation needs your wallet passphrase to unlock the wallet.</source>
        <translation>Ova operacija treba lozinku vašeg novčanika kako bi se novčanik otključao.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Unlock wallet</source>
        <translation>Otključaj novčanik</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>
        <translation>Ova operacija treba lozinku vašeg novčanika kako bi se novčanik dešifrirao.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Decrypt wallet</source>
        <translation>Dešifriranje novčanika.</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Change passphrase</source>
        <translation>Promjena lozinke</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Enter the old and new passphrase to the wallet.</source>
        <translation>Unesite staru i novu lozinku za novčanik.</translation>
    </message>
    <message>
        <location line=""+46""/>
        <source>Confirm wallet encryption</source>
        <translation>Potvrdi šifriranje novčanika</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR TelcoCoinS&lt;/b&gt;!</source>
        <translation>Upozorenje: Ako šifrirate vaš novčanik i izgubite lozinku, &lt;b&gt;IZGUBIT ĆETE SVE SVOJE TelcoCoinSE!&lt;/b&gt;</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Are you sure you wish to encrypt your wallet?</source>
        <translation>Jeste li sigurni da želite šifrirati svoj novčanik?</translation>
    </message>
    <message>
        <location line=""+15""/>
        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+100""/>
        <location line=""+24""/>
        <source>Warning: The Caps Lock key is on!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-130""/>
        <location line=""+58""/>
        <source>Wallet encrypted</source>
        <translation>Novčanik šifriran</translation>
    </message>
    <message>
        <location line=""-56""/>
        <source>TelcoCoin will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your TelcoCoins from being stolen by malware infecting your computer.</source>
        <translation>TelcoCoin će se sada zatvoriti kako bi dovršio postupak šifriranja. Zapamtite da šifriranje vašeg novčanika ne može u potpunosti zaštititi vaše TelcoCoine od krađe preko zloćudnog softvera koji bi bio na vašem računalu.</translation>
    </message>
    <message>
        <location line=""+13""/>
        <location line=""+7""/>
        <location line=""+42""/>
        <location line=""+6""/>
        <source>Wallet encryption failed</source>
        <translation>Šifriranje novčanika nije uspjelo</translation>
    </message>
    <message>
        <location line=""-54""/>
        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>
        <translation>Šifriranje novčanika nije uspjelo zbog interne pogreške. Vaš novčanik nije šifriran.</translation>
    </message>
    <message>
        <location line=""+7""/>
        <location line=""+48""/>
        <source>The supplied passphrases do not match.</source>
        <translation>Priložene lozinke se ne podudaraju.</translation>
    </message>
    <message>
        <location line=""-37""/>
        <source>Wallet unlock failed</source>
        <translation>Otključavanje novčanika nije uspjelo</translation>
    </message>
    <message>
        <location line=""+1""/>
        <location line=""+11""/>
        <location line=""+19""/>
        <source>The passphrase entered for the wallet decryption was incorrect.</source>
        <translation>Lozinka za dešifriranje novčanika nije točna.</translation>
    </message>
    <message>
        <location line=""-20""/>
        <source>Wallet decryption failed</source>
        <translation>Dešifriranje novčanika nije uspjelo</translation>
    </message>
    <message>
        <location line=""+14""/>
        <source>Wallet passphrase was successfully changed.</source>
        <translation>Lozinka novčanika je uspješno promijenjena.</translation>
    </message>
</context>
<context>
    <name>BitcoinGUI</name>
    <message>
        <location filename=""../bitcoingui.cpp"" line=""+233""/>
        <source>Sign &amp;message...</source>
        <translation>&amp;Potpišite poruku...</translation>
    </message>
    <message>
        <location line=""+280""/>
        <source>Synchronizing with network...</source>
        <translation>Usklađivanje s mrežom ...</translation>
    </message>
    <message>
        <location line=""-349""/>
        <source>&amp;Overview</source>
        <translation>&amp;Pregled</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show general overview of wallet</source>
        <translation>Prikaži opći pregled novčanika</translation>
    </message>
    <message>
        <location line=""+20""/>
        <source>&amp;Transactions</source>
        <translation>&amp;Transakcije</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Browse transaction history</source>
        <translation>Pretraži povijest transakcija</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Edit the list of stored addresses and labels for sending</source>
        <translation>Uređivanje popisa pohranjenih adresa i oznaka</translation>
    </message>
    <message>
        <location line=""-14""/>
        <source>Show the list of addresses for receiving payments</source>
        <translation>Prikaži popis adresa za primanje isplate</translation>
    </message>
    <message>
        <location line=""+31""/>
        <source>E&amp;xit</source>
        <translation>&amp;Izlaz</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Quit application</source>
        <translation>Izlazak iz programa</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Show information about TelcoCoin</source>
        <translation>Prikaži informacije o TelcoCoinu</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>About &amp;Qt</source>
        <translation>Više o &amp;Qt</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show information about Qt</source>
        <translation>Prikaži informacije o Qt</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>&amp;Options...</source>
        <translation>&amp;Postavke</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>&amp;Encrypt Wallet...</source>
        <translation>&amp;Šifriraj novčanik...</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Backup Wallet...</source>
        <translation>&amp;Backup novčanika...</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>&amp;Change Passphrase...</source>
        <translation>&amp;Promijena lozinke...</translation>
    </message>
    <message>
        <location line=""+285""/>
        <source>Importing blocks from disk...</source>
        <translation>Importiranje blokova sa diska...</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Reindexing blocks on disk...</source>
        <translation>Re-indeksiranje blokova na disku...</translation>
    </message>
    <message>
        <location line=""-347""/>
        <source>Send coins to a TelcoCoin address</source>
        <translation>Slanje novca na TelcoCoin adresu</translation>
    </message>
    <message>
        <location line=""+49""/>
        <source>Modify configuration options for TelcoCoin</source>
        <translation>Promijeni postavke konfiguracije za TelcoCoin</translation>
    </message>
    <message>
        <location line=""+9""/>
        <source>Backup wallet to another location</source>
        <translation>Napravite sigurnosnu kopiju novčanika na drugoj lokaciji</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Change the passphrase used for wallet encryption</source>
        <translation>Promijenite lozinku za šifriranje novčanika</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>&amp;Debug window</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Open debugging and diagnostic console</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-4""/>
        <source>&amp;Verify message...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-165""/>
        <location line=""+530""/>
        <source>TelcoCoin</source>
        <translation>TelcoCoin</translation>
    </message>
    <message>
        <location line=""-530""/>
        <source>Wallet</source>
        <translation>Novčanik</translation>
    </message>
    <message>
        <location line=""+101""/>
        <source>&amp;Send</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Receive</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>&amp;Addresses</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+22""/>
        <source>&amp;About TelcoCoin</source>
        <translation>&amp;O TelcoCoinu</translation>
    </message>
    <message>
        <location line=""+9""/>
        <source>&amp;Show / Hide</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show or hide the main Window</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Encrypt the private keys that belong to your wallet</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Sign messages with your TelcoCoin addresses to prove you own them</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Verify messages to ensure they were signed with specified TelcoCoin addresses</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+28""/>
        <source>&amp;File</source>
        <translation>&amp;Datoteka</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Settings</source>
        <translation>&amp;Konfiguracija</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>&amp;Help</source>
        <translation>&amp;Pomoć</translation>
    </message>
    <message>
        <location line=""+9""/>
        <source>Tabs toolbar</source>
        <translation>Traka kartica</translation>
    </message>
    <message>
        <location line=""+17""/>
        <location line=""+10""/>
        <source>[testnet]</source>
        <translation>[testnet]</translation>
    </message>
    <message>
        <location line=""+47""/>
        <source>TelcoCoin client</source>
        <translation>TelcoCoin klijent</translation>
    </message>
    <message numerus=""yes"">
        <location line=""+141""/>
        <source>%n active connection(s) to TelcoCoin network</source>
        <translation><numerusform>%n aktivna veza na TelcoCoin mrežu</numerusform><numerusform>%n aktivne veze na TelcoCoin mrežu</numerusform><numerusform>%n aktivnih veza na TelcoCoin mrežu</numerusform></translation>
    </message>
    <message>
        <location line=""+22""/>
        <source>No block source available...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+12""/>
        <source>Processed %1 of %2 (estimated) blocks of transaction history.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>Processed %1 blocks of transaction history.</source>
        <translation>Obrađeno %1 blokova povijesti transakcije.</translation>
    </message>
    <message numerus=""yes"">
        <location line=""+20""/>
        <source>%n hour(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message numerus=""yes"">
        <location line=""+4""/>
        <source>%n day(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message numerus=""yes"">
        <location line=""+4""/>
        <source>%n week(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>%1 behind</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>Last received block was generated %1 ago.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Transactions after this will not yet be visible.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+22""/>
        <source>Error</source>
        <translation>Greška</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Information</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+70""/>
        <source>This transaction is over the size limit. You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network. Do you want to pay the fee?</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-140""/>
        <source>Up to date</source>
        <translation>Ažurno</translation>
    </message>
    <message>
        <location line=""+31""/>
        <source>Catching up...</source>
        <translation>Ažuriranje...</translation>
    </message>
    <message>
        <location line=""+113""/>
        <source>Confirm transaction fee</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>Sent transaction</source>
        <translation>Poslana transakcija</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Incoming transaction</source>
        <translation>Dolazna transakcija</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Date: %1
Amount: %2
Type: %3
Address: %4
</source>
        <translation>Datum:%1
Iznos:%2
Tip:%3
Adresa:%4
</translation>
    </message>
    <message>
        <location line=""+33""/>
        <location line=""+23""/>
        <source>URI handling</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-23""/>
        <location line=""+23""/>
        <source>URI can not be parsed! This can be caused by an invalid TelcoCoin address or malformed URI parameters.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+17""/>
        <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>
        <translation>Novčanik je &lt;b&gt;šifriran&lt;/b&gt; i trenutno &lt;b&gt;otključan&lt;/b&gt;</translation>
    </message>
    <message>
        <location line=""+8""/>
        <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>
        <translation>Novčanik je &lt;b&gt;šifriran&lt;/b&gt; i trenutno &lt;b&gt;zaključan&lt;/b&gt;</translation>
    </message>
    <message>
        <location filename=""../bitcoin.cpp"" line=""+111""/>
        <source>A fatal error occurred. TelcoCoin can no longer continue safely and will quit.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>ClientModel</name>
    <message>
        <location filename=""../clientmodel.cpp"" line=""+104""/>
        <source>Network Alert</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>EditAddressDialog</name>
    <message>
        <location filename=""../forms/editaddressdialog.ui"" line=""+14""/>
        <source>Edit Address</source>
        <translation>Izmjeni adresu</translation>
    </message>
    <message>
        <location line=""+11""/>
        <source>&amp;Label</source>
        <translation>&amp;Oznaka</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>The label associated with this address book entry</source>
        <translation>Oznaka ovog upisa u adresar</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Address</source>
        <translation>&amp;Adresa</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>The address associated with this address book entry. This can only be modified for sending addresses.</source>
        <translation>Adresa ovog upisa u adresar. Može se mjenjati samo kod adresa za slanje.</translation>
    </message>
    <message>
        <location filename=""../editaddressdialog.cpp"" line=""+21""/>
        <source>New receiving address</source>
        <translation>Nova adresa za primanje</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>New sending address</source>
        <translation>Nova adresa za slanje</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Edit receiving address</source>
        <translation>Uredi adresu za primanje</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Edit sending address</source>
        <translation>Uredi adresu za slanje</translation>
    </message>
    <message>
        <location line=""+76""/>
        <source>The entered address &quot;%1&quot; is already in the address book.</source>
        <translation>Upisana adresa &quot;%1&quot; je već u adresaru.</translation>
    </message>
    <message>
        <location line=""-5""/>
        <source>The entered address &quot;%1&quot; is not a valid TelcoCoin address.</source>
        <translation>Upisana adresa &quot;%1&quot; nije valjana TelcoCoin adresa.</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Could not unlock wallet.</source>
        <translation>Ne mogu otključati novčanik.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>New key generation failed.</source>
        <translation>Stvaranje novog ključa nije uspjelo.</translation>
    </message>
</context>
<context>
    <name>GUIUtil::HelpMessageBox</name>
    <message>
        <location filename=""../guiutil.cpp"" line=""+424""/>
        <location line=""+12""/>
        <source>TelcoCoin-Qt</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-12""/>
        <source>version</source>
        <translation>verzija</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Usage:</source>
        <translation>Upotreba:</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>command-line options</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>UI options</source>
        <translation>UI postavke</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Start minimized</source>
        <translation>Pokreni minimiziran</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show splash screen on startup (default: 1)</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>OptionsDialog</name>
    <message>
        <location filename=""../forms/optionsdialog.ui"" line=""+14""/>
        <source>Options</source>
        <translation>Postavke</translation>
    </message>
    <message>
        <location line=""+16""/>
        <source>&amp;Main</source>
        <translation>&amp;Glavno</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+15""/>
        <source>Pay transaction &amp;fee</source>
        <translation>Plati &amp;naknadu za transakciju</translation>
    </message>
    <message>
        <location line=""+31""/>
        <source>Automatically start TelcoCoin after logging in to the system.</source>
        <translation>Automatski pokreni TelcoCoin kad se uključi računalo</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Start TelcoCoin on system login</source>
        <translation>&amp;Pokreni TelcoCoin kod pokretanja sustava</translation>
    </message>
    <message>
        <location line=""+35""/>
        <source>Reset all client options to default.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Reset Options</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>&amp;Network</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>Automatically open the TelcoCoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
        <translation>Automatski otvori port TelcoCoin klijenta na ruteru. To radi samo ako ruter podržava UPnP i ako je omogućen.</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Map port using &amp;UPnP</source>
        <translation>Mapiraj port koristeći &amp;UPnP</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Connect to the TelcoCoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>
        <translation>Spojite se na Bitcon mrežu putem SOCKS proxy-a (npr. kod povezivanja kroz Tor)</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Connect through SOCKS proxy:</source>
        <translation>&amp;Povezivanje putem SOCKS proxy-a:</translation>
    </message>
    <message>
        <location line=""+9""/>
        <source>Proxy &amp;IP:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+19""/>
        <source>IP address of the proxy (e.g. 127.0.0.1)</source>
        <translation>IP adresa proxy-a (npr. 127.0.0.1)</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Port:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+19""/>
        <source>Port of the proxy (e.g. 9050)</source>
        <translation>Port od proxy-a (npr. 9050)</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>SOCKS &amp;Version:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>SOCKS version of the proxy (e.g. 5)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+36""/>
        <source>&amp;Window</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>Show only a tray icon after minimizing the window.</source>
        <translation>Prikaži samo ikonu u sistemskoj traci nakon minimiziranja prozora</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Minimize to the tray instead of the taskbar</source>
        <translation>&amp;Minimiziraj u sistemsku traku umjesto u traku programa</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Quit in the menu.</source>
        <translation>Minimizirati umjesto izaći iz aplikacije kada je prozor zatvoren. Kada je ova opcija omogućena, aplikacija će biti zatvorena tek nakon odabira Izlaz u izborniku.</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>M&amp;inimize on close</source>
        <translation>M&amp;inimiziraj kod zatvaranja</translation>
    </message>
    <message>
        <location line=""+21""/>
        <source>&amp;Display</source>
        <translation>&amp;Prikaz</translation>
    </message>
    <message>
        <location line=""+8""/>
        <source>User Interface &amp;language:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>The user interface language can be set here. This setting will take effect after restarting TelcoCoin.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+11""/>
        <source>&amp;Unit to show amounts in:</source>
        <translation>&amp;Jedinica za prikazivanje iznosa:</translation>
    </message>
    <message>
        <location line=""+13""/>
        <source>Choose the default subdivision unit to show in the interface and when sending coins.</source>
        <translation>Izaberite željeni najmanji dio TelcoCoina koji će biti prikazan u sučelju i koji će se koristiti za plaćanje.</translation>
    </message>
    <message>
        <location line=""+9""/>
        <source>Whether to show TelcoCoin addresses in the transaction list or not.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Display addresses in transaction list</source>
        <translation>&amp;Prikaži adrese u popisu transakcija</translation>
    </message>
    <message>
        <location line=""+71""/>
        <source>&amp;OK</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Cancel</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+10""/>
        <source>&amp;Apply</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location filename=""../optionsdialog.cpp"" line=""+53""/>
        <source>default</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+130""/>
        <source>Confirm options reset</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Some settings may require a client restart to take effect.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>Do you want to proceed?</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+42""/>
        <location line=""+9""/>
        <source>Warning</source>
        <translation>Upozorenje</translation>
    </message>
    <message>
        <location line=""-9""/>
        <location line=""+9""/>
        <source>This setting will take effect after restarting TelcoCoin.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+29""/>
        <source>The supplied proxy address is invalid.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>OverviewPage</name>
    <message>
        <location filename=""../forms/overviewpage.ui"" line=""+14""/>
        <source>Form</source>
        <translation>Oblik</translation>
    </message>
    <message>
        <location line=""+50""/>
        <location line=""+166""/>
        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the TelcoCoin network after a connection is established, but this process has not completed yet.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-124""/>
        <source>Balance:</source>
        <translation>Stanje:</translation>
    </message>
    <message>
        <location line=""+29""/>
        <source>Unconfirmed:</source>
        <translation>Nepotvrđene:</translation>
    </message>
    <message>
        <location line=""-78""/>
        <source>Wallet</source>
        <translation>Novčanik</translation>
    </message>
    <message>
        <location line=""+107""/>
        <source>Immature:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>Mined balance that has not yet matured</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+46""/>
        <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>
        <translation>&lt;b&gt;Nedavne transakcije&lt;/b&gt;</translation>
    </message>
    <message>
        <location line=""-101""/>
        <source>Your current balance</source>
        <translation>Vaše trenutno stanje računa</translation>
    </message>
    <message>
        <location line=""+29""/>
        <source>Total of transactions that have yet to be confirmed, and do not yet count toward the current balance</source>
        <translation>Ukupni iznos transakcija koje tek trebaju biti potvrđene, i još uvijek nisu uračunate u trenutni saldo</translation>
    </message>
    <message>
        <location filename=""../overviewpage.cpp"" line=""+116""/>
        <location line=""+1""/>
        <source>out of sync</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>PaymentServer</name>
    <message>
        <location filename=""../paymentserver.cpp"" line=""+107""/>
        <source>Cannot start TelcoCoin: click-to-pay handler</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>QRCodeDialog</name>
    <message>
        <location filename=""../forms/qrcodedialog.ui"" line=""+14""/>
        <source>QR Code Dialog</source>
        <translation>QR Code Dijalog</translation>
    </message>
    <message>
        <location line=""+59""/>
        <source>Request Payment</source>
        <translation>Zatraži plaćanje</translation>
    </message>
    <message>
        <location line=""+56""/>
        <source>Amount:</source>
        <translation>Iznos:</translation>
    </message>
    <message>
        <location line=""-44""/>
        <source>Label:</source>
        <translation>Oznaka</translation>
    </message>
    <message>
        <location line=""+19""/>
        <source>Message:</source>
        <translation>Poruka:</translation>
    </message>
    <message>
        <location line=""+71""/>
        <source>&amp;Save As...</source>
        <translation>&amp;Spremi kao...</translation>
    </message>
    <message>
        <location filename=""../qrcodedialog.cpp"" line=""+62""/>
        <source>Error encoding URI into QR Code.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+40""/>
        <source>The entered amount is invalid, please check.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+23""/>
        <source>Resulting URI too long, try to reduce the text for label / message.</source>
        <translation>Rezultirajući URI je predug, probajte umanjiti tekst za naslov / poruku.</translation>
    </message>
    <message>
        <location line=""+25""/>
        <source>Save QR Code</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>PNG Images (*.png)</source>
        <translation>PNG slike (*.png)</translation>
    </message>
</context>
<context>
    <name>RPCConsole</name>
    <message>
        <location filename=""../forms/rpcconsole.ui"" line=""+46""/>
        <source>Client name</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+10""/>
        <location line=""+23""/>
        <location line=""+26""/>
        <location line=""+23""/>
        <location line=""+23""/>
        <location line=""+36""/>
        <location line=""+53""/>
        <location line=""+23""/>
        <location line=""+23""/>
        <location filename=""../rpcconsole.cpp"" line=""+339""/>
        <source>N/A</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-217""/>
        <source>Client version</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-45""/>
        <source>&amp;Information</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+68""/>
        <source>Using OpenSSL version</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+49""/>
        <source>Startup time</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+29""/>
        <source>Network</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Number of connections</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+23""/>
        <source>On testnet</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+23""/>
        <source>Block chain</source>
        <translation>Lanac blokova</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Current number of blocks</source>
        <translation>Trenutni broj blokova</translation>
    </message>
    <message>
        <location line=""+23""/>
        <source>Estimated total blocks</source>
        <translation>Procjenjeni ukupni broj blokova</translation>
    </message>
    <message>
        <location line=""+23""/>
        <source>Last block time</source>
        <translation>Posljednje vrijeme bloka</translation>
    </message>
    <message>
        <location line=""+52""/>
        <source>&amp;Open</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+16""/>
        <source>Command-line options</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Show the TelcoCoin-Qt help message to get a list with possible TelcoCoin command-line options.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Show</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+24""/>
        <source>&amp;Console</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-260""/>
        <source>Build date</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-104""/>
        <source>TelcoCoin - Debug window</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+25""/>
        <source>TelcoCoin Core</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+279""/>
        <source>Debug log file</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Open the TelcoCoin debug log file from the current data directory. This can take a few seconds for large log files.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+102""/>
        <source>Clear console</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location filename=""../rpcconsole.cpp"" line=""-30""/>
        <source>Welcome to the TelcoCoin RPC console.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Type &lt;b&gt;help&lt;/b&gt; for an overview of available commands.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>SendCoinsDialog</name>
    <message>
        <location filename=""../forms/sendcoinsdialog.ui"" line=""+14""/>
        <location filename=""../sendcoinsdialog.cpp"" line=""+124""/>
        <location line=""+5""/>
        <location line=""+5""/>
        <location line=""+5""/>
        <location line=""+6""/>
        <location line=""+5""/>
        <location line=""+5""/>
        <source>Send Coins</source>
        <translation>Slanje novca</translation>
    </message>
    <message>
        <location line=""+50""/>
        <source>Send to multiple recipients at once</source>
        <translation>Pošalji k nekoliko primatelja odjednom</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Add &amp;Recipient</source>
        <translation>&amp;Dodaj primatelja</translation>
    </message>
    <message>
        <location line=""+20""/>
        <source>Remove all transaction fields</source>
        <translation>Obriši sva polja transakcija</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Clear &amp;All</source>
        <translation>Obriši &amp;sve</translation>
    </message>
    <message>
        <location line=""+22""/>
        <source>Balance:</source>
        <translation>Stanje:</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>123.456 BTC</source>
        <translation>123,456 BTC</translation>
    </message>
    <message>
        <location line=""+31""/>
        <source>Confirm the send action</source>
        <translation>Potvrdi akciju slanja</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>S&amp;end</source>
        <translation>&amp;Pošalji</translation>
    </message>
    <message>
        <location filename=""../sendcoinsdialog.cpp"" line=""-59""/>
        <source>&lt;b&gt;%1&lt;/b&gt; to %2 (%3)</source>
        <translation>&lt;b&gt;%1&lt;/b&gt; do %2 (%3)</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Confirm send coins</source>
        <translation>Potvrdi slanje novca</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Are you sure you want to send %1?</source>
        <translation>Jeste li sigurni da želite poslati %1?</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source> and </source>
        <translation>i</translation>
    </message>
    <message>
        <location line=""+23""/>
        <source>The recipient address is not valid, please recheck.</source>
        <translation>Adresa primatelja je nevaljala, molimo provjerite je ponovo.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>The amount to pay must be larger than 0.</source>
        <translation>Iznos mora biti veći od 0.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>The amount exceeds your balance.</source>
        <translation>Iznos je veći od stanja računa.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>The total exceeds your balance when the %1 transaction fee is included.</source>
        <translation>Iznos je veći od stanja računa kad se doda naknada za transakcije od %1.</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>Duplicate address found, can only send to each address once per send operation.</source>
        <translation>Pronašli smo adresu koja se ponavlja. U svakom plaćanju program može svaku adresu koristiti samo jedanput.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Error: Transaction creation failed!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>
        <translation>Generirani novčići moraju pričekati nastanak 120 blokova prije nego što ih je moguće potrošiti. Kad ste generirali taj blok, on je bio emitiran u mrežu kako bi bio dodan postojećim lancima blokova. Ako ne uspije biti dodan, njegov status bit će promijenjen u &quot;nije prihvatljiv&quot; i on neće biti potrošiv. S vremena na vrijeme tako nešto se može desiti ako neki drugi nod približno istovremeno generira blok.</translation>
    </message>
</context>
<context>
    <name>SendCoinsEntry</name>
    <message>
        <location filename=""../forms/sendcoinsentry.ui"" line=""+14""/>
        <source>Form</source>
        <translation>Oblik</translation>
    </message>
    <message>
        <location line=""+15""/>
        <source>A&amp;mount:</source>
        <translation>&amp;Iznos:</translation>
    </message>
    <message>
        <location line=""+13""/>
        <source>Pay &amp;To:</source>
        <translation>&amp;Primatelj plaćanja:</translation>
    </message>
    <message>
        <location line=""+34""/>
        <source>The address to send the payment to (e.g. Ler4HNAEfwYhBmGXcFP2Po1NpRUEiK8km2)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+60""/>
        <location filename=""../sendcoinsentry.cpp"" line=""+26""/>
        <source>Enter a label for this address to add it to your address book</source>
        <translation>Unesite oznaku za ovu adresu kako bi ju dodali u vaš adresar</translation>
    </message>
    <message>
        <location line=""-78""/>
        <source>&amp;Label:</source>
        <translation>&amp;Oznaka:</translation>
    </message>
    <message>
        <location line=""+28""/>
        <source>Choose address from address book</source>
        <translation>Odaberite adresu iz adresara</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Alt+A</source>
        <translation>Alt+A</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Paste address from clipboard</source>
        <translation>Zalijepi adresu iz međuspremnika</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Alt+P</source>
        <translation>Alt+P</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Remove this recipient</source>
        <translation>Ukloni ovog primatelja</translation>
    </message>
    <message>
        <location filename=""../sendcoinsentry.cpp"" line=""+1""/>
        <source>Enter a TelcoCoin address (e.g. Ler4HNAEfwYhBmGXcFP2Po1NpRUEiK8km2)</source>
        <translation>Unesite TelcoCoin adresu (npr. Ler4HNAEfwYhBmGXcFP2Po1NpRUEiK8km2)</translation>
    </message>
</context>
<context>
    <name>SignVerifyMessageDialog</name>
    <message>
        <location filename=""../forms/signverifymessagedialog.ui"" line=""+14""/>
        <source>Signatures - Sign / Verify a Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>&amp;Sign Message</source>
        <translation>&amp;Potpišite poruku</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>You can sign messages with your addresses to prove you own them. Be careful not to sign anything vague, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
        <translation>Možete potpisati poruke sa svojom adresom kako bi dokazali da ih posjedujete. Budite oprezni da ne potpisujete ništa mutno, jer bi vas phishing napadi mogli na prevaru natjerati da prepišete svoj identitet njima. Potpisujte samo detaljno objašnjene izjave sa kojima se slažete.</translation>
    </message>
    <message>
        <location line=""+18""/>
        <source>The address to sign the message with (e.g. Ler4HNAEfwYhBmGXcFP2Po1NpRUEiK8km2)</source>
        <translation>Unesite TelcoCoin adresu (npr. Ler4HNAEfwYhBmGXcFP2Po1NpRUEiK8km2)</translation>
    </message>
    <message>
        <location line=""+10""/>
        <location line=""+213""/>
        <source>Choose an address from the address book</source>
        <translation>Odaberite adresu iz adresara</translation>
    </message>
    <message>
        <location line=""-203""/>
        <location line=""+213""/>
        <source>Alt+A</source>
        <translation>Alt+A</translation>
    </message>
    <message>
        <location line=""-203""/>
        <source>Paste address from clipboard</source>
        <translation>Zalijepi adresu iz međuspremnika</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Alt+P</source>
        <translation>Alt+P</translation>
    </message>
    <message>
        <location line=""+12""/>
        <source>Enter the message you want to sign here</source>
        <translation>Upišite poruku koju želite potpisati ovdje</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Signature</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+27""/>
        <source>Copy the current signature to the system clipboard</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+21""/>
        <source>Sign the message to prove you own this TelcoCoin address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Sign &amp;Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>Reset all sign message fields</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <location line=""+146""/>
        <source>Clear &amp;All</source>
        <translation>Obriši &amp;sve</translation>
    </message>
    <message>
        <location line=""-87""/>
        <source>&amp;Verify Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>Enter the signing address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+21""/>
        <source>The address the message was signed with (e.g. Ler4HNAEfwYhBmGXcFP2Po1NpRUEiK8km2)</source>
        <translation>Unesite TelcoCoin adresu (npr. Ler4HNAEfwYhBmGXcFP2Po1NpRUEiK8km2)</translation>
    </message>
    <message>
        <location line=""+40""/>
        <source>Verify the message to ensure it was signed with the specified TelcoCoin address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Verify &amp;Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>Reset all verify message fields</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location filename=""../signverifymessagedialog.cpp"" line=""+27""/>
        <location line=""+3""/>
        <source>Enter a TelcoCoin address (e.g. Ler4HNAEfwYhBmGXcFP2Po1NpRUEiK8km2)</source>
        <translation>Unesite TelcoCoin adresu (npr. Ler4HNAEfwYhBmGXcFP2Po1NpRUEiK8km2)</translation>
    </message>
    <message>
        <location line=""-2""/>
        <source>Click &quot;Sign Message&quot; to generate signature</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Enter TelcoCoin signature</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+82""/>
        <location line=""+81""/>
        <source>The entered address is invalid.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-81""/>
        <location line=""+8""/>
        <location line=""+73""/>
        <location line=""+8""/>
        <source>Please check the address and try again.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-81""/>
        <location line=""+81""/>
        <source>The entered address does not refer to a key.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-73""/>
        <source>Wallet unlock was cancelled.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>Private key for the entered address is not available.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+12""/>
        <source>Message signing failed.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Message signed.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+59""/>
        <source>The signature could not be decoded.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <location line=""+13""/>
        <source>Please check the signature and try again.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>The signature did not match the message digest.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Message verification failed.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Message verified.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>SplashScreen</name>
    <message>
        <location filename=""../splashscreen.cpp"" line=""+22""/>
        <source>The TelcoCoin developers</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>[testnet]</source>
        <translation>[testnet]</translation>
    </message>
</context>
<context>
    <name>TransactionDesc</name>
    <message>
        <location filename=""../transactiondesc.cpp"" line=""+20""/>
        <source>Open until %1</source>
        <translation>Otvoren do %1</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>%1/offline</source>
        <translation>%1 nije dostupan</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>%1/unconfirmed</source>
        <translation>%1/nepotvrđeno</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>%1 confirmations</source>
        <translation>%1 potvrda</translation>
    </message>
    <message>
        <location line=""+18""/>
        <source>Status</source>
        <translation>Status</translation>
    </message>
    <message numerus=""yes"">
        <location line=""+7""/>
        <source>, broadcast through %n node(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Date</source>
        <translation>Datum</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Source</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>Generated</source>
        <translation>Generiran</translation>
    </message>
    <message>
        <location line=""+5""/>
        <location line=""+17""/>
        <source>From</source>
        <translation>Od</translation>
    </message>
    <message>
        <location line=""+1""/>
        <location line=""+22""/>
        <location line=""+58""/>
        <source>To</source>
        <translation>Za</translation>
    </message>
    <message>
        <location line=""-77""/>
        <location line=""+2""/>
        <source>own address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-2""/>
        <source>label</source>
        <translation>oznaka</translation>
    </message>
    <message>
        <location line=""+37""/>
        <location line=""+12""/>
        <location line=""+45""/>
        <location line=""+17""/>
        <location line=""+30""/>
        <source>Credit</source>
        <translation>Uplaćeno</translation>
    </message>
    <message numerus=""yes"">
        <location line=""-102""/>
        <source>matures in %n more block(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>not accepted</source>
        <translation>Nije prihvaćeno</translation>
    </message>
    <message>
        <location line=""+44""/>
        <location line=""+8""/>
        <location line=""+15""/>
        <location line=""+30""/>
        <source>Debit</source>
        <translation>Zaduženje</translation>
    </message>
    <message>
        <location line=""-39""/>
        <source>Transaction fee</source>
        <translation>Naknada za transakciju</translation>
    </message>
    <message>
        <location line=""+16""/>
        <source>Net amount</source>
        <translation>Neto iznos</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>Message</source>
        <translation>Poruka</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Comment</source>
        <translation>Komentar</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Transaction ID</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Generated coins must mature 120 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>
        <translation>Generirani novčići moraju pričekati nastanak 120 blokova prije nego što ih je moguće potrošiti. Kad ste generirali taj blok, on je bio emitiran u mrežu kako bi bio dodan postojećim lancima blokova. Ako ne uspije biti dodan, njegov status bit će promijenjen u &quot;nije prihvaćen&quot; i on neće biti potrošiv. S vremena na vrijeme tako nešto se može desiti ako neki drugi nod generira blok u približno isto vrijeme.</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Debug information</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>Transaction</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Inputs</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+23""/>
        <source>Amount</source>
        <translation>Iznos</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>true</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>false</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-209""/>
        <source>, has not been successfully broadcast yet</source>
        <translation>, još nije bio uspješno emitiran</translation>
    </message>
    <message numerus=""yes"">
        <location line=""-35""/>
        <source>Open for %n more block(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+70""/>
        <source>unknown</source>
        <translation>nepoznato</translation>
    </message>
</context>
<context>
    <name>TransactionDescDialog</name>
    <message>
        <location filename=""../forms/transactiondescdialog.ui"" line=""+14""/>
        <source>Transaction details</source>
        <translation>Detalji transakcije</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>This pane shows a detailed description of the transaction</source>
        <translation>Ova panela prikazuje detaljni opis transakcije</translation>
    </message>
</context>
<context>
    <name>TransactionTableModel</name>
    <message>
        <location filename=""../transactiontablemodel.cpp"" line=""+225""/>
        <source>Date</source>
        <translation>Datum</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Type</source>
        <translation>Tip</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Address</source>
        <translation>Adresa</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Amount</source>
        <translation>Iznos</translation>
    </message>
    <message numerus=""yes"">
        <location line=""+57""/>
        <source>Open for %n more block(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Open until %1</source>
        <translation>Otvoren do %1</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Offline (%1 confirmations)</source>
        <translation>Nije na mreži (%1 potvrda)</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Unconfirmed (%1 of %2 confirmations)</source>
        <translation>Nepotvrđen (%1 od %2 potvrda)</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Confirmed (%1 confirmations)</source>
        <translation>Potvrđen (%1 potvrda)</translation>
    </message>
    <message numerus=""yes"">
        <location line=""+8""/>
        <source>Mined balance will be available when it matures in %n more block(s)</source>
        <translation type=""unfinished""><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>This block was not received by any other nodes and will probably not be accepted!</source>
        <translation>Generirano - Upozorenje: ovaj blok nije bio primljen od strane bilo kojeg drugog noda i vjerojatno neće biti prihvaćen!</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Generated but not accepted</source>
        <translation>Generirano, ali nije prihvaćeno</translation>
    </message>
    <message>
        <location line=""+43""/>
        <source>Received with</source>
        <translation>Primljeno s</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Received from</source>
        <translation>Primljeno od</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Sent to</source>
        <translation>Poslano za</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Payment to yourself</source>
        <translation>Plaćanje samom sebi</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Mined</source>
        <translation>Rudareno</translation>
    </message>
    <message>
        <location line=""+38""/>
        <source>(n/a)</source>
        <translation>(n/d)</translation>
    </message>
    <message>
        <location line=""+199""/>
        <source>Transaction status. Hover over this field to show number of confirmations.</source>
        <translation>Status transakcije</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Date and time that the transaction was received.</source>
        <translation>Datum i vrijeme kad je transakcija primljena</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Type of transaction.</source>
        <translation>Vrsta transakcije.</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Destination address of transaction.</source>
        <translation>Odredište transakcije</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Amount removed from or added to balance.</source>
        <translation>Iznos odbijen od ili dodan k saldu.</translation>
    </message>
</context>
<context>
    <name>TransactionView</name>
    <message>
        <location filename=""../transactionview.cpp"" line=""+52""/>
        <location line=""+16""/>
        <source>All</source>
        <translation>Sve</translation>
    </message>
    <message>
        <location line=""-15""/>
        <source>Today</source>
        <translation>Danas</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>This week</source>
        <translation>Ovaj tjedan</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>This month</source>
        <translation>Ovaj mjesec</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Last month</source>
        <translation>Prošli mjesec</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>This year</source>
        <translation>Ove godine</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Range...</source>
        <translation>Raspon...</translation>
    </message>
    <message>
        <location line=""+11""/>
        <source>Received with</source>
        <translation>Primljeno s</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Sent to</source>
        <translation>Poslano za</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>To yourself</source>
        <translation>Tebi</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Mined</source>
        <translation>Rudareno</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Other</source>
        <translation>Ostalo</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Enter address or label to search</source>
        <translation>Unesite adresu ili oznaku za pretraživanje</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Min amount</source>
        <translation>Min iznos</translation>
    </message>
    <message>
        <location line=""+34""/>
        <source>Copy address</source>
        <translation>Kopirati adresu</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Copy label</source>
        <translation>Kopirati oznaku</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Copy amount</source>
        <translation>Kopiraj iznos</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Copy transaction ID</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Edit label</source>
        <translation>Izmjeniti oznaku</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show transaction details</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+139""/>
        <source>Export Transaction Data</source>
        <translation>Izvoz podataka transakcija</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Comma separated file (*.csv)</source>
        <translation>Datoteka podataka odvojenih zarezima (*.csv)</translation>
    </message>
    <message>
        <location line=""+8""/>
        <source>Confirmed</source>
        <translation>Potvrđeno</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Date</source>
        <translation>Datum</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Type</source>
        <translation>Tip</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Label</source>
        <translation>Oznaka</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Address</source>
        <translation>Adresa</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Amount</source>
        <translation>Iznos</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>ID</source>
        <translation>ID</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Error exporting</source>
        <translation>Izvoz pogreške</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Could not write to file %1.</source>
        <translation>Ne mogu pisati u datoteku %1.</translation>
    </message>
    <message>
        <location line=""+100""/>
        <source>Range:</source>
        <translation>Raspon:</translation>
    </message>
    <message>
        <location line=""+8""/>
        <source>to</source>
        <translation>za</translation>
    </message>
</context>
<context>
    <name>WalletModel</name>
    <message>
        <location filename=""../walletmodel.cpp"" line=""+193""/>
        <source>Send Coins</source>
        <translation>Slanje novca</translation>
    </message>
</context>
<context>
    <name>WalletView</name>
    <message>
        <location filename=""../walletview.cpp"" line=""+42""/>
        <source>&amp;Export</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Export the data in the current tab to a file</source>
        <translation>Izvoz podataka iz trenutnog taba u datoteku</translation>
    </message>
    <message>
        <location line=""+193""/>
        <source>Backup Wallet</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>Wallet Data (*.dat)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Backup Failed</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>There was an error trying to save the wallet data to the new location.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>Backup Successful</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>The wallet data was successfully saved to the new location.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>bitcoin-core</name>
    <message>
        <location filename=""../bitcoinstrings.cpp"" line=""+94""/>
        <source>TelcoCoin version</source>
        <translation>TelcoCoin verzija</translation>
    </message>
    <message>
        <location line=""+102""/>
        <source>Usage:</source>
        <translation>Upotreba:</translation>
    </message>
    <message>
        <location line=""-29""/>
        <source>Send command to -server or TelcoCoind</source>
        <translation>Pošalji komandu usluzi -server ili TelcoCoind</translation>
    </message>
    <message>
        <location line=""-23""/>
        <source>List commands</source>
        <translation>Prikaži komande</translation>
    </message>
    <message>
        <location line=""-12""/>
        <source>Get help for a command</source>
        <translation>Potraži pomoć za komandu</translation>
    </message>
    <message>
        <location line=""+24""/>
        <source>Options:</source>
        <translation>Postavke:</translation>
    </message>
    <message>
        <location line=""+24""/>
        <source>Specify configuration file (default: TelcoCoin.conf)</source>
        <translation>Odredi konfiguracijsku datoteku (ugrađeni izbor: TelcoCoin.conf)</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Specify pid file (default: TelcoCoind.pid)</source>
        <translation>Odredi proces ID datoteku (ugrađeni izbor: TelcoCoin.pid)</translation>
    </message>
    <message>
        <location line=""-1""/>
        <source>Specify data directory</source>
        <translation>Odredi direktorij za datoteke</translation>
    </message>
    <message>
        <location line=""-9""/>
        <source>Set database cache size in megabytes (default: 25)</source>
        <translation>Postavi cache za bazu podataka u MB (zadano:25)</translation>
    </message>
    <message>
        <location line=""-28""/>
        <source>Listen for connections on &lt;port&gt; (default: 22556 or testnet: 44556)</source>
        <translation>Slušaj na &lt;port&gt;u (default: 22556 ili testnet: 44556)</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Maintain at most &lt;n&gt; connections to peers (default: 125)</source>
        <translation>Održavaj najviše &lt;n&gt; veza sa članovima (default: 125)</translation>
    </message>
    <message>
        <location line=""-48""/>
        <source>Connect to a node to retrieve peer addresses, and disconnect</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+82""/>
        <source>Specify your own public address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Threshold for disconnecting misbehaving peers (default: 100)</source>
        <translation>Prag za odspajanje članova koji se čudno ponašaju (default: 100)</translation>
    </message>
    <message>
        <location line=""-134""/>
        <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>
        <translation>Broj sekundi koliko se članovima koji se čudno ponašaju neće dopustiti da se opet spoje (default: 86400)</translation>
    </message>
    <message>
        <location line=""-29""/>
        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+27""/>
        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 22555 or testnet: 44555)</source>
        <translation>Prihvaćaj JSON-RPC povezivanje na portu broj &lt;port&gt; (ugrađeni izbor: 22555 or testnet: 44555)</translation>
    </message>
    <message>
        <location line=""+37""/>
        <source>Accept command line and JSON-RPC commands</source>
        <translation>Prihvati komande iz tekst moda i JSON-RPC</translation>
    </message>
    <message>
        <location line=""+76""/>
        <source>Run in the background as a daemon and accept commands</source>
        <translation>Izvršavaj u pozadini kao uslužnik i prihvaćaj komande</translation>
    </message>
    <message>
        <location line=""+37""/>
        <source>Use the test network</source>
        <translation>Koristi test mrežu</translation>
    </message>
    <message>
        <location line=""-112""/>
        <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-80""/>
        <source>%s, you must set a rpcpassword in the configuration file:
%s
It is recommended you use the following random password:
rpcuser=TelcoCoinrpc
rpcpassword=%s
(you do not need to remember this password)
The username and password MUST NOT be the same.
If the file does not exist, create it with owner-readable-only file permissions.
It is also recommended to set alertnotify so you are notified of problems;
for example: alertnotify=echo %%s | mail -s &quot;TelcoCoin Alert&quot; admin@foo.com
</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+17""/>
        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Cannot obtain a lock on data directory %s. TelcoCoin is probably already running.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Execute command when a relevant alert is received (%s in cmd is replaced by message)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+11""/>
        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>
        <translation>Upozorenje: -paytxfee je podešen na preveliki iznos.  To je iznos koji ćete platiti za obradu transakcije.</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning: Displayed transactions may not be correct! You may need to upgrade, or other nodes may need to upgrade.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning: Please check that your computer&apos;s date and time are correct! If your clock is wrong TelcoCoin will not work properly.</source>
        <translation>Upozorenje: Molimo provjerite jesu li datum i vrijeme na vašem računalu točni. Ako vaš sat ide krivo, TelcoCoin neće raditi ispravno.</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>Attempt to recover private keys from a corrupt wallet.dat</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Block creation options:</source>
        <translation>Opcije za kreiranje bloka:</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Connect only to the specified node(s)</source>
        <translation>Poveži se samo sa određenim nodom</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Corrupted block database detected</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Discover own IP address (default: 1 when listening and no -externalip)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Do you want to rebuild the block database now?</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Error initializing block database</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error initializing wallet database environment %s!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error loading block database</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>Error opening block database</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Error: Disk space is low!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error: Wallet locked, unable to create transaction!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error: system error: </source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to read block info</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to read block</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to sync block index</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write block index</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write block info</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write block</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write file info</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write to coin database</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write transaction index</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write undo data</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Find peers using DNS lookup (default: 1 unless -connect)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Generate coins (default: 0)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>How many blocks to check at startup (default: 288, 0 = all)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>How thorough the block verification is (0-4, default: 3)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+19""/>
        <source>Not enough file descriptors available.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>Rebuild block chain index from current blk000??.dat files</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+16""/>
        <source>Set the number of threads to service RPC calls (default: 4)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+26""/>
        <source>Verifying blocks...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Verifying wallet...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-69""/>
        <source>Imports blocks from external blk000??.dat file</source>
        <translation>Importiraj blokove sa vanjskog blk000??.dat fajla</translation>
    </message>
    <message>
        <location line=""-76""/>
        <source>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+77""/>
        <source>Information</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Invalid -tor address: &apos;%s&apos;</source>
        <translation>Nevaljala -tor adresa: &apos;%s&apos;</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Invalid amount for -minrelaytxfee=&lt;amount&gt;: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Invalid amount for -mintxfee=&lt;amount&gt;: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>Maintain a full transaction index (default: 0)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: 5000)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: 1000)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Only accept block chain matching built-in checkpoints (default: 1)</source>
        <translation>Prihvati samo lance blokova koji se podudaraju sa ugrađenim checkpoint-ovima (default: 1)</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Only connect to nodes in network &lt;net&gt; (IPv4, IPv6 or Tor)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Output extra debugging information. Implies all other -debug* options</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Output extra network debugging information</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Prepend debug output with timestamp (default: 1)</source>
        <translation>Dodaj izlaz debuga na početak sa vremenskom oznakom</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>SSL options: (see the TelcoCoin Wiki for SSL setup instructions)</source>
        <translation>SSL postavke: (za detalje o podešavanju SSL opcija vidi TelcoCoin Wiki)</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Select the version of socks proxy to use (4-5, default: 5)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Send trace/debug info to console instead of debug.log file</source>
        <translation>Šalji trace/debug informacije na konzolu umjesto u debug.log datoteku</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Send trace/debug info to debugger</source>
        <translation>Pošalji trace/debug informacije u debugger</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Set maximum block size in bytes (default: 250000)</source>
        <translation>Podesite maksimalnu veličinu bloka u bajtovima (default: 250000)</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Set minimum block size in bytes (default: 0)</source>
        <translation>Podesite minimalnu veličinu bloka u bajtovima (default: 0)</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Shrink debug.log file on client startup (default: 1 when no -debug)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Signing transaction failed</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Specify connection timeout in milliseconds (default: 5000)</source>
        <translation>Odredi vremenski prozor za spajanje na mrežu u milisekundama (ugrađeni izbor: 5000)</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>System error: </source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>Transaction amount too small</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Transaction amounts must be positive</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Transaction too large</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Use UPnP to map the listening port (default: 0)</source>
        <translation>Pokušaj koristiti UPnP da otvoriš port za uslugu (default: 0)</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
        <translation>Pokušaj koristiti UPnP da otvoriš port za uslugu (default: 1 when listening)</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Username for JSON-RPC connections</source>
        <translation>Korisničko ime za JSON-RPC veze</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Warning</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Warning: This version is obsolete, upgrade required!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>You need to rebuild the databases using -reindex to change -txindex</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>wallet.dat corrupt, salvage failed</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-50""/>
        <source>Password for JSON-RPC connections</source>
        <translation>Lozinka za JSON-RPC veze</translation>
    </message>
    <message>
        <location line=""-67""/>
        <source>Allow JSON-RPC connections from specified IP address</source>
        <translation>Dozvoli JSON-RPC povezivanje s određene IP adrese</translation>
    </message>
    <message>
        <location line=""+76""/>
        <source>Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)</source>
        <translation>Pošalji komande nodu na adresi &lt;ip&gt; (ugrađeni izbor: 127.0.0.1)</translation>
    </message>
    <message>
        <location line=""-120""/>
        <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>
        <translation>Izvršite naredbu kada se najbolji blok promjeni (%s u cmd je zamjenjen sa block hash)</translation>
    </message>
    <message>
        <location line=""+147""/>
        <source>Upgrade wallet to latest format</source>
        <translation>Nadogradite novčanik u posljednji format.</translation>
    </message>
    <message>
        <location line=""-21""/>
        <source>Set key pool size to &lt;n&gt; (default: 100)</source>
        <translation>Podesi memorijski prostor za ključeve na &lt;n&gt; (ugrađeni izbor: 100)</translation>
    </message>
    <message>
        <location line=""-12""/>
        <source>Rescan the block chain for missing wallet transactions</source>
        <translation>Ponovno pretraži lanac blokova za transakcije koje nedostaju</translation>
    </message>
    <message>
        <location line=""+35""/>
        <source>Use OpenSSL (https) for JSON-RPC connections</source>
        <translation>Koristi OpenSSL (https) za JSON-RPC povezivanje</translation>
    </message>
    <message>
        <location line=""-26""/>
        <source>Server certificate file (default: server.cert)</source>
        <translation>Uslužnikov SSL certifikat (ugrađeni izbor: server.cert)</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Server private key (default: server.pem)</source>
        <translation>Uslužnikov privatni ključ (ugrađeni izbor: server.pem)</translation>
    </message>
    <message>
        <location line=""-151""/>
        <source>Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)</source>
        <translation>Prihvaljivi načini šifriranja (ugrađeni izbor: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)</translation>
    </message>
    <message>
        <location line=""+165""/>
        <source>This help message</source>
        <translation>Ova poruka za pomoć</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>Unable to bind to %s on this computer (bind returned error %d, %s)</source>
        <translation>Program ne može koristiti %s na ovom računalu (bind returned error %d, %s)</translation>
    </message>
    <message>
        <location line=""-91""/>
        <source>Connect through socks proxy</source>
        <translation>Poveži se kroz socks proxy</translation>
    </message>
    <message>
        <location line=""-10""/>
        <source>Allow DNS lookups for -addnode, -seednode and -connect</source>
        <translation>Dozvoli DNS upite za dodavanje nodova i povezivanje</translation>
    </message>
    <message>
        <location line=""+55""/>
        <source>Loading addresses...</source>
        <translation>Učitavanje adresa...</translation>
    </message>
    <message>
        <location line=""-35""/>
        <source>Error loading wallet.dat: Wallet corrupted</source>
        <translation>Greška kod učitavanja wallet.dat: Novčanik pokvaren</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error loading wallet.dat: Wallet requires newer version of TelcoCoin</source>
        <translation>Greška kod učitavanja wallet.dat: Novčanik zahtjeva noviju verziju TelcoCoina</translation>
    </message>
    <message>
        <location line=""+93""/>
        <source>Wallet needed to be rewritten: restart TelcoCoin to complete</source>
        <translation>Novčanik je trebao prepravak: ponovo pokrenite TelcoCoin</translation>
    </message>
    <message>
        <location line=""-95""/>
        <source>Error loading wallet.dat</source>
        <translation>Greška kod učitavanja wallet.dat</translation>
    </message>
    <message>
        <location line=""+28""/>
        <source>Invalid -proxy address: &apos;%s&apos;</source>
        <translation>Nevaljala -proxy adresa: &apos;%s&apos;</translation>
    </message>
    <message>
        <location line=""+56""/>
        <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-1""/>
        <source>Unknown -socks proxy version requested: %i</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-96""/>
        <source>Cannot resolve -bind address: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Cannot resolve -externalip address: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+44""/>
        <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>
        <translation>Nevaljali iznos za opciju -paytxfee=&lt;amount&gt;: &apos;%s&apos;</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Invalid amount</source>
        <translation>Nevaljali iznos za opciju</translation>
    </message>
    <message>
        <location line=""-6""/>
        <source>Insufficient funds</source>
        <translation>Nedovoljna sredstva</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Loading block index...</source>
        <translation>Učitavanje indeksa blokova...</translation>
    </message>
    <message>
        <location line=""-57""/>
        <source>Add a node to connect to and attempt to keep the connection open</source>
        <translation>Unesite nod s kojim se želite spojiti and attempt to keep the connection open</translation>
    </message>
    <message>
        <location line=""-25""/>
        <source>Unable to bind to %s on this computer. TelcoCoin is probably already running.</source>
        <translation>Program ne može koristiti %s na ovom računalu.  TelcoCoin program je vjerojatno već pokrenut.</translation>
    </message>
    <message>
        <location line=""+64""/>
        <source>Fee per KB to add to transactions you send</source>
        <translation>Naknada posredniku po KB-u koja će biti dodana svakoj transakciji koju pošalješ</translation>
    </message>
    <message>
        <location line=""+19""/>
        <source>Loading wallet...</source>
        <translation>Učitavanje novčanika...</translation>
    </message>
    <message>
        <location line=""-52""/>
        <source>Cannot downgrade wallet</source>
        <translation>Nije moguće novčanik vratiti na prijašnju verziju.</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Cannot write default address</source>
        <translation>Nije moguće upisati zadanu adresu.</translation>
    </message>
    <message>
        <location line=""+64""/>
        <source>Rescanning...</source>
        <translation>Rescaniranje</translation>
    </message>
    <message>
        <location line=""-57""/>
        <source>Done loading</source>
        <translation>Učitavanje gotovo</translation>
    </message>
    <message>
        <location line=""+82""/>
        <source>To use the %s option</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-74""/>
        <source>Error</source>
        <translation>Greška</translation>
    </message>
    <message>
        <location line=""-31""/>
        <source>You must set rpcpassword=&lt;password&gt; in the configuration file:
%s
If the file does not exist, create it with owner-readable-only file permissions.</source>
        <translation type=""unfinished""/>
    </message>
</context>
</TS>",TypeScript
"/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { Comp625Component } from './comp-625.component';

describe('Comp625Component', () => {
  let component: Comp625Component;
  let fixture: ComponentFixture<Comp625Component>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ Comp625Component ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(Comp625Component);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
",TypeScript
"import { BaseController } from ""./BaseController"";
import { Route } from ""./BaseController"";
import * as loadHtml from ""./HtmlLoader"";

export class MainController extends BaseController
{
    main = (): void =>
    {
        loadHtml.load(this.requestData, '/views/index.html', {});
    }

    routes: Route[] = [
        new Route(""/"", this.main)
    ];
}",TypeScript
"/* tslint:disable:no-unused-variable */
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { By } from '@angular/platform-browser';
import { DebugElement } from '@angular/core';

import { SettingsComponent } from './settings.component';

describe('HomeComponent', () => {
  let component: SettingsComponent;
  let fixture: ComponentFixture<SettingsComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ SettingsComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(SettingsComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
",TypeScript
"export function JavapParser(input: any): this;
export class JavapParser {
    constructor(input: any);
    _interp: any;
    ruleNames: string[];
    literalNames: (string | null)[];
    symbolicNames: (string | null)[];
    constructor: typeof JavapParser;
    get atn(): any;
    compilationUnit(): CompilationUnitContext;
    state: number | undefined;
    sourceDeclaration(): SourceDeclarationContext;
    classOrInterface(): ClassOrInterfaceContext;
    classDeclaration(): ClassDeclarationContext;
    interfaceDeclaration(): InterfaceDeclarationContext;
    classModifier(): ClassModifierContext;
    interfaceModifier(): InterfaceModifierContext;
    typeList(): TypeListContext;
    type(): TypeContext;
    subType(): SubTypeContext;
    packageName(): PackageNameContext;
    typeArguments(): TypeArgumentsContext;
    typeArgument(): TypeArgumentContext;
    classBody(): ClassBodyContext;
    interfaceBody(): InterfaceBodyContext;
    modifier(): ModifierContext;
    classMember(): ClassMemberContext;
    interfaceMember(): InterfaceMemberContext;
    constructorDeclaration(): ConstructorDeclarationContext;
    fieldDeclaration(): FieldDeclarationContext;
    methodDeclaration(): MethodDeclarationContext;
    throwsException(): ThrowsExceptionContext;
    varargs(): VarargsContext;
    methodArguments(): MethodArgumentsContext;
    arrayBrackets(): ArrayBracketsContext;
}
export namespace JavapParser {
    export const EOF: number;
    export const T__0: number;
    export const T__1: number;
    export const T__2: number;
    export const T__3: number;
    export const T__4: number;
    export const T__5: number;
    export const T__6: number;
    export const T__7: number;
    export const T__8: number;
    export const T__9: number;
    export const T__10: number;
    export const T__11: number;
    export const T__12: number;
    export const T__13: number;
    export const T__14: number;
    export const T__15: number;
    export const T__16: number;
    export const T__17: number;
    export const T__18: number;
    export const T__19: number;
    export const T__20: number;
    export const T__21: number;
    export const T__22: number;
    export const T__23: number;
    export const T__24: number;
    export const T__25: number;
    export const T__26: number;
    export const T__27: number;
    export const T__28: number;
    export const T__29: number;
    export const T__30: number;
    export const T__31: number;
    export const T__32: number;
    export const T__33: number;
    export const T__34: number;
    export const Identifier: number;
    export const WS: number;
    export const RULE_compilationUnit: number;
    export const RULE_sourceDeclaration: number;
    export const RULE_classOrInterface: number;
    export const RULE_classDeclaration: number;
    export const RULE_interfaceDeclaration: number;
    export const RULE_classModifier: number;
    export const RULE_interfaceModifier: number;
    export const RULE_typeList: number;
    export const RULE_type: number;
    export const RULE_subType: number;
    export const RULE_packageName: number;
    export const RULE_typeArguments: number;
    export const RULE_typeArgument: number;
    export const RULE_classBody: number;
    export const RULE_interfaceBody: number;
    export const RULE_modifier: number;
    export const RULE_classMember: number;
    export const RULE_interfaceMember: number;
    export const RULE_constructorDeclaration: number;
    export const RULE_fieldDeclaration: number;
    export const RULE_methodDeclaration: number;
    export const RULE_throwsException: number;
    export const RULE_varargs: number;
    export const RULE_methodArguments: number;
    export const RULE_arrayBrackets: number;
    export { CompilationUnitContext };
    export { SourceDeclarationContext };
    export { ClassOrInterfaceContext };
    export { ClassDeclarationContext };
    export { InterfaceDeclarationContext };
    export { ClassModifierContext };
    export { InterfaceModifierContext };
    export { TypeListContext };
    export { TypeContext };
    export { SubTypeContext };
    export { PackageNameContext };
    export { TypeArgumentsContext };
    export { TypeArgumentContext };
    export { ClassBodyContext };
    export { InterfaceBodyContext };
    export { ModifierContext };
    export { ClassMemberContext };
    export { InterfaceMemberContext };
    export { ConstructorDeclarationContext };
    export { FieldDeclarationContext };
    export { MethodDeclarationContext };
    export { ThrowsExceptionContext };
    export { VarargsContext };
    export { MethodArgumentsContext };
    export { ArrayBracketsContext };
}
declare function CompilationUnitContext(parser: any, parent: any, invokingState: any): this;
declare class CompilationUnitContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof CompilationUnitContext;
    sourceDeclaration(i: any): any;
    classOrInterface(i: any): any;
    EOF(): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function SourceDeclarationContext(parser: any, parent: any, invokingState: any): this;
declare class SourceDeclarationContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof SourceDeclarationContext;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function ClassOrInterfaceContext(parser: any, parent: any, invokingState: any): this;
declare class ClassOrInterfaceContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof ClassOrInterfaceContext;
    classDeclaration(): any;
    interfaceDeclaration(): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function ClassDeclarationContext(parser: any, parent: any, invokingState: any): this;
declare class ClassDeclarationContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof ClassDeclarationContext;
    type(i: any): any;
    classBody(): any;
    classModifier(i: any): any;
    typeList(): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function InterfaceDeclarationContext(parser: any, parent: any, invokingState: any): this;
declare class InterfaceDeclarationContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof InterfaceDeclarationContext;
    type(): any;
    interfaceBody(): any;
    interfaceModifier(i: any): any;
    typeList(): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function ClassModifierContext(parser: any, parent: any, invokingState: any): this;
declare class ClassModifierContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof ClassModifierContext;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function InterfaceModifierContext(parser: any, parent: any, invokingState: any): this;
declare class InterfaceModifierContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof InterfaceModifierContext;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function TypeListContext(parser: any, parent: any, invokingState: any): this;
declare class TypeListContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof TypeListContext;
    type(i: any): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function TypeContext(parser: any, parent: any, invokingState: any): this;
declare class TypeContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof TypeContext;
    Identifier(): any;
    packageName(): any;
    typeArguments(): any;
    subType(): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function SubTypeContext(parser: any, parent: any, invokingState: any): this;
declare class SubTypeContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof SubTypeContext;
    Identifier(): any;
    typeArguments(): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function PackageNameContext(parser: any, parent: any, invokingState: any): this;
declare class PackageNameContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof PackageNameContext;
    Identifier(i: any): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function TypeArgumentsContext(parser: any, parent: any, invokingState: any): this;
declare class TypeArgumentsContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof TypeArgumentsContext;
    arrayBrackets(i: any): any;
    typeArgument(i: any): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function TypeArgumentContext(parser: any, parent: any, invokingState: any): this;
declare class TypeArgumentContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof TypeArgumentContext;
    type(i: any): any;
    Identifier(): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function ClassBodyContext(parser: any, parent: any, invokingState: any): this;
declare class ClassBodyContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof ClassBodyContext;
    classMember(i: any): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function InterfaceBodyContext(parser: any, parent: any, invokingState: any): this;
declare class InterfaceBodyContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof InterfaceBodyContext;
    interfaceMember(i: any): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function ModifierContext(parser: any, parent: any, invokingState: any): this;
declare class ModifierContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof ModifierContext;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function ClassMemberContext(parser: any, parent: any, invokingState: any): this;
declare class ClassMemberContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof ClassMemberContext;
    constructorDeclaration(): any;
    fieldDeclaration(): any;
    methodDeclaration(): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function InterfaceMemberContext(parser: any, parent: any, invokingState: any): this;
declare class InterfaceMemberContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof InterfaceMemberContext;
    fieldDeclaration(): any;
    methodDeclaration(): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function ConstructorDeclarationContext(parser: any, parent: any, invokingState: any): this;
declare class ConstructorDeclarationContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof ConstructorDeclarationContext;
    type(): any;
    methodArguments(): any;
    modifier(i: any): any;
    typeArguments(): any;
    throwsException(): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function FieldDeclarationContext(parser: any, parent: any, invokingState: any): this;
declare class FieldDeclarationContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof FieldDeclarationContext;
    type(): any;
    Identifier(): any;
    modifier(i: any): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function MethodDeclarationContext(parser: any, parent: any, invokingState: any): this;
declare class MethodDeclarationContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof MethodDeclarationContext;
    type(): any;
    Identifier(): any;
    methodArguments(): any;
    modifier(i: any): any;
    typeArguments(): any;
    throwsException(): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function ThrowsExceptionContext(parser: any, parent: any, invokingState: any): this;
declare class ThrowsExceptionContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof ThrowsExceptionContext;
    typeList(): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function VarargsContext(parser: any, parent: any, invokingState: any): this;
declare class VarargsContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof VarargsContext;
    type(): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function MethodArgumentsContext(parser: any, parent: any, invokingState: any): this;
declare class MethodArgumentsContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof MethodArgumentsContext;
    typeList(): any;
    varargs(): any;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
declare function ArrayBracketsContext(parser: any, parent: any, invokingState: any): this;
declare class ArrayBracketsContext {
    constructor(parser: any, parent: any, invokingState: any);
    parser: any;
    ruleIndex: number;
    constructor: typeof ArrayBracketsContext;
    enterRule(listener: any): void;
    exitRule(listener: any): void;
    accept(visitor: any): any;
}
export {};
",TypeScript
"import {Routes} from '@angular/router';
import {JournalComponent} from '../journal/journal.component';

export const LUOO_APP_ROUTERS: Routes = [
  {path: 'journal', component: JournalComponent}
]
",TypeScript
"import {Model} from '../../models/base/Model';
import {Subject} from 'rxjs/Subject';
import {BaseService} from '../BaseService';
import {ActivatedRoute, Router} from '@angular/router';
import {UserRights, UserService} from '../../services/UserService';
import {ListTableColumn} from './ListTableColumn';
import {BehaviorSubject} from 'rxjs/BehaviorSubject';
import {SortDirection} from '../SortDirection';
import {ListTableColumnActionType, ListTableColumnType} from './ListEnums';

export class ListProvider<T extends Model> {

  public currentPage = 1;
  public itemsPerPage = 10;
  public totalItems = 0;
  public dataLoaded = false;
  public items: Subject<T[]>;
  public cardTitle = '';
  public cardIcon = '';
  public columns: ListTableColumn<T>[];
  public sortDirection = SortDirection;
  public columnTypes = ListTableColumnType;
  public actionTypes = ListTableColumnActionType;
  protected title = 'Список';
  private sort = '-id';
  public getRowClass: (model: T) => { [key: string]: boolean };

  private static getSortKey(column: string, desc: boolean = false): string {
    let sortKey = column;
    if (desc) {
      sortKey = '-' + sortKey;
    }
    return sortKey;
  }

  constructor(private service: BaseService<T>, private router: Router,
              private route: ActivatedRoute, private _userService: UserService) {
  }

  public init() {
    this.items = new BehaviorSubject<T[]>([]);
    this.route.queryParamMap.subscribe(params => {
      const pageNumber = parseInt(params.get('page'), 10);
      if (pageNumber >= 1) {
        this.currentPage = pageNumber;
      }
      const sort = params.get('sort');
      if (sort != null) {
        this.sort = sort;
        const key = this.sort.replace('-', '');
        const sortDirection = this.sort.indexOf('-') > -1 ? SortDirection.Desc : SortDirection.Asc;
        this.columns.forEach(col => {
          col.setSorted(col.Key === key ? sortDirection : null);
        });
      }
      this.load(this.currentPage);
    });
  }

  public applySort(column: string) {
    let sortKey;
    if (this.sort === column) {
      sortKey = ListProvider.getSortKey(column, true);
    } else {
      sortKey = ListProvider.getSortKey(column);
    }
    this.sort = sortKey;
    this.reload();
  }

  public changePage(page: number) {
    this.currentPage = page;
    this.reload();
  }

  public load(page?: number) {
    page = page ? page : this.currentPage;
    this.service.getList(page, this.itemsPerPage, this.sort).subscribe((res) => {
      this.items.next(res.data);
      this.totalItems = res.totalItems;
      this.currentPage = page;
      this.dataLoaded = true;
    });
  }

  private reload() {
    this.router.navigate([], {queryParams: {page: this.currentPage, sort: this.sort}, relativeTo: this.route});
  }

  public can(right: UserRights): boolean {
    return this._userService.hasRight(right);
  }
}
",TypeScript
"import {Component} from '@angular/core';

@Component({
  selector: ""recomendaciones"",
  templateUrl: ""app/components/htmls/recomendacionesysugerencias/recomendaciones.html"",
  styleUrls: [""app/components/htmls/htmlStyles.css""]
})

export class RecomendacionesComponent {};
",TypeScript
"import { Injectable } from '@angular/core';
import { Observable } from 'rxjs/Observable';
import { Gang } from '../models/gang';
import { Session } from '../models/session';
import { CREW_2_ROUTE } from '../../app/app.routes.model';
import { HttpClient } from '@angular/common/http';

@Injectable()
export class CrewService {

  private crewOne: Observable<Gang>;
  private crewTwo: Observable<Gang>;

  constructor(private http: HttpClient) {
  }

  public getCrewDataForPath(path: string): Observable<Gang> {
    if (path === CREW_2_ROUTE) {
      return this.getCrewTwoData();
    } else {
      return this.getCrewOneData();
    }
  }

  public getCrewOneData(): Observable<Gang> {
    if (!this.crewOne) {
      this.crewOne = this.getCrew('assassins');
    }
    return this.crewOne;
  }

  public getCrewTwoData(): Observable<Gang> {
    if (!this.crewTwo) {
      this.crewTwo = this.getCrew('assassins2');
    }
    return this.crewTwo;
  }

  private getCrew(filename: string): Observable<Gang> {
    return this.http.get('/assets/data/' + filename + '.json').map((gang: Gang) => {
      gang.sessions = this.sortSessions(gang.sessions);
      return gang;
    });
  }

  private sortSessions(sessions: Session[]): Session[] {
    return sessions.map((session: Session) => {
      session.date = Date.parse(<any> session.date);
      return session;
    }).sort((a, b) => a.date - b.date);
  }

}
",TypeScript
"import { Nibble, UInt4 } from '../types'

/**
 * Returns a Nibble (0-15) which equals the given bits.
 *
 * @example
 * byte.write([1,0,1,0]) => 10
 *
 * @param {Array} nibble 4-bit unsigned integer
 * @return {Number}
 */
export default (nibble: Nibble): UInt4 => {
	if (!Array.isArray(nibble) || nibble.length !== 4)
		throw new RangeError('invalid array length')

	let result: UInt4 = 0

	for (let i: number = 0; i < 4; i++) if (nibble[3 - i]) result |= 1 << i

	return <UInt4>result
}
",TypeScript
"<?xml version=""1.0"" ?><!DOCTYPE TS><TS language=""fa_IR"" version=""2.0"">
<defaultcodec>UTF-8</defaultcodec>
<context>
    <name>AboutDialog</name>
    <message>
        <location filename=""../forms/aboutdialog.ui"" line=""+14""/>
        <source>About callcoin</source>
        <translation>در مورد بیتکویین</translation>
    </message>
    <message>
        <location line=""+39""/>
        <source>&lt;b&gt;callcoin&lt;/b&gt; version</source>
        <translation>&lt;b&gt;callcoin&lt;/b&gt; version</translation>
    </message>
    <message>
        <location line=""+57""/>
        <source>
This is experimental software.

Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.

This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location filename=""../aboutdialog.cpp"" line=""+14""/>
        <source>Copyright</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>The callcoin developers</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>AddressBookPage</name>
    <message>
        <location filename=""../forms/addressbookpage.ui"" line=""+14""/>
        <source>Address Book</source>
        <translation>دفترچه آدرس</translation>
    </message>
    <message>
        <location line=""+19""/>
        <source>Double-click to edit address or label</source>
        <translation>برای ویرایش آدرس/برچسب دوبار کلیک نمایید</translation>
    </message>
    <message>
        <location line=""+27""/>
        <source>Create a new address</source>
        <translation>یک آدرس جدید بسازید</translation>
    </message>
    <message>
        <location line=""+14""/>
        <source>Copy the currently selected address to the system clipboard</source>
        <translation>آدرس انتخاب شده را در کلیپ بوردِ سیستم کپی کنید</translation>
    </message>
    <message>
        <location line=""-11""/>
        <source>&amp;New Address</source>
        <translation>و آدرس جدید</translation>
    </message>
    <message>
        <location filename=""../addressbookpage.cpp"" line=""+63""/>
        <source>These are your callcoin addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location filename=""../forms/addressbookpage.ui"" line=""+14""/>
        <source>&amp;Copy Address</source>
        <translation>و کپی آدرس</translation>
    </message>
    <message>
        <location line=""+11""/>
        <source>Show &amp;QR Code</source>
        <translation>نشان و کد QR</translation>
    </message>
    <message>
        <location line=""+11""/>
        <source>Sign a message to prove you own a callcoin address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Sign &amp;Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+25""/>
        <source>Delete the currently selected address from the list</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+27""/>
        <source>Export the data in the current tab to a file</source>
        <translation>صدور داده نوار جاری به یک فایل</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Export</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-44""/>
        <source>Verify a message to ensure it was signed with a specified callcoin address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Verify Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>&amp;Delete</source>
        <translation>و حذف</translation>
    </message>
    <message>
        <location filename=""../addressbookpage.cpp"" line=""-5""/>
        <source>These are your callcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>Copy &amp;Label</source>
        <translation>کپی و برچسب</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>&amp;Edit</source>
        <translation>و ویرایش</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Send &amp;Coins</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+260""/>
        <source>Export Address Book Data</source>
        <translation>انتقال اطلاعات دفترچه آدرس</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Comma separated file (*.csv)</source>
        <translation>سی.اس.وی. (فایل جداگانه دستوری)</translation>
    </message>
    <message>
        <location line=""+13""/>
        <source>Error exporting</source>
        <translation>صدور پیام خطا</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Could not write to file %1.</source>
        <translation>قابل کپی در فایل نیست %1</translation>
    </message>
</context>
<context>
    <name>AddressTableModel</name>
    <message>
        <location filename=""../addresstablemodel.cpp"" line=""+144""/>
        <source>Label</source>
        <translation>برچسب</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Address</source>
        <translation>آدرس</translation>
    </message>
    <message>
        <location line=""+36""/>
        <source>(no label)</source>
        <translation>(برچسب ندارد)</translation>
    </message>
</context>
<context>
    <name>AskPassphraseDialog</name>
    <message>
        <location filename=""../forms/askpassphrasedialog.ui"" line=""+26""/>
        <source>Passphrase Dialog</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+21""/>
        <source>Enter passphrase</source>
        <translation>رمز/پَس فرِیز را وارد کنید</translation>
    </message>
    <message>
        <location line=""+14""/>
        <source>New passphrase</source>
        <translation>رمز/پَس فرِیز جدید را وارد کنید</translation>
    </message>
    <message>
        <location line=""+14""/>
        <source>Repeat new passphrase</source>
        <translation>رمز/پَس فرِیز را دوباره وارد کنید</translation>
    </message>
    <message>
        <location filename=""../askpassphrasedialog.cpp"" line=""+33""/>
        <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>
        <translation>رمز/پَس فرِیز جدید را در wallet وارد کنید. برای انتخاب رمز/پَس فرِیز از 10 کاراکتر تصادفی یا بیشتر و یا هشت کلمه یا بیشتر استفاده کنید. </translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Encrypt wallet</source>
        <translation>wallet را رمزگذاری کنید</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>This operation needs your wallet passphrase to unlock the wallet.</source>
        <translation>برای انجام این عملکرد به رمز/پَس فرِیزِwallet نیاز است تا آن را از حالت قفل درآورد.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Unlock wallet</source>
        <translation>باز کردن قفل wallet </translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>
        <translation>برای کشف رمز wallet، به رمز/پَس فرِیزِwallet نیاز است.</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Decrypt wallet</source>
        <translation>کشف رمز wallet</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Change passphrase</source>
        <translation>تغییر رمز/پَس فرِیز</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Enter the old and new passphrase to the wallet.</source>
        <translation>رمز/پَس فرِیزِ قدیم و جدید را در wallet  وارد کنید</translation>
    </message>
    <message>
        <location line=""+46""/>
        <source>Confirm wallet encryption</source>
        <translation>رمزگذاری wallet را تایید کنید</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR SKEINCOINS&lt;/b&gt;!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>Are you sure you wish to encrypt your wallet?</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+15""/>
        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+100""/>
        <location line=""+24""/>
        <source>Warning: The Caps Lock key is on!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-130""/>
        <location line=""+58""/>
        <source>Wallet encrypted</source>
        <translation>تایید رمزگذاری</translation>
    </message>
    <message>
        <location line=""-56""/>
        <source>callcoin will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your callcoins from being stolen by malware infecting your computer.</source>
        <translation>callcoin برای اتمام فرایند رمزگذاری بسته خواهد شد. به خاطر داشته باشید که رمزگذاری WALLET شما،  کامپیوتر شما را از آلودگی به بدافزارها مصون نمی دارد.</translation>
    </message>
    <message>
        <location line=""+13""/>
        <location line=""+7""/>
        <location line=""+42""/>
        <location line=""+6""/>
        <source>Wallet encryption failed</source>
        <translation>رمزگذاری تایید نشد</translation>
    </message>
    <message>
        <location line=""-54""/>
        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>
        <translation>رمزگذاری به علت خطای داخلی تایید نشد. wallet شما رمزگذاری نشد</translation>
    </message>
    <message>
        <location line=""+7""/>
        <location line=""+48""/>
        <source>The supplied passphrases do not match.</source>
        <translation>رمزهای/پَس فرِیزهایِ وارد شده با هم تطابق ندارند</translation>
    </message>
    <message>
        <location line=""-37""/>
        <source>Wallet unlock failed</source>
        <translation>قفل wallet  باز نشد</translation>
    </message>
    <message>
        <location line=""+1""/>
        <location line=""+11""/>
        <location line=""+19""/>
        <source>The passphrase entered for the wallet decryption was incorrect.</source>
        <translation>رمزهای/پَس فرِیزهایِ وارد شده wallet برای کشف رمز اشتباه است.</translation>
    </message>
    <message>
        <location line=""-20""/>
        <source>Wallet decryption failed</source>
        <translation>کشف رمز wallet انجام نشد</translation>
    </message>
    <message>
        <location line=""+14""/>
        <source>Wallet passphrase was successfully changed.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>BitcoinGUI</name>
    <message>
        <location filename=""../bitcoingui.cpp"" line=""+233""/>
        <source>Sign &amp;message...</source>
        <translation>امضا و پیام</translation>
    </message>
    <message>
        <location line=""+280""/>
        <source>Synchronizing with network...</source>
        <translation>به روز رسانی با شبکه...</translation>
    </message>
    <message>
        <location line=""-349""/>
        <source>&amp;Overview</source>
        <translation>و بازبینی</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show general overview of wallet</source>
        <translation>نمای کلی از wallet را نشان بده</translation>
    </message>
    <message>
        <location line=""+20""/>
        <source>&amp;Transactions</source>
        <translation>و تراکنش</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Browse transaction history</source>
        <translation>تاریخچه تراکنش را باز کن</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Edit the list of stored addresses and labels</source>
        <translation>فهرست آدرسها و برچسبهای ذخیره شده را ویرایش کن</translation>
    </message>
    <message>
        <location line=""-14""/>
        <source>Show the list of addresses for receiving payments</source>
        <translation>فهرست آدرسها را برای دریافت وجه نشان بده</translation>
    </message>
    <message>
        <location line=""+31""/>
        <source>E&amp;xit</source>
        <translation>خروج</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Quit application</source>
        <translation>از &quot;درخواست نامه&quot;/ application خارج شو</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Show information about callcoin</source>
        <translation>اطلاعات در مورد callcoin را نشان بده</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>About &amp;Qt</source>
        <translation>درباره و QT</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show information about Qt</source>
        <translation>نمایش اطلاعات درباره QT</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>&amp;Options...</source>
        <translation>و انتخابها</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>&amp;Encrypt Wallet...</source>
        <translation>و رمزگذاری wallet</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Backup Wallet...</source>
        <translation>و گرفتن نسخه پیشتیبان از wallet</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>&amp;Change Passphrase...</source>
        <translation>تغییر رمز/پَس فرِیز</translation>
    </message>
    <message>
        <location line=""+285""/>
        <source>Importing blocks from disk...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Reindexing blocks on disk...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-347""/>
        <source>Send coins to a callcoin address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+49""/>
        <source>Modify configuration options for callcoin</source>
        <translation>اصلاح انتخابها برای پیکربندی callcoin</translation>
    </message>
    <message>
        <location line=""+9""/>
        <source>Backup wallet to another location</source>
        <translation>گرفتن نسخه پیشتیبان در آدرسی دیگر</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Change the passphrase used for wallet encryption</source>
        <translation>رمز مربوط به رمزگذاریِ wallet را تغییر دهید</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>&amp;Debug window</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Open debugging and diagnostic console</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-4""/>
        <source>&amp;Verify message...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-165""/>
        <location line=""+530""/>
        <source>callcoin</source>
        <translation>callcoin</translation>
    </message>
    <message>
        <location line=""-530""/>
        <source>Wallet</source>
        <translation>کیف پول</translation>
    </message>
    <message>
        <location line=""+101""/>
        <source>&amp;Send</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Receive</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>&amp;Addresses</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+22""/>
        <source>&amp;About callcoin</source>
        <translation>&amp;در مورد بیتکویین</translation>
    </message>
    <message>
        <location line=""+9""/>
        <source>&amp;Show / Hide</source>
        <translation>&amp;نمایش/ عدم نمایش و</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show or hide the main Window</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Encrypt the private keys that belong to your wallet</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Sign messages with your callcoin addresses to prove you own them</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Verify messages to ensure they were signed with specified callcoin addresses</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+28""/>
        <source>&amp;File</source>
        <translation>و فایل</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Settings</source>
        <translation>و تنظیمات</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>&amp;Help</source>
        <translation>و راهنما</translation>
    </message>
    <message>
        <location line=""+9""/>
        <source>Tabs toolbar</source>
        <translation>نوار ابزار</translation>
    </message>
    <message>
        <location line=""+17""/>
        <location line=""+10""/>
        <source>[testnet]</source>
        <translation>[testnet]</translation>
    </message>
    <message>
        <location line=""+47""/>
        <source>callcoin client</source>
        <translation>مشتری callcoin</translation>
    </message>
    <message numerus=""yes"">
        <location line=""+141""/>
        <source>%n active connection(s) to callcoin network</source>
        <translation><numerusform>%n ارتباط فعال به شبکه callcoin
%n ارتباط فعال به شبکه callcoin</numerusform></translation>
    </message>
    <message>
        <location line=""+22""/>
        <source>No block source available...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+12""/>
        <source>Processed %1 of %2 (estimated) blocks of transaction history.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>Processed %1 blocks of transaction history.</source>
        <translation type=""unfinished""/>
    </message>
    <message numerus=""yes"">
        <location line=""+20""/>
        <source>%n hour(s)</source>
        <translation type=""unfinished""><numerusform></numerusform></translation>
    </message>
    <message numerus=""yes"">
        <location line=""+4""/>
        <source>%n day(s)</source>
        <translation type=""unfinished""><numerusform></numerusform></translation>
    </message>
    <message numerus=""yes"">
        <location line=""+4""/>
        <source>%n week(s)</source>
        <translation type=""unfinished""><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>%1 behind</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>Last received block was generated %1 ago.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Transactions after this will not yet be visible.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+22""/>
        <source>Error</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Information</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+70""/>
        <source>This transaction is over the size limit. You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network. Do you want to pay the fee?</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-140""/>
        <source>Up to date</source>
        <translation>روزآمد</translation>
    </message>
    <message>
        <location line=""+31""/>
        <source>Catching up...</source>
        <translation>در حال روزآمد سازی..</translation>
    </message>
    <message>
        <location line=""+113""/>
        <source>Confirm transaction fee</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>Sent transaction</source>
        <translation>ارسال تراکنش</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Incoming transaction</source>
        <translation>تراکنش دریافتی</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Date: %1
Amount: %2
Type: %3
Address: %4
</source>
        <translation>تاریخ: %1⏎ میزان وجه : %2⏎ نوع: %3⏎ آدرس: %4⏎ 
</translation>
    </message>
    <message>
        <location line=""+33""/>
        <location line=""+23""/>
        <source>URI handling</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-23""/>
        <location line=""+23""/>
        <source>URI can not be parsed! This can be caused by an invalid callcoin address or malformed URI parameters.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+17""/>
        <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>
        <translation>wallet رمزگذاری شد و در حال حاضر از حالت قفل در آمده است</translation>
    </message>
    <message>
        <location line=""+8""/>
        <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>
        <translation>wallet رمزگذاری شد و در حال حاضر قفل است</translation>
    </message>
    <message>
        <location filename=""../bitcoin.cpp"" line=""+111""/>
        <source>A fatal error occurred. callcoin can no longer continue safely and will quit.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>ClientModel</name>
    <message>
        <location filename=""../clientmodel.cpp"" line=""+104""/>
        <source>Network Alert</source>
        <translation>هشدار شبکه</translation>
    </message>
</context>
<context>
    <name>EditAddressDialog</name>
    <message>
        <location filename=""../forms/editaddressdialog.ui"" line=""+14""/>
        <source>Edit Address</source>
        <translation>ویرایش آدرسها</translation>
    </message>
    <message>
        <location line=""+11""/>
        <source>&amp;Label</source>
        <translation>و برچسب</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>The label associated with this address book entry</source>
        <translation>برچسب مربوط به این دفترچه آدرس</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Address</source>
        <translation>و آدرس</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>The address associated with this address book entry. This can only be modified for sending addresses.</source>
        <translation>برچسب مربوط به این دفترچه آدرس و تنها ب</translation>
    </message>
    <message>
        <location filename=""../editaddressdialog.cpp"" line=""+21""/>
        <source>New receiving address</source>
        <translation>آدرسِ دریافت کننده جدید</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>New sending address</source>
        <translation>آدرس ارسال کننده جدید</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Edit receiving address</source>
        <translation>ویرایش آدرسِ دریافت کننده</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Edit sending address</source>
        <translation>ویرایش آدرسِ ارسال کننده</translation>
    </message>
    <message>
        <location line=""+76""/>
        <source>The entered address &quot;%1&quot; is already in the address book.</source>
        <translation>آدرس وارد شده %1 قبلا به فهرست آدرسها اضافه شده بوده است.</translation>
    </message>
    <message>
        <location line=""-5""/>
        <source>The entered address &quot;%1&quot; is not a valid callcoin address.</source>
        <translation>آدرس وارد شده &quot;%1&quot; یک آدرس صحیح برای callcoin نسشت</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Could not unlock wallet.</source>
        <translation>عدم توانیی برای قفل گشایی wallet</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>New key generation failed.</source>
        <translation>عدم توانیی در ایجاد کلید جدید</translation>
    </message>
</context>
<context>
    <name>GUIUtil::HelpMessageBox</name>
    <message>
        <location filename=""../guiutil.cpp"" line=""+424""/>
        <location line=""+12""/>
        <source>callcoin-Qt</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-12""/>
        <source>version</source>
        <translation>نسخه</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Usage:</source>
        <translation>میزان استفاده:</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>command-line options</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>UI options</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Start minimized</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show splash screen on startup (default: 1)</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>OptionsDialog</name>
    <message>
        <location filename=""../forms/optionsdialog.ui"" line=""+14""/>
        <source>Options</source>
        <translation>انتخاب/آپشن</translation>
    </message>
    <message>
        <location line=""+16""/>
        <source>&amp;Main</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+15""/>
        <source>Pay transaction &amp;fee</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+31""/>
        <source>Automatically start callcoin after logging in to the system.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Start callcoin on system login</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+35""/>
        <source>Reset all client options to default.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Reset Options</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>&amp;Network</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>Automatically open the callcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Map port using &amp;UPnP</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Connect to the callcoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Connect through SOCKS proxy:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+9""/>
        <source>Proxy &amp;IP:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+19""/>
        <source>IP address of the proxy (e.g. 127.0.0.1)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Port:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+19""/>
        <source>Port of the proxy (e.g. 9050)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>SOCKS &amp;Version:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>SOCKS version of the proxy (e.g. 5)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+36""/>
        <source>&amp;Window</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>Show only a tray icon after minimizing the window.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Minimize to the tray instead of the taskbar</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Quit in the menu.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>M&amp;inimize on close</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+21""/>
        <source>&amp;Display</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>User Interface &amp;language:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>The user interface language can be set here. This setting will take effect after restarting callcoin.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+11""/>
        <source>&amp;Unit to show amounts in:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>Choose the default subdivision unit to show in the interface and when sending coins.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+9""/>
        <source>Whether to show callcoin addresses in the transaction list or not.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Display addresses in transaction list</source>
        <translation>و نمایش آدرسها در فهرست تراکنش</translation>
    </message>
    <message>
        <location line=""+71""/>
        <source>&amp;OK</source>
        <translation>و تایید</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>&amp;Cancel</source>
        <translation>و رد</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>&amp;Apply</source>
        <translation>و به کار گرفتن</translation>
    </message>
    <message>
        <location filename=""../optionsdialog.cpp"" line=""+53""/>
        <source>default</source>
        <translation>پیش فرض</translation>
    </message>
    <message>
        <location line=""+130""/>
        <source>Confirm options reset</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Some settings may require a client restart to take effect.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>Do you want to proceed?</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+42""/>
        <location line=""+9""/>
        <source>Warning</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-9""/>
        <location line=""+9""/>
        <source>This setting will take effect after restarting callcoin.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+29""/>
        <source>The supplied proxy address is invalid.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>OverviewPage</name>
    <message>
        <location filename=""../forms/overviewpage.ui"" line=""+14""/>
        <source>Form</source>
        <translation>فرم</translation>
    </message>
    <message>
        <location line=""+50""/>
        <location line=""+166""/>
        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the callcoin network after a connection is established, but this process has not completed yet.</source>
        <translation>اطلاعات نمایش داده شده ممکن است روزآمد نباشد. wallet شما به صورت خودکار بعد از برقراری اتصال با شبکه callcoin به روز می شود اما این فرایند هنوز تکمیل نشده است.</translation>
    </message>
    <message>
        <location line=""-124""/>
        <source>Balance:</source>
        <translation>مانده حساب:</translation>
    </message>
    <message>
        <location line=""+29""/>
        <source>Unconfirmed:</source>
        <translation>تایید نشده</translation>
    </message>
    <message>
        <location line=""-78""/>
        <source>Wallet</source>
        <translation>کیف پول</translation>
    </message>
    <message>
        <location line=""+107""/>
        <source>Immature:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>Mined balance that has not yet matured</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+46""/>
        <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>
        <translation>تراکنشهای اخیر</translation>
    </message>
    <message>
        <location line=""-101""/>
        <source>Your current balance</source>
        <translation>مانده حساب جاری</translation>
    </message>
    <message>
        <location line=""+29""/>
        <source>Total of transactions that have yet to be confirmed, and do not yet count toward the current balance</source>
        <translation>تعداد تراکنشهایی که نیاز به تایید دارند و هنوز در مانده حساب جاری شما به حساب نیامده اند</translation>
    </message>
    <message>
        <location filename=""../overviewpage.cpp"" line=""+116""/>
        <location line=""+1""/>
        <source>out of sync</source>
        <translation>خارج از روزآمد سازی</translation>
    </message>
</context>
<context>
    <name>PaymentServer</name>
    <message>
        <location filename=""../paymentserver.cpp"" line=""+107""/>
        <source>Cannot start callcoin: click-to-pay handler</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>QRCodeDialog</name>
    <message>
        <location filename=""../forms/qrcodedialog.ui"" line=""+14""/>
        <source>QR Code Dialog</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+59""/>
        <source>Request Payment</source>
        <translation>درخواست وجه</translation>
    </message>
    <message>
        <location line=""+56""/>
        <source>Amount:</source>
        <translation>میزان وجه:</translation>
    </message>
    <message>
        <location line=""-44""/>
        <source>Label:</source>
        <translation>برچسب:</translation>
    </message>
    <message>
        <location line=""+19""/>
        <source>Message:</source>
        <translation>پیام:</translation>
    </message>
    <message>
        <location line=""+71""/>
        <source>&amp;Save As...</source>
        <translation>و ذخیره با عنوانِ...</translation>
    </message>
    <message>
        <location filename=""../qrcodedialog.cpp"" line=""+62""/>
        <source>Error encoding URI into QR Code.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+40""/>
        <source>The entered amount is invalid, please check.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+23""/>
        <source>Resulting URI too long, try to reduce the text for label / message.</source>
        <translation>متن وارد شده طولانی است، متنِ برچسب/پیام را کوتاه کنید</translation>
    </message>
    <message>
        <location line=""+25""/>
        <source>Save QR Code</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>PNG Images (*.png)</source>
        <translation>تصاویر با فرمت PNG
(*.png)</translation>
    </message>
</context>
<context>
    <name>RPCConsole</name>
    <message>
        <location filename=""../forms/rpcconsole.ui"" line=""+46""/>
        <source>Client name</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+10""/>
        <location line=""+23""/>
        <location line=""+26""/>
        <location line=""+23""/>
        <location line=""+23""/>
        <location line=""+36""/>
        <location line=""+53""/>
        <location line=""+23""/>
        <location line=""+23""/>
        <location filename=""../rpcconsole.cpp"" line=""+339""/>
        <source>N/A</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-217""/>
        <source>Client version</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-45""/>
        <source>&amp;Information</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+68""/>
        <source>Using OpenSSL version</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+49""/>
        <source>Startup time</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+29""/>
        <source>Network</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Number of connections</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+23""/>
        <source>On testnet</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+23""/>
        <source>Block chain</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Current number of blocks</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+23""/>
        <source>Estimated total blocks</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+23""/>
        <source>Last block time</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+52""/>
        <source>&amp;Open</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+16""/>
        <source>Command-line options</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Show the callcoin-Qt help message to get a list with possible callcoin command-line options.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>&amp;Show</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+24""/>
        <source>&amp;Console</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-260""/>
        <source>Build date</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-104""/>
        <source>callcoin - Debug window</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+25""/>
        <source>callcoin Core</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+279""/>
        <source>Debug log file</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Open the callcoin debug log file from the current data directory. This can take a few seconds for large log files.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+102""/>
        <source>Clear console</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location filename=""../rpcconsole.cpp"" line=""-30""/>
        <source>Welcome to the callcoin RPC console.</source>
        <translation>به کنسول آر.پی.سی. SKEINCOIN خوش آمدید</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Type &lt;b&gt;help&lt;/b&gt; for an overview of available commands.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>SendCoinsDialog</name>
    <message>
        <location filename=""../forms/sendcoinsdialog.ui"" line=""+14""/>
        <location filename=""../sendcoinsdialog.cpp"" line=""+124""/>
        <location line=""+5""/>
        <location line=""+5""/>
        <location line=""+5""/>
        <location line=""+6""/>
        <location line=""+5""/>
        <location line=""+5""/>
        <source>Send Coins</source>
        <translation>سکه های ارسالی</translation>
    </message>
    <message>
        <location line=""+50""/>
        <source>Send to multiple recipients at once</source>
        <translation>ارسال همزمان به گیرنده های متعدد</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Add &amp;Recipient</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+20""/>
        <source>Remove all transaction fields</source>
        <translation>تمامی فیلدهای تراکنش حذف شوند</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Clear &amp;All</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+22""/>
        <source>Balance:</source>
        <translation>مانده حساب:</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>123.456 BTC</source>
        <translation>123.456 BTC</translation>
    </message>
    <message>
        <location line=""+31""/>
        <source>Confirm the send action</source>
        <translation>تایید عملیات ارسال </translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>S&amp;end</source>
        <translation>و ارسال</translation>
    </message>
    <message>
        <location filename=""../sendcoinsdialog.cpp"" line=""-59""/>
        <source>&lt;b&gt;%1&lt;/b&gt; to %2 (%3)</source>
        <translation>%1 به %2 (%3)</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Confirm send coins</source>
        <translation>تایید ارسال سکه ها</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Are you sure you want to send %1?</source>
        <translation>شما مطمئن هستید که می خواهید %1 را ارسال کنید؟</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source> and </source>
        <translation>و</translation>
    </message>
    <message>
        <location line=""+23""/>
        <source>The recipient address is not valid, please recheck.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>The amount to pay must be larger than 0.</source>
        <translation>میزان پرداخت باید بیشتر از 0 باشد</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>The amount exceeds your balance.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>The total exceeds your balance when the %1 transaction fee is included.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>Duplicate address found, can only send to each address once per send operation.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Error: Transaction creation failed!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>
        <translation>خطا: تراکنش تایید نشد. این خطا ممکن است به این دلیل اتفاق بیافتد که سکه های wallet شما خرج شده باشند مثلا اگر wallet.dat را مپی کرده باشید و سکه های شما در آن کپی استفاده شده باشند اما در اینجا نمایش داده نشده اند.</translation>
    </message>
</context>
<context>
    <name>SendCoinsEntry</name>
    <message>
        <location filename=""../forms/sendcoinsentry.ui"" line=""+14""/>
        <source>Form</source>
        <translation>فرم</translation>
    </message>
    <message>
        <location line=""+15""/>
        <source>A&amp;mount:</source>
        <translation>و میزان وجه</translation>
    </message>
    <message>
        <location line=""+13""/>
        <source>Pay &amp;To:</source>
        <translation>پرداخت و به چه کسی</translation>
    </message>
    <message>
        <location line=""+34""/>
        <source>The address to send the payment to (e.g. X6ENACNZSWAvxM96TiGp3Du9YhVmbhweMa)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+60""/>
        <location filename=""../sendcoinsentry.cpp"" line=""+26""/>
        <source>Enter a label for this address to add it to your address book</source>
        <translation>یک برچسب برای این آدرس بنویسید تا به دفترچه آدرسهای شما اضافه شود</translation>
    </message>
    <message>
        <location line=""-78""/>
        <source>&amp;Label:</source>
        <translation>و برچسب</translation>
    </message>
    <message>
        <location line=""+28""/>
        <source>Choose address from address book</source>
        <translation>آدرس از فهرست آدرس انتخاب کنید</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Alt+A</source>
        <translation>Alt و A</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Paste address from clipboard</source>
        <translation>آدرس را بر کلیپ بورد کپی کنید</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Alt+P</source>
        <translation>Alt و P</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Remove this recipient</source>
        <translation>این گیرنده را حذف کن</translation>
    </message>
    <message>
        <location filename=""../sendcoinsentry.cpp"" line=""+1""/>
        <source>Enter a callcoin address (e.g. X6ENACNZSWAvxM96TiGp3Du9YhVmbhweMa)</source>
        <translation>یک آدرس callcoin وارد کنید (مثال X6ENACNZSWAvxM96TiGp3Du9YhVmbhweMa)</translation>
    </message>
</context>
<context>
    <name>SignVerifyMessageDialog</name>
    <message>
        <location filename=""../forms/signverifymessagedialog.ui"" line=""+14""/>
        <source>Signatures - Sign / Verify a Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+13""/>
        <source>&amp;Sign Message</source>
        <translation>و امضای پیام </translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>You can sign messages with your addresses to prove you own them. Be careful not to sign anything vague, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+18""/>
        <source>The address to sign the message with (e.g. X6ENACNZSWAvxM96TiGp3Du9YhVmbhweMa)</source>
        <translation>یک آدرس callcoin وارد کنید (مثال X6ENACNZSWAvxM96TiGp3Du9YhVmbhweMa)</translation>
    </message>
    <message>
        <location line=""+10""/>
        <location line=""+213""/>
        <source>Choose an address from the address book</source>
        <translation>آدرس از فهرست آدرس انتخاب کنید</translation>
    </message>
    <message>
        <location line=""-203""/>
        <location line=""+213""/>
        <source>Alt+A</source>
        <translation>Alt و A</translation>
    </message>
    <message>
        <location line=""-203""/>
        <source>Paste address from clipboard</source>
        <translation>آدرس را بر کلیپ بورد کپی کنید</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Alt+P</source>
        <translation>Alt و P</translation>
    </message>
    <message>
        <location line=""+12""/>
        <source>Enter the message you want to sign here</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Signature</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+27""/>
        <source>Copy the current signature to the system clipboard</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+21""/>
        <source>Sign the message to prove you own this callcoin address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Sign &amp;Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>Reset all sign message fields</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <location line=""+146""/>
        <source>Clear &amp;All</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-87""/>
        <source>&amp;Verify Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>Enter the signing address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+21""/>
        <source>The address the message was signed with (e.g. X6ENACNZSWAvxM96TiGp3Du9YhVmbhweMa)</source>
        <translation>یک آدرس callcoin وارد کنید (مثال X6ENACNZSWAvxM96TiGp3Du9YhVmbhweMa)</translation>
    </message>
    <message>
        <location line=""+40""/>
        <source>Verify the message to ensure it was signed with the specified callcoin address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Verify &amp;Message</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>Reset all verify message fields</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location filename=""../signverifymessagedialog.cpp"" line=""+27""/>
        <location line=""+3""/>
        <source>Enter a callcoin address (e.g. X6ENACNZSWAvxM96TiGp3Du9YhVmbhweMa)</source>
        <translation>یک آدرس callcoin وارد کنید (مثال X6ENACNZSWAvxM96TiGp3Du9YhVmbhweMa)</translation>
    </message>
    <message>
        <location line=""-2""/>
        <source>Click &quot;Sign Message&quot; to generate signature</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Enter callcoin signature</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+82""/>
        <location line=""+81""/>
        <source>The entered address is invalid.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-81""/>
        <location line=""+8""/>
        <location line=""+73""/>
        <location line=""+8""/>
        <source>Please check the address and try again.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-81""/>
        <location line=""+81""/>
        <source>The entered address does not refer to a key.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-73""/>
        <source>Wallet unlock was cancelled.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>Private key for the entered address is not available.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+12""/>
        <source>Message signing failed.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Message signed.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+59""/>
        <source>The signature could not be decoded.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <location line=""+13""/>
        <source>Please check the signature and try again.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>The signature did not match the message digest.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Message verification failed.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Message verified.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>SplashScreen</name>
    <message>
        <location filename=""../splashscreen.cpp"" line=""+25""/>
        <source>The callcoin developers</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>[testnet]</source>
        <translation>[testnet]</translation>
    </message>
</context>
<context>
    <name>TransactionDesc</name>
    <message>
        <location filename=""../transactiondesc.cpp"" line=""+20""/>
        <source>Open until %1</source>
        <translation>باز کن تا %1</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>%1/offline</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>%1/unconfirmed</source>
        <translation>%1 غیرقابل تایید</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>%1 confirmations</source>
        <translation>%1 تاییدها</translation>
    </message>
    <message>
        <location line=""+18""/>
        <source>Status</source>
        <translation type=""unfinished""/>
    </message>
    <message numerus=""yes"">
        <location line=""+7""/>
        <source>, broadcast through %n node(s)</source>
        <translation type=""unfinished""><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Date</source>
        <translation>تاریخ</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Source</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>Generated</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <location line=""+17""/>
        <source>From</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <location line=""+22""/>
        <location line=""+58""/>
        <source>To</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-77""/>
        <location line=""+2""/>
        <source>own address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-2""/>
        <source>label</source>
        <translation>برچسب</translation>
    </message>
    <message>
        <location line=""+37""/>
        <location line=""+12""/>
        <location line=""+45""/>
        <location line=""+17""/>
        <location line=""+30""/>
        <source>Credit</source>
        <translation type=""unfinished""/>
    </message>
    <message numerus=""yes"">
        <location line=""-102""/>
        <source>matures in %n more block(s)</source>
        <translation type=""unfinished""><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>not accepted</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+44""/>
        <location line=""+8""/>
        <location line=""+15""/>
        <location line=""+30""/>
        <source>Debit</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-39""/>
        <source>Transaction fee</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+16""/>
        <source>Net amount</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>Message</source>
        <translation>پیام</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Comment</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Transaction ID</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Generated coins must mature 120 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Debug information</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>Transaction</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Inputs</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+23""/>
        <source>Amount</source>
        <translation>میزان</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>true</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>false</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-209""/>
        <source>, has not been successfully broadcast yet</source>
        <translation>تا به حال با موفقیت انتشار نیافته است</translation>
    </message>
    <message numerus=""yes"">
        <location line=""-35""/>
        <source>Open for %n more block(s)</source>
        <translation type=""unfinished""><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+70""/>
        <source>unknown</source>
        <translation>ناشناس</translation>
    </message>
</context>
<context>
    <name>TransactionDescDialog</name>
    <message>
        <location filename=""../forms/transactiondescdialog.ui"" line=""+14""/>
        <source>Transaction details</source>
        <translation>جزئیات تراکنش</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>This pane shows a detailed description of the transaction</source>
        <translation>این بخش جزئیات تراکنش را نشان می دهد</translation>
    </message>
</context>
<context>
    <name>TransactionTableModel</name>
    <message>
        <location filename=""../transactiontablemodel.cpp"" line=""+225""/>
        <source>Date</source>
        <translation>تاریخ</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Type</source>
        <translation>نوع</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Address</source>
        <translation>آدرس</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Amount</source>
        <translation>میزان وجه</translation>
    </message>
    <message numerus=""yes"">
        <location line=""+57""/>
        <source>Open for %n more block(s)</source>
        <translation type=""unfinished""><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Open until %1</source>
        <translation>باز کن تا %1</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Offline (%1 confirmations)</source>
        <translation>برون خطی (%1 تاییدها)</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Unconfirmed (%1 of %2 confirmations)</source>
        <translation>تایید نشده (%1 از %2 تاییدها)</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Confirmed (%1 confirmations)</source>
        <translation>تایید شده (%1 تاییدها)</translation>
    </message>
    <message numerus=""yes"">
        <location line=""+8""/>
        <source>Mined balance will be available when it matures in %n more block(s)</source>
        <translation type=""unfinished""><numerusform></numerusform></translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>This block was not received by any other nodes and will probably not be accepted!</source>
        <translation>این block توسط گره های دیگری دریافت نشده است و ممکن است قبول نشود</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Generated but not accepted</source>
        <translation>تولید شده اما قبول نشده است</translation>
    </message>
    <message>
        <location line=""+43""/>
        <source>Received with</source>
        <translation>قبول با </translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Received from</source>
        <translation>دریافت شده از</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Sent to</source>
        <translation>ارسال به</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Payment to yourself</source>
        <translation>وجه برای شما </translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Mined</source>
        <translation>استخراج شده</translation>
    </message>
    <message>
        <location line=""+38""/>
        <source>(n/a)</source>
        <translation>خالی</translation>
    </message>
    <message>
        <location line=""+199""/>
        <source>Transaction status. Hover over this field to show number of confirmations.</source>
        <translation>وضعیت تراکنش. با اشاره به این بخش تعداد تاییدها نمایش داده می شود</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Date and time that the transaction was received.</source>
        <translation>زمان و تاریخی که تراکنش دریافت شده است</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Type of transaction.</source>
        <translation>نوع تراکنش</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Destination address of transaction.</source>
        <translation>آدرس مقصد در تراکنش</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Amount removed from or added to balance.</source>
        <translation>میزان وجه کم شده یا اضافه شده به حساب</translation>
    </message>
</context>
<context>
    <name>TransactionView</name>
    <message>
        <location filename=""../transactionview.cpp"" line=""+52""/>
        <location line=""+16""/>
        <source>All</source>
        <translation>همه</translation>
    </message>
    <message>
        <location line=""-15""/>
        <source>Today</source>
        <translation>امروز</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>This week</source>
        <translation>این هفته</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>This month</source>
        <translation>این ماه</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Last month</source>
        <translation>ماه گذشته</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>This year</source>
        <translation>این سال</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Range...</source>
        <translation>حدود..</translation>
    </message>
    <message>
        <location line=""+11""/>
        <source>Received with</source>
        <translation>دریافت با</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>Sent to</source>
        <translation>ارسال به</translation>
    </message>
    <message>
        <location line=""+2""/>
        <source>To yourself</source>
        <translation>به شما</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Mined</source>
        <translation>استخراج شده</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Other</source>
        <translation>دیگر</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Enter address or label to search</source>
        <translation>آدرس یا برچسب را برای جستجو وارد کنید</translation>
    </message>
    <message>
        <location line=""+7""/>
        <source>Min amount</source>
        <translation>حداقل میزان وجه</translation>
    </message>
    <message>
        <location line=""+34""/>
        <source>Copy address</source>
        <translation>آدرس را کپی کنید</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Copy label</source>
        <translation>برچسب را کپی کنید</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Copy amount</source>
        <translation>میزان وجه کپی شود</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Copy transaction ID</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Edit label</source>
        <translation>برچسب را ویرایش کنید</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Show transaction details</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+139""/>
        <source>Export Transaction Data</source>
        <translation>داده های تراکنش را صادر کنید</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Comma separated file (*.csv)</source>
        <translation>Comma separated file (*.csv) فایل جداگانه دستوری</translation>
    </message>
    <message>
        <location line=""+8""/>
        <source>Confirmed</source>
        <translation>تایید شده</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Date</source>
        <translation>تاریخ</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Type</source>
        <translation>نوع</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Label</source>
        <translation>برچسب</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Address</source>
        <translation>آدرس</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Amount</source>
        <translation>میزان</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>ID</source>
        <translation>شناسه کاربری</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Error exporting</source>
        <translation>خطا در ارسال</translation>
    </message>
    <message>
        <location line=""+0""/>
        <source>Could not write to file %1.</source>
        <translation>قابل کپی به فایل نیست %1.</translation>
    </message>
    <message>
        <location line=""+100""/>
        <source>Range:</source>
        <translation>دامنه:</translation>
    </message>
    <message>
        <location line=""+8""/>
        <source>to</source>
        <translation>به</translation>
    </message>
</context>
<context>
    <name>WalletModel</name>
    <message>
        <location filename=""../walletmodel.cpp"" line=""+193""/>
        <source>Send Coins</source>
        <translation>سکه های ارسالی</translation>
    </message>
</context>
<context>
    <name>WalletView</name>
    <message>
        <location filename=""../walletview.cpp"" line=""+42""/>
        <source>&amp;Export</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Export the data in the current tab to a file</source>
        <translation>صدور داده نوار جاری به یک فایل</translation>
    </message>
    <message>
        <location line=""+193""/>
        <source>Backup Wallet</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>Wallet Data (*.dat)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Backup Failed</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>There was an error trying to save the wallet data to the new location.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>Backup Successful</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>The wallet data was successfully saved to the new location.</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>bitcoin-core</name>
    <message>
        <location filename=""../bitcoinstrings.cpp"" line=""+94""/>
        <source>callcoin version</source>
        <translation>نسخه callcoin</translation>
    </message>
    <message>
        <location line=""+102""/>
        <source>Usage:</source>
        <translation>میزان استفاده:</translation>
    </message>
    <message>
        <location line=""-29""/>
        <source>Send command to -server or callcoind</source>
        <translation>ارسال دستور به سرور یا callcoined</translation>
    </message>
    <message>
        <location line=""-23""/>
        <source>List commands</source>
        <translation>فهرست دستورها</translation>
    </message>
    <message>
        <location line=""-12""/>
        <source>Get help for a command</source>
        <translation>درخواست کمک برای یک دستور</translation>
    </message>
    <message>
        <location line=""+24""/>
        <source>Options:</source>
        <translation>انتخابها:</translation>
    </message>
    <message>
        <location line=""+24""/>
        <source>Specify configuration file (default: callcoin.conf)</source>
        <translation>فایل پیکربندیِ را مشخص کنید (پیش فرض: callcoin.conf)</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Specify pid file (default: callcoind.pid)</source>
        <translation>فایل pid  را مشخص کنید (پیش فرض: callcoind.pid)</translation>
    </message>
    <message>
        <location line=""-1""/>
        <source>Specify data directory</source>
        <translation>دایرکتوری داده را مشخص کن</translation>
    </message>
    <message>
        <location line=""-9""/>
        <source>Set database cache size in megabytes (default: 25)</source>
        <translation>حافظه بانک داده را به مگابایت تنظیم کنید (پیش فرض: 25)</translation>
    </message>
    <message>
        <location line=""-28""/>
        <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>
        <translation>ارتباطات را در &lt;PORT&gt; بشنوید (پیش فرض: 8333 or testnet: 18333)</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Maintain at most &lt;n&gt; connections to peers (default: 125)</source>
        <translation>نگهداری &lt;N&gt; ارتباطات برای قرینه سازی  (پیش فرض:125)</translation>
    </message>
    <message>
        <location line=""-48""/>
        <source>Connect to a node to retrieve peer addresses, and disconnect</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+82""/>
        <source>Specify your own public address</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Threshold for disconnecting misbehaving peers (default: 100)</source>
        <translation>آستانه قطع برای قرینه سازی اشتباه (پیش فرض:100)</translation>
    </message>
    <message>
        <location line=""-134""/>
        <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>
        <translation>تعداد ثانیه ها برای اتصال دوباره قرینه های اشتباه (پیش فرض:86400)</translation>
    </message>
    <message>
        <location line=""-29""/>
        <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+27""/>
        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 8332 or testnet: 18332)</source>
        <translation>ارتباطاتِ JSON-RPC  را در &lt;port&gt;  گوش کنید (پیش فرض:8332)</translation>
    </message>
    <message>
        <location line=""+37""/>
        <source>Accept command line and JSON-RPC commands</source>
        <translation>command line  و JSON-RPC commands را قبول کنید</translation>
    </message>
    <message>
        <location line=""+76""/>
        <source>Run in the background as a daemon and accept commands</source>
        <translation>به عنوان daemon بک گراند را اجرا کنید و دستورات را قبول نمایید</translation>
    </message>
    <message>
        <location line=""+37""/>
        <source>Use the test network</source>
        <translation>از تستِ شبکه استفاده نمایید</translation>
    </message>
    <message>
        <location line=""-112""/>
        <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-80""/>
        <source>%s, you must set a rpcpassword in the configuration file:
%s
It is recommended you use the following random password:
rpcuser=callcoinrpc
rpcpassword=%s
(you do not need to remember this password)
The username and password MUST NOT be the same.
If the file does not exist, create it with owner-readable-only file permissions.
It is also recommended to set alertnotify so you are notified of problems;
for example: alertnotify=echo %%s | mail -s &quot;callcoin Alert&quot; admin@foo.com
</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+17""/>
        <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Cannot obtain a lock on data directory %s. callcoin is probably already running.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Execute command when a relevant alert is received (%s in cmd is replaced by message)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+11""/>
        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+6""/>
        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning: Displayed transactions may not be correct! You may need to upgrade, or other nodes may need to upgrade.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning: Please check that your computer&apos;s date and time are correct! If your clock is wrong callcoin will not work properly.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+14""/>
        <source>Attempt to recover private keys from a corrupt wallet.dat</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Block creation options:</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+5""/>
        <source>Connect only to the specified node(s)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Corrupted block database detected</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Discover own IP address (default: 1 when listening and no -externalip)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Do you want to rebuild the block database now?</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Error initializing block database</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error initializing wallet database environment %s!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error loading block database</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>Error opening block database</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Error: Disk space is low!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error: Wallet locked, unable to create transaction!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error: system error: </source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to read block info</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to read block</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to sync block index</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write block index</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write block info</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write block</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write file info</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write to coin database</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write transaction index</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Failed to write undo data</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Find peers using DNS lookup (default: 1 unless -connect)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Generate coins (default: 0)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>How many blocks to check at startup (default: 288, 0 = all)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>How thorough the block verification is (0-4, default: 3)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+19""/>
        <source>Not enough file descriptors available.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>Rebuild block chain index from current blk000??.dat files</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+16""/>
        <source>Set the number of threads to service RPC calls (default: 4)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+26""/>
        <source>Verifying blocks...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Verifying wallet...</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-69""/>
        <source>Imports blocks from external blk000??.dat file</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-76""/>
        <source>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+77""/>
        <source>Information</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Invalid -tor address: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Invalid amount for -minrelaytxfee=&lt;amount&gt;: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Invalid amount for -mintxfee=&lt;amount&gt;: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+8""/>
        <source>Maintain a full transaction index (default: 0)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: 5000)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: 1000)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Only accept block chain matching built-in checkpoints (default: 1)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Only connect to nodes in network &lt;net&gt; (IPv4, IPv6 or Tor)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Output extra debugging information. Implies all other -debug* options</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Output extra network debugging information</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Prepend debug output with timestamp</source>
        <translation>برونداد اشکال زدایی با timestamp</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>SSL options: (see the callcoin Wiki for SSL setup instructions)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Select the version of socks proxy to use (4-5, default: 5)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+3""/>
        <source>Send trace/debug info to console instead of debug.log file</source>
        <translation>ارسال اطلاعات پیگیری/خطایابی به کنسول به جای ارسال به فایل debug.log</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Send trace/debug info to debugger</source>
        <translation>ارسال اطاعات خطایابی/پیگیری به سیستم خطایاب</translation>
    </message>
    <message>
        <location line=""+5""/>
        <source>Set maximum block size in bytes (default: 250000)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Set minimum block size in bytes (default: 0)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Shrink debug.log file on client startup (default: 1 when no -debug)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Signing transaction failed</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Specify connection timeout in milliseconds (default: 5000)</source>
        <translation>تعیین مدت زمان وقفه (time out) به هزارم ثانیه</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>System error: </source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+4""/>
        <source>Transaction amount too small</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Transaction amounts must be positive</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Transaction too large</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+7""/>
        <source>Use UPnP to map the listening port (default: 0)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Use UPnP to map the listening port (default: 1 when listening)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+2""/>
        <source>Username for JSON-RPC connections</source>
        <translation>شناسه کاربری برای ارتباطاتِ JSON-RPC</translation>
    </message>
    <message>
        <location line=""+4""/>
        <source>Warning</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Warning: This version is obsolete, upgrade required!</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>You need to rebuild the databases using -reindex to change -txindex</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>wallet.dat corrupt, salvage failed</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-50""/>
        <source>Password for JSON-RPC connections</source>
        <translation>رمز برای ارتباطاتِ JSON-RPC</translation>
    </message>
    <message>
        <location line=""-67""/>
        <source>Allow JSON-RPC connections from specified IP address</source>
        <translation>ارتباطاتِ JSON-RPC  را از آدرس آی.پی. مشخصی برقرار کنید.</translation>
    </message>
    <message>
        <location line=""+76""/>
        <source>Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)</source>
        <translation>دستورات را به گره اجرا شده در&lt;ip&gt; ارسال کنید (پیش فرض:127.0.0.1)</translation>
    </message>
    <message>
        <location line=""-120""/>
        <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>
        <translation>دستور را وقتی بهترین بلاک تغییر کرد اجرا کن (%s در دستور توسط block hash جایگزین شده است)</translation>
    </message>
    <message>
        <location line=""+147""/>
        <source>Upgrade wallet to latest format</source>
        <translation>wallet را به جدیدترین نسخه روزآمد کنید</translation>
    </message>
    <message>
        <location line=""-21""/>
        <source>Set key pool size to &lt;n&gt; (default: 100)</source>
        <translation>حجم key pool  را به اندازه &lt;n&gt; تنظیم کنید (پیش فرض:100)</translation>
    </message>
    <message>
        <location line=""-12""/>
        <source>Rescan the block chain for missing wallet transactions</source>
        <translation>زنجیره بلاک را برای تراکنش جا افتاده در WALLET دوباره اسکن کنید</translation>
    </message>
    <message>
        <location line=""+35""/>
        <source>Use OpenSSL (https) for JSON-RPC connections</source>
        <translation>برای ارتباطاتِ JSON-RPC  از OpenSSL (https) استفاده کنید</translation>
    </message>
    <message>
        <location line=""-26""/>
        <source>Server certificate file (default: server.cert)</source>
        <translation>فایل certificate  سرور (پیش فرض server.cert)</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Server private key (default: server.pem)</source>
        <translation>رمز اختصاصی سرور  (پیش فرض: server.pem)</translation>
    </message>
    <message>
        <location line=""-151""/>
        <source>Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)</source>
        <translation>ciphers  قابل قبول (پیش فرض: default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)</translation>
    </message>
    <message>
        <location line=""+165""/>
        <source>This help message</source>
        <translation>این پیام راهنما</translation>
    </message>
    <message>
        <location line=""+6""/>
        <source>Unable to bind to %s on this computer (bind returned error %d, %s)</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-91""/>
        <source>Connect through socks proxy</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-10""/>
        <source>Allow DNS lookups for -addnode, -seednode and -connect</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+55""/>
        <source>Loading addresses...</source>
        <translation>لود شدن آدرسها..</translation>
    </message>
    <message>
        <location line=""-35""/>
        <source>Error loading wallet.dat: Wallet corrupted</source>
        <translation>خطا در هنگام لود شدن wallet.dat: Wallet corrupted</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Error loading wallet.dat: Wallet requires newer version of callcoin</source>
        <translation>خطا در هنگام لود شدن wallet.dat.  به نسخه جدید callcoin برای wallet نیاز است.</translation>
    </message>
    <message>
        <location line=""+93""/>
        <source>Wallet needed to be rewritten: restart callcoin to complete</source>
        <translation>wallet نیاز به بازنویسی دارد. callcoin را برای تکمیل عملیات دوباره اجرا کنید.</translation>
    </message>
    <message>
        <location line=""-95""/>
        <source>Error loading wallet.dat</source>
        <translation>خطا در هنگام لود شدن wallet.dat</translation>
    </message>
    <message>
        <location line=""+28""/>
        <source>Invalid -proxy address: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+56""/>
        <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-1""/>
        <source>Unknown -socks proxy version requested: %i</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""-96""/>
        <source>Cannot resolve -bind address: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+1""/>
        <source>Cannot resolve -externalip address: &apos;%s&apos;</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+44""/>
        <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>
        <translation>میزان اشتباه است for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</translation>
    </message>
    <message>
        <location line=""+1""/>
        <source>Invalid amount</source>
        <translation>میزان اشتباه است</translation>
    </message>
    <message>
        <location line=""-6""/>
        <source>Insufficient funds</source>
        <translation>وجوه ناکافی</translation>
    </message>
    <message>
        <location line=""+10""/>
        <source>Loading block index...</source>
        <translation>لود شدن نمایه بلاکها..</translation>
    </message>
    <message>
        <location line=""-57""/>
        <source>Add a node to connect to and attempt to keep the connection open</source>
        <translation>یک گره برای اتصال اضافه کنید و تلاش کنید تا اتصال را باز نگاه دارید</translation>
    </message>
    <message>
        <location line=""-25""/>
        <source>Unable to bind to %s on this computer. callcoin is probably already running.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+64""/>
        <source>Fee per KB to add to transactions you send</source>
        <translation>هزینه بر اساس کیلو بایت برای اضافه شدن به تراکنشی که ارسال کرده اید</translation>
    </message>
    <message>
        <location line=""+19""/>
        <source>Loading wallet...</source>
        <translation>wallet در حال لود شدن است...</translation>
    </message>
    <message>
        <location line=""-52""/>
        <source>Cannot downgrade wallet</source>
        <translation>قابلیت برگشت به نسخه قبلی برای wallet امکان پذیر نیست</translation>
    </message>
    <message>
        <location line=""+3""/>
        <source>Cannot write default address</source>
        <translation>آدرس پیش فرض قابل ذخیره نیست</translation>
    </message>
    <message>
        <location line=""+64""/>
        <source>Rescanning...</source>
        <translation>اسکنِ دوباره...</translation>
    </message>
    <message>
        <location line=""-57""/>
        <source>Done loading</source>
        <translation>اتمام لود شدن</translation>
    </message>
    <message>
        <location line=""+82""/>
        <source>To use the %s option</source>
        <translation>برای استفاده از %s  از اختیارات</translation>
    </message>
    <message>
        <location line=""-74""/>
        <source>Error</source>
        <translation>خطا</translation>
    </message>
    <message>
        <location line=""-31""/>
        <source>You must set rpcpassword=&lt;password&gt; in the configuration file:
%s
If the file does not exist, create it with owner-readable-only file permissions.</source>
        <translation>شما باید یک رمز rpcpassword=&lt;password&gt; را در فایل تنظیمات ایجاد کنید⏎ %s ⏎ اگر فایل ایجاد نشده است، آن را با یک فایل &quot;فقط متنی&quot; ایجاد کنید.
</translation>
    </message>
</context>
</TS>",TypeScript
"
const WSP = require('../dist/ws')
import axios from 'axios'
import * as WS from 'ws'

const turnOn = async (port: number = 8095) => {
  await axios.get('http://127.0.0.1:8085/on/' + port)
  return true
}

const shutDown = async (port: number = 8095) => {
  await axios.get('http://127.0.0.1:8085/off/' + port)
  return true
}

const createNew = async (config = {}, port = 8095): Promise<any> => {
  await turnOn(port)
  const ws = new WSP(Object.assign({
    url: '127.0.0.1:' + port,
    // log: (...a) => console.log(...a),
    adapter: (host, protocols) => new (WS as any)(host, protocols)
  }, config))

  return ws
}

export {
  createNew,
  turnOn,
  shutDown
}",TypeScript
"import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { SharedModule, ExamplesRouterViewerComponent } from '../../../shared';
import { AppModule } from './app.module';
import { AppComponent } from './app.component';

@NgModule({
  imports: [
    SharedModule,
    AppModule,
    RouterModule.forChild([
      {
        path: '',
        component: ExamplesRouterViewerComponent,
        data: {
          examples: [
            {
              title: 'Material Prefix and Suffix',
              description: `
              This demonstrates adding a material suffix and prefix for material form fields.
            `,
              component: AppComponent,
              files: [
                {
                  file: 'app.component.html',
                  content: require('!!highlight-loader?raw=true&lang=html!./app.component.html'),
                  filecontent: require('!!raw-loader!./app.component.html'),
                },
                {
                  file: 'app.component.ts',
                  content: require('!!highlight-loader?raw=true&lang=typescript!./app.component.ts'),
                  filecontent: require('!!raw-loader!./app.component.ts'),
                },
                {
                  file: 'addons.wrapper.ts',
                  content: require('!!highlight-loader?raw=true&lang=typescript!./addons.wrapper.ts'),
                  filecontent: require('!!raw-loader!./addons.wrapper.ts'),
                },
                {
                  file: 'addons.extension.ts',
                  content: require('!!highlight-loader?raw=true&lang=typescript!./addons.extension.ts'),
                  filecontent: require('!!raw-loader!./addons.extension.ts'),
                },
                {
                  file: 'app.module.ts',
                  content: require('!!highlight-loader?raw=true&lang=typescript!./app.module.ts'),
                  filecontent: require('!!raw-loader!./app.module.ts'),
                },
              ],
            },
          ],
        },
      },
    ]),
  ],
})
export class ConfigModule {}
",TypeScript
"import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';

import { ExtendComponent } from './src/components/extend.component';
import { SubExtendComponent } from './src/components/sub-extend.component';

const extendRoutes: Routes = [
  {
    path: '',
    component: ExtendComponent,
  },
  {
    path: 'main',
    component: ExtendComponent,
  },
  {
    path: 'sub',
    component: SubExtendComponent
  },
];
@NgModule({
  imports: [
    RouterModule.forChild(extendRoutes)
  ],
  exports: [
    RouterModule
  ]
})
export class ExtendRoutingModule {}",TypeScript
"/* ******* TAGS ******* */

body {
    margin: 0;
    padding: 32px;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 13px;
    color: #333333;
}

/* ******* COMPONENTS ******* */

/* Gridlist */

.gridlist {
    margin: 0;
}

.gridlist .control .icon {
    vertical-align: top;
}",CSS
"
.sidenav {
    height: 100%;
    width: 0;
    position: fixed;
    z-index: 1;
    top: 0;
    left: 0;
    background-color: #111;
    overflow-x: hidden;
    transition: 0.5s;
    padding-top: 60px;
}

.sidenav a {
    padding: 8px 8px 8px 32px;
    text-decoration: none;
    font-size: 25px;
    color: #818181;
    display: block;
    transition: 0.3s;
}

.sidenav a:hover, .offcanvas a:focus{
    color: #f1f1f1;
}

.sidenav .closebtn {
    position: absolute;
    top: 0;
    right: 25px;
    font-size: 36px;
    margin-left: 50px;
}

@media screen and (max-height: 450px) {
  .sidenav {padding-top: 15px;}
  .sidenav a {font-size: 18px;}
}",CSS
"@charset ""utf-8"";
body {
    color: #7d7d7d;
    /*background: #f5f4f2;*/
    font-size: .875rem;
    line-height: 24px;
    background: #eeede8;
}
h1, h2, h3, h4, h5, h6, ul, li, ol, p {
    margin: 0;
    padding: 0;
}
a {
    color: #7d7d7d;
    text-decoration: none;
    cursor: pointer;
}
a:hover {
    color: #54abd4;
}
h1, h2, h3, h4, h5, h6 {
    color: #666;
    /*font-weight: bold;*/
}
h4 {
    margin: 0 0 10px 0;
}
li {
    display: list-item;
    text-align: -webkit-match-parent;
}
ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
}
p {
    margin: 12px 0;
}
input[type=""text""],
input[type=""password""],
input[type=""email""],
input[type=""date""],
textarea {
    height: 40px;
    /*line-height: 40px;*/
    padding: 6px 10px;
    background: #f5f5f5;
    border: 1px solid #f5f5f5;
    border-radius: 2px;
    box-shadow: none;
    color: #777;
}
input:focus,
input:active,
input:hover,
input[type=""text""]:focus,
input[type=""password""]:focus,
input[type=""email""]:focus,
input[type=""date""]:focus,
textarea:focus,
textarea:active,
textarea:hover {
    background: #fff;
    border: 1px solid #54abd4;
    box-shadow: none;
    transition: all .25s ease-in-out;
}


/*蓝色矩形*/
.tag-info {
    display: inline-block;
    margin: 0 4px 4px 0;
    padding: 0 8px;
    color: #fff;
    background: #88C5E1;
    border-radius: 4px;
}
.tag-info:hover {
    color: #fff;
    background: #54abd4;
    text-decoration: none;
}


/*字体设置工具类*/
.tag-sm {
    padding: 0 6px;
    font-size: .75rem;
}
.f-12 {
    font-size: .75rem;
}
.f-14 {
    font-size: .875rem;
}

.f-16 {
    font-size: 1rem;
}
.f-18 {
    font-size: 1.125rem;
}
.f-weight{
    font-weight: 600;
}
.f-hot{
    color:#333;
}
.f-main {
    color: #88C5E1;
}
.f-sub {
    color: #f9ca5a;
}
.f-light {
    color: #b5b5b5;
}
.f-orange{
    color: #fbd16f;
}
.f-white {
    color: #fff;
}
.f-user{
    color: #54abd4;
}
.f-ln18{
    line-height: 1.8em;
}

/*content*/
.content {
    margin: 80px 0 0 0;
    min-height: 720px;
}
/*section*/
.section {
    margin: 0 0 20px 0;
    padding: 40px 25px 30px 25px;
    background-color: #FFFFFF;
    -moz-border-radius: 1px 1px 1px 1px;
    -webkit-border-radius: 1px 1px 1px 1px;
    border-radius: 1px 1px 1px 1px;
    box-shadow: 0 14px 10px -10px rgba(0,0,0,0.1);
}
.section h4 {
    margin: 0 0 24px 0;
    padding: 8px 16px;
    border-left: 3px solid #88C5E1;
}
/*item*/
.item {
    padding: 12px 0 20px 0;
}


.score img{
    display: inline;
    width: 12px;
}



/*汉堡菜单*/
.nav-hamburger {
    height: 40px;
    padding: 0 10px;
    color: #fff;
    border: 1px solid #fff;
    border-radius: 2px;
    font-size: 1.125rem;
    line-height: 40px;
}
.nav-hamburger a {
    display: block;
    color: #fff;
}

.navbar{
    padding: 12px 0;
    background-color: #88c5e1;
    border: none;
    border-bottom: 5px solid #54abd4;
}
.navbar-nav > li > a {
    font-size: 1rem;
    color: #fff;
    margin: 0 0 0 8px;
    background: transparent;
    padding: 10px;
}
.navbar-nav > .active > a{
    background: none;
    color: #fff;
    border-bottom: 2px solid #fff;
}
.navbar-nav > li > a:hover{
    color: #fff;
    border-bottom: 2px solid #fff;
}
.navbar-brand-mc{
    padding: 6px 0;
    font-weight: 100;
}
.navbar-brand-mc img{
    height: 40px;
    display: inline-block;
    margin-right: 3px;
}

.navbar-default .navbar-nav>.active>a,
.navbar-default .navbar-nav>.active>a:focus,
.navbar-default .navbar-nav>.active>a:hover{
    background: transparent;
    color: #fff;
}

.nav>li>a:focus, .nav>li>a:hover{
    background: transparent;
}

.navbar-form-mc .input-group {
    width: 100%;
}

#input-search {
    border-radius: 2px;
}
.input-group-nav .input-group-btn:last-child > .btn,
.input-group-nav .input-group-btn:last-child > .btn-group {
    z-index: 2;
    margin-left: -42px;
}
.input-group-nav .input-group-btn .btn {
    background: #f5f5f5;
    border: 1px solid #f5f5f5;
    border-radius: 2px;
    color: #54abd4;
}
.navbar-toggle{
    margin: 18px 10px 8px 10px;
}
.home .content{
    margin: 60px 0 0 0;
}

.wrapper{
    padding: 35px 0;
    margin: 40px auto;
    background: url(../images/homeImg.png);
    background-size: cover;
}
.wrapper .form-control{
    margin: 15px 0;
}
.wrapper .wrapper-intro{
    text-align: center;
}

.wrapper .wrapper-intro img:first-child{
    margin: -10px 0 20px 0;
}

.wrapper .wrapper-title{
    margin: 7px 0;
    font-size: 20px;
}

.wrapper .wrapper-slogan{
    font-size: 16px;
}

.wrapper .log-or-sign{
    padding-left: 20px;
}

.wrapper .log-or-sign a{
    color: #fff;
}

.wrapper .checkbox{
    color: #333;
}
.section h4 small {
    margin-left: 8px;
}
.hot-course .item{
    margin: 0 0 20px 0;
    padding: 0 10px;
    border: none;
}

.item-card{
    background-color:#f5f5f5;
    text-align: center;
    padding: 52px 16px;
    box-shadow: 0 1px 2px #ddd;
}
.card-icon {
    display: inline-block;
    width: 64px;
    padding: 12px 0 4px 0;
}

.card-name {
    display: block;
    padding: 2px 0 16px 0;
    text-align: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}
.score img{
    width: 12px;
}
.nav-tabs {
    border: none;
    border-bottom: 2px solid transparent;
}

.nav-tabs>li.active>a,.log-or-sign .nav-tabs>li.active>a:focus,
.log-or-sign .nav-tabs>li.active>a:hover{
    border: none;
    border-bottom: 2px solid transparent;

}

.log-or-sign .nav-tabs>li>a,
.log-or-sign .nav-tabs>li>a:focus,
.log-or-sign .nav-tabs>li>a:hover{
    border-bottom: 2px solid #fff;
}

.log-or-sign .nav-tabs>li.active>a:hover{
    border-bottom: 2px solid #fff;
}

.log-or-sign .nav-tabs>li>a{
    border: none;
    border-bottom: 2px solid transparent;
}

.log-or-sign .nav-tabs{
    /*border-bottom: 2px solid #eee;*/
}

.log-or-sign .nav-tabs li{
    padding: 0 0 10px 0;
}

.log-or-sign .nav-tabs li a{
    padding: 10px 0 3px 0;
    margin-right: 15px;
    font-size: 16px;
    text-align: center;
}

.log-or-sign .nav-tabs li.active a{
    color: #fff;
    background-color: transparent;
    border-bottom: 2px solid #fff;
}
.tab-info {
    display: none;
    padding: 12px 12px;
    color: #fff;
    background: #88c5e1;
    border-radius: 2px;
}
.tag-section {
    padding: 0 0 18px 0;
}

.tag-section h5 {
    padding: 8px 0 12px 0;
}
.thumbnail {
    padding: 0;
    background-color: #f5f5f5;
    border: none;
    box-shadow: 1px 1px 2px #ddd;
}


.carousel-inner .thumbnail .caption{
    margin: 8px 0 20px 0;
    color: #999;
    font-size: 1rem;
    text-align: center;
}
.carousel-indicators{
    bottom: -10px;
}

.carousel-indicators li{
    width: 13px;
    height: 13px;
}

.carousel-indicators .active{
    width: 15px;
    height: 15px;
}
.caption p{
    margin-bottom: 20px;
}
.carousel-indicators li{
    border: 1px solid #f8c038;
}

.carousel-indicators .active{
    background-color: #f8c038;
}

@media screen and (max-width: 768px){
    .wrapper .log-or-sign{
        border-left: none;
        margin-left: 0px;
        padding-left: 15px;
        padding-top: 20px;
    }
    .wrapper-intro img{
        display:none;
    }
}
@media (min-width: 992px){
    .wrapper {
        padding: 96px 0;
    }
}

/*footer部分*/
footer {
    padding: 28px 0 18px 0;
    background: #eeece1;
}
.footer-icon {
    width: 10%;
}
.footer-seg {
    width: 88%;
    padding: 0 0 12px 0;
}
.footer-seg h5 {
    padding: 3px 0 7px 0;
    font-size: .875rem;
}
.footer-seg p {
    margin: 0;
    padding: 0;
    font-size: .75rem;
    line-height: 1.125rem;
}
.footer-info {
    font-size: .75rem;
    text-align: center;
    line-height: 1.125rem;
}
.footer-info p {
    margin: 0;
    padding: 0;
}",CSS
".sample2 .sea {
	height: 300px;
	width: 480px;
	position: relative;
	background-image: url(media/fishing.png), url(media/mermaid.png), url(media/sea.png);
	background-position: top right 10px, bottom left, top left;
	background-repeat: no-repeat, repeat-x, repeat-x;
}

.sample2 .fish {
	background: url(media/fish.png) no-repeat;
	height: 70px;
	width: 100px;
	left: 30px;
	top: 90px;
	position: absolute;
}",CSS
"/**
 * Keyframes.
 */
@-webkit-keyframes rotation {
  0% {
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes rotation {
  0% {
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@-webkit-keyframes rotation-reverse {
  0% {
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -moz-transform: rotate(-360deg);
    -ms-transform: rotate(-360deg);
    -webkit-transform: rotate(-360deg);
    transform: rotate(-360deg);
  }
}
@keyframes rotation-reverse {
  0% {
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -moz-transform: rotate(-360deg);
    -ms-transform: rotate(-360deg);
    -webkit-transform: rotate(-360deg);
    transform: rotate(-360deg);
  }
}
body {
  background-color: #000;
}

#sun {
  background-color: #aa0;
  height: 50px;
  left: calc(50% - 25px);
  position: absolute;
  top: calc(50% - 25px);
  width: 50px;
  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  border-radius: 50%;
  -moz-box-shadow: 0 0 10px 2px #aa5500;
  -webkit-box-shadow: 0 0 10px 2px #aa5500;
  box-shadow: 0 0 10px 2px #aa5500;
}

#mercury-orbit {
  -webkit-animation: rotation 8s linear infinite;
  animation: rotation 8s linear infinite;
  height: 10%;
  left: 45%;
  position: absolute;
  top: 45%;
  width: 10%;
  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  border-radius: 50%;
}

#mercury {
  background: #953;
  height: 10px;
  width: 10px;
  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  border-radius: 50%;
  -moz-box-shadow: inset 0 0 5px 1px #222222;
  -webkit-box-shadow: inset 0 0 5px 1px #222222;
  box-shadow: inset 0 0 5px 1px #222222;
}

#venus-orbit {
  -webkit-animation: rotation-reverse 16s linear infinite;
  animation: rotation-reverse 16s linear infinite;
  height: 14%;
  left: 43%;
  position: absolute;
  top: 43%;
  width: 14%;
}

#venus {
  background: #db5;
  height: 15px;
  width: 15px;
  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  border-radius: 50%;
  -moz-box-shadow: 0 0 3px 0 #ffff88;
  -webkit-box-shadow: 0 0 3px 0 #ffff88;
  box-shadow: 0 0 3px 0 #ffff88;
}

#earth-orbit {
  -webkit-animation: rotation 24s linear infinite;
  animation: rotation 24s linear infinite;
  height: 20%;
  left: 40%;
  position: absolute;
  top: 40%;
  width: 20%;
}

#earth {
  background-color: #0bf;
  height: 20px;
  width: 20px;
  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  border-radius: 50%;
  -moz-box-shadow: 0 0 8px 1px white;
  -webkit-box-shadow: 0 0 8px 1px white;
  box-shadow: 0 0 8px 1px white;
}

#mars-orbit {
  -webkit-animation: rotation 44s linear infinite;
  animation: rotation 44s linear infinite;
  height: 30%;
  left: 35%;
  position: absolute;
  top: 35%;
  width: 30%;
}

#mars {
  background-color: #833;
  height: 18px;
  width: 18px;
  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  border-radius: 50%;
  -moz-box-shadow: inset 0 0 5px #220000;
  -webkit-box-shadow: inset 0 0 5px #220000;
  box-shadow: inset 0 0 5px #220000;
}

#jupiter-orbit {
  -webkit-animation: rotation 68s linear infinite;
  animation: rotation 68s linear infinite;
  height: 40%;
  left: 30%;
  position: absolute;
  top: 30%;
  width: 40%;
}

#jupiter {
  background-color: #ffa500;
  height: 40px;
  width: 40px;
  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  border-radius: 50%;
  -moz-box-shadow: inset 0 0 10px 1px black;
  -webkit-box-shadow: inset 0 0 10px 1px black;
  box-shadow: inset 0 0 10px 1px black;
}

#jupiter-spot {
  background-color: rgba(160, 0, 0, 0.5);
  height: 8px;
  left: 20px;
  position: absolute;
  top: 19px;
  width: 8px;
  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  border-radius: 50%;
  -moz-box-shadow: 0 0 5px 0 #990000;
  -webkit-box-shadow: 0 0 5px 0 #990000;
  box-shadow: 0 0 5px 0 #990000;
}

#saturn-orbit {
  -webkit-animation: rotation 80s linear infinite;
  animation: rotation 80s linear infinite;
  height: 48%;
  left: 26%;
  position: absolute;
  top: 26%;
  width: 48%;
}

#saturn {
  background-color: #ab5;
  height: 36px;
  width: 36px;
  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  border-radius: 50%;
  -moz-box-shadow: inset 0 0 5px #445511;
  -webkit-box-shadow: inset 0 0 5px #445511;
  box-shadow: inset 0 0 5px #445511;
}

#uranus-orbit {
  -webkit-animation: rotation 100s linear infinite;
  animation: rotation 100s linear infinite;
  height: 60%;
  left: 20%;
  position: absolute;
  top: 20%;
  width: 60%;
}

#uranus {
  background-color: #3da;
  height: 30px;
  width: 30px;
  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  border-radius: 50%;
  -moz-box-shadow: inset 0 0 5px #445511;
  -webkit-box-shadow: inset 0 0 5px #445511;
  box-shadow: inset 0 0 5px #445511;
}

#neptune-orbit {
  -webkit-animation: rotation 120s linear infinite;
  animation: rotation 120s linear infinite;
  height: 70%;
  left: 15%;
  position: absolute;
  top: 15%;
  width: 70%;
}

#neptune {
  background-color: #05a;
  height: 32px;
  width: 32px;
  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  border-radius: 50%;
  -moz-box-shadow: inset 0 0 10px 1px black;
  -webkit-box-shadow: inset 0 0 10px 1px black;
  box-shadow: inset 0 0 10px 1px black;
}

#pluto-orbit {
  -webkit-animation: rotation 120s linear infinite;
  animation: rotation 120s linear infinite;
  height: 70%;
  left: 15%;
  position: absolute;
  top: 15%;
  width: 70%;
}

#pluto {
  background-color: #7a7474;
  height: 10px;
  width: 10px;
  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  border-radius: 50%;
  -moz-box-shadow: inset 0 0 10px 1px black;
  -webkit-box-shadow: inset 0 0 10px 1px black;
  box-shadow: inset 0 0 10px 1px black;
}
",CSS
"/*! HTML5 Boilerplate v5.2.0 | MIT License | https://html5boilerplate.com/ */

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */
html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
    vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: vertical;
}

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

.browserupgrade {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* ==========================================================================
                                 GENERAL!!!
   ========================================================================== */



body {
    font-family: 'Oswald', sans-serif;
        background-image: url(""../img/fond.jpg"") !important;
    background-position: center;
    width: 100%;
    height: 500px;
    background-size: cover;
}
.fondecran{
    height: 100%;
}

/* ==========================================================================
                                 NAVBAR!!!
   ========================================================================== */
#mainmenu {
    padding-bottom: 2%;
}
#mainmenu li a {
    padding-top: 6px;
    padding-bottom: 0px;
margin-top: 7px;
height: 34px;
}

.container {
    width: 83%;
}

#likefb {
    width: 70px;
    margin-top: -6%;
}

.border-nav {
    border-left: 1px dotted grey;
}

#logo1 {
    margin-top: -13px;
    width: 60%;
}

/*//////-- NAVBAR --//////*/

/*/////-- Content --//////*/

#slogan1 {
    background-color: rgba(0,120,215,0.2);
}



/* footer */
#footer {
    color: grey;
    height: 63px;
    background-color: #608A0C;
}
#footer h1 {
        font-size: 1em;
        padding-left: 20px;
}
#footer3 {
    padding-top: 11px;
}
#footer2 {
        font-size: 1.5em;
    color: white;
    background-color: #87C316;
    height : 60px;
    background-image: url(../img/shadow.png);
    background-size: cover;
}
.border-nav2 {
    border-left: 1px dotted grey;
}


.joueur{
  position: absolute;
  width: 10%;
}
.vide {
  position: absolute;
  
  width: 10%;
}
/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers:
 */

.hidden {
    display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: "" ""; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
    /* Style adjustments for viewports that meet the condition */
}

@media print,
       (-webkit-min-device-pixel-ratio: 1.25),
       (min-resolution: 1.25dppx),
       (min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
    *,
    *:before,
    *:after {
        background: transparent !important;
        color: #000 !important; /* Black prints faster:
                                   http://www.sanbeiji.com/archives/953 */
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    a[href]:after {
        content: "" ("" attr(href) "")"";
    }

    abbr[title]:after {
        content: "" ("" attr(title) "")"";
    }

    /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */

    a[href^=""#""]:after,
    a[href^=""javascript:""]:after {
        content: """";
    }

    pre,
    blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */

    thead {
        display: table-header-group;
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    img {
        max-width: 100% !important;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3 {
        page-break-after: avoid;
    }
}
",CSS
".pad {
    padding:30px 30px 30px 30px !important;
}
.button-gm {
	min-height: 30px;
	line-height: 30px;
	font-size: 14px
}
.button-me {
    border-color: transparent;
    background-color: #00c0f5;
    color: #FFF;
    position: relative;
    display: inline-block;
    margin: 10px 0;
    padding: 0 12px;
    min-width: 52px;
    min-height: 32px;
    border-width: 1px;
    border-style: solid;
    border-radius: 4px;
    vertical-align: top;
    text-align: center;
    text-overflow: ellipsis;
    font-size: 16px;
    line-height: 30px;
    cursor: pointer;
}
.footer {
    color: #444;
    position: absolute;
    bottom: 0;
    right: 0;
    left: 0;
    width: 100%;
    height: 100px;
}
.weui_uploader_input_wrp {
    float: left;
    position: relative;
    margin-right: 9px;
    margin-bottom: 9px;
    width: 77px;
    height: 77px;
    border: 1px solid #D9D9D9;
}

.weui_uploader_input_wrp:before,
.weui_uploader_input_wrp:after {
    content: "" "";
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    background-color: #D9D9D9;
}

.weui_uploader_input_wrp:before {
    width: 2px;
    height: 39.5px;
}

.weui_uploader_input_wrp:after {
    width: 39.5px;
    height: 2px;
}

.weui_uploader_input_wrp:active {
    border-color: #999999;
}

.weui_uploader_input_wrp:active:before,
.weui_uploader_input_wrp:active:after {
    background-color: #999999;
}

.center-in-center{
            position: absolute;
            top: 40%;
            left: 50%;
            -webkit-transform: translate(-50%, -50%);
            -moz-transform: translate(-50%, -50%);
            -ms-transform: translate(-50%, -50%);
            -o-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
        }",CSS
"/*	IE 8 FIXES

	MAIN BLUE: 	#99CCFF
	LINK BLUE: 	#0066FF
	NEW BLUE:	#3366FF
	ORANGE:		#FFCC66
	GREEN:		#66CC00
	TBL GREEN:	#A7C942
	RED:		#CC0000
	BORDER:		#CCC
	GREY:		#999
	DARK GRY:	#555
*/



#rent_go{vertical-align:-3px;}
div.land-do h2{
    filter: progid:DXImageTransform.Microsoft.Shadow(Strength=3, Direction=45, color:'#F0F0F0');
}
h3.origin-start{
    bottom:-20px; right:-160px;
    filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1);
}

.results{width:1100px; margin:0px auto;}
.result_loan{float:left;}
",CSS
"

.styleSans721.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 721.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans12000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 12pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans204.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 204.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans1.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 1.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans67.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 67.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans48.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 48.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans56.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 56.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans38.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 38.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans722.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 722.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans31.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 31.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans789.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 789.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans199.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 199.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans2.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 2.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans22.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 22.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans13.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 13.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans59.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 59.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans240.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 240.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans7.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 7.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans6.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 6.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans8.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 8.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans5.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 5.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans4.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 4.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans11.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 11.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}


.styleSans558.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle> {
    font-family: Sans;
    font-size: 558.0pt;
    font-weight: normal;
    font-style: normal;
    text-align: 0;
    letter-spacing: 0pt;
    line-height: 0pt;
}
",CSS
"/*
 * The MIT License
 * Copyright (c) 2012 Matias Meno <m@tias.me>
 */

@-webkit-keyframes passing-through {
    0% {
        opacity: 0;
        -webkit-transform: translateY(40px);
        -moz-transform: translateY(40px);
        -ms-transform: translateY(40px);
        -o-transform: translateY(40px);
        transform: translateY(40px);
    }
    30%,
    70% {
        opacity: 1;
        -webkit-transform: translateY(0px);
        -moz-transform: translateY(0px);
        -ms-transform: translateY(0px);
        -o-transform: translateY(0px);
        transform: translateY(0px);
    }
    100% {
        opacity: 0;
        -webkit-transform: translateY(-40px);
        -moz-transform: translateY(-40px);
        -ms-transform: translateY(-40px);
        -o-transform: translateY(-40px);
        transform: translateY(-40px);
    }
}

@-moz-keyframes passing-through {
    0% {
        opacity: 0;
        -webkit-transform: translateY(40px);
        -moz-transform: translateY(40px);
        -ms-transform: translateY(40px);
        -o-transform: translateY(40px);
        transform: translateY(40px);
    }
    30%,
    70% {
        opacity: 1;
        -webkit-transform: translateY(0px);
        -moz-transform: translateY(0px);
        -ms-transform: translateY(0px);
        -o-transform: translateY(0px);
        transform: translateY(0px);
    }
    100% {
        opacity: 0;
        -webkit-transform: translateY(-40px);
        -moz-transform: translateY(-40px);
        -ms-transform: translateY(-40px);
        -o-transform: translateY(-40px);
        transform: translateY(-40px);
    }
}

@keyframes passing-through {
    0% {
        opacity: 0;
        -webkit-transform: translateY(40px);
        -moz-transform: translateY(40px);
        -ms-transform: translateY(40px);
        -o-transform: translateY(40px);
        transform: translateY(40px);
    }
    30%,
    70% {
        opacity: 1;
        -webkit-transform: translateY(0px);
        -moz-transform: translateY(0px);
        -ms-transform: translateY(0px);
        -o-transform: translateY(0px);
        transform: translateY(0px);
    }
    100% {
        opacity: 0;
        -webkit-transform: translateY(-40px);
        -moz-transform: translateY(-40px);
        -ms-transform: translateY(-40px);
        -o-transform: translateY(-40px);
        transform: translateY(-40px);
    }
}

@-webkit-keyframes slide-in {
    0% {
        opacity: 0;
        -webkit-transform: translateY(40px);
        -moz-transform: translateY(40px);
        -ms-transform: translateY(40px);
        -o-transform: translateY(40px);
        transform: translateY(40px);
    }
    30% {
        opacity: 1;
        -webkit-transform: translateY(0px);
        -moz-transform: translateY(0px);
        -ms-transform: translateY(0px);
        -o-transform: translateY(0px);
        transform: translateY(0px);
    }
}

@-moz-keyframes slide-in {
    0% {
        opacity: 0;
        -webkit-transform: translateY(40px);
        -moz-transform: translateY(40px);
        -ms-transform: translateY(40px);
        -o-transform: translateY(40px);
        transform: translateY(40px);
    }
    30% {
        opacity: 1;
        -webkit-transform: translateY(0px);
        -moz-transform: translateY(0px);
        -ms-transform: translateY(0px);
        -o-transform: translateY(0px);
        transform: translateY(0px);
    }
}

@keyframes slide-in {
    0% {
        opacity: 0;
        -webkit-transform: translateY(40px);
        -moz-transform: translateY(40px);
        -ms-transform: translateY(40px);
        -o-transform: translateY(40px);
        transform: translateY(40px);
    }
    30% {
        opacity: 1;
        -webkit-transform: translateY(0px);
        -moz-transform: translateY(0px);
        -ms-transform: translateY(0px);
        -o-transform: translateY(0px);
        transform: translateY(0px);
    }
}

@-webkit-keyframes pulse {
    0% {
        -webkit-transform: scale(1);
        -moz-transform: scale(1);
        -ms-transform: scale(1);
        -o-transform: scale(1);
        transform: scale(1);
    }
    10% {
        -webkit-transform: scale(1.1);
        -moz-transform: scale(1.1);
        -ms-transform: scale(1.1);
        -o-transform: scale(1.1);
        transform: scale(1.1);
    }
    20% {
        -webkit-transform: scale(1);
        -moz-transform: scale(1);
        -ms-transform: scale(1);
        -o-transform: scale(1);
        transform: scale(1);
    }
}

@-moz-keyframes pulse {
    0% {
        -webkit-transform: scale(1);
        -moz-transform: scale(1);
        -ms-transform: scale(1);
        -o-transform: scale(1);
        transform: scale(1);
    }
    10% {
        -webkit-transform: scale(1.1);
        -moz-transform: scale(1.1);
        -ms-transform: scale(1.1);
        -o-transform: scale(1.1);
        transform: scale(1.1);
    }
    20% {
        -webkit-transform: scale(1);
        -moz-transform: scale(1);
        -ms-transform: scale(1);
        -o-transform: scale(1);
        transform: scale(1);
    }
}

@keyframes pulse {
    0% {
        -webkit-transform: scale(1);
        -moz-transform: scale(1);
        -ms-transform: scale(1);
        -o-transform: scale(1);
        transform: scale(1);
    }
    10% {
        -webkit-transform: scale(1.1);
        -moz-transform: scale(1.1);
        -ms-transform: scale(1.1);
        -o-transform: scale(1.1);
        transform: scale(1.1);
    }
    20% {
        -webkit-transform: scale(1);
        -moz-transform: scale(1);
        -ms-transform: scale(1);
        -o-transform: scale(1);
        transform: scale(1);
    }
}

.dropzone,
.dropzone * {
    box-sizing: border-box;
}

.dropzone {
    min-height: 150px;
    height: 100%;
    border: 2px dashed #0087F7;
    border-radius: 5px;
    background: white;
    padding: 20px 20px;
}

.dropzone.dz-clickable {
    cursor: pointer;
}

.dropzone.dz-clickable * {
    cursor: default;
}

.dropzone.dz-clickable .dz-message,
.dropzone.dz-clickable .dz-message * {
    cursor: pointer;
}

.dropzone.dz-started .dz-message {
    display: none;
}

.dropzone.dz-drag-hover {
    border-style: solid;
}

.dropzone.dz-drag-hover .dz-message {
    opacity: 0.5;
}

.dropzone .dz-message {
    text-align: center;
    margin: 2em 0;
}

.dropzone .dz-preview {
    position: relative;
    display: inline-block;
    vertical-align: top;
    margin: 16px;
    min-height: 100px;
}

.dropzone .dz-preview:hover {
    z-index: 1000;
}

.dropzone .dz-preview:hover .dz-details {
    opacity: 1;
}

.dropzone .dz-preview.dz-file-preview .dz-image {
    border-radius: 20px;
    background: #999;
    background: linear-gradient(to bottom, #eee, #ddd);
}

.dropzone .dz-preview.dz-file-preview .dz-details {
    opacity: 1;
}

.dropzone .dz-preview.dz-image-preview {
    background: white;
}

.dropzone .dz-preview.dz-image-preview .dz-details {
    -webkit-transition: opacity 0.2s linear;
    -moz-transition: opacity 0.2s linear;
    -ms-transition: opacity 0.2s linear;
    -o-transition: opacity 0.2s linear;
    transition: opacity 0.2s linear;
}

.dropzone .dz-preview .dz-remove {
    font-size: 14px;
    text-align: center;
    display: block;
    cursor: pointer;
    border: none;
}

.dropzone .dz-preview .dz-remove:hover {
    text-decoration: underline;
}

.dropzone .dz-preview:hover .dz-details {
    opacity: 1;
}

.dropzone .dz-preview .dz-details {
    z-index: 20;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    font-size: 13px;
    min-width: 100%;
    max-width: 100%;
    padding: 2em 1em;
    text-align: center;
    color: rgba(0, 0, 0, 0.9);
    line-height: 150%;
}

.dropzone .dz-preview .dz-details .dz-size {
    margin-bottom: 1em;
    font-size: 16px;
}

.dropzone .dz-preview .dz-details .dz-filename {
    white-space: nowrap;
}

.dropzone .dz-preview .dz-details .dz-filename:hover span {
    border: 1px solid rgba(200, 200, 200, 0.8);
    background-color: rgba(255, 255, 255, 0.8);
}

.dropzone .dz-preview .dz-details .dz-filename:not(:hover) {
    overflow: hidden;
    text-overflow: ellipsis;
}

.dropzone .dz-preview .dz-details .dz-filename:not(:hover) span {
    border: 1px solid transparent;
}

.dropzone .dz-preview .dz-details .dz-filename span,
.dropzone .dz-preview .dz-details .dz-size span {
    background-color: rgba(255, 255, 255, 0.4);
    padding: 0 0.4em;
    border-radius: 3px;
}

.dropzone .dz-preview:hover .dz-image img {
    -webkit-transform: scale(1.05, 1.05);
    -moz-transform: scale(1.05, 1.05);
    -ms-transform: scale(1.05, 1.05);
    -o-transform: scale(1.05, 1.05);
    transform: scale(1.05, 1.05);
    -webkit-filter: blur(8px);
    filter: blur(8px);
}

.dropzone .dz-preview .dz-image {
    border-radius: 20px;
    overflow: hidden;
    width: 120px;
    height: 120px;
    position: relative;
    display: block;
    z-index: 10;
}

.dropzone .dz-preview .dz-image img {
    display: block;
}

.dropzone .dz-preview.dz-success .dz-success-mark {
    -webkit-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);
    -moz-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);
    -ms-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);
    -o-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);
    animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);
}

.dropzone .dz-preview.dz-error .dz-error-mark {
    opacity: 1;
    -webkit-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);
    -moz-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);
    -ms-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);
    -o-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);
    animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);
}

.dropzone .dz-preview .dz-success-mark,
.dropzone .dz-preview .dz-error-mark {
    pointer-events: none;
    opacity: 0;
    z-index: 500;
    position: absolute;
    display: block;
    top: 50%;
    left: 50%;
    margin-left: -27px;
    margin-top: -27px;
}

.dropzone .dz-preview .dz-success-mark svg,
.dropzone .dz-preview .dz-error-mark svg {
    display: block;
    width: 54px;
    height: 54px;
}

.dropzone .dz-preview.dz-processing .dz-progress {
    opacity: 1;
    -webkit-transition: all 0.2s linear;
    -moz-transition: all 0.2s linear;
    -ms-transition: all 0.2s linear;
    -o-transition: all 0.2s linear;
    transition: all 0.2s linear;
}

.dropzone .dz-preview.dz-complete .dz-progress {
    opacity: 0;
    -webkit-transition: opacity 0.4s ease-in;
    -moz-transition: opacity 0.4s ease-in;
    -ms-transition: opacity 0.4s ease-in;
    -o-transition: opacity 0.4s ease-in;
    transition: opacity 0.4s ease-in;
}

.dropzone .dz-preview:not(.dz-processing) .dz-progress {
    -webkit-animation: pulse 6s ease infinite;
    -moz-animation: pulse 6s ease infinite;
    -ms-animation: pulse 6s ease infinite;
    -o-animation: pulse 6s ease infinite;
    animation: pulse 6s ease infinite;
}

.dropzone .dz-preview .dz-progress {
    opacity: 1;
    z-index: 1000;
    pointer-events: none;
    position: absolute;
    height: 16px;
    left: 50%;
    top: 50%;
    margin-top: -8px;
    width: 80px;
    margin-left: -40px;
    background: rgba(255, 255, 255, 0.9);
    -webkit-transform: scale(1);
    border-radius: 8px;
    overflow: hidden;
}

.dropzone .dz-preview .dz-progress .dz-upload {
    background: #333;
    background: linear-gradient(to bottom, #666, #444);
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    width: 0;
    -webkit-transition: width 300ms ease-in-out;
    -moz-transition: width 300ms ease-in-out;
    -ms-transition: width 300ms ease-in-out;
    -o-transition: width 300ms ease-in-out;
    transition: width 300ms ease-in-out;
}

.dropzone .dz-preview.dz-error .dz-error-message {
    display: block;
}

.dropzone .dz-preview.dz-error:hover .dz-error-message {
    opacity: 1;
    pointer-events: auto;
}

.dropzone .dz-preview .dz-error-message {
    pointer-events: none;
    z-index: 1000;
    position: absolute;
    display: block;
    display: none;
    opacity: 0;
    -webkit-transition: opacity 0.3s ease;
    -moz-transition: opacity 0.3s ease;
    -ms-transition: opacity 0.3s ease;
    -o-transition: opacity 0.3s ease;
    transition: opacity 0.3s ease;
    border-radius: 8px;
    font-size: 13px;
    top: 130px;
    left: -10px;
    width: 140px;
    background: #be2626;
    background: linear-gradient(to bottom, #be2626, #a92222);
    padding: 0.5em 1.2em;
    color: white;
}

.dropzone .dz-preview .dz-error-message:after {
    content: '';
    position: absolute;
    top: -6px;
    left: 64px;
    width: 0;
    height: 0;
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-bottom: 6px solid #be2626;
}
",CSS
"html{
	height: 100%;
	margin: 0;
	background-color:#323232;
}

body{
	font-family: 'Lato', sans-serif;
	font-size: 11pt;
	font-weight: 300;
	color: #C8C8C8
}

ul {
    list-style: none;
}
a:link {color:#6c6c6c;} 
a:visited {color:#757575;}
a:hover {color:white;} 
a:active {color:white;} 

.header{
	text-align: center;
	padding-top: 10%;
	color: white;
}

.user_info{
	text-align: center;
	padding-top: 1%
}

.profile_pic{
	height: 25%;
	width: auto;
}

input:not([type=submit]):not([type=file]) {
    border: none; 
    padding: 5px;
    background: rgba(255,255,255,0.08);
    margin: 0 0 10px 0;
}
",CSS
"/* ==========================================================================
   Table of Contents
   ========================================================================== */

/*

    0.  Normalize
    1.  Icons
    2.  General
    3.  Utilities
    4.  General
    5.  Single Post
    6.  Tag Archive
    7.  Third Party Elements
    8.  Pagination
    9.  Footer
    10. Media Queries (Tablet)
    11. Media Queries (Mobile)
    12. Animations

*/

/* ==========================================================================
   0. Normalize.css v2.1.3 | MIT License | git.io/normalize | (minified)
   ========================================================================== */

article, aside, details,
figcaption, figure,
footer, header, hgroup,
main, nav, section,
summary { display: block; }
audio, canvas, video { display: inline-block; }
audio:not([controls]) { display: none; height: 0; }
[hidden], template { display: none; }
html {
   font-family: sans-serif;
   -ms-text-size-adjust: 100%;
   -webkit-text-size-adjust: 100%;
}
body { margin: 0; }
a { background: transparent; }
a:focus { outline: thin dotted; }
a:active, a:hover { outline: 0; }
h1 { font-size: 2em; margin: 0.67em 0; }
abbr[title] { border-bottom: 1px dotted; }
b, strong { font-weight: 700; }
dfn { font-style: italic; }
hr {
   -moz-box-sizing: content-box;
   box-sizing: content-box;
   height: 0;
}
mark { background: #FF0; color: #000; }
code, kbd, pre,
samp { font-family: monospace, serif; font-size: 1em; }
pre { white-space: pre-wrap; }
q { quotes: ""\201C"" ""\201D"" ""\2018"" ""\2019""; }
small { font-size: 80%; }
sub, sup {
   font-size: 75%;
   line-height: 0;
   position: relative;
   vertical-align: baseline;
}
sup { top: -0.5em; }
sub { bottom: -0.25em; }
img { border: 0; }
svg:not(:root) { overflow: hidden; }
figure { margin: 0; }
fieldset {
   border: 1px solid #c0c0c0;
   margin: 0 2px;
   padding: 0.35em 0.625em 0.75em;
}
legend { border: 0; padding: 0; }
button, input, select,
textarea { font-family: inherit; font-size: 100%; margin: 0; }
button, input { line-height: normal; }
button, select { text-transform: none; }
button, html input[type=""button""],
input[type=""reset""], input[type=""submit""] {
   -webkit-appearance: button;
   cursor: pointer;
}
button[disabled], html input[disabled] { cursor: default; }
input[type=""checkbox""],
input[type=""radio""] { box-sizing: border-box; padding: 0; }
input[type=""search""] {
   -webkit-appearance: textfield;
   -moz-box-sizing: content-box;
   -webkit-box-sizing: content-box;
   box-sizing: content-box;
}
input[type=""search""]::-webkit-search-cancel-button,
input[type=""search""]::-webkit-search-decoration { -webkit-appearance: none; }
button::-moz-focus-inner,
input::-moz-focus-inner { border: 0; padding: 0; }
textarea { overflow: auto; vertical-align: top; }
table { border-collapse: collapse; border-spacing: 0; }


/* ==========================================================================
   1. Icons - Sets up the icon font and respective classes
   ========================================================================== */

/* Import the font file with the icons in it */
@font-face {
    font-family: ""casper-icons"";
    src:url(""../fonts/casper-icons.eot"");
    src:url(""../fonts/casper-icons.eot?#iefix"") format(""embedded-opentype""),
        url(""../fonts/casper-icons.woff"") format(""woff""),
        url(""../fonts/casper-icons.ttf"") format(""truetype""),
        url(""../fonts/casper-icons.svg#icons"") format(""svg"");
    font-weight: normal;
    font-style: normal;
}

/* Apply these base styles to all icons */
[class^=""icon-""]:before, [class*="" icon-""]:before {
    font-family: ""casper-icons"", ""Open Sans"", sans-serif;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    text-decoration: none !important;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/* Each icon is created by inserting the correct character into the
   content of the :before pseudo element. Like a boss. */
.icon-ghost:before {
    content: ""\f600"";
}
.icon-feed:before {
    content: ""\f601"";
}
.icon-twitter:before {
    content: ""\f602"";
    font-size: 1.1em;
}
.icon-google-plus:before {
    content: ""\f603"";
}
.icon-facebook:before {
    content: ""\f604"";
}
.icon-arrow-left:before {
    content: ""\f605"";
}
.icon-stats:before {
    content: ""\f606"";
}
.icon-location:before {
    content: ""\f607"";
    margin-left: -3px; /* Tracking fix */
}
.icon-link:before {
    content: ""\f608"";
}


/* ==========================================================================
   2. General - Setting up some base styles
   ========================================================================== */

html {
    height: 100%;
    max-height: 100%;
    font-size: 62.5%;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

body {
    height: 100%;
    max-height: 100%;
    font-family: ""Merriweather"", serif;
    letter-spacing: 0.01rem;
    font-size: 1.8rem;
    line-height: 1.75em;
    color: #3A4145;
    -webkit-font-feature-settings: 'kern' 1;
    -moz-font-feature-settings: 'kern' 1;
    -o-font-feature-settings: 'kern' 1;
}

::-moz-selection {
    background: #D6EDFF;
}

::selection {
    background: #D6EDFF;
}

h1, h2, h3,
h4, h5, h6 {
    -webkit-font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
    -moz-font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
    -o-font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
    color: #2E2E2E;
    line-height: 1.15em;
    margin: 0 0 0.4em 0;
    font-family: ""Open Sans"", sans-serif;
}

h1 {
    font-size: 5rem;
    letter-spacing: -2px;
    text-indent: -3px;
}

h2 {
    font-size: 3.6rem;
    letter-spacing: -1px;
}

h3 {
    font-size: 3rem;
}

h4 {
    font-size: 2.5rem;
}

h5 {
    font-size: 2rem;
}

h6 {
    font-size: 2rem;
}

a {
    color: #4A4A4A;
    transition: color ease 0.3s;
}

a:hover {
    color: #111;
}

p, ul, ol, dl {
    -webkit-font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1;
    -moz-font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1;
    -o-font-feature-settings: 'liga' 1, 'onum' 1, 'kern' 1;
    margin: 0 0 1.75em 0;
}

ol, ul {
    padding-left: 3rem;
}

ol ol, ul ul,
ul ol, ol ul {
    margin: 0 0 0.4em 0;
    padding-left: 2em;
}

dl dt {
    float: left;
    width: 180px;
    overflow: hidden;
    clear: left;
    text-align: right;
    text-overflow: ellipsis;
    white-space: nowrap;
    font-weight: 700;
    margin-bottom: 1em;
}

dl dd {
    margin-left: 200px;
    margin-bottom: 1em
}

li {
    margin: 0.4em 0;
}

li li {
    margin: 0;
}

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: #EFEFEF 1px solid;
    margin: 3.2em 0;
    padding: 0;
}

blockquote {
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    margin: 1.75em 0 1.75em -2.2em;
    padding: 0 0 0 1.75em;
    border-left: #4A4A4A 0.4em solid;
}

blockquote p {
    margin: 0.8em 0;
    font-style: italic;
}

blockquote small {
    display: inline-block;
    margin: 0.8em 0 0.8em 1.5em;
    font-size: 0.9em;
    color: #CCC;
}

blockquote small:before { content: ""\2014 \00A0""; }

blockquote cite {
    font-weight: 700;
}

blockquote cite a { font-weight: normal; }

mark {
    background-color: #FFC336;
}

code, tt {
    padding: 1px 3px;
    font-family: Inconsolata, monospace, sans-serif;
    font-size: 0.85em;
    white-space: pre-wrap;
    border: #E3EDF3 1px solid;
    background: #F7FAFB;
    border-radius: 2px;
}

pre {
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    margin: 0 0 1.75em 0;
    border: #E3EDF3 1px solid;
    width: 100%;
    padding: 10px;
    font-family: Inconsolata, monospace, sans-serif;
    font-size: 0.9em;
    white-space: pre;
    overflow: auto;
    background: #F7FAFB;
    border-radius: 3px;
}

pre code, tt {
    font-size: inherit;
    white-space: -moz-pre-wrap;
    white-space: pre-wrap;
    background: transparent;
    border: none;
    padding: 0;
}

kbd {
    display: inline-block;
    margin-bottom: 0.4em;
    padding: 1px 8px;
    border: #CCC 1px solid;
    color: #666;
    text-shadow: #FFF 0 1px 0;
    font-size: 0.9em;
    font-weight: 700;
    background: #F4F4F4;
    border-radius: 4px;
    box-shadow:
        0 1px 0 rgba(0, 0, 0, 0.2),
        0 1px 0 0 #fff inset;
}

table {
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    margin: 1.75em 0;
    width: 100%;
    max-width: 100%;
    background-color: transparent;
}

table th,
table td {
    padding: 8px;
    line-height: 20px;
    text-align: left;
    vertical-align: top;
    border-top: #EFEFEF 1px solid;
}

table th { color: #000; }

table caption + thead tr:first-child th,
table caption + thead tr:first-child td,
table colgroup + thead tr:first-child th,
table colgroup + thead tr:first-child td,
table thead:first-child tr:first-child th,
table thead:first-child tr:first-child td {
    border-top: 0;
}

table tbody + tbody { border-top: #EFEFEF 2px solid; }

table table table { background-color: #FFF; }

table tbody > tr:nth-child(odd) > td,
table tbody > tr:nth-child(odd) > th {
    background-color: #F6F6F6;
}

table.plain tbody > tr:nth-child(odd) > td,
table.plain tbody > tr:nth-child(odd) > th {
   background: transparent;
}

iframe, .fluid-width-video-wrapper {
    display: block;
    margin: 1.75em 0;
}

/* When a video is inside the fitvids wrapper, drop the
margin on the iframe, cause it breaks stuff. */
.fluid-width-video-wrapper iframe {
    margin: 0;
}


/* ==========================================================================
   3. Utilities - These things get used a lot
   ========================================================================== */

/* Clears shit */
.clearfix:before,
.clearfix:after {
    content: "" "";
    display: table;
}
.clearfix:after { clear: both; }
.clearfix { *zoom: 1; }

/* Hides shit */
.hidden {
    text-indent: -9999px;
    visibility: hidden;
    display: none;
}

/* Creates a responsive wrapper that makes our content scale nicely */
.inner {
    position: relative;
    width: 80%;
    max-width: 710px;
    margin: 0 auto;
}

/* Centres vertically yo. (IE8+) */
.vertical {
    display: table-cell;
    vertical-align: middle;
}


/* ==========================================================================
   4. General - The main styles for the the theme
   ========================================================================== */

/* Big cover image on the home page */
.main-header {
    position: relative;
    display: table;
    width: 100%;
    height: 100%;
    margin-bottom: 5rem;
    text-align: center;
    background: #222 no-repeat center center;
    background-size: cover;
    overflow: hidden;
}

.main-header .inner {
    width: 80%;
}

.main-nav {
    position: relative;
    padding: 35px 40px;
    margin: 0 0 30px 0;
}

.main-nav a {
    text-decoration: none;
    font-family: 'Open Sans', sans-serif;
}

/* Create a bouncing scroll-down arrow on homepage with cover image */
.scroll-down {
    display: block;
    position: absolute;
    z-index: 100;
    bottom: 45px;
    left: 50%;
    margin-left: -16px;
    width: 34px;
    height: 34px;
    font-size: 34px;
    text-align: center;
    text-decoration: none;
    color: rgba(255,255,255,0.7);
    -webkit-transform: rotate(-90deg);
    transform: rotate(-90deg);
    -webkit-animation: bounce 4s 2s infinite;
    animation: bounce 4s 2s infinite;
}

/* Stop it bouncing and increase contrast when hovered */
.scroll-down:hover {
    color: #fff;
    -webkit-animation: none;
    animation: none;
}

/* Put a semi-opaque radial gradient behind the icon to make it more visible
   on photos which happen to have a light background. */
.home-template .main-header:after {
    display: block;
    content: "" "";
    width: 150px;
    height: 130px;
    border-radius: 100%;
    position: absolute;
    bottom: 0;
    left: 50%;
    margin-left: -75px;
    background: -moz-radial-gradient(center, ellipse cover,  rgba(0,0,0,0.15) 0%, rgba(0,0,0,0) 70%, rgba(0,0,0,0) 100%);
    background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,rgba(0,0,0,0.15)), color-stop(70%,rgba(0,0,0,0)), color-stop(100%,rgba(0,0,0,0)));
    background: -webkit-radial-gradient(center, ellipse cover,  rgba(0,0,0,0.15) 0%,rgba(0,0,0,0) 70%,rgba(0,0,0,0) 100%);
    background: radial-gradient(ellipse at center,  rgba(0,0,0,0.15) 0%,rgba(0,0,0,0) 70%,rgba(0,0,0,0) 100%);
}

/* Hide when there's no cover image or on page2+ */
.no-cover .scroll-down,
.no-cover.main-header:after,
.archive-template .scroll-down,
.archive-template .main-header:after {
    display: none
}

/* Appears in the top right corner of your home page */
.blog-logo {
    display: block;
    float: left;
    background: none !important;
    border: none !important;
}

.blog-logo img {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    display: block;
    height: 38px;
    padding: 1px 0 5px 0;
    width: auto;
}

.back-button {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    display: inline-block;
    float: left;
    height: 38px;
    padding: 0 15px 0 10px;
    border: transparent 1px solid;
    color: #9EABB3;
    text-align: center;
    font-size: 12px;
    text-transform: uppercase;
    line-height: 35px;
    border-radius: 3px;
    background: rgba(0,0,0,0.1);
    transition: all ease 0.3s;
}
.back-button:before {
    position: relative;
    bottom: -2px;
    font-size: 13px;
    line-height: 0;
    margin-right: 8px;
}

.subscribe-button {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    display: inline-block;
    float: right;
    height: 38px;
    padding: 0 20px;
    border: transparent 1px solid;
    color: #9EABB3;
    text-align: center;
    font-size: 12px;
    text-transform: uppercase;
    line-height: 35px;
    white-space: nowrap;
    border-radius: 3px;
    background: rgba(0,0,0,0.1);
    transition: all ease 0.3s;
}
.subscribe-button:before {
    font-size: 9px;
    margin-right: 6px;
}

/* Special styles when overlaid on an image*/
.main-nav.overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 70px;
    border: none;
    background: -moz-linear-gradient(top, rgba(0,0,0,0.2) 0%, rgba(0,0,0,0) 100%);
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(0,0,0,0.2)), color-stop(100%,rgba(0,0,0,0)));
    background: -webkit-linear-gradient(top, rgba(0,0,0,0.2) 0%,rgba(0,0,0,0) 100%);
    background: linear-gradient(to bottom, rgba(0,0,0,0.2) 0%,rgba(0,0,0,0) 100%);
}
.no-cover .main-nav.overlay,
.no-cover .back-button,
.no-cover .subscribe-button {
    background: none;
}

.main-nav.overlay a {
    color: #fff;
}

.main-nav.overlay .back-button,
.main-nav.overlay .subscribe-button {
    border-color: rgba(255,255,255,0.6);
}

.main-nav.overlay a:hover {
    color: #222;
    border-color: #fff;
    background: #fff;
    transition: all 0.1s ease;
}

/* Add a border to the buttons on hover */
.back-button:hover,
.subscribe-button:hover {
    border-color: #bfc8cd;
    color: #9EABB3;
}

/* The details of your blog. Defined in ghost/settings/ */
.page-title {
    margin: 10px 0 10px 0;
    font-size: 5rem;
    letter-spacing: -1px;
    font-weight: 700;
    font-family: ""Open Sans"", sans-serif;
    color: #fff;
}

.page-description {
    margin: 0;
    font-size: 2rem;
    line-height: 1.5em;
    font-weight: 400;
    font-family: ""Merriweather"", serif;
    letter-spacing: 0.01rem;
    color: rgba(255,255,255,0.8);
}

.no-cover.main-header {
    min-height: 160px;
    max-height: 40%;
    background: #f5f8fa;
}

.no-cover .page-title {
    color: rgba(0,0,0,0.8);
}

.no-cover .page-description {
    color: rgba(0,0,0,0.5);
}

.no-cover .main-nav.overlay .back-button,
.no-cover .main-nav.overlay .subscribe-button {
    color: rgba(0,0,0,0.4);
    border-color: rgba(0,0,0,0.3);
}

/* Add subtle load-in animation for content on the home page */
.home-template .page-title {
    -webkit-animation: fade-in-down 0.6s;
    animation: fade-in-down 0.6s;
    -webkit-animation-delay: 0.2s;
    animation-delay: 0.2s;
}
.home-template .page-description {
    -webkit-animation: fade-in-down 0.9s;
    animation: fade-in-down 0.9s;
    -webkit-animation-delay: 0.1s;
    animation-delay: 0.1s;
}

/* Every post, on every page, gets this style on its <article> tag */
.post {
    position: relative;
    width: 80%;
    max-width: 710px;
    margin: 4rem auto;
    padding-bottom: 4rem;
    word-break: break-word;
    hyphens: auto;
}

body:not(.post-template) .post-title {
    font-size: 3.6rem;
}

.post-title a {
    text-decoration: none;
}

.post-excerpt p {
    margin: 0;
    font-size: 0.9em;
    line-height: 1.7em;
}

.read-more {
    text-decoration: none;
}

.post-meta {
    display: block;
    margin: 1.75rem 0 0 0;
    font-family: ""Open Sans"", sans-serif;
    font-size: 1.5rem;
    line-height: 2.2rem;
    color: #9EABB3;
}

.author-thumb {
    width: 24px;
    height: 24px;
    float: left;
    margin-right: 9px;
    border-radius: 100%;
}

.post-meta a {
    color: #9EABB3;
    text-decoration: none;
}

.post-meta a:hover {
    text-decoration: underline;
}

.user-meta {
    position: relative;
    padding: 0.3rem 40px 0 100px;
    min-height: 77px;
}

.post-date {
    display: inline-block;
    margin-left: 8px;
    padding-left: 12px;
    border-left: #d5dbde 1px solid;
    text-transform: uppercase;
    font-size: 1.3rem;
    white-space: nowrap;
}

.user-image {
    position: absolute;
    top: 0;
    left: 0;
}

.user-name {
    display: block;
    font-weight: 700;
}

.user-bio {
    display: block;
    max-width: 440px;
    font-size: 1.4rem;
    line-height: 1.5em;
}

.publish-meta {
    position: absolute;
    top: 0;
    right: 0;
    padding: 4.3rem 0 4rem 0;
    text-align: right;
}

.publish-heading {
    display: block;
    font-weight: 700;
}

.publish-date {
    display: block;
    font-size: 1.4rem;
    line-height: 1.5em;
}


/* ==========================================================================
   5. Single Post - When you click on an individual post
   ========================================================================== */

.post-template .post-header {
   margin-bottom: 3.4rem;
}

.post-template .post-title {
    margin-bottom: 0;
}

.post-template .post-meta {
    margin: 0;
}

.post-template .post-date {
    padding: 0;
    margin: 0;
    border: none;
}

/* Stop .full-img from creating horizontal scroll - slight hack due to
   imperfections with browser width % calculations and rounding */
.post-template .content {
    overflow: hidden;
}

/* Tweak the .post wrapper style */
.post-template .post {
    margin-top: 0;
    border-bottom: none;
    padding-bottom: 0;
}

/* Kill that stylish little circle that was on the border, too */
.post-template .post:after {
    display: none;
}

/* Keep images centred and within the bounds of the post-width */
.post-content img {
    display: block;
    max-width: 100%;
    height: auto;
    margin: 0 auto;
    padding: 0.6em 0;
}

/* Break out larger images to be wider than the main text column
   the class is applied with jQuery */
.post-content .full-img {
    width: 126%;
    max-width: none;
    margin: 0 -13%;
}

/* The author credit area after the post */
.author-footer {
    position: relative;
    margin: 6rem 0;
    padding: 4rem 4rem 2rem 4rem;
    border-top: #EBF2F6 1px solid;
    word-break: break-word;
    hyphens: auto;
}

.post-footer h4,
.author-footer h4 {
    font-size: 1.8rem;
    margin: 0;
}

.author-footer p {
    margin: 1rem 0;
    font-size: 1.4rem;
    line-height: 1.75em;
}

/* list of author links - location / url */
.author-meta {
    padding: 0;
    margin: 0;
    list-style: none;
    font-size: 1.4rem;
    line-height: 1;
    font-style: italic;
    color: #9EABB3;
}

.author-meta a {
    color: #9EABB3;
}
.author-meta a:hover {
    color: #111;
}

/* Create some space to the right for the share links */
.author-footer .author {
    float: left;
}

.author-footer h4 a {
    color: #2e2e2e;
    text-decoration: none;
}

.author-footer h4 a:hover {
    text-decoration: underline;
}

/* Drop the share links in the space to the right.
   Doing it like this means it's easier for the author bio
   to be flexible at smaller screen sizes while the share
   links remain at a fixed width the whole time */
.author-footer .connect {
    position: absolute;
    top: 4rem;
    right: 0;
    width: 140px;
}

.post-footer .share a,
.author-footer .connect a {
    font-size: 1.8rem;
    display: inline-block;
    margin: 1rem 1.6rem 1.6rem 0;
    color: #999;
    text-decoration: none;
}

.post-footer .share a:hover,
.author-footer .connect a:hover {
    color: #111;
}

.social {
    float: right;
}

.social .icon {
    margin: 1rem 1.6rem 1.6rem 0;
    color: #999;
    text-decoration: none;
}

.social .icon:hover {
  color: #111;
}

.share {
    float: left;
}

/* The subscribe icon on the footer */
.subscribe {
    width: 28px;
    height: 28px;
    position: absolute;
    top: -14px;
    left: 50%;
    margin-left: -15px;
    border: #EBF2F6 1px solid;
    text-align: center;
    line-height: 2.4rem;
    border-radius: 50px;
    background: #FFF;
    transition: box-shadow 0.5s;
}

/* The RSS icon, inserted via icon font */
.subscribe:before {
    color: #D2DEE3;
    font-size: 10px;
    position: absolute;
    top: 2px;
    left: 9px;
    font-weight: 700;
    transition: color 0.5s ease;
}

/* Add a box shadow to on hover */
.subscribe:hover {
    box-shadow: rgba(0,0,0,0.05) 0 0 0 3px;
    transition: box-shadow 0.25s;
}

.subscribe:hover:before {
    color: #50585D;
}

/* CSS tooltip saying ""Subscribe!"" - initially hidden */
.tooltip {
    opacity: 0;
    display: block;
    width: 53px;
    padding: 4px 8px 5px 8px;
    position:absolute;
    top: -23px;
    left: -21px;
    color: rgba(255,255,255,0.9);
    font-size: 1.1rem;
    line-height: 1em;
    text-align: center;
    background: #50585D;
    border-radius: 20px;
    box-shadow: 0 1px 4px rgba(0,0,0,0.1);
    transition: opacity 0.3s ease, top 0.3s ease;
}

/* The little chiclet arrow under the tooltip, pointing down */
.tooltip:after {
    content: "" "";
    border-width: 5px 5px 0 5px;
    border-style: solid;
    border-color: #50585D transparent;
    display: block;
    position: absolute;
    bottom: -4px;
    left: 50%;
    margin-left: -5px;
    z-index: 220;
    width: 0;
}

/* On hover, show the tooltip! */
.subscribe:hover .tooltip {
    opacity: 1;
    top: -33px;
}

/* ==========================================================================
   6. Author profile
   ========================================================================== */

.post-head.main-header {
    height: 65%;
    min-height: 180px;
}

.no-cover.post-head.main-header {
    height: 85px;
    min-height: 0;
    margin-bottom: 0;
    background: transparent;
}

.tag-head.main-header {
    height: 40%;
    min-height: 180px;
}

.author-head.main-header {
    height: 40%;
    min-height: 180px;
}

.no-cover.author-head.main-header {
    height: 10%;
    min-height: 100px;
    background: transparent;
}

.author-profile {
    padding: 0 15px 5rem 15px;
    border-bottom: #EBF2F6 1px solid;
    text-align: center;
}

/* Add a little circle in the middle of the border-bottom */
.author-profile:after {
    display: block;
    content: """";
    width: 7px;
    height: 7px;
    border: #E7EEF2 1px solid;
    position: absolute;
    bottom: -5px;
    left: 50%;
    margin-left: -5px;
    background: #FFF;
    -webkit-border-radius: 100%;
    -moz-border-radius: 100%;
    border-radius: 100%;
    box-shadow: #FFF 0 0 0 5px;
}

.author-image {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    display: block;
    position: absolute;
    top: -40px;
    left: 50%;
    margin-left: -40px;
    width: 80px;
    height: 80px;
    border-radius: 100%;
    overflow: hidden;
    padding: 6px;
    background: #fff;
    z-index: 2;
    box-shadow: #E7EEF2 0 0 0 1px;
}

.author-image .img {
    position: relative;
    display: block;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center center;
    border-radius: 100%;
}

.author-profile .author-image {
    position: relative;
    left: auto;
    top: auto;
    width: 120px;
    height: 120px;
    padding: 3px;
    margin: -100px auto 0 auto;
    box-shadow: none;
}

.author-title {
    margin: 1.5rem 0 1rem;
}

.author-bio {
    font-size: 1.8rem;
    line-height: 1.5em;
    font-weight: 200;
    color: #50585D;
    letter-spacing: 0;
    text-indent: 0;
}

.author-meta {
    margin: 1.6rem 0;
}
/* Location, website, and link */
.author-profile .author-meta {
    margin: 2rem 0;
    font-family: ""Merriweather"", serif;
    letter-spacing: 0.01rem;
    font-size: 1.7rem;
}
.author-meta span {
    display: inline-block;
    margin: 0 2rem 1rem 0;
    word-wrap: break-word;
}
.author-meta a {
    text-decoration: none;
}

/* Turn off meta for page2+ to make room for extra
   pagination prev/next links */
.archive-template .author-profile .author-meta {
    display: none;
}

/* ==========================================================================
   7. Third Party Elements - Embeds from other services
   ========================================================================== */

/* Github */
.gist table {
    margin: 0;
    font-size: 1.4rem;
}
.gist .line-number {
    min-width: 25px;
    font-size: 1.1rem;
}


/* ==========================================================================
   8. Pagination - Tools to let you flick between pages
   ========================================================================== */

/* The main wrapper for our pagination links */
.pagination {
    position: relative;
    width: 80%;
    max-width: 710px;
    margin: 4rem auto;
    font-family: ""Open Sans"", sans-serif;
    font-size: 1.3rem;
    color: #9EABB3;
    text-align: center;
}

.pagination a {
    color: #9EABB3;
    transition: all 0.2s ease;
}

/* Push the previous/next links out to the left/right */
.older-posts,
.newer-posts {
    position: absolute;
    display: inline-block;
    padding: 0 15px;
    border: #bfc8cd 1px solid;
    text-decoration: none;
    border-radius: 4px;
    transition: border ease 0.3s;
}

.older-posts {
    right: 0;
}

.page-number {
    display: inline-block;
    padding: 2px 0;
    min-width: 100px;
}

.newer-posts {
    left: 0;
}

.older-posts:hover,
.newer-posts:hover {
    color: #889093;
    border-color: #98a0a4;
}

.extra-pagination {
    display: none;
    border-bottom: #EBF2F6 1px solid;
}
.extra-pagination:after {
    display: block;
    content: """";
    width: 7px;
    height: 7px;
    border: #E7EEF2 1px solid;
    position: absolute;
    bottom: -5px;
    left: 50%;
    margin-left: -5px;
    background: #FFF;
    -webkit-border-radius: 100%;
    -moz-border-radius: 100%;
    border-radius: 100%;
    box-shadow: #FFF 0 0 0 5px;
}
.extra-pagination .pagination {
    width: auto;
}

/* On page2+ make all the headers smaller */
.archive-template .main-header {
    max-height: 30%;
}

/* On page2+ show extra pagination controls at the top of post list */
.archive-template .extra-pagination {
    display: block;
}


/* ==========================================================================
   9. Footer - The bottom of every page
   ========================================================================== */

.site-footer {
    position: relative;
    margin: 8rem 0 0 0;
    padding: 0.5rem 15px;
    border-top: #EBF2F6 1px solid;
    font-family: ""Open Sans"", sans-serif;
    font-size: 1rem;
    line-height: 1.75em;
    color: #BBC7CC;
}

.site-footer a {
    color: #BBC7CC;
    text-decoration: none;
    font-weight: bold;
}

.site-footer a:hover {
    color: #50585D;
}

.poweredby {
    display: block;
    width: 45%;
    float: right;
    text-align: right;
}

.copyright {
    display: block;
    width: 45%;
    float: left;
}


/* ==========================================================================
   10. Media Queries - Smaller than 900px
   ========================================================================== */

@media only screen and (max-width: 900px) {

    .main-nav {
        padding: 15px;
    }

    blockquote {
        margin-left: 0;
    }

    .main-header {
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        height: auto;
        min-height: 240px;
        height: 60%;
        padding: 15% 0;
    }

    .scroll-down,
    .home-template .main-header:after { display: none; }

    .archive-template .main-header {
        min-height: 180px;
        padding: 10% 0;
    }

    .blog-logo img {
        padding: 4px 0;
    }

    .page-title {
        font-size: 4rem;
        letter-spacing: -1px;
    }

    .page-description {
        font-size: 1.8rem;
        line-height: 1.5em;
    }

    .post {
        font-size: 0.95em
    }

    body:not(.post-template) .post-title {
        font-size: 3.2rem;
    }

    hr {
        margin: 2.4em 0;
    }

    ol, ul {
        padding-left: 2em;
    }

    h1 {
        font-size: 4.5rem;
        text-indent: -2px;
    }

    h2 {
        font-size: 3.6rem;
    }

    h3 {
        font-size: 3.1rem;
    }

    h4 {
        font-size: 2.5rem;
    }

    h5 {
        font-size: 2.2rem;
    }

    h6 {
        font-size: 1.8rem;
    }

    .author-profile {
        padding-bottom: 4rem;
    }

    .author-profile .author-bio {
        font-size: 1.6rem;
    }

    .author-meta span {
        display: block;
        margin: 1.5rem 0;
    }
    .author-profile .author-meta span {
        font-size: 1.6rem;
    }

    .post-head.main-header {
        height:45%;
    }

    .tag-head.main-header,
    .author-head.main-header {
        height: 30%;
    }

    .no-cover.post-head.main-header {
        height: 55px;
        padding: 0;
    }

    .no-cover.author-head.main-header {
        padding: 0;
    }

}


/* ==========================================================================
   11. Media Queries - Smaller than 500px
   ========================================================================== */

@media only screen and (max-width: 500px) {

    .main-header {
        margin-bottom: 15px;
        height: 40%;
    }

    .no-cover.main-header {
        height: 30%;
    }

    .archive-template .main-header {
        max-height: 20%;
        min-height: 160px;
        padding: 10% 0;
    }

    .main-nav {
        padding: 0;
        margin-bottom: 2rem;
        border-bottom: #e0e4e7 1px solid;
    }

    .blog-logo {
        padding: 10px 10px;
    }

    .blog-logo img {
        height: 26px;
    }

    .back-button,
    .subscribe-button {
        height: 44px;
        line-height: 41px;
        border-radius: 0;
        color: #2e2e2e;
        background: transparent;
    }
    .back-button:hover,
    .subscribe-button:hover {
        border-color: #ebeef0;
        color: #2e2e2e;
        background: #ebeef0;
    }

    .back-button {
        padding: 0 15px 0 10px;
    }

    .subscribe-button {
        padding: 0 12px;
    }

    .main-nav.overlay a:hover {
        color: #fff;
        border-color: transparent;
        background: transparent;
    }

    .no-cover .main-nav.overlay {
        background: none;
    }
    .no-cover .main-nav.overlay .back-button,
    .no-cover .main-nav.overlay .subscribe-button {
        border: none;
    }

    .main-nav.overlay .back-button,
    .main-nav.overlay .subscribe-button {
        border-color: transparent;
    }

    .blog-logo img {
        max-height: 80px;
    }

    .inner,
    .pagination {
        width: auto;
        margin: 2rem auto;
    }

    .post {
        width: auto;
        margin-top: 2rem;
        margin-bottom: 2rem;
        margin-left: 16px;
        margin-right: 16px;
        padding-bottom: 2rem;
        line-height: 1.65em;
    }

    .post-date {
        display: none;
    }

    .post-template .post-header {
        margin-bottom: 2rem;
    }

    .post-template .post-date {
        display: inline-block;
    }

    hr {
        margin: 1.75em 0;
    }

    p, ul, ol, dl {
        font-size: 0.95em;
        margin: 0 0 2.5rem 0;
    }

    .page-title {
        font-size: 3rem;
    }

    .post-excerpt p {
        font-size: 0.85em;
    }

    .page-description {
        font-size: 1.6rem;
    }

    h1, h2, h3,
    h4, h5, h6 {
        margin: 0 0 0.3em 0;
    }

    h1 {
        font-size: 2.8rem;
        letter-spacing: -1px;
    }

    h2 {
        font-size: 2.4rem;
        letter-spacing: 0;
    }

    h3 {
        font-size: 2.1rem;
    }

    h4 {
        font-size: 1.9rem;
    }

    h5 {
        font-size: 1.8rem;
    }

    h6 {
        font-size: 1.8rem;
    }

    body:not(.post-template) .post-title {
        font-size: 2.5rem;
    }

    .post-template .post {
        padding-bottom: 0;
        margin-bottom: 0;
    }

    .post-template .site-footer {
        margin-top: 0;
    }

    .post-content img {
        padding: 0;
    }

    .post-content .full-img {
        width: auto;
        width: calc(100% + 32px); /* expand with to image + margins */
        margin: 0 -16px; /* get rid of margins */
        min-width: 0;
        max-width: 112%; /* fallback when calc doesn't work */
    }

    .post-meta {
        font-size: 1.3rem;
        margin-top: 1rem;
    }

    .author-footer {
        padding: 5rem 0 3rem 0;
        text-align: center;
    }

    .author-footer .author {
        margin: 0 1rem 2rem 1rem;
        padding: 0 0 1.6rem 0;
        border-bottom: #EBF2F6 1px dashed;
    }

    .author-footer .connect {
        position: static;
        width: auto;
    }

    .author-footer .connect a {
        margin: 1.4rem 0.8rem 0 0.8rem;
    }

    .author-meta li {
        float: none;
        margin: 0;
        line-height: 1.75em;
    }

    .author-meta li:before {
        display: none;
    }

    .older-posts,
    .newer-posts {
        position: static;
        margin: 10px 0;
    }

    .page-number {
        display: block;
    }

    .site-footer {
        margin-top: 3rem;
    }

    .author-profile {
        padding-bottom: 2rem;
    }

    .post-head.main-header {
        height: 30%;
    }

    .tag-head.main-header,
    .author-head.main-header {
        height: 20%;
    }

    .author-profile .author-image {
        margin-top: -70px;
    }

    .author-profile .author-meta span {
        font-size: 1.4rem;
    }

    .archive-template .main-header .page-description {
        display: none;
    }

    .author-footer {
      margin-bottom: 0;
    }

    .author-footer .social {
      float: none;
    }

}


/* ==========================================================================
   12. Animations
   ========================================================================== */

/* Used to fade in title/desc on the home page */
@-webkit-keyframes fade-in-down {
    0% {
        opacity: 0;
        -webkit-transform: translateY(-10px);
        transform: translateY(-10px);
    }
    100% {
        opacity: 1;
        -webkit-transform: translateY(0);
        transform: translateY(0);
    }
}
@keyframes fade-in-down {
    0% {
        opacity: 0;
        -webkit-transform: translateY(-10px);
        transform: translateY(-10px);
    }
    100% {
        opacity: 1;
        -webkit-transform: translateY(0);
        transform: translateY(0);
    }
}

/* Used to bounce .scroll-down on home page */
@-webkit-keyframes bounce {
    0%, 10%, 25%, 40%, 50% {
        -webkit-transform: translateY(0) rotate(-90deg);
                transform: translateY(0) rotate(-90deg);
    }
    20% {
        -webkit-transform: translateY(-10px) rotate(-90deg);
                transform: translateY(-10px) rotate(-90deg);
    }
    30% {
        -webkit-transform: translateY(-5px) rotate(-90deg);
                transform: translateY(-5px) rotate(-90deg);
    }
}
@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        -webkit-transform: translateY(0) rotate(-90deg);
                transform: translateY(0) rotate(-90deg);
    }
    40% {
        -webkit-transform: translateY(-10px) rotate(-90deg);
                transform: translateY(-10px) rotate(-90deg);
    }
    60% {
        -webkit-transform: translateY(-5px) rotate(-90deg);
                transform: translateY(-5px) rotate(-90deg);
    }
}


/* ==========================================================================
   End of file. Animations should be the last thing here. Do not add stuff
   below this point, or it will probably fuck everything up.
   ========================================================================== */
",CSS
"/***********************
 * fallback mode panel *
 ***********************/
PanelWidget,
PanelApplet,
PanelToplevel {
    padding: 0;
    background-color: @osd_bg;
    background-image: none;
    color: #222222;
}

PanelApplet {
    border-width: 0;
}

PanelSeparator {
    border-width: 0;
    background-color: @osd_bg;
    background-image: none;
    color: @osd_fg;
}

.gnome-panel-menu-bar,
PanelApplet > GtkMenuBar.menubar,
PanelApplet > GtkMenuBar.menubar.menuitem,
PanelMenuBar.menubar,
PanelMenuBar.menubar.menuitem {
    -Panelpanel-icon-visible: true;

    border-width: 0;
    background-color: @osd_bg;
    background-image: none;
}

PanelAppletFrame {
    border-width: 0;
    background-color: @osd_bg;
    background-image: none;
}

PanelApplet .button {
    -GtkButton-inner-border: 2;

    border-width: 0;
    border-radius: 5px;
    border-color: transparent;
    background-color: @osd_bg;
    background-image: none;
    color: #222222;
}

PanelApplet .button:active,
PanelApplet .button:active:prelight {
    border-width: 0 ;
    border-radius: 5px;
    background-color: shade(@button_normal_color, 0.925);
    background-image: none;
    color: shade(@theme_selected_fg_color, 0.95);
}

PanelApplet .button:prelight {
    background-color: shade(@button_normal_color, 1.06);
    background-image: none;
    color: #222222;
}

WnckPager, WnckTasklist {
    background-color: @osd_bg;
}

/************
 * nautilus *
 ************/

.nautilus-canvas-item {
    border-radius: 2px;
}

.nautilus-desktop.nautilus-canvas-item {
    color: white;
    text-shadow: 1px 1px black;
}

.nautilus-desktop.nautilus-canvas-item:active {

}

.nautilus-desktop.nautilus-canvas-item:selected {

}

.nautilus-desktop.nautilus-canvas-item:active,
.nautilus-desktop.nautilus-canvas-item:prelight,
.nautilus-desktop.nautilus-canvas-item:selected {

}

NautilusWindow .toolbar {
    border-width: 0;
    border-style: none;
}


NautilusWindow .primary-toolbar .button.raised.linked.text-button,
NautilusWindow .primary-toolbar .raised.linked .button.text-button,
NautilusWindow .toolbar .button.raised.linked.text-button,
NautilusWindow .toolbar .raised.linked .button.text-button,
NautilusWindow .toolbar .linked .button.text-button,
NautilusWindow .header-bar .button.raised.linked.text-button,
NautilusWindow .header-bar .raised.linked .button.text-button,
NautilusWindow .header-bar .linked .button.text-button,
NautilusWindow .header-bar .button.text-button,
NautilusWindow .toolbar .button.text-button {

}

NautilusWindow .sidebar .frame {
    border-style: none;
}

NautilusWindow > GtkGrid > .pane-separator,
NautilusWindow > GtkGrid > .pane-separator:hover {
    border-width: 0;
    border-style: none;

}

NautilusNotebook.notebook tab {
    padding: 0;
}

NautilusNotebook .frame,
NautilusWindow .sidebar .frame {
    border-width: 0;
}

NautilusQueryEditor .primary-toolbar.toolbar {
    border-width: 0;
}

NautilusQueryEditor .toolbar {
    border-width: 0;
}

NautilusQueryEditor .toolbar:nth-child(2) {

}

NautilusQueryEditor .toolbar:last-child,
NautilusQueryEditor .primary-toolbar.toolbar:only-child {
    border-width: 0;
}

/*
NautilusWindow .sidebar,
NautilusWindow .sidebar.view,
NautilusWindow .sidebar .view,
NautilusWindow .sidebar.view:prelight,
NautilusWindow .sidebar .view:prelight  {
	background-color: @bg_color;
}
*/

/******************
 * gnome terminal *
 ******************/
VteTerminal {
    background-color: @base_color;
    color: @text_color;
}
TerminalWindow,
TerminalWindow GtkNotebook,
TerminalWindow GtkNotebook.notebook {
    background-color: @base_color;
    color: @text_color;
    border-width: 0;
}

TerminalWindow .scrollbars-junction,
TerminalWindow .scrollbar.trough,
TerminalWindow .scrollbar.trough.vertical {
    background-color: @base_color;

}

TerminalWindow .scrollbar.button,
TerminalWindow .scrollbar.button:active,
TerminalWindow .scrollbar.button:active:hover {

}

TerminalWindow .scrollbar.slider {
    background-color: shade(@bg_color,1.0);

}

TerminalWindow .scrollbar.slider:hover,
TerminalWindow .scrollbar.slider.vertical:hover {
    background-color: shade(@bg_color, 1.1);
}

TerminalWindow .scrollbar.slider:active,
TerminalWindow .scrollbar.slider.vertical:active {
    background-color: shade(@bg_color, 1.1);
}

/*********
 * gedit *
 *********/
GeditWindow .pane-separator, 
GeditWindow .pane-separator:hover {
    border-width: 0;
    border-style: none;
    background-color: @theme_bg_color;
}

GeditPanel.title GtkLabel {
    padding: 4px 0;
}

GeditPanel.vertical .title {
    padding: 4px 0 4px 3px;
    border-style: none;
}

GeditPanel .toolbar {
    border-style: none;
    background-color: transparent;
}

GeditDocumentsPanel .view {
    background-color: @theme_base_color;
}

GeditPanel.vertical .notebook {
    padding: 0;
    border-width: 0;
}

GeditPanel.horizontal .notebook {
    padding: 0;
    border-width: 0;
}

GeditWindow .notebook {
    border-width: 0;
}

GeditPanel .notebook tab,
GeditWindow .notebook tab {
    border-width: 0;
}

GeditStatusMenuButton {
	color: @theme_fg_color;
	text-shadow: none;
}

GeditStatusMenuButton.button,
GeditStatusMenuButton.button:hover,
GeditStatusMenuButton.button:active,
GeditStatusMenuButton.button:active:hover {
	text-shadow: none;
        font-weight: normal;
	border-image: none;
	border-style: none;
	border-width: 0;
	border-radius: 5px;
	color: @theme_fg_color;
}

GeditStatusMenuButton.button:hover,
GeditStatusMenuButton.button:active,
GeditStatusMenuButton.button:active:hover {
	color: @theme_selected_fg_color;
}

GeditStatusMenuButton.button:active {

}

GeditViewFrame .gedit-search-slider {
    padding: 4px;
    border-radius: 0 0 5px 5px;
    border-width: 0 1px 1px 1px;
    border-style: solid;
    border-color: @entry_border_color;
    background-color: @theme_base_color;
}

GeditViewFrame .gedit-search-slider .not-found {
    background-color: @error_bg_color;
    background-image: none;
    color: @error_fg_color;
}
GeditViewFrame .gedit-search-slider .entry {
    padding: 5px 5px 6px 5px;
}
GeditViewFrame .gedit-search-slider .not-found:selected {
    background-color: shade(@theme_selected_bg_color, 1.2);
    color: @theme_selected_fg_color;
}

GeditFileBrowserWidget .primary-toolbar.toolbar  {
    padding: 2px;
    border: none;
    background-color: @theme_bg_color;
    background-image: none;
}
GeditFileBrowserWidget .primary-toolbar.toolbar GtkComboBox *{
    color: @theme_fg_color;

}
GeditFileBrowserWidget .primary-toolbar.toolbar GtkComboBox *:hover,
GeditFileBrowserWidget .primary-toolbar.toolbar GtkComboBox .menu * {
    color: @theme_selected_fg_color;

}
.gedit-search-entry-occurrences-tag {
	color: @theme_text_color;
	margin: 2px;
	padding: 2px;
}
/***************
 * font-viewer *
 ***************/
SushiFontWidget {
    padding: 6px 12px;
}

/*************
 * gucharmap *
 *************/
GucharmapChartable {
    background-color: @theme_base_color;
}

GucharmapChartable:active,
GucharmapChartable:focus,
GucharmapChartable:selected {
    background-color: @theme_selected_bg_color;
    color: @theme_selected_fg_color;
}

/* gnome-documents */
.documents-dropdown,
.documents-dropdown .view {
	background-color: @theme_bg_color;
}

.documents-dropdown.frame {
	padding: 6px;
	border-width: 0 1px 1px 1px;
	border-style: solid;
	border-radius: 0 0 5px 5px;
        border-color: @entry_border_color;
}
.documents-dropdown .view.radio,
.documents-dropdown .view.radio:focus {
	background-image: url(""assets/blank.png"");;
	background-color: transparent;
}

.documents-dropdown .view.radio:active,
.documents-dropdown .view.radio:active:focus,
.documents-dropdown .view.radio:active:hover,
.documents-dropdown .view.radio:hover {
	background-color: transparent;
	background-image: url(""assets/radio-checked.png"");
}

.documents-entry-tag {
	background-color: transparent;
	color: @theme_text_color;

	border-radius: 5px;
	border-width: 0;

	margin: 2px;
	padding: 4px;
}

.documents-entry-tag:hover {

}

.documents-entry-tag.button,
.documents-entry-tag.button:focus,
.documents-entry-tag.button:hover,
.documents-entry-tag.button:hover:focus,
.documents-entry-tag.button:active,
.documents-entry-tag.button:active:focus {
	color: @theme_selected_fg_color;

}

/* epiphany */

EphyToolbar .entry:first-child,
EphyToolbar .entry:focus:first-child {
	border-bottom-right-radius: 0;
	border-top-right-radius: 0;

}

EphyToolbar .entry:last-child,
EphyToolbar .entry:focus:last-child {

	border-bottom-left-radius: 0;
	border-top-left-radius: 0;

}
EphyToolbar .location-entry .button:last-child {
	border-bottom-left-radius: 0;
	border-top-left-radius: 0;
}

EphyToolbar .location-entry .button:first-child {
	border-bottom-right-radius: 0;
	border-top-right-radius: 0;

}
EphyOverview GtkScrolledWindow {
	border-style: none;
	background-color: @theme_base_color;
}
EphyWindow.background EphyEmbed.vertical GtkScrolledWindow.frame {
	border-style: none;
}
EphyWindow.background EphyEmbed.vertical EphyOverview .documents-scrolledwin {
	border-style: none;
}
EphyWindow.background EphyNotebook.notebook EphyEmbed.vertical GtkScrolledWindow {
	border-style: none;
}

/* Gnome Contacts */


ContactsContactSheet .button,
ContactsContactSheet .button:focus {
        color: @theme_text_color;
        text-shadow: none;
}
ContactsContactSheet .button:active,
ContactsContactSheet .button:hover,
ContactsContactSheet .button:active:focus,
ContactsContactSheet .button:hover:focus {
        color: @theme_selected_fg_color;
        text-shadow: none;
}
/* evince */
EvWindow.background > GtkBox.vertical > GtkPaned.horizontal > GtkBox.vertical > GtkOverlay > GtkScrolledWindow.frame {
	border-width: 0;
	border-radius: 0;
}

EvWindow.background EvSidebar.vertical .frame {
	border-width: 0;
	border-radius: 0;
}

EvWindow.background EvSidebar.vertical .notebook .frame {
	border-width: 0;
}

EvSidebar .button,
EvSidebar .button:focus {
        color: @theme_text_color;
        text-shadow: none;
}
EvSidebar .button:active,
EvSidebar .button:hover,
EvSidebar .button:active:focus,
EvSidebar .button:hover:focus {
        color: @theme_selected_fg_color;
        text-shadow: none;
}
/* file-roller */
RBSource .toolbar .button,
FrWindow > GtkGrid > GtkToolbar > GtkToolButton > GtkButton.button GtkLabel {
    text-shadow: none;
    icon-shadow: none;
    color: shade(@theme_text_color, 1.1);
}
CcWindow CcUserPanel CcEditableEntry .button,
CcWindow CcUserPanel UmEditableCombo .button,
CcWindow CcUserPanel UmEditableButton .button,
CcWindow CcUserPanel CcEditableEntry .button:focus,
CcWindow CcUserPanel UmEditableCombo .button:focus,
CcWindow CcUserPanel UmEditableButton .button:focus,
RBSource .toolbar .button,
FrWindow > GtkGrid > GtkToolbar > GtkToolButton > GtkButton.button {
    text-shadow: none;
    icon-shadow: none;
    color: shade(@theme_text_color, 1.1);
}
CcWindow CcUserPanel CcEditableEntry .button:hover,
CcWindow CcUserPanel UmEditableCombo .button:hover,
CcWindow CcUserPanel UmEditableButton .button:hover,
CcWindow CcUserPanel CcEditableEntry .button:active,
CcWindow CcUserPanel UmEditableCombo .button:active,
CcWindow CcUserPanel UmEditableButton .button:active,
RBSource .toolbar .button:hover,
RBSource .toolbar .button:active,
FrWindow > GtkGrid > GtkToolbar > GtkToolButton > GtkButton.button GtkLabel:hover,
FrWindow > GtkGrid > GtkToolbar > GtkToolButton > GtkButton.button GtkLabel:active {
    color: @theme_selected_fg_color;
}
CcWindow CcUserPanel CcEditableEntry .button:insensitive,
CcWindow CcUserPanel UmEditableCombo .button:insensitive,
CcWindow CcUserPanel UmEditableButton .button:insensitive,
RBSource .toolbar .button:insensitive,
FrWindow > GtkGrid > GtkToolbar > GtkToolButton > GtkButton.button GtkLabel:insensitive {
    color: shade(@entry_border_color, 0.8);
}

/*********************
 * NEMO File manager *
 *********************/
/* for breadcrumbs path bar */

.nemo-pathbar-button,
NemoPathbarButton {
    border-radius: 5px;
    border-width: 1px;
    border-style: solid;
    border-color: transparent;
    text-shadow: none;
    icon-shadow: none;
    box-shadow: none;
    background-color: @button_normal_color;
    background-image: none;
    color: @theme_selected_fg_color;

}
NemoPathbarButton:active,
NemoPathbarButton:active:hover {
    box-shadow: none;
    background-color: @theme_selected_bg_color;
    background-image: none;
    color: shade(@theme_selected_fg_color, 0.95);
}

NemoPathbarButton:hover {
    box-shadow: none;
    text-shadow: none;
    icon-shadow: none;
    background-color: shade(@button_normal_color, 1.06);
    background-image: none;
    color: @theme_selected_fg_color;
}

NemoPathbarButton:insensitive {
    box-shadow: none;
    background-color: shade(@button_normal_color, 1.17);
    background-image: none;
    color: shade(@entry_border_color, 1.05);
}
NemoPathbarButton *:insensitive {

    color: shade(@entry_border_color, 1.05);
}

/* For Places Sidebar diskfull indicators */

NemoPlacesTreeView {

}

NemoPlacesTreeView:selected {
	-NemoPlacesTreeView-disk-full-bg-color: @entry_border_color;
	-NemoPlacesTreeView-disk-full-fg-color: @button_normal_color;
}

NemoPlacesTreeView:hover {
}

NemoPlacesTreeView:selected:hover {
}


NemoWindow * {

}

NemoWindow .view {
	background-color: @theme_base_color;
}

NemoWindow .rubberband,
NemoWindow .view.rubberband {
	background-color: alpha (@theme_selected_bg_color, 0.3);
}
/* inactive pane */

.nemo-inactive-pane .view {
	background-color: shade(@theme_bg_color, 1.03);
}

",CSS
"/**
 * Entry point for CSS.
 */

.foo {
  color: black;
}
",CSS
"
body {
	font-family: Helvetica;
	color: #111;
	overflow: hidden;
	margin: 0;
	background: #f2f2f2; 
	line-height: 1.5;
}
header {
    display: block;
    margin: 20% auto;
    text-align: center;
    font-size: 50px;
    font-weight: bold;
}
header span {
	position: relative;
    display: inline-block;
}
button {
    display: block;
    margin: 5px auto;
    padding: 5px;
    font-size: 15px;
}",CSS
"div.CodeMirror-wrapping {
	float:left;
	width:275px;
	height:303px;
	border-width:2px;
	border-style:solid;
	background:#fff;
}

#canvas {
	width:470px;
	height:303px;
}
",CSS
".nav, .pagination, .carousel, .panel-title a { cursor: pointer; }

.done-true {
    text-decoration: line-through;
    color: #ddd;
}
.form-control[disabled], .form-control[readonly], .fieldset[disabled], .form-control {
    cursor: pointer;
    background-color: white;
}",CSS
"/*
 *= require ecm/tags/backend/application
 */
",CSS
"/*   
 * Template Name: devAid - Responsive Website Template for developers
 * Version: 1.1
 * Author: Xiaoying Riley
 * Twitter: @3rdwave_themes
 * License: Creative Commons Attribution 3.0 License
 * Website: http://themes.3rdwavemedia.com/
*/
/* style-4.css */
/* ======= Base ======= */
body {
  font-family: 'Lato', arial, sans-serif;
  color: #444;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'Montserrat', sans-serif;
  font-weight: 700;
  color: #50c8c9;
}
a {
  color: #50c8c9;
  -webkit-transition: all 0.4s ease-in-out;
  -moz-transition: all 0.4s ease-in-out;
  -ms-transition: all 0.4s ease-in-out;
  -o-transition: all 0.4s ease-in-out;
}
a:hover {
  text-decoration: underline;
  color: #36afb0;
}
.btn,
a.btn {
  -webkit-transition: all 0.4s ease-in-out;
  -moz-transition: all 0.4s ease-in-out;
  -ms-transition: all 0.4s ease-in-out;
  -o-transition: all 0.4s ease-in-out;
  font-family: 'Montserrat', arial, sans-serif;
  padding: 8px 16px;
  font-weight: bold;
}
.btn .fa,
a.btn .fa {
  margin-right: 5px;
}
.btn:focus,
a.btn:focus {
  color: #fff;
}
a.btn-cta-primary,
.btn-cta-primary {
  background: #1e6162;
  border: 1px solid #1e6162;
  color: #fff;
  font-weight: 600;
  text-transform: uppercase;
}
a.btn-cta-primary:hover,
.btn-cta-primary:hover {
  background: #184e4e;
  border: 1px solid #184e4e;
  color: #fff;
}
a.btn-cta-secondary,
.btn-cta-secondary {
  background: #ffbe57;
  border: 1px solid #ffbe57;
  color: #fff;
  font-weight: 600;
  text-transform: uppercase;
}
a.btn-cta-secondary:hover,
.btn-cta-secondary:hover {
  background: #ffb43e;
  border: 1px solid #ffb43e;
  color: #fff;
}
.text-highlight {
  color: #1e6162;
}
.offset-header {
  padding-top: 90px;
}
pre code {
  font-size: 16px;
}
/* ======= Header ======= */
.header {
  padding: 10px 0;
  background: #50c8c9;
  color: #fff;
  position: fixed;
  width: 100%;
}
.header.navbar-fixed-top {
  background: #fff;
  z-index: 9999;
  -webkit-box-shadow: 0 0 4px rgba(0, 0, 0, 0.4);
  -moz-box-shadow: 0 0 4px rgba(0, 0, 0, 0.4);
  box-shadow: 0 0 4px rgba(0, 0, 0, 0.4);
}
.header.navbar-fixed-top .logo a {
  color: #50c8c9;
}
.header.navbar-fixed-top .main-nav .nav .nav-item a {
  color: #666;
}
.header .logo {
  margin: 0;
  font-size: 26px;
  padding-top: 10px;
}
.header .logo a {
  color: #fff;
}
.header .logo a:hover {
  text-decoration: none;
}
.header .main-nav button {
  background: #1e6162;
  color: #fff !important;
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  -ms-border-radius: 4px;
  -o-border-radius: 4px;
  border-radius: 4px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
}
.header .main-nav button:focus {
  outline: none;
}
.header .main-nav button .icon-bar {
  background-color: #fff;
}
.header .main-nav .navbar-collapse {
  padding: 0;
}
.header .main-nav .nav .nav-item {
  font-weight: normal;
  margin-right: 30px;
  font-family: 'Montserrat', sans-serif;
}
.header .main-nav .nav .nav-item.active a {
  color: #50c8c9;
  background: none;
}
.header .main-nav .nav .nav-item a {
  color: #2a8889;
  -webkit-transition: none;
  -moz-transition: none;
  -ms-transition: none;
  -o-transition: none;
  font-size: 14px;
  padding: 15px 10px;
}
.header .main-nav .nav .nav-item a:hover {
  color: #1e6162;
  background: none;
}
.header .main-nav .nav .nav-item a:focus {
  outline: none;
  background: none;
}
.header .main-nav .nav .nav-item a:active {
  outline: none;
  background: none;
}
.header .main-nav .nav .nav-item.active {
  color: #50c8c9;
}
.header .main-nav .nav .nav-item.last {
  margin-right: 0;
}
/* ======= Promo Section ======= */
.promo {
  background: #50c8c9;
  color: #fff;
  padding-top: 150px;
}
.promo .title {
  font-size: 98px;
  color: #1e6162;
  margin-top: 0;
}
.promo .title .highlight {
  color: #ffbe57;
}
.promo .intro {
  font-size: 28px;
  max-width: 680px;
  margin: 0 auto;
  margin-bottom: 30px;
}
.promo .btns .btn {
  margin-right: 15px;
  font-size: 18px;
  padding: 8px 30px;
}
.promo .meta {
  margin-top: 120px;
  margin-bottom: 30px;
  color: #2a8889;
}
.promo .meta li {
  margin-right: 15px;
}
.promo .meta a {
  color: #2a8889;
}
.promo .meta a:hover {
  color: #1e6162;
}
.promo .social-media {
  background: #309b9c;
  padding: 10px 0;
  margin: 0 auto;
}
.promo .social-media li {
  margin-top: 15px;
}
.promo .social-media li.facebook-like {
  margin-top: 0;
  position: relative;
  top: -5px;
}
/* ======= Page Section ======= */
.about {
  padding: 80px 0;
  background: #f5f5f5;
}
.about .title {
  color: #1e6162;
  margin-top: 0;
  margin-bottom: 60px;
}
.about .intro {
  max-width: 800px;
  margin: 0 auto;
  margin-bottom: 60px;
}
.about .item {
  position: relative;
  margin-bottom: 30px;
}
.about .item .icon-holder {
  position: absolute;
  left: 30px;
  top: 0;
}
.about .item .icon-holder .fa {
  font-size: 24px;
  color: #1e6162;
}
.about .item .content {
  padding-left: 60px;
}
.about .item .content .sub-title {
  margin-top: 0;
  color: #1e6162;
  font-size: 18px;
}
/* ======= Features Section ======= */
.features {
  padding: 80px 0;
  background: #50c8c9;
  color: #fff;
}
.features .title {
  color: #1e6162;
  margin-top: 0;
  margin-bottom: 30px;
}
.features a {
  color: #1e6162;
}
.features a:hover {
  color: #123b3b;
}
.features .feature-list li {
  margin-bottom: 10px;
  color: #1e6162;
}
.features .feature-list li .fa {
  margin-right: 5px;
  color: #fff;
}
/* ======= Docs Section ======= */
.docs {
  padding: 80px 0;
  background: #f5f5f5;
}
.docs .title {
  color: #1e6162;
  margin-top: 0;
  margin-bottom: 30px;
}
.docs .docs-inner {
  max-width: 800px;
  background: #fff;
  padding: 30px;
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  -ms-border-radius: 4px;
  -o-border-radius: 4px;
  border-radius: 4px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  margin: 0 auto;
}
.docs .block {
  margin-bottom: 60px;
}
.docs .code-block {
  margin: 30px inherit;
}
.docs .code-block pre[class*=""language-""] {
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  -ms-border-radius: 4px;
  -o-border-radius: 4px;
  border-radius: 4px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
}
/* ======= License Section ======= */
.license {
  padding: 80px 0;
  background: #f5f5f5;
}
.license .title {
  margin-top: 0;
  margin-bottom: 60px;
  color: #1e6162;
}
.license .license-inner {
  max-width: 800px;
  background: #fff;
  padding: 30px;
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  -ms-border-radius: 4px;
  -o-border-radius: 4px;
  border-radius: 4px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  margin: 0 auto;
}
.license .info {
  max-width: 760px;
  margin: 0 auto;
}
.license .cta-container {
  max-width: 540px;
  margin: 0 auto;
  margin-top: 60px;
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  -ms-border-radius: 4px;
  -o-border-radius: 4px;
  border-radius: 4px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
}
.license .cta-container .speech-bubble {
  background: #ecf9f9;
  color: #1e6162;
  padding: 30px;
  margin-bottom: 30px;
  position: relative;
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  -ms-border-radius: 4px;
  -o-border-radius: 4px;
  border-radius: 4px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
}
.license .cta-container .speech-bubble:after {
  position: absolute;
  left: 50%;
  bottom: -10px;
  margin-left: -10px;
  content: """";
  display: inline-block;
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-top: 10px solid #ecf9f9;
}
.license .cta-container .icon-holder {
  margin-bottom: 15px;
}
.license .cta-container .icon-holder .fa {
  font-size: 56px;
}
.license .cta-container .intro {
  margin-bottom: 30px;
}
/* ======= Contact Section ======= */
.contact {
  padding: 80px 0;
  background: #50c8c9;
  color: #fff;
}
.contact .contact-inner {
  max-width: 760px;
  margin: 0 auto;
}
.contact .title {
  color: #1e6162;
  margin-top: 0;
  margin-bottom: 30px;
}
.contact .intro {
  margin-bottom: 60px;
}
.contact a {
  color: #1e6162;
}
.contact a:hover {
  color: #123b3b;
}
.contact .author-message {
  position: relative;
  margin-bottom: 60px;
}
.contact .author-message .profile {
  position: absolute;
  left: 30px;
  top: 15px;
  width: 100px;
  height: 100px;
}
.contact .author-message .profile img {
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  -ms-border-radius: 50%;
  -o-border-radius: 50%;
  border-radius: 50%;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
}
.contact .author-message .speech-bubble {
  margin-left: 155px;
  background: #44c4c5;
  color: #1e6162;
  padding: 30px;
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  -ms-border-radius: 4px;
  -o-border-radius: 4px;
  border-radius: 4px;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  position: relative;
}
.contact .author-message .speech-bubble .sub-title {
  color: #1e6162;
  font-size: 16px;
  margin-top: 0;
  margin-bottom: 30px;
}
.contact .author-message .speech-bubble a {
  color: #fff;
}
.contact .author-message .speech-bubble:after {
  position: absolute;
  left: -10px;
  top: 60px;
  content: """";
  display: inline-block;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-bottom: 10px solid transparent;
  border-right: 10px solid #44c4c5;
}
.contact .author-message .speech-bubble .source {
  margin-top: 30px;
}
.contact .author-message .speech-bubble .source a {
  color: #1e6162;
}
.contact .author-message .speech-bubble .source .title {
  color: #309b9c;
}
.contact .info .sub-title {
  color: #36afb0;
  margin-bottom: 30px;
  margin-top: 0;
}
.contact .social-icons {
  list-style: none;
  padding: 10px 0;
  margin-bottom: 0;
  display: inline-block;
  margin: 0 auto;
}
.contact .social-icons li {
  float: left;
}
.contact .social-icons li.last {
  margin-right: 0;
}
.contact .social-icons a {
  display: inline-block;
  background: #309b9c;
  width: 48px;
  height: 48px;
  text-align: center;
  padding-top: 12px;
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  -ms-border-radius: 50%;
  -o-border-radius: 50%;
  border-radius: 50%;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  margin-right: 8px;
  float: left;
}
.contact .social-icons a:hover {
  background: #ffaa24;
}
.contact .social-icons a .fa {
  color: #fff;
}
.contact .social-icons a .fa:before {
  font-size: 26px;
  text-align: center;
  padding: 0;
}
/* ======= Footer ======= */
.footer {
  padding: 15px 0;
  background: #123b3b;
  color: #fff;
}
.footer .copyright {
  -webkit-opacity: 0.8;
  -moz-opacity: 0.8;
  opacity: 0.8;
}
.footer .fa-heart {
  color: #fb866a;
}
/* Extra small devices (phones, less than 768px) */
@media (max-width: 767px) {
  .header .main-nav button {
    margin-right: 0;
  }
  .header .main-nav .navbar-collapse {
    padding-left: 15px;
    padding-right: 15px;
  }
  .promo .btns .btn {
    margin-right: 0;
    clear: both;
    display: block;
    margin-bottom: 30px;
  }
  .promo .title {
    font-size: 66px;
  }
  .promo .meta {
    margin-top: 60px;
  }
  .promo .meta li {
    float: none;
    display: block;
    margin-bottom: 5px;
  }
  .contact .author-message {
    text-align: center;
  }
  .contact .author-message .profile {
    position: static;
    margin: 0 auto;
    margin-bottom: 30px;
  }
  .contact .author-message .speech-bubble {
    margin-left: 0;
  }
  .contact .author-message .speech-bubble:after {
    display: none;
  }
  .contact .social-icons a {
    width: 36px;
    height: 36px;
    padding-top: 7px;
    margin-right: 2px;
  }
  .contact .social-icons a .fa:before {
    font-size: 18px;
  }
}
/* Small devices (tablets, 768px and up) */
/* Medium devices (desktops, 992px and up) */
/* Large devices (large desktops, 1200px and up) */
",CSS
"/*! normalize.css v2.1.2 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
/* line 11, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
/* line 30, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
audio,
canvas,
video {
  display: inline-block;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
/* line 41, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */
/* line 51, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
[hidden],
template {
  display: none;
}

/* line 56, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
script {
  display: none !important;
}

/* ==========================================================================
   Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
/* line 70, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
/* line 80, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
body {
  margin: 0;
}

/* ==========================================================================
   Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
/* line 92, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
a {
  background: transparent;
}

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
/* line 100, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
a:focus {
  outline: thin dotted;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
/* line 108, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
a:active,
a:hover {
  outline: 0;
}

/* ==========================================================================
   Typography
   ========================================================================== */
/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
/* line 122, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
/* line 131, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
/* line 139, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari 5 and Chrome.
 */
/* line 148, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
dfn {
  font-style: italic;
}

/**
 * Address differences between Firefox and other browsers.
 */
/* line 156, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/**
 * Address styling not present in IE 8/9.
 */
/* line 166, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */
/* line 175, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}

/**
 * Improve readability of pre-formatted text in all browsers.
 */
/* line 187, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
pre {
  white-space: pre-wrap;
}

/**
 * Set consistent quote types.
 */
/* line 195, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
q {
  quotes: ""\201C"" ""\201D"" ""\2018"" ""\2019"";
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
/* line 203, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
/* line 211, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

/* line 219, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
sup {
  top: -0.5em;
}

/* line 223, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
sub {
  bottom: -0.25em;
}

/* ==========================================================================
   Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
/* line 235, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
img {
  border: 0;
}

/**
 * Correct overflow displayed oddly in IE 9.
 */
/* line 243, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
svg:not(:root) {
  overflow: hidden;
}

/* ==========================================================================
   Figures
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
/* line 255, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
figure {
  margin: 0;
}

/* ==========================================================================
   Forms
   ========================================================================== */
/**
 * Define consistent border, margin, and padding.
 */
/* line 267, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
/* line 278, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
/* line 289, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
/* line 303, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
button,
input {
  line-height: normal;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
/* line 315, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
/* line 328, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
button,
html input[type=""button""],
input[type=""reset""],
input[type=""submit""] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
/* line 340, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * 1. Address box sizing set to `content-box` in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 */
/* line 350, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
input[type=""checkbox""],
input[type=""radio""] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
/* line 362, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
input[type=""search""] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
/* line 374, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
input[type=""search""]::-webkit-search-cancel-button,
input[type=""search""]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
/* line 383, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
/* line 394, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/* ==========================================================================
   Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
/* line 407, D:/Ruby21/lib/ruby/gems/2.1.0/gems/zurb-foundation-4.3.2/lib/../scss/normalize.scss */
table {
  border-collapse: collapse;
  border-spacing: 0;
}
",CSS
"body {
  padding-top: 65px;
}

#footer {
  padding: 10px;
  color: #333;
}

#titulo {
  color: #fff;
}

#textoSobreNosotros {
  color: #333;
}

#login-buttons a, .accounts-dialog a {
  color: rgb(0, 0, 0);
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  line-height: 50px;
  padding: 20px;
}

#submit {
  background-color: #f4511e;
  color: #fff;
}

#formGraffiti {
  border: 2px solid #f4511e;
  border-radius: 12px;
  padding-top: 20px;
  padding-right: 20px;
}

#agregarGraffiti {
  padding-top: 0;
}

#misGraffitis {
  padding-top: 0;
  padding-bottom: 5px;
}

#buscarGraffitis {
  padding-top: 0;
}

#textJumbotron {
  color: #fff;
}

#textJumbotronUsuario {
  color: #fff;
}

.map-container {
  width: 800px;
  max-width: 100%;
  height: 500px;
  margin: 0 auto;
}

.navbar {
  margin-bottom: 0;
  background-color: #f4511e;
  z-index: 9999;
  border: 0;
  font-size: 12px !important;
  line-height: 1.42857143 !important;
  letter-spacing: 4px;
  border-radius: 0;
}

.navbar-nav li a:hover, .navbar-nav li.active a {
  color: #f4511e !important;
  background-color: #fff !important;
}

.navbar-default .navbar-toggle {
  border-color: transparent;
  color: #fff !important;
}

.container .jumbotron, .container-fluid .jumbotron {
  background-color: #f4511e;
}

.jumbotron {
  background-color: #f4511e;
  color: #fff;
  padding: 100px 25px;
}

.container-fluid {
  padding: 60px 50px;
}

.jumbotron h1 {
  color: #fff;
}

.bg-grey {
  background-color: #f6f6f6;
}

div.jumbotron.text-center {
  margin-bottom: 0;
}

ol, ul {
  display: inline-block;
  margin-left: auto;
  margin-right: auto;
}


.react-tags {
  position: relative;
  padding: 6px 0 0 6px;
  border: 1px solid #D1D1D1;
  border-radius: 1px;

  /* shared font styles */
  font-size: 1em;
  line-height: 1.2;

  /* clicking anywhere will focus the input */
  cursor: text;
}

.react-tags.is-focused {
  border-color: #B1B1B1;
}

.react-tags__selected {
  display: inline;
}

.react-tags__selected-tag {
  display: inline-block;
  box-sizing: border-box;
  margin: 0 6px 6px 0;
  padding: 6px 8px;
  border: 1px solid #D1D1D1;
  border-radius: 2px;
  background: #F1F1F1;

  /* match the font styles */
  font-size: inherit;
  line-height: inherit;
}

.react-tags__selected-tag:after {
  content: '\2715';
  color: #AAA;
  margin-left: 8px;
}

.react-tags__selected-tag:hover,
.react-tags__selected-tag:focus {
  border-color: #B1B1B1;
}

.react-tags__search {
  display: inline-block;

  /* match tag layout */
  padding: 7px 2px;
  margin-bottom: 6px;

  /* prevent autoresize overflowing the container */
  max-width: 100%;
}

@media screen and (min-width: 30em) {

  .react-tags__search {
    /* this will become the offsetParent for suggestions */
    position: relative;
  }

}

.react-tags__search input {
  /* prevent autoresize overflowing the container */
  max-width: 100%;

  /* remove styles and layout from this element */
  margin: 0;
  padding: 0;
  border: 0;
  outline: none;

  /* match the font styles */
  font-size: inherit;
  line-height: inherit;
}

.react-tags__search input::-ms-clear {
  display: none;
}

.react-tags__suggestions {
  position: absolute;
  top: 100%;
  left: 80%;
  width: 100%;
}

@media screen and (min-width: 30em) {

  .react-tags__suggestions {
    width: 240px;
  }

}

.react-tags__suggestions ul {
  margin: 4px -1px;
  padding: 0;
  list-style: none;
  background: white;
  border: 1px solid #D1D1D1;
  border-radius: 2px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
}

.react-tags__suggestions li {
  border-bottom: 1px solid #ddd;
  padding: 6px 8px;
}

.react-tags__suggestions li mark {
  text-decoration: underline;
  background: none;
  font-weight: 600;
}

.react-tags__suggestions li:hover {
  cursor: pointer;
  background: #eee;
}

.react-tags__suggestions li.is-active {
  background: #b7cfe0;
}

.react-tags__suggestions li.is-disabled {
  opacity: 0.5;
  cursor: auto;
}

.votingGraffiti1 {
  padding: 50px;
  float: left;
}

.votingGraffiti2 {
  padding: 50px;
  float: right;
}

.nuevos {
  margin: 10px;
  border-radius: 25px;
  border: 2px solid #d34615;
  padding: 20px;
}

.revelacion {
  margin: 10px;
  border-radius: 25px;
  border: 2px solid #d34615;
  padding: 20px;
}

.creativo {
  margin: 10px;
  border-radius: 25px;
  border: 2px solid #d34615;
  padding: 20px;
}

.inspirador {
  margin: 10px;
  border-radius: 25px;
  border: 2px solid #d34615;
  padding: 20px;
}

/* CSS declarations go here */
/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */

html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */

article,
aside,
details, /* 1 */
figcaption,
figure,
footer,
header,
main, /* 2 */
menu,
nav,
section,
summary { /* 1 */
  display: block;
}

/**
 * Add the correct display in IE 9-.
 */

audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */

template, /* 1 */
[hidden] {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */

a {
  background-color: transparent; /* 1 */
  -webkit-text-decoration-skip: objects; /* 2 */
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */

a:active,
a:hover {
  outline-width: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */

b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */

dfn {
  font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Add the correct background and color in IE 9-.
 */

mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10-.
 */

img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */

figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/* Forms
   ========================================================================== */

/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
select,
textarea {
  font: inherit; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Restore the font weight unset by the previous rule.
 */

optgroup {
  font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select { /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */

button,
html [type=""button""], /* 1 */
[type=""reset""],
[type=""submit""] {
  -webkit-appearance: button; /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type=""button""]::-moz-focus-inner,
[type=""reset""]::-moz-focus-inner,
[type=""submit""]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type=""button""]:-moz-focusring,
[type=""reset""]:-moz-focusring,
[type=""submit""]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */

[type=""checkbox""],
[type=""radio""] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type=""number""]::-webkit-inner-spin-button,
[type=""number""]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type=""search""] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */

[type=""search""]::-webkit-search-cancel-button,
[type=""search""]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */

::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

header {
  background: #EEE;
  padding: 20px;
  text-align: center;
}

h1 {
  margin: 0;
}

main {
  max-width: 1000px;
  margin: 0 auto;
  padding: 20px;
}
input[type='text'] {
  width: 45%;
}
button[type='submit'] {
  width: 100%;
  border: solid 1px #111;
  background: #FFF;
  margin-top: 10px;
}

.item {
  margin-top: 20px;
  background: #FFF;
  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
  padding: 20px;
  display: flex;
  justify-content: space-between;
}

.item p {
  font-size: 18px;
  margin: 0;
}

.item div {
  width: 40%;
  cursor: pointer;
  padding: 5px;
  text-align: center;
  transition: 0.3s ease all;
  border-bottom: solid 10px;
}
.item .vote-one {
  border-bottom-color: blue;
}

.item .vote-two {
  border-bottom-color: red;
}

.item > span {
  font-style: italic;
  color: #CCC;
}

.item div:hover {
  background: #EEE;
}
",CSS
"@charset ""utf-8"";
/* CSS Document */
/* -------------------------------------------------------------------------- */
/* BASE AD - typically, we do not mess with this section
/* -------------------------------------------------------------------------- */
body, body * {
    vertical-align: baseline;
    border: 0;
    outline: 0;
    padding: 0;
    margin: 0;
}

/* Div layer for the entire banner. */
#adkit_container {
    position: absolute;
    width: {{width}}px;
    height: {{height}}px;
    border: #9b9b9b 1px solid;
    top: 0;
    left: 0;
    margin: auto;
    overflow: hidden;
    display: none;
}

#adkit_content {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 100;
}

/* Invisible button for background clickthrough. */
#adkit_background_exit {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    cursor: pointer;
    opacity: 0;
    z-index: 400;
}

:focus {
    outline: none;
}

::-moz-focus-inner {
    border: 0;
}

/* -------------------------------------------------------------------------- */
/* Your ad styles here */
",CSS
"/*!
 * # Semantic UI 2.1.6 - Message
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Copyright 2015 Contributors
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */


/*******************************
            Message
*******************************/

.ui.message {
  position: relative;
  min-height: 1em;
  margin: 1em 0em;
  background: #F8F8F9;
  padding: 1em 1.5em;
  line-height: 1.4285em;
  color: rgba(0, 0, 0, 0.87);
  -webkit-transition: opacity 0.1s ease, color 0.1s ease, background 0.1s ease, box-shadow 0.1s ease;
  transition: opacity 0.1s ease, color 0.1s ease, background 0.1s ease, box-shadow 0.1s ease;
  border-radius: 0.30769em;
  box-shadow: 0px 0px 0px 1px rgba(34, 36, 38, 0.22) inset, 0px 0px 0px 0px rgba(0, 0, 0, 0);
}
.ui.message:first-child {
  margin-top: 0em;
}
.ui.message:last-child {
  margin-bottom: 0em;
}

/*--------------
     Content
---------------*/


/* Header */
.ui.message .header {
  display: block;
  font-family: 'Arial', 'Helvetica Neue', Arial, Helvetica, sans-serif;
  font-weight: bold;
  margin: -0.14285em 0em 0rem 0em;
}

/* Default font size */
.ui.message .header:not(.ui) {
  font-size: 1.15384615em;
}

/* Paragraph */
.ui.message p {
  opacity: 0.85;
  margin: 0.75em 0em;
}
.ui.message p:first-child {
  margin-top: 0em;
}
.ui.message p:last-child {
  margin-bottom: 0em;
}
.ui.message .header + p {
  margin-top: 0.25em;
}

/* List */
.ui.message .list:not(.ui) {
  text-align: left;
  padding: 0em;
  opacity: 0.85;
  list-style-position: inside;
  margin: 0.5em 0em 0em;
}
.ui.message .list:not(.ui):first-child {
  margin-top: 0em;
}
.ui.message .list:not(.ui):last-child {
  margin-bottom: 0em;
}
.ui.message .list:not(.ui) li {
  position: relative;
  list-style-type: none;
  margin: 0em 0em 0.3em 1em;
  padding: 0em;
}
.ui.message .list:not(.ui) li:before {
  position: absolute;
  content: '•';
  left: -1em;
  height: 100%;
  vertical-align: baseline;
}
.ui.message .list:not(.ui) li:last-child {
  margin-bottom: 0em;
}

/* Icon */
.ui.message > .icon {
  margin-right: 0.6em;
}

/* Close Icon */
.ui.message > .close.icon {
  cursor: pointer;
  position: absolute;
  margin: 0em;
  top: 0.78575em;
  right: 0.5em;
  opacity: 0.7;
  -webkit-transition: opacity 0.1s ease;
  transition: opacity 0.1s ease;
}
.ui.message > .close.icon:hover {
  opacity: 1;
}

/* First / Last Element */
.ui.message > :first-child {
  margin-top: 0em;
}
.ui.message > :last-child {
  margin-bottom: 0em;
}


/*******************************
            Coupling
*******************************/

.ui.dropdown .menu > .message {
  margin: 0px -1px;
}


/*******************************
            States
*******************************/


/*--------------
    Visible
---------------*/

.ui.visible.visible.visible.visible.message {
  display: block;
}
.ui.icon.visible.visible.visible.visible.message {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

/*--------------
     Hidden
---------------*/

.ui.hidden.hidden.hidden.hidden.message {
  display: none;
}


/*******************************
            Variations
*******************************/


/*--------------
    Compact
---------------*/

.ui.compact.message {
  display: inline-block;
}

/*--------------
    Attached
---------------*/

.ui.attached.message {
  margin-bottom: -1px;
  border-radius: 0.30769em 0.30769em 0em 0em;
  box-shadow: 0em 0em 0em 1px rgba(0, 0, 0, 0.13) inset;
  margin-left: -1px;
  margin-right: -1px;
}
.ui.attached + .ui.attached.message:not(.top):not(.bottom) {
  margin-top: -1px;
  border-radius: 0em;
}
.ui.bottom.attached.message {
  margin-top: -1px;
  border-radius: 0em 0em 0.30769em 0.30769em;
  box-shadow: 0em 0em 0em 1px rgba(0, 0, 0, 0.13) inset, 0px 1px 2px 0 rgba(0, 0, 0, 0.13);
}
.ui.bottom.attached.message:not(:last-child) {
  margin-bottom: 1em;
}
.ui.attached.icon.message {
  width: auto;
}

/*--------------
      Icon
---------------*/

.ui.icon.message {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
}
.ui.icon.message > .icon:not(.close) {
  display: block;
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 auto;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  width: auto;
  line-height: 1;
  vertical-align: middle;
  font-size: 3em;
  opacity: 0.8;
}
.ui.icon.message > .content {
  display: block;
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 auto;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
  vertical-align: middle;
}
.ui.icon.message .icon:not(.close) + .content {
  padding-left: 0rem;
}
.ui.icon.message .circular.icon {
  width: 1em;
}

/*--------------
    Floating
---------------*/

.ui.floating.message {
  box-shadow: 0px 0px 0px 1px rgba(34, 36, 38, 0.22) inset, 0px 2px 4px 0px rgba(34, 36, 38, 0.12), 0px 2px 10px 0px rgba(34, 36, 38, 0.08);
}

/*--------------
     Colors
---------------*/

.ui.black.message {
  background-color: #444C55;
  color: rgba(255, 255, 255, 0.9);
}

/*--------------
     Types
---------------*/


/* Positive */
.ui.positive.message {
  background-color: #FCFFF5;
  color: #2C662D;
}
.ui.positive.message,
.ui.attached.positive.message {
  box-shadow: 0px 0px 0px 1px #A3C293 inset, 0px 0px 0px 0px rgba(0, 0, 0, 0);
}
.ui.positive.message .header {
  color: #1A531B;
}

/* Negative */
.ui.negative.message {
  background-color: #FFF6F6;
  color: #9F3A38;
}
.ui.negative.message,
.ui.attached.negative.message {
  box-shadow: 0px 0px 0px 1px #E0B4B4 inset, 0px 0px 0px 0px rgba(0, 0, 0, 0);
}
.ui.negative.message .header {
  color: #912D2B;
}

/* Info */
.ui.info.message {
  background-color: #E6F1F6;
  color: #4E575B;
}
.ui.info.message,
.ui.attached.info.message {
  box-shadow: 0px 0px 0px 1px #A9D5DE inset, 0px 0px 0px 0px rgba(0, 0, 0, 0);
}
.ui.info.message .header {
  color: #0E566C;
}

/* Warning */
.ui.warning.message {
  background-color: #FFFAF3;
  color: #573A08;
}
.ui.warning.message,
.ui.attached.warning.message {
  box-shadow: 0px 0px 0px 1px #C9BA9B inset, 0px 0px 0px 0px rgba(0, 0, 0, 0);
}
.ui.warning.message .header {
  color: #794B02;
}

/* Error */
.ui.error.message {
  background-color: #FFF6F6;
  color: #9F3A38;
}
.ui.error.message,
.ui.attached.error.message {
  box-shadow: 0px 0px 0px 1px #E0B4B4 inset, 0px 0px 0px 0px rgba(0, 0, 0, 0);
}
.ui.error.message .header {
  color: #912D2B;
}

/* Success */
.ui.success.message {
  background-color: #FCFFF5;
  color: #2C662D;
}
.ui.success.message,
.ui.attached.success.message {
  box-shadow: 0px 0px 0px 1px #A3C293 inset, 0px 0px 0px 0px rgba(0, 0, 0, 0);
}
.ui.success.message .header {
  color: #1A531B;
}

/* Colors */
.ui.inverted.message,
.ui.black.message {
  background-color: #444C55;
  color: rgba(255, 255, 255, 0.9);
}
.ui.red.message {
  background-color: #FFE8E6;
  color: #E03131;
}
.ui.red.message .header {
  color: #d72020;
}
.ui.orange.message {
  background-color: #FFEDDE;
  color: #D26911;
}
.ui.orange.message .header {
  color: #ba5d0f;
}
.ui.yellow.message {
  background-color: #FFF8DB;
  color: #B58105;
}
.ui.yellow.message .header {
  color: #9c6f04;
}
.ui.olive.message {
  background-color: #FBFDEF;
  color: #8ABC1E;
}
.ui.olive.message .header {
  color: #7aa61a;
}
.ui.green.message {
  background-color: #E5F9E7;
  color: #1EBC30;
}
.ui.green.message .header {
  color: #1aa62a;
}
.ui.teal.message {
  background-color: #E1F7F7;
  color: #10A3A3;
}
.ui.teal.message .header {
  color: #0e8c8c;
}
.ui.blue.message {
  background-color: #DFF0FF;
  color: #80A6CD;
}
.ui.blue.message .header {
  color: #6e99c6;
}
.ui.violet.message {
  background-color: #EAE7FF;
  color: #6435C9;
}
.ui.violet.message .header {
  color: #5a30b5;
}
.ui.purple.message {
  background-color: #F6E7FF;
  color: #A333C8;
}
.ui.purple.message .header {
  color: #922eb4;
}
.ui.pink.message {
  background-color: #FFE3FB;
  color: #E03997;
}
.ui.pink.message .header {
  color: #dd238b;
}
.ui.brown.message {
  background-color: #F1E2D3;
  color: #A5673F;
}
.ui.brown.message .header {
  color: #935b38;
}

/*--------------
     Sizes
---------------*/

.ui.small.message {
  font-size: 0.92307692em;
}
.ui.message {
  font-size: 1em;
}
.ui.large.message {
  font-size: 1.15384615em;
}
.ui.huge.message {
  font-size: 1.46153846em;
}
.ui.massive.message {
  font-size: 1.69230769em;
}


/*******************************
         Theme Overrides
*******************************/



/*******************************
        Site Overrides
*******************************/

",CSS
".home-layout {
  padding-top: 50px;
  padding-bottom: 50px;
  text-align: center;
  background: url('https://scontent-ord1-1.xx.fbcdn.net/hphotos-xta1/t31.0-8/10991609_10104851058880999_4908278955780656545_o.jpg') no-repeat center center fixed;
  background-size: cover;
  height: 855px;
}

.home-row {
  position: relative;
  padding-top: 20%;
  padding-bottom: 20%;
}

#home-logo {
  font-family: 'Oswald', sans-serif;
  font-size: 4em;
}

#home-motto {
  font-family: 'Lora', serif;
  font-size: 25px;
}

#home-links {
  float: none;
  margin: 0 auto;
}

.about-layout {
  padding-top: 50px;
  height: 855px;
}

.about-image {
  width: 300px;
}

.portfolio-layout {
  padding-top: 50px;
  /*height: 855px;*/
}

.portfolio-img {
  width: 300px;
  height: 280px;
  box-shadow: 3px 3px 6px #888888;
}

.contact-layout {
  padding-top: 50px;
  height: 500px;
}

footer {
  padding-top: 10px;
  background-color: #85adad;
}

.center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}",CSS
"body {
  font-family: Arial, Verdana, ""Times New Roman"", Times, serif;
}

div.pages {
  font-weight: bold;
}

a.page, span.page {
  padding: 4px 6px;
}

a.page {
  margin: 0 3px;
  border: 1px solid #ddd;
  text-decoration: none;
  color: #0063dc;
}

a.page:hover {
  border: 1px solid #003366;
  background-color: #0063dc;
  color: #fff;
}

span.disabled_page {
  color: #b1aab1;
}

span.current_page {
  color: #ff0084;
}",CSS
