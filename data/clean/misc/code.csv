text,label
"﻿/*
Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
*/
CKEDITOR.plugins.setLang( 'about', 'pt-br', {
	copy: 'Copyright &copy; $1. Todos os direitos reservados.',
	dlgTitle: 'Sobre o CKEditor 4',
	moreInfo: 'Para informações sobre a licença por favor visite o nosso site:'
} );
",JavaScript
"import Ember from 'ember';
import CheckboxMixin from '../mixins/checkbox-mixin';

export default Ember.Component.extend(CheckboxMixin, {
  type: 'checkbox',
  checked: false,

  onChange: function() {
    this.set('checked', this.$('input').prop('checked'));
    this.sendAction(""action"", {
      checked: this.get('checked'),
      value: this.get('value')
    });
  }
});
",JavaScript
"export default {
	hello : ""hello""
};
",JavaScript
"/**
 * @flow
 * @module ProductPropertyInput
 * @extends React.PureComponent
 *
 * @author Oleg Nosov <olegnosov1@gmail.com>
 * @license MIT
 *
 * @description
 * React form for product property(options select only).
 *
 */

import React, { PureComponent } from ""react"";
import { isObject } from ""../../../helpers"";

import type {
  GetLocalization,
  InputEvent,
  ProductPropertyOption,
  Prices,
} from ""../../../types"";

/**
 * @typedef {Object.<string, number>} OptionIndex
 */
export type OptionIndex = {
  [propertyName: string]: number,
};

/**
 * @typedef {Object} OptionObject
 */
export type OptionObject = {|
  onSelect?: (option: OptionObject) => void,
  additionalCost?: Prices,
  value: ProductPropertyOption,
|};

/** @ */
export type PropertyOption = ProductPropertyOption | OptionObject;

/** @ */
export type PropertyOptions = Array<PropertyOption>;

/** @ */
export type OnChange = (obj: { value: OptionIndex }) => void;

export type Props = {|
  name: string,
  options: PropertyOptions,
  selectedOptionIndex: number,
  currency: string,
  onChange: OnChange,
  getLocalization: GetLocalization,
|};

const defaultProps = {
  selectedOptionIndex: 0,
};

export default class ProductPropertyInput extends PureComponent<Props, void> {
  props: Props;

  static defaultProps = defaultProps;

  static displayName = ""ProductPropertyInput"";

  /*
   * If option value is an object, we need to extract primitive value
   */
  static getOptionValue = (value: PropertyOption): ProductPr",JavaScript
"(function(app, undefined) {
  'use strict';

  if(!app) throw new Error('Application ""app"" namespace not found.');

  //----------------------------------------------------------------------------

  console.log( 'hello world' );
  console.log( 'Application Running...' );

  //----------------------------------------------------------------------------
  // @begin: renders

  app.render.jquery();
  app.render.vanilla();

  // @end: renders
  //----------------------------------------------------------------------------
  // @begin: to_jquery

  app.to_jquery.run();

  // @end: to_jquery
  //----------------------------------------------------------------------------
  // @begin: mustache

  app.menu.render();
  app.menu.option.reset();

  // @begin: mustache
  //----------------------------------------------------------------------------

})(window.app);
",JavaScript
"import imageContainer from '../server/api/helpers/imageContainer';

const entries = [
  {
    html: '<img src=""/img/60x30.png"" alt=""60x30"" class=""zoom"" data-zoom-src=""/img/60x30-original.png"">',
  },
  {
    html: `<div>
  <img src=""/img/20x50.jpg"">
</div>
<img src=""/img/40x10.svg"" alt=""40x10"">`,
  },
  {
    html: '<div>Hello, World!</div>',
  },
];

describe('ImageContainer', () => {
  const modifiedEntries = imageContainer(entries, __dirname);

  it('Parses one image', () => {
    expect(modifiedEntries[0].html).toContain('<div class=""imageContainer"" style=""width: 60px;"">');
    expect(modifiedEntries[0].html).toContain('<div style=""padding-bottom: 50%"">');
  });

  it('Parses multiple images', () => {
    expect(modifiedEntries[1].html).toContain('<div class=""imageContainer"" style=""width: 20px;"">');
    expect(modifiedEntries[1].html).toContain('<div style=""padding-bottom: 250%"">');

    expect(modifiedEntries[1].html).toContain('<div class=""imageContainer"" style=""width: 40px;"">');
    expect(modifiedEntries[1].html).toContain('<div style=""padding-bottom: 25%"">');
  });

  it('Doesn’t parse things it shouldn’t', () => {
    expect(modifiedEntries[2].html.length).toEqual(entries[2].html.length);
  });

  it('Doesn’t crash when passing in an empty array', () => {
    const emptyEntries = [];
    expect(emptyEntries).toEqual(imageContainer(emptyEntries));
  });
});
",JavaScript
"import React from 'react';
import HomeLayout from '../layouts/HomeLayout';
import BookEditor from '../components/BookEditor';
import { get } from '../utils/request';

class BookEdit extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            book: null
        };
    }

    componentWillMount() {
        const bookId = this.context.router.params.id;
        get('http://localhost:3000/book/' + bookId)
            .then(res => {
                this.setState({
                    book: res
                });
            });
    }

    render() {
        const { book } = this.state;
        return book ? <BookEditor editTarget={book} /> : <span>加载中...</span>;
    }
}

BookEdit.contextTypes = {
    router: React.PropTypes.object.isRequired
};

export default BookEdit;",JavaScript
"const Nodelist = artifacts.require(""./Nodelist.sol"");
const BiathlonNode = artifacts.require(""./BiathlonNode.sol"");
const SecondNode = artifacts.require(""./SecondNode.sol"");
const BiathlonToken = artifacts.require(""./BiathlonToken.sol"");
const Ownable = artifacts.require('../contracts/ownership/Ownable.sol');

// const MintableToken = artifacts.require('MintableToken.sol');
const SecondBiathlonToken = artifacts.require(""./SecondBiathlonToken.sol"");


let nl;
let bn;
let bt;
let sn;
let st;

contract('BiathlonToken', function(accounts) {

  beforeEach(async function() {
    bn = await BiathlonNode.deployed();
    nl = await Nodelist.deployed();
    bt = await BiathlonToken.deployed();
    st = await SecondBiathlonToken.deployed();
    sn = await SecondNode.deployed();
  });


  it('should have an owner', async function() {
    let owner = await bt.owner();
    assert.isTrue(owner !== 0);
  });

  it('should belong to the correct node', async function() {
    let node = await bt.node_address();
    let bna = await bn.address;
    assert.equal(node, bna, ""Token was not initialised to correct node"");
  });

  it('should have a storage contract that is separate', async function() {
    let storage_address = await bt.storage_address();
    assert.notEqual(storage_address, bt.address);
  });

  it(""should be able to register itself with the Node list of tokens"", async function() {
    let registration = await bt.register_with_node();
    let node_token_count = await bn.count_tokens(",JavaScript
"/*jshint node:true*/
/*global test, suite, setup, teardown*/

'use strict';

var assert = require('assert');
var tika = require('../');

suite('document tests', function() {
	test('detect txt content-type', function(done) {
		tika.type('test/data/file.txt', function(err, contentType) {
			assert.ifError(err);
			assert.equal(typeof contentType, 'string');
			assert.equal(contentType, 'text/plain');
			done();
		});
	});

	test('detect txt content-type and charset', function(done) {
		tika.typeAndCharset('test/data/file.txt', function(err, contentType) {
			assert.ifError(err);
			assert.equal(typeof contentType, 'string');
			assert.equal(contentType, 'text/plain; charset=ISO-8859-1');
			done();
		});
	});

	test('extract from txt', function(done) {
		tika.text('test/data/file.txt', function(err, text) {
			assert.ifError(err);
			assert.equal(typeof text, 'string');
			assert.equal(text, 'Just some text.\n\n');
			done();
		});
	});

	test('extract meta from txt', function(done) {
		tika.meta('test/data/file.txt', function(err, meta) {
			assert.ifError(err);
			assert.ok(meta);
			assert.equal(typeof meta.resourceName[0], 'string');
			assert.deepEqual(meta.resourceName, ['file.txt']);
			assert.deepEqual(meta['Content-Type'], ['text/plain; charset=ISO-8859-1']);
			assert.deepEqual(meta['Content-Encoding'], ['ISO-8859-1']);
			done();
		});
	});

	test('extract meta and text from txt', function(done) {
		tika.extract('test/data/file.txt', function(err, text, meta) {
			as",JavaScript
"const path = require('path');
require('dotenv').config();
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CopyWebpackPlugin = require('copy-webpack-plugin');
const ExtractTextPlugin = require('extract-text-webpack-plugin');
const { AureliaPlugin } = require('aurelia-webpack-plugin');
const { optimize: { CommonsChunkPlugin }, ProvidePlugin } = require('webpack')
const { TsConfigPathsPlugin, CheckerPlugin } = require('awesome-typescript-loader');
var BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;
const UglifyJSPlugin = require('uglifyjs-webpack-plugin')

var BrowserSyncPlugin = require('browser-sync-webpack-plugin');

// config helpers:
const ensureArray = (config) => config && (Array.isArray(config) ? config : [config]) || []
const when = (condition, config, negativeConfig) =>
  condition ? ensureArray(config) : ensureArray(negativeConfig)

// primary config:
const title = 'TechRadar';
const outDir = path.resolve(__dirname, 'dist');
const srcDir = path.resolve(__dirname, 'src');
const nodeModulesDir = path.resolve(__dirname, 'node_modules');
const baseUrl = '/';

const cssRules = [
  { loader: 'css-loader' },
  {
    loader: 'postcss-loader',
    options: { plugins: () => [require('autoprefixer')({ browsers: ['last 2 versions'] })] }
  }
]

module.exports = ({ production, server, extractCss, coverage } = {}) => ({
  resolve: {
    extensions: ['.ts', '.js'],
    modules: [srcDir, 'node_modules'],
    alias: {
      'aurelia-bind",JavaScript
"""use strict"";require(""retape"")(require(""./index""))",JavaScript
"/**
 * This Control enables to render a Scene with a Screen Space Ambient Occlusion (SSAO) effect.
 * 
 * @namespace GIScene
 * @class Control.SSAO
 * @constructor
 * @extends GIScene.Control
 */
GIScene.Control.SSAO = function() {
	
	//inherit
	GIScene.Control.call(this);
	
	var scenePass;
	var ssaoEffect;
	var fxaaEffect;
	var depthTarget;
	var depthShader;
	var depthUniforms;
	var depthMaterial;
	var depthCam;
	var activeCam;
	
	var updateDepthCam = function() {
		
		// if(depthCam !== undefined && depthCam.parent !== undefined){
			// this.scene.camera.remove(depthCam);
		// }
		
		//depthCam
		activeCam = (this.scene.camera instanceof THREE.CombinedCamera)? 
							( (this.scene.camera.inPerspectiveMode)? this.scene.camera.cameraP : this.scene.camera.cameraO ) 
						: 
							this.scene.camera;
						
		depthCam = activeCam.clone();
		this.scene.camera.add(depthCam);
		
		// depthCam = new THREE.PerspectiveCamera();
		// //POSITION
		// depthCam.fov	= activeCam.fov;
		// depthCam.aspect = activeCam.aspect;
		depthCam.near	= 0.1;
		depthCam.far	= 1000;
		depthCam.updateProjectionMatrix();
		//console.log(depthCam);
		//updateSsaoUniforms();//mca
		
	}.bind(this);
	
	var updateSsaoUniforms = function() {
		ssaoEffect.uniforms[ 'tDepth' ].value = depthTarget;
		ssaoEffect.uniforms[ 'size' ].value.x = this.scene.canvas.width;
		ssaoEffect.uniforms[ 'size' ].value.y = this.scene.canvas.height;
		ssaoEffect.uniforms[ 'cameraNear' ].value = depthCam.near;
		ssaoEffect.uniforms",JavaScript
"var GoogleStrategy = require('passport-google-oauth').OAuth2Strategy;
var util = require('util');
var session = require('express-session');
var passport = require('passport');

module.exports = (app, url, appEnv, User) => {

    app.use(session({
        secret: process.env.SESSION_SECRET,
        name: 'freelancalot',
        proxy: true,
        resave: true,
        saveUninitialized: true
    }));

    app.use(passport.initialize());
    app.use(passport.session());

    passport.serializeUser((user, done) => {
        var id = user.get('id');
        console.log('serializeUser: ' + id)
        done(null, id);
    });

    passport.deserializeUser((id, done) => {
        User.findById(id).then((user) => {
            done(null, user);
        })
    });

    var googleOAuth = appEnv.getService('googleOAuth'),
        googleOAuthCreds = googleOAuth.credentials;

    passport.use(new GoogleStrategy({
            clientID: googleOAuthCreds.clientID,
            clientSecret: googleOAuthCreds.clientSecret,
            callbackURL: util.format(""http://%s%s"", url, googleOAuthCreds.callbackPath)
        },
        (token, refreshToken, profile, done) => {
            process.nextTick(() => {
                User.findOrCreate({
                        where: {
                            googleId: profile.id
                        },
                        defaults: {
                            name: profile.displayName,
                            email: profile.emails[0].val",JavaScript
"""use strict"";
Object.defineProperty(exports, ""__esModule"", { value: true });
// Split the input into chunks.
exports.default = (function (input, fail) {
    var len = input.length;
    var level = 0;
    var parenLevel = 0;
    var lastOpening;
    var lastOpeningParen;
    var lastMultiComment;
    var lastMultiCommentEndBrace;
    var chunks = [];
    var emitFrom = 0;
    var chunkerCurrentIndex;
    var currentChunkStartIndex;
    var cc;
    var cc2;
    var matched;
    function emitChunk(force) {
        var len = chunkerCurrentIndex - emitFrom;
        if (((len < 512) && !force) || !len) {
            return;
        }
        chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));
        emitFrom = chunkerCurrentIndex + 1;
    }
    for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {
        cc = input.charCodeAt(chunkerCurrentIndex);
        if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {
            // a-z or whitespace
            continue;
        }
        switch (cc) {
            case 40: // (
                parenLevel++;
                lastOpeningParen = chunkerCurrentIndex;
                continue;
            case 41: // )
                if (--parenLevel < 0) {
                    return fail('missing opening `(`', chunkerCurrentIndex);
                }
                continue;
            case 59: // ;
                if (!parenLevel) {
                    emitChunk();
                }
                continue;
 ",JavaScript
"﻿/*
Copyright (c) 2003-2016, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.md or http://ckeditor.com/license
*/
CKEDITOR.plugins.setLang( 'save', 'de-ch', {
	toolbar: 'Speichern'
} );
",JavaScript
"'use strict';

angular.module('main', ['ngRoute', 'ngResource', 'ui.route', 'main.system', 'main.index', 'main.events']);

angular.module('main.system', []);
angular.module('main.index', []);
angular.module('main.events', []);
'use strict';

//Setting HTML5 Location Mode
angular.module('main').config(['$locationProvider',
    function ($locationProvider) {
        $locationProvider.hashPrefix('!');
    }
]);
'use strict';

angular.module('main.system')
    .factory('Global', [

        function () {
            var obj = this;

            obj._data = {
                app: window.app || false
            };

            return obj._data;
        }

    ]);
'use strict';

angular.element(document).ready(function() {
    //Fixing facebook bug with redirect
    if (window.location.hash === '#_=_') window.location.hash = '#!';

    //Then init the app
    angular.bootstrap(document, ['main']);
});
'use strict';

angular.module('main').config(['$routeProvider',
    function ($routeProvider) {
        $routeProvider
            .when('/', {
                templateUrl: '/views/index.html'
            })
            .otherwise({
                redirectTo: '/'
            });
    }
]);
'use strict';

angular.module('main.index')
    .controller('IndexCtrl', ['$scope', '$routeParams', '$http', '$location', 'Global', 'Event',
        function ($scope, $routeParams, $http, $location, Global, Event) {
            $scope.global = Global;

            $scope.getEvents = function(){
     ",JavaScript
"
console.log(""VS: loading content_script.js..."" + new Date());

// Check if the communication between page and background.js has broken.
var last_message_time = new Date().getTime();
new Promise((resolve) => setTimeout(resolve, 1000000)).then(() => {
    var now = new Date().getTime();
    if (now - last_message_time > 500000) {
        sendAlert('Not having message from background for at least 500s, force reloading');
        reloadPage();
    }
});

chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
    // Update timestamp first.
    last_message_time = new Date().getTime();

    console.log(""VS: received data from content_script.js"" + new Date());
    console.log(request);
    var action = request[""action""];
    takeAction(action, request);
});

var already_logging_in = false;

function takeAction(action, request) {
    var url = window.location.href;
    console.log(""VS: Taking action: "" + action + "" in "" + url);
    if (action === ACTION_FOR_HOMEPAGE) {
        homePage(request);
    } else if (action === ACTION_FOR_LOGIN_PAGE) {
        loginPage(request);
    } else if (action === ACTION_FOR_ASYNC_LOGIN) {
        loginPage(request);
    } else if (action === ACTION_FOR_DASHBOARD_PAGE) {
        dashboardPage(request);
    } else {
        // Other cases.
        console.log(""VS: unknown action:"" + new Date());
        console.log(action);
        return;
    }
}

function dashboardPage(request) {
    console.log(""VS: In dashboard page"" + ne",JavaScript
"import React, {Component} from 'react';
import {connect} from 'react-redux';

class MapFull extends Component {


  constructor() {
    super();
    this.state = {
      htmlContent: null
    };
  }

  componentDidMount() {
    this.getMapHtml();
  }

  componentDidUpdate(prevProps, prevState) {
    if (!this.props.map || this.props.map.filehash !== prevProps.map.filehash) {
      this.getMapHtml();
    }
  }

  getMapHtml() {
    const path = this.props.settings.html_url + this.props.map.filehash;
    fetch(path).then(response => {
      return response.text();
    }).then(response => {
      this.setState({
        htmlContent: response
      });
    });
  }

  getMarkup() {
    return {__html: this.state.htmlContent}
  }

  render() {
    return (
        <div className=""MapFull layoutbox"">
          <h3>{this.props.map.titlecache}</h3>
          <div id=""overDiv"" style={{position: 'fixed', visibility: 'hide', zIndex: 1}}></div>
          <div>
            {this.state.htmlContent ? <div>
              <div dangerouslySetInnerHTML={this.getMarkup()}></div>
            </div> : null}
          </div>
        </div>
    )
  }
}

function mapStateToProps(state) {
  return {settings: state.settings}
}

export default connect(mapStateToProps)(MapFull);
",JavaScript
"export default class State {

    constructor($rootScope) {
        this.$rootScope = $rootScope;
        this.state = [];
    }

    setData(data) {
        console.log('state set data', data)

        this.state = data;
        this.$rootScope.$apply();
    }

    getData() {
        //console.log('state get data', state)
        return this.state;
    }
}
",JavaScript
"var http = require(""http"");
var querystring = require(""querystring""); // 核心模块
var SBuffer=require(""../tools/SBuffer"");
var common=require(""../tools/common"");
var zlib=require(""zlib"");
var redis_pool=require(""../tools/connection_pool""); 

var events = require('events');
var util = require('util'); 

function ProxyAgent(preHeaders,preAnalysisFields,logName){
	this.headNeeds = preHeaders||"""";
	this.preAnalysisFields = preAnalysisFields||"""";
	this.AnalysisFields = {};
	this.logName=logName||"""";
	this.response=null;
	this.reqConf={};
	this.retData=[];
	this.redis =null;  // redis {} redis_key
	events.EventEmitter.call(this);
}

/**
 * 获取服务配置信息
 * @param 服务名
 * @return object 
 */ 
ProxyAgent.prototype.getReqConfig = function(logName){
	var _self=this;
	var Obj={};
	Obj=Config[logName];
	Obj.logger=Analysis.getLogger(logName);
	Obj.name=logName;
	return Obj;
}

ProxyAgent.prototype.doRequest=function(_req,_res){
	var _self=this;
	_self.reqConf=_self.getReqConfig(this.logName);
	logger.debug('进入'+_self.reqConf.desc+""服务"");
	
	var header_obj =this.packageHeaders(_req.headers,this.headNeeds);
		
	var url_obj = url.parse(request.url, true);
	var query_obj = url_obj.query; 
	
	var postData = request.body|| """"; // 获取请求参数
	
	_res.setHeader(""Content-Type"", config.contentType);
	_res.setHeader(config.headerkey, config.headerval);
	var opts=_self.packData(header_obj,query_obj,postData);
	logger.debug(header_obj.mobileid +_self.reqConf.desc+ '接口参数信息：'+opts[0].path +"" data:""+  opts[1]);
	
	if(t",JavaScript
"module.exports = FormButtonsDirective;

function FormButtonsDirective () {
    return {
        restrict: 'AE',
        replace: true,
        scope: {
            submitClick: '&submitClick',
            cancelClick: '&cancelClick'
        },
        templateUrl: '/src/utils/views/formButtons.tmpl.html',
        link: function (scope, elem) {
            angular.element(elem[0].getElementsByClassName('form-button-submit')).on('click', function () {
                scope.submitClick();
            });
            angular.element(elem[0].getElementsByClassName('form-button-cancel')).on('click', function () {
                scope.cancelClick();
            });
        }
    };
}
",JavaScript
"// Copyright (c) 2012 Ecma International.  All rights reserved.
// Ecma International makes this code available under the terms and conditions set
// forth on http://hg.ecmascript.org/tests/test262/raw-file/tip/LICENSE (the
// ""Use Terms"").   Any redistribution of this code must retain the above
// copyright and this notice and otherwise comply with the Use Terms.

/*---
es5id: 15.4.4.21-2-15
description: Array.prototype.reduce - 'length' is property of the global object
includes:
    - runTestCase.js
    - fnGlobalObject.js
---*/

function testcase() {

        function callbackfn(prevVal, curVal, idx, obj) {
            return (obj.length === 2);
        }

        try {
            var oldLen = fnGlobalObject().length;
            fnGlobalObject()[0] = 12;
            fnGlobalObject()[1] = 11;
            fnGlobalObject()[2] = 9;
            fnGlobalObject().length = 2;
            return Array.prototype.reduce.call(fnGlobalObject(), callbackfn, 1) === true;
        } finally {
            delete fnGlobalObject()[0];
            delete fnGlobalObject()[1];
            delete fnGlobalObject()[2];
            fnGlobalObject().length = oldLen;
        }
    }
runTestCase(testcase);
",JavaScript
"(function () {
  'use strict';

  angular
    .module('crimes.routes')
    .config(routeConfig);

  routeConfig.$inject = ['$stateProvider'];

  function routeConfig($stateProvider) {
    $stateProvider
      .state('crimes', {
        abstract: true,
        url: '/crimes',
        template: '<ui-view/>'
      })
      .state('crimes.list', {
        url: '',
        templateUrl: '/modules/crimes/client/views/list-crimes.client.view.html',
        controller: 'CrimesListController',
        controllerAs: 'vm',
        data: {
          pageTitle: 'Crimes List'
        }
      })
      .state('crimes.view', {
        url: '/:crimeId',
        templateUrl: '/modules/crimes/client/views/view-crimes.client.view.html',
        controller: 'CrimesController',
        controllerAs: 'vm',
        resolve: {
          crimeResolve: getCrime
        },
        data: {
          pageTitle: 'Crimes {{ crimeResolve.title }}'
        }
      });
  }

  getCrime.$inject = ['$stateParams', 'CrimesService'];

  function getCrime($stateParams, CrimesService) {
    return CrimesService.get({
      crimeId: $stateParams.crimeId
    }).$promise;
  }
}());
",JavaScript
"var nums = [];
for (var i = 0; i < 100; ++i) {
   nums[i] = Math.floor(Math.random() * 101);
}
insertionsort(nums);
dispArr(nums);
print();
putstr(""Enter a value to count: "");
var val = parseInt(readline());
var retVal = count(nums, val);
print(""Found "" + retVal + "" occurrences of "" + val + ""."");
",JavaScript
"var createSubmit = function(name, primus, keyDict) {
    return function(event) {
        var message = $('#message').val();

        if (message.length === 0) {
            event.preventDefault();
            return;
        }

        $('#message').val('');
        $('#message').focus();

        var BigInteger = forge.jsbn.BigInteger;

        var data = JSON.parse(sessionStorage[name]);
        var pem = data.pem;

        var privateKey = forge.pki.privateKeyFromPem(pem);
        var ownPublicKey = forge.pki.setRsaPublicKey(new BigInteger(data.n), new BigInteger(data.e));

        var keys = [];

        var iv = forge.random.getBytesSync(16);
        var key = forge.random.getBytesSync(16);
        var cipher = forge.cipher.createCipher('AES-CBC', key);
        cipher.start({iv: iv});
        cipher.update(forge.util.createBuffer(message, 'utf8'));
        cipher.finish();
        var encryptedMessage = cipher.output.getBytes();
        var encryptedKey = ownPublicKey.encrypt(key, 'RSA-OAEP');

        keys.push({
            'name': name,
            'key': encryptedKey
        });

        var md = forge.md.sha1.create();
        md.update(message, 'utf8');
        var signature = privateKey.sign(md);

        var recipients = $.map($(""#recipients"").tokenfield(""getTokens""), function(o) {return o.value;});

        var deferredRequests = [];

        for (var i = 0; i < recipients.length; i++) {
            (function (index) {
                var retrieveKey = function",JavaScript
"# Asynchronous Example

An example showing how to delay rendering for asynchronous events.

## Commands

```sh
$ npm install
$ npm run dev
$ npm run build
```


## Code

```js
// webpack.config.babel.js

new HtmlPlugin((assets, defaultTemplate, compiler) => {
  return new Promise((resolve, reject) => {
    var templateData = {
      ...assets,
      title: 'Asynchronous Example'
    }
    setTimeout(resolve, 5 * 1000, {
      'index.html': defaultTemplate(templateData)
    })
  })
})
```


## License

This software is released into the public domain.
",Markdown
"---

layout: post
status: publish
published: true
title: Bad Boys for Life
author:
  display_name: Dylan
  login: dylan
  email: dylan@dylanreed.com
  url: /
author_login: dylan
author_email: dylan@dylanreed.com
author_url: /
wordpress_id: 54
wordpress_url: http://dylanreed.org/?p=54
date: '2003-07-27 09:29:35 -0500'
date_gmt: '2003-07-27 15:29:35 -0500'
categories:
- Awesome
tags: []
comments: []
---

I saw Bad Boys II today. It was pretty good, not as good as legally blonde II, but good. Lots of explosions and a few good car chases. lots of gross morgue humor so thats good. I had fun on saturday at the arts picnic. I dressed up as a clown and ran a muck. a muck a muck a muck thats how i ran. i did probably three 30 min shows and did some crazy unicycling. I am so sleepy.

dylan
",Markdown
"# BKAsciiImage

[![Version](https://img.shields.io/cocoapods/v/BKAsciiImage.svg?style=flat)](http://cocoapods.org/pods/BKAsciiImage)
[![License](https://img.shields.io/cocoapods/l/BKAsciiImage.svg?style=flat)](http://cocoapods.org/pods/BKAsciiImage)
[![Platform](https://img.shields.io/cocoapods/p/BKAsciiImage.svg?style=flat)](http://cocoapods.org/pods/BKAsciiImage)


![Example gif image](./Screenshots/example.gif)

### As seen on Cmd.fm iOS App

https://itunes.apple.com/app/cmd.fm-radio-for-geeks-hackers/id935765356

![Cmd.fm screenshot 1](./Screenshots/cmdfm_01.jpg)
![Cmd.fm screenshot 2](./Screenshots/cmdfm_02.jpg)

## Installation

BKAsciiImage is available through [CocoaPods](http://cocoapods.org). To install it, simply add the following line to your Podfile:

```ruby
pod ""BKAsciiImage""
```

## Usage

### Using BKAsciiConverter class

Import BKAsciiConverter header file

```objective-c
#import <BKAsciiImage/BKAsciiConverter.h>
```

Create a BKAsciiConverter instance

```objective-c
BKAsciiConverter *converter = [BKAsciiConverter new];
```

Convert synchronously

```objective-c
UIImage *inputImage = [UIImage imageNamed:@""anImage""];
UIImage *asciiImage = [converter convertImage:inputImage];
```

Convert in the background providing a completion block. 
Completion block will be called on the main thread.

```objective-c
[converter convertImage:self.inputImage completionHandler:^(UIImage *asciiImage) {
	// do whatever you want with the resulting asciiImage
}];
```

Convert to ",Markdown
"***
View in [[English](README-en.md)][[中文](README.md)]
***
# gocaptcha
go语言验证码服务器

Feature
-------
* 支持中文验证码
* 支持自定义词库、字库
* 支持自定义滤镜机制，通过滤镜来增加干扰，加大识别难度
* 当前的滤镜包括：
	* 支持干扰点
	* 支持干扰线
	* 支持其他模式的干扰
	* 更多模式，可实现imagefilter接口来扩展
* 支持自定义存储引擎，存储引擎可扩展
* 目前支持的存储引擎包括:
	* 内置(buildin)
	* memcache
	* redis (from https://github.com/dtynn/gocaptcha)
	* 如需扩展存储引擎，可实现StoreInterface接口

Useage
------
**安装**

	go get github.com/hanguofeng/gocaptcha

**Quick Start**

参考 [captcha_test.go](captcha_test.go)

参考 [samples/gocaptcha-server](samples/gocaptcha-server)

[Demo](http://hanguofeng-gocaptcha.daoapp.io/)

**文档**

[[captcha.go Wiki](https://github.com/hanguofeng/gocaptcha/wiki)]

TODO
----
* 运维管理工具

LICENCE
-------
gocaptcha使用[[MIT许可协议](LICENSE)]


使用的开源软件列表，表示感谢

* https://github.com/dchest/captcha
* https://github.com/golang/freetype
* https://github.com/bradfitz/gomemcache
* https://code.google.com/p/zpix/
",Markdown
"1. ping命令与ICMP 协议

    ping」是用来探测本机与网络中另一主机之间是否可达的命令，如果两台主机之间ping不通，则表明这两台主机不能建立起连接。ping是定位网络通不通的一个重要手段。

    ping 命令是基于 ICMP 协议来工作的，「 ICMP 」全称为 Internet 控制报文协议（Internet Control Message Protocol）。ping 命令会发送一份ICMP回显请求报文给目标主机，并等待目标主机返回ICMP回显应答。因为ICMP协议会要求目标主机在收到消息之后，必须返回ICMP应答消息给源主机，如果源主机在一定时间内收到了目标主机的应答，则表明两台主机之间网络是可达的。

    详见：
    
- [每天都在用的Ping命令，它到底是什么？](https://zhuanlan.zhihu.com/p/45110873)
- [ICMP协议与ping原理](https://www.s0nnet.com/archives/icmp-ping)

2. telnet命令

    telnet可以测试目的IP某个端口的连通性，假设目的IP为10.14.40.17，目的端口为22，telnet 10.14.40.17 22，如果进入一个可以输入指令的页面，则说明连通成功。如果最后报错，则说明连通失败。

    详见：

- [利用Telnet进行HTTP访问过程的协议分析](https://zhuanlan.zhihu.com/p/61352013)
- [win10系统下用telnet完成一次简单的HTTP请求](https://blog.csdn.net/Mr_DouDo/article/details/79771303)

3. 调试线上代码的技巧

- 直接通过代理工具(fiddler、whistle等)将线上的静态资源请求代理到本地，这样就可以在本地调试线上环境的代码
- 直接在本地起个服务，然后将所有后台端口请求代理(fiddler、whistle等)到线上环境，这样也可以在本地调试线上环境的代码
- 如果是Vue的项目的话，可以通过以下方式开启调试模式
```
步骤如下：
1. 找到Vue构造函数如window.Vue(可以通过搜索Vue的某个实例方法，然后打个断点，将this(此时的this指向Vue)挂载到window上。Vue实例化挂载的元素节点的__vue__属性指向它的vue实例，也可以通过该实例去找Vue构造函数)
1.1. 或者可以找到挂载vue实例的dom节点, 通过${dom}.__vue__.constructor.super获取Vue构造函数
2. Vue.config.devtools=true
3. __VUE_DEVTOOLS_GLOBAL_HOOK__.emit('init', Vue)
```

那么只需要找到页面中的Vue，就可非常方便的打开开发者工具了。

在使用Vue源码的生命周期lifecycle.js代码中，Vue会将vm实例保存在$el元素的 __vue__ 对象上

```js
// @name         Vue调试
// @description  在生产环境开启Vue.js devtools调试

(function () {
  function findVueInstance($el) {
    // console.log(`Finding Vue: ${$el.tagName}`)
    let __vu",Markdown
"# domBareMetal

Xen 4.6. bare metal domain for Odroid XU-3

Tested on Odroid XU3, for toggling GPA2.4 GPIO. Toggling is done directly by changing the register in memory. 

On this link you can find XU3 expansion header: http://odroid.com/dokuwiki/doku.php?id=en:xu3_hardware_gpio

Xen devel thread on enabling emergency console: https://lists.xenproject.org/archives/html/xen-devel/2016-05/msg02524.html 

Next step is enabling MMU.
",Markdown
"---
layout: post_n
title: 《Rust权威指南》笔记
date: 2021-11-20
categories:
  - Reading
description: 陆陆续续将《Rust权威指南》看完了，文中的例子全部按自己的理解重新实现了一遍。回望来途，可谓困难坎坷，步履艰辛；即是如此，也收获满满。Rust语言的学习给我耳目一新的感觉，上一次对学习语言有这种感觉还是在Haskell的学习中。他完全颠覆我理解的语言设计，在除了垃圾回收语言和内存自主控制语言，竟然还有如此方式来保证内存安全。震撼的同时，也感觉整体学习非常吃力，学习曲线异常陡峭。虽然把整本书都看完了，但还有非常多的细节似懂非懂，也无法完全不参照例子自行写出相对复杂的程序；一些语言中很容易实现的代码在Rust中也无法自行实现出来。所以目前只是第一阶段，即入门，以此为记。后面需要通过开源项目学习练手，通过了解常用的写法去深刻体验Rust的设计精髓。
image: /assets/images/rust_programer_cover.jpeg
image-sm: /assets/images/rust_programer_cover.jpeg

---
* ignore but need
{:toc}

## 前言

陆陆续续将《Rust权威指南》(即英文版的[《The Rust Programming Language》](https://doc.rust-lang.org/book/))看完了，文中的例子全部按自己的理解重新实现了一遍(代码在[github](https://github.com/xiaochai/batman/tree/master/RustProject)上)。回望来途，可谓困难坎坷，步履艰辛；即是如此，也收获满满。

Rust语言的学习给我耳目一新的感觉，上一次对学习语言有这种感觉还是在Haskell的学习中。他完全颠覆我理解的语言设计，在除了垃圾回收语言和内存自主控制语言，竟然还有如此方式来保证内存安全。震撼的同时，也感觉整体学习非常吃力，学习曲线异常陡峭。虽然把整本书都看完了，但还有非常多的细节似懂非懂，也无法完全不参照例子自行写出相对复杂的程序；一些语言中很容易实现的代码在Rust中也无法自行实现出来。所以目前只是第一阶段，即入门，以此为记。后面需要通过开源项目学习练手，通过了解常用的写法去深刻体验Rust的设计精髓。

## 学习与参考资料汇总

| 标题        | 说明|链接          | 
| ------------- |:----||:-------------| 
|The Rust Reference| 官方文档，也是本文的英文版 |[https://doc.rust-lang.org/reference/introduction.html](https://doc.rust-lang.org/reference/introduction.html) |
|Rust Primer |gitlab上的学习笔记|[https://hardocs.com/d/rustprimer/](https://hardocs.com/d/rustprimer/) |
|Rust Magazine |Rust月刊|[https://rustmagazine.github.io/rust_magazine_2021/chapter_1/rustc_part1.html](https://rustmagazine.github.",Markdown
"---
title:  The “Example” of Rest
date:  07/09/2021
---

Besides the examples we already have looked at, this idea of types and symbols can apply to the biblical concept of rest as well. To see this, we go to the New Testament book of Hebrews.

`Read Hebrews 4:1–11. What is the remaining promise of entering His rest referring to? How does Israel’s experience during the Exodus and the wilderness wanderings offer additional insights into the idea of entering into God’s rest?`

The theme of perseverance and faithfulness is very important here. Though talking about the seventh-day Sabbath, the main focus of these verses (and what came before; see Hebrews 3:7–19) is really a call for God’s people to be persevering in faith; that is, to remain faithful to the Lord and the gospel.

These passages remind the reader to take the lessons learned from God’s leading in the past seriously, “so that no one may fall by the same sort of disobedience” (Heb. 4:11, ESV). Pay attention, this is an opportunity! Israel did hear the gospel, the text continues, but the Word did not profit them. Instead of having their faith strengthened by trust and obedience, they chose rebellion (compare with Heb. 3:7–15), and thus, they never experienced the rest that God wanted for them.

Hebrews 4:3 points to the close relationship between faith and rest. We can enter into His rest only when we believe and trust the One who promised rest and who can deliver on this promise, and that is, of course, Jesus Christ.
",Markdown
"XHCyclicReuseScrollView
=======================

XHCyclicReuseScrollView is an extensible, reusable, recyclable rolling scrollView element.
",Markdown
"# Chokidar CLI

[![Build Status](https://travis-ci.org/kimmobrunfeldt/chokidar-cli.svg?branch=master)](https://travis-ci.org/kimmobrunfeldt/chokidar-cli)

Fast cross-platform command line utility to watch file system changes.

The underlying watch library is [Chokidar](https://github.com/paulmillr/chokidar), which is one of the best watch utilities for Node. Chokidar is battle-tested:

> It is used in
> [brunch](http://brunch.io),
> [gulp](https://github.com/gulpjs/gulp/),
> [karma](http://karma-runner.github.io),
> [PM2](https://github.com/Unitech/PM2),
> [browserify](http://browserify.org/),
> [webpack](http://webpack.github.io/),
> [BrowserSync](http://www.browsersync.io/),
> [socketstream](http://www.socketstream.org),
> [derby](http://derbyjs.com/),
> and [many others](https://www.npmjs.org/browse/depended/chokidar/).
> It has proven itself in production environments.

## Install

If you need it only with NPM scripts:

```bash
npm install chokidar-cli
```

Or globally

```bash
npm install -g chokidar-cli
```

## Usage

By default `chokidar` streams changes for all patterns to stdout:

```bash
$ chokidar '**/.js' '**/*.less'
change:test/dir/a.js
change:test/dir/a.less
add:test/b.js
unlink:test/b.js
```

Each change is represented with format `event:relativepath`. Possible events: `add`, `unlink`, `addDir`, `unlinkDir`, `change`.

**Output only relative paths on each change**

```bash
$ chokidar '**/.js' '**/*.less' | cut -d ':' -f 2-
test/dir/a.js
test/dir/a.less
test/b.j",Markdown
"Click With Me Now
==============

This is an integration between Interactive Intelligence's CIC platform and Click With Me Now.

See the [wiki](https://github.com/InteractiveIntelligence/ClickWithMeNow/wiki) for more information.

Visit CWMN at http://clickwithmenow.com
",Markdown
"Answer these questions in your reflection:

What git concepts were you struggling with prior to the GPS session?
 - Prior to the GPS session I was having trouble navigating between branches. I also was completely confused on remote and fetch. I thought that you could just use the command git pull which would fetch/merge in one.

What concepts were clarified during the GPS?
 - Using git checkout moves between branches.

What questions did you ask your pair and the guide?
 - I asked them questions on what was troubling me and that cleared things up. I am still a little fuzzy on fetch / remote but I know that will come with more practice.  Git pull is also a compact way to fetch and merge in one.

What still confuses you about git?
 -  When using the remote I am still not completely sure on what it does. I will need to do more research and practice while I work on the HTML this week.

How was your first experience of pairing in a GPS?
 -  My first experience was great! I really enjoyed working with my partner and the guide had some great pointers. Once again my feelings toward DBC are getting better and better as the days go on. I am having a great time learning things that interest me.",Markdown
"# VBA.ModernTheme

### Windows Phone Colour Palette and<p>Colour Selector using WithEvents

Version 1.0.1

The *Windows Phone Theme Colours* is a tight, powerful, and well balanced palette.

This tiny Microsoft Access application makes it a snap to select and pick a value. And it doubles as an intro to implementing *WithEvents*, one of Access' hidden gems.

![General](https://raw.githubusercontent.com/GustavBrock/VBA.ModernTheme/master/images/ModernThemeHeader.png)

Full documentation is found here:

![EE Logo](https://raw.githubusercontent.com/GustavBrock/VBA.ModernTheme/master/images/EE%20Logo.png)

[Create Windows Phone Colour Palette and Selector using WithEvents](https://www.experts-exchange.com/articles/29554/Create-Windows-Phone-Colour-Palette-and-Selector-using-WithEvents.html?preview=yawJg2wkMzc%3D)

<hr>

*If you wish to support my work or need extended support or advice, feel free to:*

<p>

[<img src=""https://raw.githubusercontent.com/GustavBrock/VBA.ModernTheme/master/images/BuyMeACoffee.png"">](https://www.buymeacoffee.com/gustav/)",Markdown
# LeadifyTest,Markdown
"---
layout: post
title: 循环队列
date:   2017-05-13 10:54:37
categories: Java
---

# Java实现的循环队列
`队列`具有先进先出的特点，本文所说的`循环队列`（以下简称队列）的长度是一定的（可以扩容），如果队列满了，新来的元素会覆盖队列中最先来的元素。

它的使用场景是对内存占用有要求的情况下按序缓存一些数据，比如直播中的弹幕。

* 注意：此实现非线程安全
 

```java
import java.util.ArrayList;
import java.util.List;

/**
 * 容量受限的队列，在队列已满的情况下，新入队的元素会覆盖最老的元素。<br>
 * <font color=""red"">此类非线程安全</font>
 * 
 * @author rongzhisheng
 *
 * @param <E>
 */
public class CircleQueue<E> {
    private static final int DEFAULT_CAPACITY = 10;
    private int capacity;
    private int head;// 即将出队的位置
    private int tail;// 即将入队的位置
    private List<E> queue;
    private boolean isFull;// 队列是否已满，队列空和满的时候head==tail

    public CircleQueue() {
        this(DEFAULT_CAPACITY);
    }

    public CircleQueue(int capacity) {
        this.capacity = capacity;
        queue = new ArrayList<>(this.capacity);
        head = tail = 0;
    }

    /**
     * 入队
     * 
     * @param e
     * @return 是否丢弃了最旧的元素
     */
    public boolean add(E e) {
        if (isFull) {
            head = addIndex(head);
            addOrSet(e, tail);
            tail = head;
            return true;
        }
        addOrSet(e, tail);
        tail = addIndex(tail);
        if (head == tail) {
            isFull = true;
        }
        return false;
    }

    public E poll() {
        if (!isFull && head == tail) {
            return null;
        }
        E e = queue.get(head);
        queue.set(head, null);
        head = addIndex(head);
        isFull = ",Markdown
"### Standalone SearchBox

```jsx
const { compose, withProps, lifecycle } = require(""recompose"");
const {
  withScriptjs,
} = require(""react-google-maps"");
const { StandaloneSearchBox } = require(""react-google-maps/lib/components/places/StandaloneSearchBox"");

const PlacesWithStandaloneSearchBox = compose(
  withProps({
    googleMapURL: ""https://maps.googleapis.com/maps/api/js?key=AIzaSyC4R6AN7SmujjPUIGKdyao2Kqitzr1kiRg&v=3.exp&libraries=geometry,drawing,places"",
    loadingElement: <div style={{ height: `100%` }} />,
    containerElement: <div style={{ height: `400px` }} />,
  }),
  lifecycle({
    componentWillMount() {
      const refs = {}

      this.setState({
        places: [],
        onSearchBoxMounted: ref => {
          refs.searchBox = ref;
        },
        onPlacesChanged: () => {
          const places = refs.searchBox.getPlaces();

          this.setState({
            places,
          });
        },
      })
    },
  }),
  withScriptjs  
)(props =>
  <div data-standalone-searchbox="""">
    <StandaloneSearchBox
      ref={props.onSearchBoxMounted}
      bounds={props.bounds}
      onPlacesChanged={props.onPlacesChanged}
    >
      <input
        type=""text""
        placeholder=""Customized your placeholder""
        style={{
          boxSizing: `border-box`,
          border: `1px solid transparent`,
          width: `240px`,
          height: `32px`,
          padding: `0 12px`,
          borderRadius: `3px`,
          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.",Markdown
"---
layout: post
date: 2015-08-29
title: ""Alessandro Angelozzi 101 Sleeveless Chapel Train Sheath/Column""
category: Alessandro Angelozzi
tags: [Alessandro Angelozzi,Alessandro Angelozzi ,Sheath/Column,One shoulder,Chapel Train,Sleeveless]
---
### Alessandro Angelozzi 101
Just **$309.99**
###   Sleeveless Chapel Train Sheath/Column 
<table><tr><td>BRANDS</td><td>Alessandro Angelozzi </td></tr><tr><td>Silhouette</td><td>Sheath/Column</td></tr><tr><td>Neckline</td><td>One shoulder</td></tr><tr><td>Hemline/Train</td><td>Chapel Train</td></tr><tr><td>Sleeve</td><td>Sleeveless</td></tr></table>
<a href=""https://www.readybrides.com/en/alessandro-angelozzi/14072-alessandro-angelozzi-101.html""><img src=""//img.readybrides.com/31923/alessandro-angelozzi-101.jpg"" alt=""Alessandro Angelozzi 101"" style=""width:100%;"" /></a>

<!-- break -->
Buy it: [https://www.readybrides.com/en/alessandro-angelozzi/14072-alessandro-angelozzi-101.html](https://www.readybrides.com/en/alessandro-angelozzi/14072-alessandro-angelozzi-101.html)
",Markdown
"---
title:  ""Does detecting a Minimally Conscious State in the ICU matter ?""
date:   2017-11-22 00:00:00
categories: [Publi]
tags: [Disorders of Consciousness, ICU, Consciousness, MyPublications]
---

Our paper entitled **""Survival and consciousness recovery are better in the minimally conscious state than in the vegetative state""** showing how much it is important to detect Minimally Conscious State (MCS) even early after a brain injury (here <90 days in the ICU) is available online on [*Brain Injury*](http://www.tandfonline.com.gate2.inist.fr/doi/full/10.1080/02699052.2017.1364421).  


Survival and, more importantly, **recovery of consciousness with at least a partial autonomy** (GOSE>3) were more frequent if a patient was diagnosed MCS (47%, in comparison to only 3% for patients in a Vegetative State); see figure below).

![Brain_Injury]({{ site.url }}/images/Brain_injury/Brain_Injury.jpeg)

___

![Fig-1]({{ site.url }}/images/MCS_prognosis/MCS_prog1.jpeg)

***Functional outcome in patients in the vegetative (VS/UWS) and the minimally conscious state (MCS).***   
Histograms of vegetative state (aka Unresponsive Wakefulenss Syndrome - VS/UWS) and MCS outcomes evaluated with the [GOSE scale]({{ site.url }}/2017/Post_GOS-E/).
Delay from acute brain injury and outcome was ~16 months.  
GOSE = 4 corresponds to a patient with a severe disability but conscious and who can be left at least 8h during the day without assistance.

---

**Reference:** Faugeras F, Rohaut B, Valente M,",Markdown
"---
layout: post
title: More Office Interop in PowerShell
---

As part of our team's workflow we create various data files and then generate
tracking issues that we then import into our issue tracking system.

We have a semi-automated process to do this which works fairly well but for
some older issues we had imported I noticed that a vital piece of information
was missing.

When we ingest the issues into the system there is an identifier that we save
into the issue tracking system so we can find this information in our data
files later.

We also generate some reports from our data files one of which is an Excel
spreadsheet that contains the issue identifier and which also contains the
information that was missing from the issue tracking system.

Since there were hundreds of issue that needed updating I didn't want to update
all of the issues in the issue tracking system manually.

The issue tracking system allowed me to create a query and then download a CSV
of the issues that were missing the data. Then I found the spreadsheets that
had the data and wrote the following PowerShell script to generate a CSV file
with the missing data mapped to the issue identifiers:

```powershell
param(
    [Parameter(Mandatory)][string]$issuesCsv,
    [Parameter(Mandatory)][string]$excelReport
)

Add-Type -AssemblyName Microsoft.Office.Interop.Excel

function Get-IssueData {
    param(
        [Parameter(Mandatory)]$workbook,
        [Parameter(Mandatory)][PSCustomObject[]]$issues
    )

   ",Markdown
"---
title: ""Exploring UIAlertController""
date: 2014-09-07 00:00
link_to: swift
---

This morning, I was working on the [sample app](https://github.com/AshFurrow/Moya/issues/39) for [Moya](https://github.com/AshFurrow/Moya), a network abstraction framework that I’ve built on top of [Alamofire](https://github.com/Alamofire/Alamofire). I needed a way to grab some user text input, so I turned to `UIAlertView`. Turns out that that’s deprecated in favour of `UIAlertController`. Hmm.

<!-- more -->

Looking around the internet, there weren’t very many examples of how to use this cool new class, and the [documentation](https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIAlertController_class/) was sparse at best. Let’s take a look at the high-level API and then get into some of the nitty-gritty. (I’m going to write this in Swift because I am not a [dinosaur](http://t.co/Q2hvacChLu).)

`UIAlertController` is a `UIViewController` subclass. This contrasts with `UIAlertView`, a `UIView` subclass. View controllers are (or at least, should be) the main unit of composition when writing iOS applications. It makes a lot of sense that Apple would replace alert views with alert view _controllers_. That’s cool.

Creating an alert view controller is pretty simple. Just use the initializer to create one and then present it to the user as you would present any other view controller.

```swift let alertController = UIAlertController(title: ""Title"", message: ""Message"", ",Markdown
"# hy-kuo.github.io
My personal site :earth_americas:
",Markdown
"# GKDProgress
A progress use CoreAnimation
",Markdown
"Ubench [![Build Status](https://travis-ci.org/devster/ubench.svg?branch=master)](https://travis-ci.org/devster/ubench)
======

Ubench is a PHP micro library for benchmark

> https://github.com/devster/ubench

Installation
------------

### Old school ###

require `src/Ubench.php` in your project.

### Composer ###

Add this to your composer.json

```json
{
    ""require"": {
        ""devster/ubench"": ""~2.0.0""
    }
}
```

Usage
-----

```php
require_once 'src/Ubench.php';

$bench = new Ubench;

$bench->start();

// Execute some code

$bench->end();

// Get elapsed time and memory
echo $bench->getTime(); // 156ms or 1.123s
echo $bench->getTime(true); // elapsed microtime in float
echo $bench->getTime(false, '%d%s'); // 156ms or 1s

echo $bench->getMemoryPeak(); // 152B or 90.00Kb or 15.23Mb
echo $bench->getMemoryPeak(true); // memory peak in bytes
echo $bench->getMemoryPeak(false, '%.3f%s'); // 152B or 90.152Kb or 15.234Mb

// Returns the memory usage at the end mark
echo $bench->getMemoryUsage(); // 152B or 90.00Kb or 15.23Mb

// Runs `Ubench::start()` and `Ubench::end()` around a callable
// Accepts a callable as the first parameter.  Any additional parameters will be passed to the callable.
$result = $bench->run(function ($x) {
    return $x;
}, 1);
echo $bench->getTime();
```

License
-------

Ubench is licensed under the MIT License
",Markdown
"---
title: padding-line-between-statements - Rules
layout: doc
---
<!-- Note: No pull requests accepted for this file. See README.md in the root directory for details. -->

# Require or disallow padding lines between statements (padding-line-between-statements)

(fixable) The `--fix` option on the [command line](../user-guide/command-line-interface#fix) can automatically fix some of the problems reported by this rule.

This rule requires or disallows blank lines between the given 2 kinds of statements.
Properly blank lines help developers to understand the code.

For example, the following configuration requires a blank line between a variable declaration and a `return` statement.

```js
/*eslint padding-line-between-statements: [
    ""error"",
    { blankLine: ""always"", prev: ""var"", next: ""return"" }
]*/

function foo() {
    var a = 1;

    return a;
}
```

## Rule Details

This rule does nothing if no configuration.

A configuration is an object which has 3 properties; `blankLine`, `prev` and `next`. For example, `{ blankLine: ""always"", prev: ""var"", next: ""return"" }` is meaning ""it requires one or more blank lines between a variable declaration and a `return` statement.""
You can supply any number of configurations. If an statement pair matches multiple configurations, the last matched configuration will be used.

```json
{
    ""padding-line-between-statements"": [
        ""error"",
        { ""blankLine"": LINEBREAK_TYPE, ""prev"": STATEMENT_TYPE, ""next"": STATEMENT_TYPE },
       ",Markdown
"---
version: v1.4.13
category: API
redirect_from:
  - /docs/v0.37.8/api/global-shortcut
  - /docs/v0.37.7/api/global-shortcut
  - /docs/v0.37.6/api/global-shortcut
  - /docs/v0.37.5/api/global-shortcut
  - /docs/v0.37.4/api/global-shortcut
  - /docs/v0.37.3/api/global-shortcut
  - /docs/v0.36.12/api/global-shortcut
  - /docs/v0.37.1/api/global-shortcut
  - /docs/v0.37.0/api/global-shortcut
  - /docs/v0.36.11/api/global-shortcut
  - /docs/v0.36.10/api/global-shortcut
  - /docs/v0.36.9/api/global-shortcut
  - /docs/v0.36.8/api/global-shortcut
  - /docs/v0.36.7/api/global-shortcut
  - /docs/v0.36.6/api/global-shortcut
  - /docs/v0.36.5/api/global-shortcut
  - /docs/v0.36.4/api/global-shortcut
  - /docs/v0.36.3/api/global-shortcut
  - /docs/v0.35.5/api/global-shortcut
  - /docs/v0.36.2/api/global-shortcut
  - /docs/v0.36.0/api/global-shortcut
  - /docs/v0.35.4/api/global-shortcut
  - /docs/v0.35.3/api/global-shortcut
  - /docs/v0.35.2/api/global-shortcut
  - /docs/v0.34.4/api/global-shortcut
  - /docs/v0.35.1/api/global-shortcut
  - /docs/v0.34.3/api/global-shortcut
  - /docs/v0.34.2/api/global-shortcut
  - /docs/v0.34.1/api/global-shortcut
  - /docs/v0.34.0/api/global-shortcut
  - /docs/v0.33.9/api/global-shortcut
  - /docs/v0.33.8/api/global-shortcut
  - /docs/v0.33.7/api/global-shortcut
  - /docs/v0.33.6/api/global-shortcut
  - /docs/v0.33.4/api/global-shortcut
  - /docs/v0.33.3/api/global-shortcut
  - /docs/v0.33.2/api/global-shortcut
  - /docs/v0.33.1/api/global-shortcut
  -",Markdown
"<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"">
<head>
<meta http-equiv=""Content-Type"" content=""text/xhtml;charset=UTF-8""/>
<meta http-equiv=""X-UA-Compatible"" content=""IE=9""/>
<meta name=""generator"" content=""Doxygen 1.8.11""/>
<title>V8 API Reference Guide for node.js v8.10.0: Class Members</title>
<link href=""tabs.css"" rel=""stylesheet"" type=""text/css""/>
<script type=""text/javascript"" src=""jquery.js""></script>
<script type=""text/javascript"" src=""dynsections.js""></script>
<link href=""search/search.css"" rel=""stylesheet"" type=""text/css""/>
<script type=""text/javascript"" src=""search/searchdata.js""></script>
<script type=""text/javascript"" src=""search/search.js""></script>
<script type=""text/javascript"">
  $(document).ready(function() { init_search(); });
</script>
<link href=""doxygen.css"" rel=""stylesheet"" type=""text/css"" />
</head>
<body>
<div id=""top""><!-- do not remove this div, it is closed by doxygen! -->
<div id=""titlearea"">
<table cellspacing=""0"" cellpadding=""0"">
 <tbody>
 <tr style=""height: 56px;"">
  <td id=""projectalign"" style=""padding-left: 0.5em;"">
   <div id=""projectname"">V8 API Reference Guide for node.js v8.10.0
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type=""text/javascript"">
var searchBox = new SearchBox(""searchBox"", ""search"",false,'Search');
</script>
  <div id=""navrow1"" cla",HTML
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!-- NewPage -->
<html lang=""en"">
<head>
<!-- Generated by javadoc (1.8.0_101) on Mon Sep 19 15:00:46 UTC 2016 -->
<title>org.springframework.oxm.xmlbeans Class Hierarchy (Spring Framework 4.3.3.RELEASE API)</title><script>var _hmt = _hmt || [];(function() {var hm = document.createElement(""script"");hm.src = ""//hm.baidu.com/hm.js?dd1361ca20a10cc161e72d4bc4fef6df"";var s = document.getElementsByTagName(""script"")[0];s.parentNode.insertBefore(hm, s);})();</script>
<meta name=""date"" content=""2016-09-19"">
<link rel=""stylesheet"" type=""text/css"" href=""../../../../stylesheet.css"" title=""Style"">
<script type=""text/javascript"" src=""../../../../script.js""></script>
</head>
<body>
<script type=""text/javascript""><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title=""org.springframework.oxm.xmlbeans Class Hierarchy (Spring Framework 4.3.3.RELEASE API)"";
        }
    }
    catch(err) {
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class=""topNav""><a name=""navbar.top"">
<!--   -->
</a>
<div class=""skipNav""><a href=""#skip.navbar.top"" title=""Skip navigation links"">Skip navigation links</a></div>
<a name=""navbar.top.firstrow"">
<!--   -->
</a>
<ul class=""navList"" title=""Navigation"">
<li><a href=""../../../../overview-summary.html"">Overview</",HTML
"<span class=""S-prose"">
{% for item in site.data.testimonials %}{% if forloop.last %}
  {% assign testimonial = item[1] %}

  <figure class=""O-block C-testimonial-highlight"">
      <blockquote>“{{ testimonial.content }}”</blockquote>
      <figcaption class=""C-quote-person"">
          <img class=""C-quote-person__avatar"" alt=""photo of {{ testimonial.name }}"" src=""{{ testimonial.avatar_url | prepend: site.testimonials_images_path  }}"">
          {{ testimonial.name }}
          <span class=""C-quote-person__role"">
            {{ testimonial.role }}
            at
            {% if testimonial.company %}
              {% if testimonial.company_url %}
                <a href=""{{ testimonial.company_url }}"">{{ testimonial.company }}</a>
              {% else %}
                {{ testimonial.company }}
              {% endif %}
            {% endif %}
          </span>
      </figcaption>
  </figure>

  <!-- <a class=""C-button T-transparent"" href=""#"">See the project</a> -->

{% endif %}{% endfor %}
</span>",HTML
"﻿<!DOCTYPE html>
<html>
<head>
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <title>jsGrid - Data Manipulation</title>
    <link rel=""stylesheet"" type=""text/css"" href=""demos.css"" />
    <link href='http://fonts.googleapis.com/css?family=Open+Sans:300,600,400' rel='stylesheet' type='text/css'>

    <link rel=""stylesheet"" type=""text/css"" href=""../css/jsgrid.css"" />
    <link rel=""stylesheet"" type=""text/css"" href=""../css/theme.css"" />

    <link rel=""stylesheet"" href=""//code.jquery.com/ui/1.11.2/themes/cupertino/jquery-ui.css"">
    <script src=""//code.jquery.com/jquery-1.10.2.js""></script>
    <script src=""//code.jquery.com/ui/1.11.2/jquery-ui.js""></script>

    <script src=""db.js""></script>

    <script src=""../src/jsgrid.core.js""></script>
    <script src=""../src/jsgrid.load-indicator.js""></script>
    <script src=""../src/jsgrid.load-strategies.js""></script>
    <script src=""../src/jsgrid.sort-strategies.js""></script>
    <script src=""../src/jsgrid.field.js""></script>
    <script src=""../src/jsgrid.field.text.js""></script>
    <script src=""../src/jsgrid.field.number.js""></script>
    <script src=""../src/jsgrid.field.select.js""></script>
    <script src=""../src/jsgrid.field.checkbox.js""></script>
    <script src=""../src/jsgrid.field.control.js""></script>

    <style>
        .details-form-field input,
        .details-form-field select {
            width: 250px;
            float: right;
        }

        .details-form-field {
            margin: 15px 0;
     ",HTML
"<!DOCTYPE html>
<html>

<head>

  <meta charset=""UTF-8"">

  <title>CodePen - A Pen by  Justin Kams</title>

</head>

<body>

<html>
<head>

<title>The Basics of The Web and HTML</title>

</head>

<body>

<h2>The Basics of The Web and HTML</h2>

<p><em></em></p>

<p><em><h3>The Basics of the World Wide Web</h3></em>
The world wide web is a collection of computers with html files on them. The computers communcate
and share the html files when the user requests it in the browser. When a person goes to a web 
page like <a href=""www.google.com"">www.google.com</a>, their computer sends a HTTP Request to 
a server. The server finds the appropriate<b> HTML</b> document and sends it back to the user's 
computer where a web browser interprets the page and displays it on the user's screen.</p>

<p><em><h3>HTML</h3></em>
<b>HTML</b> stands for <em>Hypertext Markup Language</em>. <b>HTML</b> documents form the majority of the content
on the web. <b>HTML</b> documents contain text content which describes <em>""what you see""</em> and markup 
which describes <em>""how it looks""</em>. This video gives a good overview.</p>

<p><em><h3>Tags and Elements</h3></em>
<b>HTML</b> documents are made of <b>HTML</b> elements. When writing <b>HTML</b>, we tell browsers the
type of each element by using <b>HTML</b> tags. This video explains the distinction well.</p>

<p><em><h3>HTML Attributes</h3></em>
  There are many attributes. One for starters is the anchor tag. The anchor tag is used to include 
  li",HTML
"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""utf-8"" />
    <meta http-equiv=""content-type"" content=""text/html; charset=utf-8"" />
    <title>URI.js - URI-Template</title>
    <meta name=""description"" content=""URI.js is a Javascript library for working with URLs."" />

    <script src=""jquery-3.6.0.min.js"" type=""text/javascript""></script>
    <script src=""prettify/prettify.js"" type=""text/javascript""></script>
    <script src=""screen.js"" type=""text/javascript""></script>
    <link href=""screen.css"" rel=""stylesheet"" type=""text/css"" />
    <link href=""prettify/prettify.sunburst.css"" rel=""stylesheet"" type=""text/css"" />
    <script src=""src/URI.min.js"" type=""text/javascript""></script>
    <script type=""text/javascript"">

      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-8922143-3']);
      _gaq.push(['_trackPageview']);

      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();

    </script>
    <style type=""text/css"">
        .tpl-operator {
            font-weight: bold;
            color: #669933;
        }
        .tpl-variable {
            font-weight: bold;
            color: #336699;
        }
        .tpl-modifier {
            font-weight: bold;
            color:",HTML
"<div layout=""row"" layout-align=""space-between center"">
  <md-button href=""#"">Code Challenge for T-Systems</md-button>
  <md-button class=""acme-navbar-text"">Application was created {{ vm.relativeDate }}.</md-button>
</div>

",HTML
"<!DOCTYPE html>

<html>
<head>
<meta content=""text/html; charset=utf-8"" http-equiv=""Content-Type"">

<title>module Rack::Mime - 'Rack Documentation'</title>

<link type=""text/css"" media=""screen"" href=""../rdoc.css"" rel=""stylesheet"">

<script type=""text/javascript"">
  var rdoc_rel_prefix = ""../"";
</script>

<script type=""text/javascript"" charset=""utf-8"" src=""../js/jquery.js""></script>
<script type=""text/javascript"" charset=""utf-8"" src=""../js/navigation.js""></script>
<script type=""text/javascript"" charset=""utf-8"" src=""../js/search_index.js""></script>
<script type=""text/javascript"" charset=""utf-8"" src=""../js/search.js""></script>
<script type=""text/javascript"" charset=""utf-8"" src=""../js/searcher.js""></script>
<script type=""text/javascript"" charset=""utf-8"" src=""../js/darkfish.js""></script>


<body id=""top"" class=""module"">
<nav id=""metadata"">
  <nav id=""home-section"" class=""section"">
  <h3 class=""section-header"">
    <a href=""../index.html"">Home</a>
    <a href=""../table_of_contents.html#classes"">Classes</a>
    <a href=""../table_of_contents.html#methods"">Methods</a>
  </h3>
</nav>


  <nav id=""search-section"" class=""section project-section"" class=""initially-hidden"">
  <form action=""#"" method=""get"" accept-charset=""utf-8"">
    <h3 class=""section-header"">
      <input type=""text"" name=""search"" placeholder=""Search"" id=""search-field""
             title=""Type to search, Up and Down to navigate, Enter to load"">
    </h3>
  </form>

  <ul id=""search-results"" class=""initially-hidden""></ul>
<",HTML
"<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""ja"" lang=""ja"">
<head>
<meta http-equiv=""Content-Type"" content=""application/xhtml+xml; charset=Shift_JIS"" />
<meta name=""keywords"" content=""L[[h"" />
<meta name=""description"" content=""Ðî¶"" />
<title>z[y[WE^Cg</title>
<link rel=""stylesheet"" href=""style.css"" type=""text/css"" />
</head>

<body>

<!-- C -->

<div id=""main"">


<!-- wb_[ -->

<div id=""header"">

<h1>evl[g»ì ®ïÐÌz[y[WÅ·B</h1>

<table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""800"">
  <tr>
    <td><div id=""table-left""><h2><a href=""#""><img src=""img/logo.gif"" alt=""TCgE^Cg"" border=""0"" /></a></h2></div></td>
    <td><div id=""table-right""><b>00-0000-0000</b><br /><img src=""img/icon.gif"" alt=""icon"" border=""0"" /> <a href=""link.html"">N</a>@<img src=""img/icon.gif"" alt=""icon"" border=""0"" /> <a href=""contact.html"">¨â¢í¹</a></div></td>
  </tr>
</table>

</div>

<div id=""header-menu"">
   <ul>
    <li><a href=""index.html"">HOME</a></li>
    <li><a href=""service.html"">T[rXj[</a></li>
    <li><a href=""menu.html"">¿àÉÂ¢Ä</a></li>
    <li><a href=""#"">¨qlÌº</a></li>
    <li><a href=""#"">æ­ é¿â</a></li>
    <li><a href=""#"">ANZXîñ</a></li>
    <li><a href=""sitemap.html"">TCg}bv</a></li>
    <li><a href=""contact",HTML
"<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <title>menhirlib: 48 s 🏆</title>
    <link rel=""shortcut icon"" type=""image/png"" href=""../../../../../favicon.png"" />
    <link href=""../../../../../bootstrap.min.css"" rel=""stylesheet"">
    <link href=""../../../../../bootstrap-custom.css"" rel=""stylesheet"">
    <link href=""//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"" rel=""stylesheet"">
    <script src=""../../../../../moment.min.js""></script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src=""https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js""></script>
      <script src=""https://oss.maxcdn.com/respond/1.4.2/respond.min.js""></script>
    <![endif]-->
  </head>
  <body>
    <div class=""container"">
      <div class=""navbar navbar-default"" role=""navigation"">
        <div class=""container-fluid"">
          <div class=""navbar-header"">
            <a class=""navbar-brand"" href=""../../../../..""><i class=""fa fa-lg fa-flag-checkered""></i> Coq bench</a>
          </div>
          <div id=""navbar"" class=""collapse navbar-collapse"">
            <ul class=""nav navbar-nav"">
              <li><a href=""../.."">clean / released</a></li>
              <li class=""active""><a href="""">8.13.1 / menhirlib - 20200612</a></li>
    ",HTML
"<!DOCTYPE HTML>
<!-- NewPage -->
<html lang=""en"">
<head>
<!-- Generated by javadoc (11.0.10) on Thu Apr 15 10:34:57 CEST 2021 -->
<title>Uses of Class com.wrapper.spotify.model_objects.miscellaneous.CurrentlyPlaying.Builder (Spotify Web API Java Client 6.5.3 API)</title>
<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"">
<meta name=""dc.created"" content=""2021-04-15"">
<link rel=""stylesheet"" type=""text/css"" href=""../../../../../../stylesheet.css"" title=""Style"">
<link rel=""stylesheet"" type=""text/css"" href=""../../../../../../jquery/jquery-ui.css"" title=""Style"">
<script type=""text/javascript"" src=""../../../../../../script.js""></script>
<script type=""text/javascript"" src=""../../../../../../jquery/jszip/dist/jszip.min.js""></script>
<script type=""text/javascript"" src=""../../../../../../jquery/jszip-utils/dist/jszip-utils.min.js""></script>
<!--[if IE]>
<script type=""text/javascript"" src=""../../../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js""></script>
<![endif]-->
<script type=""text/javascript"" src=""../../../../../../jquery/jquery-3.5.1.js""></script>
<script type=""text/javascript"" src=""../../../../../../jquery/jquery-ui.js""></script>
</head>
<body>
<script type=""text/javascript""><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title=""Uses of Class com.wrapper.spotify.model_objects.miscellaneous.CurrentlyPlaying.Builder (Spotify Web API Java Client 6.5.3 API)"";
        }
    }
    catch(err) {
    }
//--",HTML
"<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <title>ergo: Not compatible 👼</title>
    <link rel=""shortcut icon"" type=""image/png"" href=""../../../../../favicon.png"" />
    <link href=""../../../../../bootstrap.min.css"" rel=""stylesheet"">
    <link href=""../../../../../bootstrap-custom.css"" rel=""stylesheet"">
    <link href=""//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"" rel=""stylesheet"">
    <script src=""../../../../../moment.min.js""></script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src=""https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js""></script>
      <script src=""https://oss.maxcdn.com/respond/1.4.2/respond.min.js""></script>
    <![endif]-->
  </head>
  <body>
    <div class=""container"">
      <div class=""navbar navbar-default"" role=""navigation"">
        <div class=""container-fluid"">
          <div class=""navbar-header"">
            <a class=""navbar-brand"" href=""../../../../..""><i class=""fa fa-lg fa-flag-checkered""></i> Coq bench</a>
          </div>
          <div id=""navbar"" class=""collapse navbar-collapse"">
            <ul class=""nav navbar-nav"">
              <li><a href=""../.."">clean / released</a></li>
              <li class=""active""><a href="""">8.10.2 / ergo - 8.6.0</a></li>
       ",HTML
"<!DOCTYPE html>
<html lang='en' dir='auto'><head>
  <meta charset='utf-8'>
<meta name='viewport' content='width=device-width, initial-scale=1'>
<meta name='description' content='The last weekend my colleagues and I had a nice time moving an existing application from a bare-metal infrastructure to AWS. I would like to share some of the focal points involved in such process, in case you’d go through it and would like to know:
 don’t expect everything to work as usual: you are changing the underlying hardware, moving to a virtualized environment. You can test every single part of the application but infrastructural side effects may occur in a second time relying on the provider: consider well which functionalities should be delegated to the cloud provider (AWS, in this case, offers a lot) or should be managed internally; for example S3 is not a distributed filesystem, and in some cases an RDS instance won’t have the same performance as database installed on an EC2 instance test application compliance, not hardware failure: instead of focusing on stress tests, you should focus first on functionality tests to ensure every part of te application is behaving as expected; hardware failure are easily handled in the cloud, that’s the primary purpose of IaaS.'>
<meta name='theme-color' content='#ffcd00'>

<meta property='og:title' content='A smooth migration to the cloud » INGE4PRES RATIONAL THOUGHTS'>
<meta property='og:description' content='The last weekend my colleagues and I had a n",HTML
"﻿<div>

    <table class=""table table-bordered"">       
        <tr>
            <td>
                <div km-term-check name=""root-traits"" locales=""locales"" required ng-change=""onRootTraitsChange()""
                    ng-model=""rootTraits"" terms=""options.rootTraits()"" binding-type=""term[]""></div>
            </td>
        </tr>
        <tr ng-if=""traits['81799D15-669E-4346-9AEC-6834893D2BE4'].selected"">
                <td>
                    <legend>Resistencia a enfermedades y plagas</legend>
                    <div km-term-check name=""traits"" locales=""locales"" required
                        ng-model=""traits['81799D15-669E-4346-9AEC-6834893D2BE4'].items""  ng-change=""onTraitsChange()""
                        terms=""options.traits('81799D15-669E-4346-9AEC-6834893D2BE4')"" binding-type=""term[]""></div>
                </td>
            </tr>
        <tr ng-if=""traits['0C74FEB2-78E8-4163-81EF-2D410FB2FBBC'].selected"">
            <td>
                <legend>Resistencia a herbicidas</legend>
                <div km-term-check name=""traits"" locales=""locales"" required
                    ng-model=""traits['0C74FEB2-78E8-4163-81EF-2D410FB2FBBC'].items""  ng-change=""onTraitsChange()""
                    terms=""options.traits('0C74FEB2-78E8-4163-81EF-2D410FB2FBBC')"" binding-type=""term[]""></div>
            </td>
        </tr>
        <tr ng-if=""traits['87D98E42-4757-42DE-9C3F-815BFAA35218'].selected"">
            <td>
                <legend>Resistencia a los antibióticos</legend>",HTML
"


















	






  
  
  
  































	
	
	



<!DOCTYPE html>
<!--[if lt IE 9]><html class=""no-js lt-ie9"" lang=""en"" dir=""ltr""><![endif]-->
<!--[if gt IE 8]><!-->
<html class=""no-js"" lang=""en"" dir=""ltr"">
<!--<![endif]-->


<!-- Usage: /eic/site/ccc-rec.nsf/tpl-eng/template-1col.html?Open&id=3 (optional: ?Open&page=filename.html&id=x) -->

<!-- Created: ;  Product Code: 536;  Server: stratnotes2.ic.gc.ca -->

<head>
	<!-- Title begins / Début du titre -->
	<title>
    
            
        
          
            Bayview Propeller -
          
        
      
    
    Complete profile - Canadian Company Capabilities - Industries and Business - Industry Canada
  </title>
	<!-- Title ends / Fin du titre -->
 
	<!-- Meta-data begins / Début des métadonnées -->
<meta charset=""utf-8"" />
<meta name=""dcterms.language"" title=""ISO639-2"" content=""eng"" />
<meta name=""dcterms.title"" content="""" />
<meta name=""description"" content="""" />
<meta name=""dcterms.description"" content="""" />
<meta name=""dcterms.type"" content=""report, data set"" />
<meta name=""dcterms.subject"" content=""businesses, industry"" />
<meta name=""dcterms.subject"" content=""businesses, industry"" />
<meta name=""dcterms.issued"" title=""W3CDTF"" content="""" />
<meta name=""dcterms.modified"" title=""W3CDTF"" content="""" />
<meta name=""keywords"" content="""" />

<meta name=""dcterms.creator"" content="""" />
<meta name=""author"" content="""" />
<meta name=""dcterms.created"" title=""W3CDTF"" content="""" />
<meta name=""dct",HTML
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.4.2_05) on Thu Sep 30 22:16:01 GMT+01:00 2004 -->
<TITLE>
org.springframework.web.multipart.support Class Hierarchy (Spring Framework)
</TITLE>


<LINK REL =""stylesheet"" TYPE=""text/css"" HREF=""../../../../../stylesheet.css"" TITLE=""Style"">

<SCRIPT type=""text/javascript"">
function windowTitle()
{
    parent.document.title=""org.springframework.web.multipart.support Class Hierarchy (Spring Framework)"";
}
</SCRIPT>

</HEAD>

<BODY BGCOLOR=""white"" onload=""windowTitle();"">


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME=""navbar_top""><!-- --></A>
<A HREF=""#skip-navbar_top"" title=""Skip navigation links""></A>
<TABLE BORDER=""0"" WIDTH=""100%"" CELLPADDING=""1"" CELLSPACING=""0"" SUMMARY="""">
<TR>
<TD COLSPAN=3 BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">
<A NAME=""navbar_top_firstrow""><!-- --></A>
<TABLE BORDER=""0"" CELLPADDING=""0"" CELLSPACING=""3"" SUMMARY="""">
  <TR ALIGN=""center"" VALIGN=""top"">
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../../../overview-summary.html""><FONT CLASS=""NavBarFont1""><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""package-summary.html""><FONT CLASS=""NavBarFont1""><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <FONT CLASS=""NavBarFont1"">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1""> ",HTML
"
<html>
  <head>
    <meta charset=""utf-8""/>
    <meta http-equiv=""X-UA-Compatible"" content=""IE=Edge""/>
    <title>Blog | Guilherme Matheus Costa</title>
    <meta name=""viewport"" content=""width=device-width, initial-scale=1""/>
    <link href=""/css/essentials.min.css"" rel=""stylesheet"" type=""text/css""/>
    <meta property=""og:site_name"" content=""Guilherme Matheus Costa""/>
  </head>
  <body>
    <h1>Guilherme Matheus Costa</h1>
    <h2>Resume</h2>
  </body>
</html>",HTML
"<h1>
  FOOTBALL
</h1>


</body>

Since the beginning of school we have been analyzing our opponents data for our football team. Since I do not obtain any mathematical 
skills, it was a challenge. All I could and did offer to the table was what appeared the most important out of the data. Such as,
certain number of times a certain play/form was used and the probability of the plays they would execute. My process is shown below.


<img src=""power cat - Google Docs.mhtml""
",HTML
"<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <title>finger-tree: Not compatible 👼</title>
    <link rel=""shortcut icon"" type=""image/png"" href=""../../../../../favicon.png"" />
    <link href=""../../../../../bootstrap.min.css"" rel=""stylesheet"">
    <link href=""../../../../../bootstrap-custom.css"" rel=""stylesheet"">
    <link href=""//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"" rel=""stylesheet"">
    <script src=""../../../../../moment.min.js""></script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src=""https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js""></script>
      <script src=""https://oss.maxcdn.com/respond/1.4.2/respond.min.js""></script>
    <![endif]-->
  </head>
  <body>
    <div class=""container"">
      <div class=""navbar navbar-default"" role=""navigation"">
        <div class=""container-fluid"">
          <div class=""navbar-header"">
            <a class=""navbar-brand"" href=""../../../../..""><i class=""fa fa-lg fa-flag-checkered""></i> Coq bench</a>
          </div>
          <div id=""navbar"" class=""collapse navbar-collapse"">
            <ul class=""nav navbar-nav"">
              <li><a href=""../.."">clean / released</a></li>
              <li class=""active""><a href="""">8.12.1 / finger-tree - 8.7.0</a",HTML
"<!DOCTYPE html>



  


<html class=""theme-next mist use-motion"" lang=""zh-Hans"">
<head>
  <meta charset=""UTF-8""/>
<meta http-equiv=""X-UA-Compatible"" content=""IE=edge"" />
<meta name=""viewport"" content=""width=device-width, initial-scale=1, maximum-scale=1""/>
<meta name=""theme-color"" content=""#222"">









<meta http-equiv=""Cache-Control"" content=""no-transform"" />
<meta http-equiv=""Cache-Control"" content=""no-siteapp"" />
















  
  
  <link href=""/lib/fancybox/source/jquery.fancybox.css?v=2.1.5"" rel=""stylesheet"" type=""text/css"" />







<link href=""/lib/font-awesome/css/font-awesome.min.css?v=4.6.2"" rel=""stylesheet"" type=""text/css"" />

<link href=""/css/main.css?v=5.1.4"" rel=""stylesheet"" type=""text/css"" />


  <link rel=""apple-touch-icon"" sizes=""180x180"" href=""/images/apple-touch-icon-next.png?v=5.1.4"">


  <link rel=""icon"" type=""image/png"" sizes=""32x32"" href=""/images/favicon-32x32-next.png?v=5.1.4"">


  <link rel=""icon"" type=""image/png"" sizes=""16x16"" href=""/images/favicon-16x16-next.png?v=5.1.4"">


  <link rel=""mask-icon"" href=""/images/logo.svg?v=5.1.4"" color=""#222"">





  <meta name=""keywords"" content=""Hexo, NexT"" />










<meta name=""description"" content=""About technology and about life."">
<meta property=""og:type"" content=""website"">
<meta property=""og:title"" content=""Ice summer bug&#39;s notes"">
<meta property=""og:url"" content=""https://summerbuger.github.io/archives/2016/index.html"">
<meta property=""og:site_name"" content=""Ice summer bug&#39;s notes"">
<meta pro",HTML
"<!DOCTYPE html>
<html lang=""en"">
<head>
  <title>Rice Diseases</title>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
  <link rel=""stylesheet"" href=""static/bootstrap.min.css"">
  <script src=""static/jquery.min.js""></script>
  <script src=""static/bootstrap.min.js""></script>
</head>
<body>
<nav class=""navbar navbar-default"">
  <div class=""container-fluid"">
    <div class=""navbar-header"">
      <a class=""navbar-brand"" href=""/"">Forecast</a>
    </div>
    <ul class=""nav navbar-nav"">
      <li class=""active""><a href=""/"">Home</a></li>
      <li class=""dropdown"">
        <a class=""dropdown-toggle"" data-toggle=""dropdown"" href=""#"">Rice Diseases
        <span class=""caret""></span></a>
        <ul class=""dropdown-menu"">
          <li><a href=""/1"">Brown Spot Disease</a></li>
          <li><a href=""/2"">Blast Disease</a></li>
          <li><a href=""/3"">Bacterial Leaf Streak Disease</a></li>
          <li><a href=""/4"">Dirty Panicle Disease</a></li>
          <li><a href=""/5"">Bacterial Leaf Blight Disease</a></li> 
        </ul>
      </li>
      <li><a href=""/graph"">Graph</a></li> 
      <li><a href=""/read"">Data</a></li> 
      <li><a href=""/contact"">Contact</a></li> 
    </ul>
  </div>
</nav>

<div class=""container"">
  <div class=""jumbotron"">
    <h1>Bacterial Leaf Streak Disease</h1>
      
      <h2>Symptoms</h2>
      <p>
Symptoms are narrow, dark-greenish, water-soaked, interveinal streaks of various lengths, initially restricted to the l",HTML
"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <meta name=""generator"" content=""rustdoc"">
    <meta name=""description"" content=""API documentation for the Rust `benchmark` fn in crate `test`."">
    <meta name=""keywords"" content=""rust, rustlang, rust-lang, benchmark"">

    <title>test::bench::benchmark - Rust</title>

    <link rel=""stylesheet"" type=""text/css"" href=""../../main.css"">

    <link rel=""shortcut icon"" href=""http://www.rust-lang.org/favicon.ico"">
    
</head>
<body class=""rustdoc"">
    <!--[if lte IE 8]>
    <div class=""warning"">
        This old browser is unsupported and will most likely display funky
        things.
    </div>
    <![endif]-->

    

    <section class=""sidebar"">
        <a href='../../test/index.html'><img src='http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png' alt='' width='100'></a>
        <p class='location'><a href='../index.html'>test</a>::<wbr><a href='index.html'>bench</a></p><script>window.sidebarCurrent = {name: 'benchmark', ty: 'fn', relpath: ''};</script><script defer src=""sidebar-items.js""></script>
    </section>

    <nav class=""sub"">
        <form class=""search-form js-only"">
            <div class=""search-container"">
                <input class=""search-input"" name=""search""
                       autocomplete=""off""
                       placeholder=""Click or press 'S' to search, '?' for more options...""
                   ",HTML
"<html><!-- Created using the cpp_pretty_printer from the dlib C++ library.  See http://dlib.net for updates. --><head><title>dlib C++ Library - matrix_expressions_ex.cpp</title></head><body bgcolor='white'><pre>
<font color='#009900'>// The contents of this file are in the public domain. See LICENSE_FOR_EXAMPLE_PROGRAMS.txt
</font>
<font color='#009900'>/*
    This example contains a detailed discussion of the template expression
    technique used to implement the matrix tools in the dlib C++ library.

    It also gives examples showing how a user can create their own custom
    matrix expressions.

    Note that you should be familiar with the dlib::matrix before reading
    this example.  So if you haven't done so already you should read the
    matrix_ex.cpp example program.
*/</font>


<font color='#0000FF'>#include</font> <font color='#5555FF'>&lt;</font>iostream<font color='#5555FF'>&gt;</font>
<font color='#0000FF'>#include</font> <font color='#5555FF'>&lt;</font>dlib<font color='#5555FF'>/</font>matrix.h<font color='#5555FF'>&gt;</font>

<font color='#0000FF'>using</font> <font color='#0000FF'>namespace</font> dlib;
<font color='#0000FF'>using</font> <font color='#0000FF'>namespace</font> std;

<font color='#009900'>// ----------------------------------------------------------------------------------------
</font>
<font color='#0000FF'><u>void</u></font> <b><a name='custom_matrix_expressions_example'></a>custom_matrix_expressions_example</b><font face='Lucida Console",HTML
"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!-- NewPage -->
<html lang=""en"">
<head>
<!-- Generated by javadoc (version 1.7.0_65) on Wed Dec 03 20:33:24 CET 2014 -->
<meta http-equiv=""Content-Type"" content=""text/html"" charset=""UTF-8"">
<title>net.sourceforge.pmd.lang.xsl.rule.xpath (PMD XML and XSL 5.2.2 Test API)</title>
<meta name=""date"" content=""2014-12-03"">
<link rel=""stylesheet"" type=""text/css"" href=""../../../../../../../stylesheet.css"" title=""Style"">
</head>
<body>
<script type=""text/javascript""><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title=""net.sourceforge.pmd.lang.xsl.rule.xpath (PMD XML and XSL 5.2.2 Test API)"";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class=""topNav""><a name=""navbar_top"">
<!--   -->
</a><a href=""#skip-navbar_top"" title=""Skip navigation links""></a><a name=""navbar_top_firstrow"">
<!--   -->
</a>
<ul class=""navList"" title=""Navigation"">
<li><a href=""../../../../../../../overview-summary.html"">Overview</a></li>
<li class=""navBarCell1Rev"">Package</li>
<li>Class</li>
<li><a href=""package-use.html"">Use</a></li>
<li><a href=""package-tree.html"">Tree</a></li>
<li><a href=""../../../../../../../deprecated-list.html"">Deprecated</a></li>
<li><a href=""../../../../../../../index-all.html"">Index</a></li>
<li><a href=""../../../../../../../help-doc.html"">Help</a",HTML
"{% macro scenario_tabs(selected,num,path, id) %}
  <div class=""section-tabs js-tabs clearfix mb20"">
    <ul>

      {% set navs = [
        {url:""timeline-review"",label:""Timeline""},
        {url:""details-fme"",label:""Details""},
        {url:""evidence-portal"",label:""Evidence""},
		{url:""appointment"",label:""Appointment""}
        ] %} 
   
      {% for item in navs %}
        <li {% if item.url == selected %} class=""active""{% endif %}><a href=""/fha/scrutiny-scenarios/scenario7/{{ item.url }}/"">{{ item.label }}</a></li>
      {% endfor %}
    </ul>
  </div>
{% endmacro %}
",HTML
"<h1>Access Denied</h1>

<p>You have logged in correctly, but you have tried to access a page without a high enough level of security clearance.</p>",PHP
"<?php

/*
 * This file is part of the Sylius package.
 *
 * (c) Paweł Jędrzejewski
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace Sylius\Bundle\CoreBundle\Command;

use Sylius\Component\Core\Model\AdminUserInterface;
use Sylius\Component\User\Repository\UserRepositoryInterface;
use Symfony\Component\Console\Helper\QuestionHelper;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Question\Question;
use Symfony\Component\Console\Style\SymfonyStyle;
use Symfony\Component\Validator\Constraints\Email;
use Symfony\Component\Validator\Constraints\NotBlank;
use Symfony\Component\Validator\ConstraintViolationListInterface;
use Webmozart\Assert\Assert;

final class SetupCommand extends AbstractInstallCommand
{
    /**
     * {@inheritdoc}
     */
    protected function configure(): void
    {
        $this
            ->setName('sylius:install:setup')
            ->setDescription('Sylius configuration setup.')
            ->setHelp(<<<EOT
The <info>%command.name%</info> command allows user to configure basic Sylius data.
EOT
            )
        ;
    }

    /**
     * {@inheritdoc}
     */
    protected function execute(InputInterface $input, OutputInterface $output): void
    {
        $currency = $this->get('sylius.setup.currency')->setup($input, $output, $this->getHelper('qu",PHP
"<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');

include __DIR__.'/../../../application/config/config.php';

/*
|--------------------------------------------------------------------------
| Base Site URL
|--------------------------------------------------------------------------
|
| URL to your CodeIgniter root. Typically this will be your base URL,
| WITH a trailing slash:
|
|	http://example.com/
|
| If this is not set then CodeIgniter will guess the protocol, domain and
| path to your installation.
|
*/
$config['base_url']	= $config['gi_base_url'].'/api/';

/*
|--------------------------------------------------------------------------
| Index File
|--------------------------------------------------------------------------
|
| Typically this will be your index.php file, unless you've renamed it to
| something else. If you are using mod_rewrite to remove the page set this
| variable so that it is blank.
|
*/
$config['index_page'] = '';

/*
|--------------------------------------------------------------------------
| URI PROTOCOL
|--------------------------------------------------------------------------
|
| This item determines which server global should be used to retrieve the
| URI string.  The default setting of 'AUTO' works for most servers.
| If your links do not seem to work, try one of the other delicious flavors:
|
| 'AUTO'			Default - auto detects
| 'PATH_INFO'		Uses the PATH_INFO
| 'QUERY_STRING'	Uses the QUERY_STRING
| 'REQUEST_URI'		Use",PHP
"<?php
/**
 * This file is part of the PrestaCMSThemeBasicBundle
 *
 * (c) PrestaConcept <www.prestaconcept.net>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace Presta\CMSThemeBasicBundle\DependencyInjection;

use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;

/**
 * This is the class that validates and merges configuration from your app/config files
 *
 * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html#cookbook-bundles-extension-config-class}
 *
 * @author Nicolas Bastien <nbastien@prestaconcept.net>
 */
class Configuration implements ConfigurationInterface
{
    /**
     * {@inheritDoc}
     */
    public function getConfigTreeBuilder()
    {
        $treeBuilder = new TreeBuilder();
        $treeBuilder->root('presta_cms_theme_basic');

        // Here you should define the parameters that are allowed to
        // configure your bundle. See the documentation linked above for
        // more information on that topic.

        return $treeBuilder;
    }
}
",PHP
"<?php

namespace Zycon42\Security\Application;

use Nette;
use Nette\Application\Request;
use Nette\Reflection\ClassType;
use Nette\Reflection\Method;
use Symfony\Component\ExpressionLanguage\Expression;

class PresenterRequirementsChecker extends Nette\Object {

    /**
     * @var ExpressionEvaluator
     */
    private $expressionEvaluator;

    private $failedExpression;

    public function __construct(ExpressionEvaluator $expressionEvaluator) {
        $this->expressionEvaluator = $expressionEvaluator;
    }

    /**
     * @param ClassType|Method $element
     * @param Request $request
     * @return bool
     * @throws \InvalidArgumentException
     */
    public function checkRequirement($element, Request $request) {
        if ($element instanceof ClassType) {
            $expressions = $this->getClassExpressionsToEvaluate($element);
        } else if ($element instanceof Method) {
            $expressions = $this->getMethodExpressionsToEvaluate($element);
        } else
            throw new \InvalidArgumentException(""Argument 'element' must be instanceof Nette\\Reflection\\ClassType or Nette\\Reflection\\Method"");

        if (!empty($expressions)) {
            foreach ($expressions as $expression) {
                $result = $this->expressionEvaluator->evaluate($expression, $request);
                if (!$result) {
                    $this->failedExpression = $expression;
                    return false;
                }
            }
        }
        retur",PHP
"<?php

namespace App\AAS_Bundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use App\AAS_Bundle\Utils\AAS as AAS;

/**
 * Person
 */
class Person
{
    /**
     * @var integer
     */
    private $id;

    /**
     * @var string
     */
    private $surname;

    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $patronymic;

    /**
     * @var string
     */
    private $position;

    /**
     * @var \App\AAS_Bundle\Entity\Witness
     */
    private $witness;

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    private $phone_numbers;

    /**
     * @var \App\AAS_Bundle\Entity\Team
     */
    private $team;


    /**
     * @var \DateTime
     */
    private $created_at;

    /**
     * @var \DateTime
     */
    private $updated_at;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->phone_numbers = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set surname
     *
     * @param string $surname
     * @return Person
     */
    public function setSurname($surname)
    {
        $this->surname = $surname;
    
        return $this;
    }

    /**
     * Get surname
     *
     * @return string 
     */
    public functi",PHP
"<?php

namespace App\Models;

use Fwartner\Katching\Cacheable;
use Illuminate\Database\Eloquent\Model;

use Illuminate\Database\Eloquent\SoftDeletes;

class Comment extends Model
{
    use Cacheable, SoftDeletes;

    protected $table = 'comments';

    protected $fillable = [
        'content',
        'is_spam',
        'user_id',
        'thread_id'
    ];

    protected $casts = [
        'is_spam' => 'boolean'
    ];

    public function owner()
    {
        return $this->belongsTo(User::class, 'user_id');
    }

    public function forum()
    {
        return $this->belongsTo(Forum::class, 'forum_id');
    }

    public function thread()
    {
        return $this->belongsTo(Thread::class, 'thread_id');
    }
}
",PHP
"<?php

/*
 * This File is part of the Lucid\Common\Tests\Struct package
 *
 * (c) iwyg <mail@thomas-appel.com>
 *
 * For full copyright and license information, please refer to the LICENSE file
 * that was distributed with this package.
 */

namespace Lucid\Common\Tests\Struct;

use Lucid\Common\Struct\Items;

/**
 * @class ItemsTest
 *
 * @package Lucid\Common\Tests\Struct
 * @version $Id$
 * @author iwyg <mail@thomas-appel.com>
 */
class ItemsTest extends \PHPUnit_Framework_TestCase
{

    /** @test */
    public function testConstructWithData()
    {
        $list = new Items(1, 2, 3, 4, 5);
        $this->assertEquals(5, count($list));
        $this->assertEquals([1, 2, 3, 4, 5], $list->toArray());
    }

    /** @test */
    public function testPop()
    {
        $list = new Items(1, 2, 3, 4, 5);

        $this->assertEquals(5, $list->pop());
        $this->assertEquals(2, $list->pop(1));
        $this->assertEquals(4, $list->pop(2));
    }

    /** @test */
    public function popShouldThrowErrorOnInvalidIndex()
    {
        $list = new Items(1, 2);

        try {
            $this->assertEquals(4, $list->remove(3));
        } catch (\InvalidArgumentException $e) {
            $this->assertTrue(true);
            return;
        }
        $this->fail();
    }

    /** @test */
    public function testInsert()
    {
        $list = new Items(1, 2, 3, 4, 5);

        $list->insert(3, 'foo');
        $this->assertEquals([1, 2, 3, 'foo', 4, 5], $list->toArray());
    }


",PHP
"<?php

namespace App\Controller;

use Core\http;
use Core\view;
use Core\db;

class main
{
    protected $http;
    protected $view;
    protected $db;

    public function __construct()
    {
        $this->http = new http();
        $this->view = new view();
        $this->db   = new db();
    }
}",PHP
"<?php
namespace DuxCms\Model;
use Think\Model;
/**
 * 扩展字段数据操作
 */
class FieldDataModel extends Model {

    //设置操作表
    public function setTable($name) {
        $this->trueTableName = $this->tablePrefix.'ext_'.$name;
    }

    /**
     * 获取列表
     * @return array 列表
     */
    public function loadList($where,$limit = 0,$order='data_id DESC'){
        return  $this->where($where)->limit($limit)->order($order)->select();
    }

    /**
     * 获取数量
     * @return array 数量
     */
    public function countList($where){
        return $this->where($where)->count();
    }

    /**
     * 获取信息
     * @param int $dataId ID
     * @return array 信息
     */
    public function getInfo($dataId)
    {
        $map = array();
        $map['data_id'] = $dataId;
        return $this->where($map)->find();
    }

    /**
     * 更新信息
     * @param string $type 更新类型
     * @param array $fieldsetInfo 字段信息
     * @param bool $prefix POST前缀
     * @return bool 更新状态
     */
    public function saveData($type = 'add' , $fieldsetInfo){
        //获取字段列表
        $fieldList=D('DuxCms/Field')->loadList('fieldset_id='.$fieldsetInfo['fieldset_id']);
        if(empty($fieldList)||!is_array($fieldList)){
            return;
        }
        //设置数据列表
        $valiRules = array();
        $autoRules = array();
        $data = array();
        foreach ($fieldList as $value) {
            $data[$value['field']] = I('Fieldset_'.$value['field']);
            $verify_data = base64_decode($value['verify_data']);",PHP
"<?php 

/*
 * This file is part of the Pho package.
 *
 * (c) Emre Sokullu <emre@phonetworks.org>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Pho\Lib\Graph;

/**
 * Holds the relationship between nodes and edges.
 * 
 * EdgeList objects are attached to all Node objects, they are
 * created at object initialization. They contain edge objects
 * categorized by their direction. 
 * 
 * @see ImmutableEdgeList For a list that doesn't accept new values.
 * 
 * @author Emre Sokullu <emre@phonetworks.org>
 */
class EdgeList
{

    /**
     * The node thay this edgelist belongs to
     *
     * @var NodeInterface
     */
    private $master;

    /**
     * An internal pointer of outgoing nodes in [ID=>EncapsulatedEdge] format 
     * where ID belongs to the edge.
     *
     * @var array
     */
    private $out = [];

    /**
     * An internal pointer of incoming nodes in [ID=>EncapsulatedEdge] format
     * where ID belongs to the edge
     *
     * @var array
     */
    private $in = [];

    /**
     * An internal pointer of incoming nodes in [ID=>[ID=>EncapsulatedEdge]] format
     * where first ID belongs to the node, and second to the edge.
     *
     * @var array
     */
    private $from = [];

    /**
     * An internal pointer of outgoing nodes in [ID=>[ID=>EncapsulatedEdge]] format
     * where first ID belongs to the node, and second to the edge.
     *
     * @var arr",PHP
"
<section id=""content"">

        <!--start container-->

        <div id=""breadcrumbs-wrapper"" class="""" style=""width:100%;"">
                        <div class=""header-search-wrapper grey hide-on-large-only"">
                            <i class=""mdi-action-search active""></i>
                            <input type=""text"" name=""Search"" class=""header-search-input z-depth-2"" placeholder=""Explore Materialize"">
                        </div>
                      <div class=""container"">
                        <div class=""row"">
                          <div class=""col s12 m12 l12"">
                            <h5 class=""breadcrumbs-title"">New Progres perunit</h5>
                            <ol class=""breadcrumb"">
                                <li><a href=""<?php echo site_url('administrator'); ?>"">Dashboard</a></li>
                                <li><a href=""<?php echo site_url('administrator/main/progres_unit');?>"">Progres perUnit</a></li>
                                <li class=""active"">New Progres perUnit</li>
                            </ol>
                          </div>
                        </div>
                      </div>
                    </div>          

        <div class=""col s12 m12 l6"">
                  <div class=""card-panel"">
                <div class=""col s12 m12 l6""  style=""width:100%;"">
                  <div class=""card-panel"" style=""width:100%;"">                  
                    <h4 class=""header2"">New Pro",PHP
"<!-- 
Safe sample
input : get the $_GET['userData'] in an array
sanitize : settype (float)
File : unsafe, use of untrusted data in a comment
-->

<!--Copyright 2015 Bertrand STIVALET 

Permission is hereby granted, without written agreement or royalty fee, to

use, copy, modify, and distribute this software and its documentation for

any purpose, provided that the above copyright notice and the following

three paragraphs appear in all copies of this software.


IN NO EVENT SHALL AUTHORS BE LIABLE TO ANY PARTY FOR DIRECT,

INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE 

USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF AUTHORS HAVE

BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


AUTHORS SPECIFICALLY DISCLAIM ANY WARRANTIES INCLUDING, BUT NOT

LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A

PARTICULAR PURPOSE, AND NON-INFRINGEMENT.


THE SOFTWARE IS PROVIDED ON AN ""AS-IS"" BASIS AND AUTHORS HAVE NO

OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR

MODIFICATIONS.-->


<!DOCTYPE html>
<html>
<head>
<!--
<?php
$array = array();
$array[] = 'safe' ;
$array[] = $_GET['userData'] ;
$array[] = 'safe' ;
$tainted = $array[1] ;

if(settype($tainted, ""float""))
  $tainted = $tainted ;
else
  $tainted = 0.0 ;


echo $tainted ;
?>
-->
</head>
<body>
<h1>Hello World!</h1>
</body>
</html>",PHP
"

    <!-- Jumbotron Header -->
    <header class=""jumbotron hero-spacer"" style=""padding: 2em; text-align: center;"">
        <img style=""max-width:100%; max-height:100%;"" src=""<?=base_url()?>assets/img/slogan.png"">
        <!--
        <h1>Read and let read!</h1>
        <p>
            Welcome to Discipulus, your humble start up for buying and selling books. We’re dedicated to giving you the very best experience on this website, with a focus on look, feel, functionality, and great community of likeminded people.Welcome to Discipulus, your humble start up for buying and selling books. We’re dedicated to giving you the very best experience on this website, with a focus on look, feel, functionality, and great community of likeminded people.
        </p>
        -->
<!--        <p><a class=""btn btn-primary btn-large"">Call to action!</a>-->
<!--        </p>-->
    </header>

    <hr>

    <!-- Title -->
<!--    <div class=""row"">-->
<!--        <div class=""col-lg-12"">-->
<!--            <h3>Latest Features</h3>-->
<!--        </div>-->
<!--    </div>-->
    <!-- /.row -->

    <!-- Page Features -->
    <div class=""row text-center"">
        <?php
        if(count($products) == 0){
            echo '<center><i><h3>No data available</h3></i></center>';
        }

        foreach($products as $product){
            ?>
            <div class=""col-sm-3 col-lg-3 col-md-3"">
                <div class=""thumbnail"">
                    <div class=""thumbnailx"">
                        <img s",PHP
"<?php

namespace LolApi\Classes\TournamentProvider;

/**
 * TournamentCodeParameters
 *
 * @author Javier
 */
class TournamentCodeParameters {

    // ~ maptype ~
    const MAPTYPE_SUMMONERS_RIFT='SUMMONERS_RIFT';
    const MAPTYPE_TWISTED_TREELINE='TWISTED_TREELINE';
    const MAPTYPE_HOWLING_ABYSS='HOWLING_ABYSS';
    
    // ~  pickType ~ 
    const PICKTYPE_BLIND_PICK='BLIND_PICK';
    const PICKTYPE_DRAFT_MODE='DRAFT_MODE';
    const PICKTYPE_ALL_RANDOM='ALL_RANDOM';
    const PICKTYPE_TOURNAMENT_DRAFT='TOURNAMENT_DRAFT';
    
    // ~ SPECTATORTYPE ~ 
    const SPECTATORTYPE_NONE='NONE';
    const SPECTATORTYPE_LOBBYONLY='LOBBYONLY';
    const SPECTATORTYPE_ALL='';
    
    /**
     * Optional list of participants in order to validate the players eligible 
     * to join the lobby. NOTE: We currently do not enforce participants at the 
     * team level, but rather the aggregate of teamOne and teamTwo. We may add 
     * the ability to enforce at the team level in the future.
     * @var SummonerIdParams
     */
    public $allowedSummonerIds;

    /**
     * The map type of the game. Valid values are SUMMONERS_RIFT, TWISTED_TREELINE, and HOWLING_ABYSS.
     * @var string
     */
    public $mapType;

    /**
     * Optional string that may contain any data in any format, if specified at all. Used to denote any custom information about the game.
     * @var string
     */
    public $metadata;

    /**
     * The pick type of the game. Valid values are BLIND_PICK, DRAFT",PHP
"<?php

namespace Aquicore\API\PHP\Common;

class BatteryLevelModule
{
    /* Battery range: 6000 ... 3600 */
    const BATTERY_LEVEL_0 = 5500;/*full*/
    const BATTERY_LEVEL_1 = 5000;/*high*/
    const BATTERY_LEVEL_2 = 4500;/*medium*/
    const BATTERY_LEVEL_3 = 4000;/*low*/
    /* below 4000: very low */
}
",PHP
"<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Dosen extends MY_Controller {

	public $data = array(
		'breadcrumb' => 'Dosen',
		'pesan' => '',
		'subtitle' => '',
		'main_view' => 'viewDosen',
		);
	
	public function __construct(){
		parent::__construct();
		$this->load->model('Dosen_model','dosen',TRUE);
		$this->load->model('Prodi_model','prodi',TRUE);
	}

	public function index(){
		$this->data['prodi'] = $this->prodi->get_datatables();
		$this->load->view('template',$this->data);
	}
	public function ajax_list()
    {
        $list = $this->dosen->get_datatables();
        $data = array();
        $no = $_POST['start'];
        foreach ($list as $dosen) {
            $no++;
            $row = array(
            	""id_dosen"" => $dosen['id_dosen'],
            	""nama_dosen"" => $dosen['nama_dosen'],
            	""nama_prodi"" => $dosen['nama_prodi']
            	);

                     
            $data[] = $row;
        }
 
        $output = array(
                        ""draw"" => $_POST['draw'],
                        ""recordsTotal"" => $this->dosen->count_all(),
                        ""recordsFiltered"" => $this->dosen->count_filtered(),
                        ""data"" => $data,
                );
        //output to json format
        echo json_encode($output);
    }
 
    public function ajax_edit($id)
    {
        $data = $this->dosen->get_by_id($id);
        echo json_encode($data);
    }
 
    public function ajax_add()
    {
        ",PHP
"<?php

return array(
    /** @brief Table de liaison avec les mots clés */
    'table_liaison' => 'jayps_search_word_occurence',

    /** @brief Préfixe de la table de liaison avec les mots clés */
    'table_liaison_prefixe' => 'mooc_',

    /** @brief mots clés interdits */
    'forbidden_words' => array(
        // 3 lettres
        'les', 'des', 'ses', 'son', 'mes', 'mon', 'tes', 'ton', 'une', 'aux', 'est', 'sur', 'par', 'dit',
        'the',
        // 4 lettres
        'pour','sans','dans','avec','deux','vers',
        // 5 lettres
        'titre',
    ),
    
    /** @brief allowed some chars in words indexed and in search  */
    'allowable_chars' => '*?',

    /** @brief longueur mimimum des mots à indexer */
    'min_word_len' => 3,

    /** @brief max number of joins for a search */
    'max_join' => 4,

    /** @brief For debugging */
    'debug' => false,

    /** @brief use a transaction to speed up InnoDB insert */
    'transaction' => false,

    /** @brief use INSERT DELAYED, for MyISAM Engine only*/
    'insert_delayed' => true,

    /** @brief group insertion of words */
    'words_by_insert' => 100,

    /** @brief score can be improved by this config*/
    'title_boost' => 3,

    'html_boost' => array(
        'h1' => 3,
        'h2' => 2,
        'h3' => 1,
        'strong' => 1,
    )
);
",PHP
"<?php

declare(strict_types=1);

/*
 * This file is part of the G.L.S.R. Apps package.
 *
 * (c) Dev-Int Création <info@developpement-interessant.com>.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Core\Infrastructure\Doctrine\Migrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

/**
 * Auto-generated Migration: Please modify to your needs!
 */
final class Version20210502131525 extends AbstractMigration
{
    public function getDescription(): string
    {
        return 'Create the first throw of necessary tables.';
    }

    public function up(Schema $schema): void
    {
        // this up() migration is auto-generated, please modify it to your needs
        $this->addSql(
            'CREATE TABLE company (' .
            'uuid CHAR(36) NOT NULL COMMENT \'(DC2Type:guid)\', ' .
            'company_name VARCHAR(255) NOT NULL, ' .
            'address VARCHAR(255) NOT NULL, ' .
            'zip_code VARCHAR(5) NOT NULL, ' .
            'town VARCHAR(255) NOT NULL, ' .
            'country VARCHAR(255) NOT NULL, ' .
            'phone VARCHAR(14) NOT NULL, ' .
            'facsimile VARCHAR(14) DEFAULT NULL, ' .
            'email VARCHAR(255) NOT NULL, ' .
            'contact_name VARCHAR(255) NOT NULL, ' .
            'cellphone VARCHAR(14) NOT NULL, ' .
            'slug VARCHAR(255) NOT NULL, ' .
            'UNIQUE INDEX UNIQ_4FBF094F1D4",PHP
"<?php

declare(strict_types=1);

namespace OAuth2Framework\Tests\Component\ClientRule;

use InvalidArgumentException;
use OAuth2Framework\Component\ClientRule\ApplicationTypeParametersRule;
use OAuth2Framework\Component\ClientRule\RuleHandler;
use OAuth2Framework\Component\Core\Client\ClientId;
use OAuth2Framework\Component\Core\DataBag\DataBag;
use OAuth2Framework\Tests\Component\OAuth2TestCase;

/**
 * @internal
 */
final class ApplicationTypeParameterRuleTest extends OAuth2TestCase
{
    /**
     * @test
     */
    public function applicationTypeParameterRuleSetAsDefault(): void
    {
        $clientId = ClientId::create('CLIENT_ID');
        $commandParameters = DataBag::create([]);
        $rule = new ApplicationTypeParametersRule();
        $validatedParameters = $rule->handle($clientId, $commandParameters, DataBag::create([]), $this->getCallable());

        static::assertTrue($validatedParameters->has('application_type'));
        static::assertSame('web', $validatedParameters->get('application_type'));
    }

    /**
     * @test
     */
    public function applicationTypeParameterRuleDefineInParameters(): void
    {
        $clientId = ClientId::create('CLIENT_ID');
        $commandParameters = DataBag::create([
            'application_type' => 'native',
        ]);
        $rule = new ApplicationTypeParametersRule();
        $validatedParameters = $rule->handle($clientId, $commandParameters, DataBag::create([]), $this->getCallable());

        static::assertTrue(",PHP
"<?php

class SV_WarningImprovements_XenForo_ControllerPublic_Member extends XFCP_SV_WarningImprovements_XenForo_ControllerPublic_Member
{
    public function actionMember()
    {
        SV_WarningImprovements_Globals::$warning_user_id = $this->_input->filterSingle('user_id', XenForo_Input::UINT);

        $response = parent::actionMember();

        if ($response instanceof XenForo_ControllerResponse_View)
        {
            $warningActionModel = $this->_getWarningActionModel();
            $user = $response->params['user'];
            if ($warningActionModel->canViewUserWarningActions($user))
            {
                $showAll = $warningActionModel->canViewNonSummaryUserWarningActions($user);
                $showDiscouraged = $warningActionModel->canViewDiscouragedWarningActions($user);
                $response->params['warningActionsCount'] = $warningActionModel->countWarningActionsByUser($user['user_id'], $showAll, $showDiscouraged);
                $response->params['canViewWarningActions'] = true;
            }
        }

        return $response;
    }

    public function actionWarningActions()
    {
        $userId = $this->_input->filterSingle('user_id', XenForo_Input::UINT);
        /** @var XenForo_ControllerHelper_UserProfile $userProfileHelper */
        $userProfileHelper = $this->getHelper('UserProfile');
        $user = $userProfileHelper->assertUserProfileValidAndViewable($userId);


        $warningActionModel = $this->_getWarningActionModel();
  ",PHP
"<?php
/**
 * General purpose and commonly used PHP interface definitions
 *
 * @author  Михаил Красильников <m.krasilnikov@yandex.ru>
 * @license http://opensource.org/licenses/MIT MIT
 */
namespace Mekras\Interfaces\Http\Message;

use Psr\Http\Message\RequestInterface;

/**
 * HTTP request factory
 *
 * Object can create empty instances of {@link \Psr\Http\Message\RequestInterface}.
 * This can be used to abstract from concrete PSR-7 implementation.
 *
 * @deprecated use https://packagist.org/packages/php-http/httplug
 *
 * @since 3.4 deprecated
 * @since 3.02
 */
interface RequestFactory
{
    /**
     * Create empty HTTP request
     *
     * @return RequestInterface
     *
     * @since 3.02
     */
    public function createEmptyRequest();
}
",PHP
"<?php

namespace AppBundle\Repository;

/**
 * Buyers_PropertiesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Buyers_PropertiesRepository extends \Doctrine\ORM\EntityRepository
{
}
",PHP
"<?php $t = $a->getThing(); ?>
<div class=""linkitem item-flavour-<?php echo $a->getFlavour() ?>"" id=""link-item-<?php echo $a->getId(); ?>"">

  <?php if (isset($nopos)): ?>
    <span class=""itempos"">&nbsp;</span>
  <?php else: ?>
    <span class=""itempos""><?php echo $pos; ?></span>
  <?php endif; ?>

  <div class=""votebtn"">
    <?php if ($sf_user->isAuthenticated()):?>
      <?php $vote = $a->getThing()->getUserVote($sf_user->getId()); ?>
      <?php if ($vote): ?>
        <?php if ($vote['type'] == 'up'): ?>
            <a href=""#"" onclick=""voteUp(this, <?php echo $t->getId(); ?>); return false;"">
              <?php echo image_tag('mod_up.png', array('id' => 'link-up-' . $t->getId())) ?>
            </a>
        <?php else: ?>
            <a href=""#"" onclick=""voteUp(this, <?php echo $t->getId(); ?>); return false;"">
              <?php echo image_tag('up.png', array('id' => 'link-up-' . $t->getId())) ?>
            </a>
        <?php endif; ?>
        <?php if ($vote['type'] == 'down'): ?>
            <a href=""#"" onclick=""voteDown(this, <?php echo $t->getId(); ?>); return false;"">
              <?php echo image_tag('mod_down.png', array('id' => 'link-down-' . $t->getId())) ?>
            </a>
        <?php else: ?>
            <a href=""#"" onclick=""voteDown(this, <?php echo $t->getId(); ?>); return false;"">
              <?php echo image_tag('down.png', array('id' => 'link-down-' . $t->getId())) ?>
            </a>
        <?php endif; ?>
      <?php else: ?>
        <a href=""",PHP
"<?php
namespace Mapbender\ActivityIndicatorBundle\Element;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

/**
 * 
 */
class ActivityIndicatorAdminType extends AbstractType
{

    /**
     * @inheritdoc
     */
    public function getName()
    {
        return 'activityindicator';
    }

    /**
     * @inheritdoc
     */
    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'application' => null
        ));
    }

    /**
     * @inheritdoc
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder->add('tooltip', 'text', array('required' => false))
            ->add('activityClass', 'text', array('required' => false))
            ->add('ajaxActivityClass', 'text', array('required' => false))
            ->add('tileActivityClass', 'text', array('required' => false));
    }

}
",PHP
"// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

using System;
using System.Collections.Generic;
using System.Linq;

namespace T2rkus.Spark.Core.Cli
{
    public class CommandOption
    {
        public CommandOption(string template, CommandOptionType optionType)
        {
            Template = template;
            OptionType = optionType;
            Values = new List<string>();

            foreach (var part in Template.Split(new[] { ' ', '|' }, StringSplitOptions.RemoveEmptyEntries))
            {
                if (part.StartsWith(""--""))
                {
                    LongName = part.Substring(2);
                }
                else if (part.StartsWith(""-""))
                {
                    var optName = part.Substring(1);

                    // If there is only one char and it is not an English letter, it is a symbol option (e.g. ""-?"")
                    if (optName.Length == 1 && !IsEnglishLetter(optName[0]))
                    {
                        SymbolName = optName;
                    }
                    else
                    {
                        ShortName = optName;
                    }
                }
                else if (part.StartsWith(""<"") && part.EndsWith("">""))
                {
                    ValueName = part.Substring(1, part.Length - 2);
                }
                else
                ",C#
"/* **********************************************************************************************************
 * The MIT License (MIT)																					*
 * 																											*
 * Copyright (c) 2016 Hypermediasystems Ges. f. Software mbH										*
 * Web: http://www.hypermediasystems.de																		*
 * This file is part of hmssp																			*
 * 																											*
 * Permission is hereby granted, free of charge, to any person obtaining a copy								*
 * of this software and associated documentation files (the ""Software""), to deal							*
 * in the Software without restriction, including without limitation the rights								*
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell								*
 * copies of the Software, and to permit persons to whom the Software is									*
 * furnished to do so, subject to the following conditions:													*
 * 																											*
 * The above copyright notice and this permission notice shall be included in								*
 * all copies or substantial portions of the Software.														*
 * 																											*
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR								*
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,									*
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE								*
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER									*
 * LIABILITY, WHETHER ",C#
"using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Xna.Framework;

namespace TrueSync.Physics2D
{
    // Original Code by Steven Lu - see http://www.box2d.org/forum/viewtopic.php?f=3&t=1688
    // Ported to Farseer 3.0 by Nicolás Hormazábal

    internal struct ShapeData
    {
        public Body Body;
        public FP Max;
        public FP Min; // absolute angles
    }

    /// <summary>
    /// This is a comprarer used for 
    /// detecting angle difference between rays
    /// </summary>
    internal class RayDataComparer : IComparer<FP>
    {
        #region IComparer<FP> Members

        int IComparer<FP>.Compare(FP a, FP b)
        {
            FP diff = (a - b);
            if (diff > 0)
                return 1;
            if (diff < 0)
                return -1;
            return 0;
        }

        #endregion
    }

    /* Methodology:
     * Force applied at a ray is inversely proportional to the square of distance from source
     * AABB is used to query for shapes that may be affected
     * For each RIGID BODY (not shape -- this is an optimization) that is matched, loop through its vertices to determine
     *		the extreme points -- if there is structure that contains outlining polygon, use that as an additional optimization
     * Evenly cast a number of rays against the shape - number roughly proportional to the arc coverage
     *		- Something like every 3 degrees should do the trick although this can be altered dependi",C#
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ClearScript.Installer.Demo
{
    public class Class1
    {
    }
}
",C#
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(""TestApp"")]
[assembly: AssemblyDescription("""")]
[assembly: AssemblyConfiguration("""")]
[assembly: AssemblyCompany("""")]
[assembly: AssemblyProduct(""TestApp"")]
[assembly: AssemblyCopyright(""Copyright ©  2015"")]
[assembly: AssemblyTrademark("""")]
[assembly: AssemblyCulture("""")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid(""207e9870-0b01-4db3-b656-c4f296d939af"")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(""1.0.*"")]
[assembly: AssemblyVersion(""1.0.0.0"")]
[assembly: AssemblyFileVersion(""1.0.0.0"")]
",C#
"﻿namespace Miruken.Callback
{
    using System;

    [AttributeUsage(AttributeTargets.Parameter)]
    public class KeyAttribute : Attribute
    {
        public KeyAttribute(object key)
        {
            Key = key;
        }

        public KeyAttribute(string key, StringComparison comparison)
        {
            Key = new StringKey(key, comparison);    
        }

        public object Key { get; }
    }
}
",C#
"// Copyright (c) ppy Pty Ltd <contact@ppy.sh>. Licensed under the MIT Licence.
// See the LICENCE file in the repository root for full licence text.

using osu.Game.Graphics;
using osu.Game.Rulesets.Scoring;

namespace osu.Game.Rulesets.Mods
{
    public abstract class ModPerfect : ModSuddenDeath
    {
        public override string Name => ""Perfect"";
        public override string Acronym => ""PF"";
        public override FontAwesome Icon => FontAwesome.fa_osu_mod_perfect;
        public override string Description => ""SS or quit."";

        protected override bool FailCondition(ScoreProcessor scoreProcessor) => scoreProcessor.Accuracy.Value != 1;
    }
}
",C#
"using OpenTK;
using OpenTK.Graphics.OpenGL;

namespace p_1
{
	class Spritebatch
	{
		public static void DrawSprite(Texture2D texture, RectangleF rectangle)
		{
			DrawSprite(texture, new Vector2(rectangle.X, rectangle.Y), new Vector2(rectangle.Width / texture.Width, rectangle.Height / texture.Height), Color.White, Vector2.Zero);
		}
		public static void DrawSprite(Texture2D texture, RectangleF rectangle, Color color, RectangleF? sourceRec = null)
		{
			DrawSprite(texture, new Vector2(rectangle.X, rectangle.Y), new Vector2(rectangle.Width / texture.Width, rectangle.Height / texture.Height), color, Vector2.Zero, sourceRec);
		}
		public static void DrawSprite(Texture2D texture, Vector2 position)
		{
			DrawSprite(texture, position, Vector2.One, Color.White, Vector2.Zero);
		}
		public static void DrawSprite(Texture2D texture, Vector2 position, Vector2 scale)
		{
			DrawSprite(texture, position, scale, Color.White, Vector2.Zero);
		}
		public static void DrawSprite(Texture2D texture, Vector2 position, Vector2 scale, Color color)
		{
			DrawSprite(texture, position, scale, color, Vector2.Zero);
		}
		public static void DrawSprite(Texture2D texture, Vector2 position, Vector2 scale, Color color, Vector2 origin, RectangleF? sourceRec = null)
		{
			Vector2[] verts = new Vector2[4] 
			{
				new Vector2(0, 0),
				new Vector2(1, 0),
				new Vector2(1, 1),
				new Vector2(0, 1),
			};

			GL.BindTexture(TextureTarget.Texture2D, texture.ID);

			GL.Begin(PrimitiveType.Quads);
			for (",C#
"﻿using System;
using System.Collections.Generic;
using System.Text;
using _03BarracksFactory.Contracts;

namespace P03_BarraksWars.Core.Commands
{
    class RetireCommand : Command
    {
        public RetireCommand(string[] data, IRepository repository, IUnitFactory unitFactory)
            : base(data, repository, unitFactory)
        {
        }

        public override string Execute()
        {
            try
            {
                this.Repository.RemoveUnit(this.Data[1]);
                return $""{this.Data[1]} retured!"";
            }
            catch (InvalidOperationException ex)
            {
                return ex.Message;
            }
           
        }
    }
}
",C#
"﻿using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Timers;
using System.Diagnostics;

namespace ForumHelper
{
    public partial class ToastForm : Form
    {
        public ToastForm()
        {
            InitializeComponent();
            TopMost = true;
            ShowInTaskbar = false;
            timer = new System.Windows.Forms.Timer();
            timer.Interval = 500;
            timer.Tick += timer_Tick;

        }

        private System.Windows.Forms.Timer timer;
        private int startPosX;
        private int startPosY;

        private void ToastForm_Load(object sender, EventArgs e)
        {
            
        }
        protected override void OnLoad(EventArgs e)
        {
            startPosX = Screen.PrimaryScreen.WorkingArea.Width - Width;
            startPosY = Screen.PrimaryScreen.WorkingArea.Height - Height;
            SetDesktopLocation(startPosX, startPosY);
            pageLinkLabel.Text = URLEventArgs.Url;
          //  base.OnLoad(e);
            timer.Start();
        }

        void timer_Tick(object sender, EventArgs e)
        {
            startPosY -= 50;
            if (startPosY < Screen.PrimaryScreen.WorkingArea.Height - Height) timer.Stop();
            else
            {
                SetDesktopLocation(startPosX, startPosY); 
       ",C#
"﻿using System.Security.Claims;
using System.Threading.Tasks;
using Microsoft.AspNet.Identity;
using Microsoft.AspNet.Identity.EntityFramework;
using Microsoft.AspNet.Identity.Owin;

namespace UniversityStudents.Models
{
    // You can add profile data for the user by adding more properties to your ApplicationUser class, please visit http://go.microsoft.com/fwlink/?LinkID=317594 to learn more.
    public class ApplicationUser : IdentityUser
    {
        public async Task<ClaimsIdentity> GenerateUserIdentityAsync(UserManager<ApplicationUser> manager, string authenticationType)
        {
            // Note the authenticationType must match the one defined in CookieAuthenticationOptions.AuthenticationType
            var userIdentity = await manager.CreateIdentityAsync(this, authenticationType);
            // Add custom user claims here
            return userIdentity;
        }
    }

    public class ApplicationDbContext : IdentityDbContext<ApplicationUser>
    {
        public ApplicationDbContext()
            : base(""DefaultConnection"", throwIfV1Schema: false)
        {
        }
        
        public static ApplicationDbContext Create()
        {
            return new ApplicationDbContext();
        }
    }
}",C#
"﻿namespace TransferCavityLock2012
{
    partial class LockControlPanel
    {
        /// <summary> 
        /// Required designer variable.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary> 
        /// Clean up any resources being used.
        /// </summary>
        /// <param name=""disposing"">true if managed resources should be disposed; otherwise, false.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Component Designer generated code

        /// <summary> 
        /// Required method for Designer support - do not modify 
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            this.lockParams = new System.Windows.Forms.GroupBox();
            this.lockedLED = new NationalInstruments.UI.WindowsForms.Led();
            this.label10 = new System.Windows.Forms.Label();
            this.setPointIncrementBox = new System.Windows.Forms.TextBox();
            this.GainTextbox = new System.Windows.Forms.TextBox();
            this.VoltageToLaserTextBox = new System.Windows.Forms.TextBox();
            this.setPointAdjustMinusButton = new System.Windows.Forms.Button();
            this.",C#
"﻿using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml;
using System.Xml.Serialization;
using System.IO;

namespace TimeOut
{
    public partial class partido : Form
    {
        Team local;   // Equipo local
		Team visitor; // Equipo visitante
		List<Registro> minuteToMinute = new List<Registro>();
		Counter count = new Counter();
		// Constante que guarda la cantidad limite 
		// de faltas permitidas previo a la expulsión
		const int maxFaltas = 6;
		/*
		 * Hay dos largos procesos en un partido, 
		 * suceden cuando hay Falta o cuando hay Balon Afuera.
		 */
		bool procesoFalta       = false;
		bool procesoBalonAfuera = false;
        bool localTeamShoot     = false;
		// Cantidad de tiros libres a tirar tras la falta
		int tirosLibresDisponibles = 0;
        // This will be checked in the close event,
        // avoiding unnintentional actions and lose of data.
		bool closeWindow = false;
		// Clase para guardar el registro completo del partido
		Match partidoJugado;
		// Archivo para guardar el registro del partido
		string archivoPartidos = """";

		public string ArchivoPartidos
		{
			get { return archivoPartidos; }
			set { archivoPartidos = value; }
		}

		/// <summary>
		/// El constructor de la clase.
		/// </summary>
		/// <param name=""a"">Equ",C#
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SimpleStatePattern
{
    public class StateB : StateBase
    {
        char currentLetter = 'B';
        public void Change(Context context)
        {
            Console.Write(System.Environment.NewLine + ""The current letter is: "" + currentLetter + System.Environment.NewLine);
            Console.WriteLine(""Inc:1;Dec:2;Rst;3: "");
            ConsoleKeyInfo name = Console.ReadKey();
            switch (name.KeyChar)
            {
                case '1':
                    context.State = new StateC();
                    break;
                case '2':
                    context.State = new StateA();
                    break;
                case '3':
                    context.State = new StateA();
                    break;
                default:
                    context.State = new StateB();
                    break;
            }
        }
    }
}
",C#
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(""Khaale.TechTalks.AwesomeLibrary.Service"")]
[assembly: AssemblyDescription("""")]
[assembly: AssemblyConfiguration("""")]
[assembly: AssemblyCompany(""EPAM Systems"")]
[assembly: AssemblyProduct(""Khaale.TechTalks.AwesomeLibrary.Service"")]
[assembly: AssemblyCopyright(""Copyright © EPAM Systems 2016"")]
[assembly: AssemblyTrademark("""")]
[assembly: AssemblyCulture("""")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid(""32ebdbb0-37fb-4197-aeab-5def4dd5102a"")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(""1.0.*"")]
[assembly: AssemblyVersion(""1.0.0.0"")]
[assembly: AssemblyFileVersion(""1.0.0.0"")]
",C#
"﻿using BaxterWorks.B2.Exceptions;
using BaxterWorks.B2.Types;

namespace BaxterWorks.B2.Extensions
{
    public static class BucketExtensions
    {
        public static Bucket GetOrCreateBucket(this ServiceStackB2Api client, CreateBucketRequest request) 
        {
            try
            {
                return client.CreateBucket(request);
            }
            catch (DuplicateBucketException) //todo: there are other ways this could fail
            {
                return client.GetBucketByName(request.BucketName);
            }
        }

        /// <summary>
        /// Get an existing bucket, or create a new one if it doesn't exist. Defaults to a private bucket
        /// </summary>
        /// <param name=""client""></param>
        /// <param name=""bucketName""></param>
        /// <returns><see cref=""Bucket""/></returns>
        public static Bucket GetOrCreateBucket(this ServiceStackB2Api client, string bucketName)
        {
            try
            {
                return client.CreateBucket(bucketName);
            }
            catch (DuplicateBucketException) //todo: there are other ways this could fail
            {
                return client.GetBucketByName(bucketName);
            }
        }

        public static Bucket OverwriteBucket(this ServiceStackB2Api client, CreateBucketRequest request, bool deleteFiles = false)
        {
            try
            {
                return client.CreateBucket(request);
            }
            catch",C#
"﻿// --------------------------------------------------------------------------------------------------------------------
// <copyright file=""GlobalSuppressions.cs"">
//     Copyright (c) 2017. All rights reserved. Licensed under the MIT license. See LICENSE file in
//     the project root for full license information.
// </copyright>
// --------------------------------------------------------------------------------------------------------------------

// This file is used by Code Analysis to maintain SuppressMessage attributes that are applied to this
// project. Project-level suppressions either have no target or are given a specific target and
// scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Style"", ""IDE0002:Simplify Member Access"", Justification = ""This is an auto-generated file."", Scope = ""member"", Target = ""~P:Spritely.Foundations.WebApi.Messages.ResourceManager"")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage(""Microsoft.Globalization"", ""CA1303:Do not pass literals as localized parameters"", MessageId = ""Spritely.Foundations.WebApi.WriteLog.Invoke(System.String)"", Scope = ""member"", Target = ""Spritely.Foundations.WebApi.BasicWebApiLogPolicy.#.cctor()"", Justification = ""Colon is used as a separator for log file output - overkill to move this into resources."")]

",C#
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(""BB.Poker.WinFormsClient"")]
[assembly: AssemblyDescription("""")]
[assembly: AssemblyConfiguration("""")]
[assembly: AssemblyCompany("""")]
[assembly: AssemblyProduct(""BB.Poker.WinFormsClient"")]
[assembly: AssemblyCopyright(""Copyright ©  2012"")]
[assembly: AssemblyTrademark("""")]
[assembly: AssemblyCulture("""")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid(""9703352c-1cab-4c2a-bbc9-183b9245edc6"")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(""1.0.*"")]
[assembly: AssemblyVersion(""1.0.0.0"")]
[assembly: AssemblyFileVersion(""1.0.0.0"")]
",C#
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using BohFoundation.ApplicantsRepository.Repositories.Implementations;
using BohFoundation.AzureStorage.TableStorage.Implementations.Essay.Entities;
using BohFoundation.AzureStorage.TableStorage.Interfaces.Essay;
using BohFoundation.AzureStorage.TableStorage.Interfaces.Essay.Helpers;
using BohFoundation.Domain.Dtos.Applicant.Essay;
using BohFoundation.Domain.Dtos.Applicant.Notifications;
using BohFoundation.Domain.Dtos.Common.AzureQueuryObjects;
using BohFoundation.Domain.EntityFrameworkModels.Applicants;
using BohFoundation.Domain.EntityFrameworkModels.Common;
using BohFoundation.Domain.EntityFrameworkModels.Persons;
using BohFoundation.EntityFrameworkBaseClass;
using BohFoundation.TestHelpers;
using EntityFramework.Extensions;
using FakeItEasy;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace BohFoundation.ApplicantsRepository.Tests.IntegrationTests
{
    [TestClass]
    public class ApplicantsEssayRepositoryIntegrationTests
    {
        private static IEssayRowKeyGenerator _rowKeyGenerator;
        private static IAzureEssayRepository _azureAzureEssayRepository;
        private static ApplicantsEssayRepository _applicantsEssayRepository;
        private static ApplicantsesNotificationRepository _applicantsesNotification;

        [ClassInitialize]
        public static void InitializeClass(TestContext ctx)
        {
            Setup();
            FirstTestOfNotifications();
            Fir",C#
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Sockets;

namespace CommonTypes
{   

    /// <summary>
    ///     BrokerSite hides the replication in a site making the calls transparent.
    /// </summary>
    [Serializable]
    public class BrokerSiteFrontEnd : IBroker
    {
        private string siteName;

        private List<BrokerPairDTO> brokersAlive;


        public BrokerSiteFrontEnd(ICollection<BrokerPairDTO> brokers,string siteName)
        {
            this.brokersAlive = brokers.ToList();
            this.siteName = siteName;
        }

        private void RemoveCrashedBrokers(string brokerName)
        {
            lock (this)
            {
                foreach (BrokerPairDTO pair in brokersAlive)
                {
                    if (pair.LogicName.Equals(brokerName))
                    {
                        brokersAlive.Remove(pair);
                        break;
                    }
                }
            }
        }

        private BrokerPairDTO[] GetCopy()
        {
            lock (this)
            {
                return brokersAlive.ToArray();
            }
        }


        public void Diffuse(Event e)
        {
            BrokerPairDTO[] brokers = GetCopy();
            foreach (BrokerPairDTO pair in brokers)
            {
                try
                {
                    (Activator.GetObject(typeof(IBroker), pair.Url) as IBroker).Diffuse(e);
                }
              ",C#
"﻿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Neo.Properties {
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(""System.Resources.Tools.StronglyTypedResourceBuilder"", ""4.0.0.0"")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(""Microsoft.Performance"", ""CA1811:AvoidUncalledPrivateCode"")]
        internal Strings() {
        }

        /// <summary>
  ",C#
"﻿namespace EgaViewer_v2
{
    partial class CustomPictureBox
    {
        /// <summary>
        /// Required designer variable.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        /// <param name=""disposing"">true if managed resources should be disposed; otherwise, false.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Component Designer generated code

        /// <summary>
        /// Required method for Designer support - do not modify 
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            components = new System.ComponentModel.Container();
        }

        #endregion
    }
}
",C#
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace VaiFundos
{
    class Program
    {
        static void Main(string[] args)
        {
            GerenciadorCliente gerenciador = new GerenciadorCliente();
            FundosEmDolar fundo_dolar1 = new FundosEmDolar(""Fundos USA"", ""FSA"");
            FundosEmDolar fundo_dolar2 = new FundosEmDolar(""Cambio USA"", ""CSA"");
            FundosEmReal fundo_real1 = new FundosEmReal(""Fundo Deposito Interbancario"", ""DI"");
            FundosEmReal fundo_real2 = new FundosEmReal(""Atmos Master"", ""FIA"");
            int opcao = 0;
            Console.WriteLine(""*==============Vai Fundos===================*"");
            Console.WriteLine(""*-------------------------------------------*"");
            Console.WriteLine(""*1------Cadastro Cliente--------------------*"");
            Console.WriteLine(""*2------Fazer Aplicacao---------------------*"");
            Console.WriteLine(""*3------Listar Clientes---------------------*"");
            Console.WriteLine(""*4------Relatorio Do Cliente----------------*"");
            Console.WriteLine(""*5------Relatorio Do Fundo------------------*"");
            Console.WriteLine(""*6------Transferir Aplicacao De Fundo-------*"");
            Console.WriteLine(""*7------Resgatar Aplicacao------------------*"");
            Console.WriteLine(""*8------Sair Do Sistema --------------------*"");
            Console.WriteLine(""*===================",C#
"﻿using System.Collections.Generic;
using System.IO;
using System.Reflection;
using IDI.Core.Common.Extensions;

namespace IDI.Core.Localization
{
    public abstract class Package
    {
        public List<PackageItem> Items { get; private set; } = new List<PackageItem>();

        public Package(string assemblyName, string packageName)
        {
            var assembly = Assembly.Load(new AssemblyName(assemblyName));

            if (assembly == null)
                return;

            using (Stream stream = assembly.GetManifestResourceStream(packageName))
            {
                if (stream == null)
                    return;

                using (StreamReader reader = new StreamReader(stream))
                {
                    string json = reader.ReadToEnd();
                    this.Items = json.To<List<PackageItem>>();
                }
            }

        }
    }
}
",C#
"// The MIT License (MIT)
// 
// Copyright (c) Andrew Armstrong/FacticiusVir 2020
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the ""Software""), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// This file was automatically generated and should not be edited directly.

using System;
using System.Runtime.InteropServices;

namespace SharpVk.Interop.Multivendor
{
    /// <summary>
    /// 
    /// </summary>
    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct PhysicalDevicePCIBusInfoProperties
    {
        ",C#
"﻿// dvt

/* 1. Да се напише if-конструкция, 
 * която изчислява стойността на две целочислени променливи и 
 * разменя техните стойности, 
 * ако стойността на първата променлива е по-голяма от втората.
 */


package myJava;

import java.util.Scanner;

public class dvt {

	public static void main(String[] args) {
		Scanner read = new Scanner(System.in);
		
		int a, b, temp;
		
		System.out.print(""a = ""); a = read.nextInt();
		System.out.print(""b = ""); b = read.nextInt();
		
		if (a > b){
			temp = a;
			a = b;
			b = temp;
			System.out.println(
					""a > b! The values have been switched!\n"" 
							+ ""a = "" + a + "" b = "" + b);
		}
	}

}
",Java
"// LICENSE
package com.forgedui.editor.edit;

import java.beans.PropertyChangeEvent;
import java.util.ArrayList;
import java.util.List;

import org.eclipse.draw2d.geometry.Rectangle;
import org.eclipse.gef.commands.Command;
import org.eclipse.gef.requests.CreateRequest;

import com.forgedui.editor.GUIEditorPlugin;
import com.forgedui.editor.edit.command.AddToTableViewElementCommand;
import com.forgedui.editor.edit.policy.ContainerEditPolicy;
import com.forgedui.editor.figures.TableViewFigure;
import com.forgedui.model.titanium.SearchBar;
import com.forgedui.model.titanium.TableView;
import com.forgedui.model.titanium.TableViewRow;
import com.forgedui.model.titanium.TableViewSection;
import com.forgedui.model.titanium.TitaniumUIBoundedElement;
import com.forgedui.model.titanium.TitaniumUIElement;

/**
 * @author Dmitry {dmitry.grimm@gmail.com}
 *
 */
public class TableViewEditPart extends TitaniumContainerEditPart<TableView> {
	
	@SuppressWarnings({ ""rawtypes"", ""unchecked"" })
	@Override
	public List<?> getModelChildren_() {
		List list = new ArrayList(super.getModelChildren_());
		TableView model = (TableView)getModel();
		if (model.getHeaderView() != null){
			list.add(model.getHeaderView());
		}
		if (model.getFooterView() != null){
			list.add(model.getFooterView());
		}
		if ((model.getSearchHidden() == null
				|| !model.getSearchHidden())
				&& model.getSearch() != null){
			list.add(model.getSearch());
		}
		return list;
	}
	
	/**
	 * Making sure to refresh things visu",Java
"/***
 * ASM: a very small and fast Java bytecode manipulation framework
 * Copyright (c) 2000-2011 INRIA, France Telecom
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the copyright holders nor the names of its
 *    contributors may be used to endorse or promote products derived from
 *    this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS""
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILIT",Java
"package com.agileEAP.workflow.definition;


/** 
 活动类型
 
*/
public enum ActivityType
{
	/** 
	 开始活动
	 
	*/
//C# TO JAVA CONVERTER TODO TASK: Java annotations will not correspond to .NET attributes:
	//[Remark(""开始活动"")]
	StartActivity(1),

	/** 
	 人工活动
	 
	*/
//C# TO JAVA CONVERTER TODO TASK: Java annotations will not correspond to .NET attributes:
	//[Remark(""人工活动"")]
	ManualActivity(2),

	/** 
	 路由活动
	 
	*/
//C# TO JAVA CONVERTER TODO TASK: Java annotations will not correspond to .NET attributes:
	//[Remark(""路由活动"")]
	RouterActivity(3),

	/** 
	 子流程活动
	 
	*/
//C# TO JAVA CONVERTER TODO TASK: Java annotations will not correspond to .NET attributes:
	//[Remark(""子流程活动"")]
	SubflowActivity(4),
	/** 
	 自动活动
	 
	*/
//C# TO JAVA CONVERTER TODO TASK: Java annotations will not correspond to .NET attributes:
	//[Remark(""自动活动"")]
	AutoActivity(5),

	/** 
	 结束活动
	 
	*/
//C# TO JAVA CONVERTER TODO TASK: Java annotations will not correspond to .NET attributes:
	//[Remark(""结束活动"")]
	EndActivity(6),

	/** 
	 处理活动
	 
	*/
//C# TO JAVA CONVERTER TODO TASK: Java annotations will not correspond to .NET attributes:
	//[Remark(""处理活动"")]
	ProcessActivity(7);

	private int intValue;
	private static java.util.HashMap<Integer, ActivityType> mappings;
	private synchronized static java.util.HashMap<Integer, ActivityType> getMappings()
	{
		if (mappings == null)
		{
			mappings = new java.util.HashMap<Integer, ActivityType>();
		}
		return mappings;
	}

	private ActivityType(int value)
	{
		intValue = value;
		",Java
"package com.github.aureliano.evtbridge.output.file;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;

import java.util.Set;

import org.junit.Test;

import com.github.aureliano.evtbridge.annotation.validation.NotNull;
import com.github.aureliano.evtbridge.annotation.validation.apply.ConstraintViolation;
import com.github.aureliano.evtbridge.annotation.validation.apply.ObjectValidator;
import com.github.aureliano.evtbridge.core.config.OutputConfigTypes;

public class FileOutputConfigTest {
	
	ObjectValidator validator = ObjectValidator.instance();

	@Test
	public void testGetDefaults() {
		FileOutputConfig c = new FileOutputConfig();
		assertNull(c.getFile());
		assertEquals(""UTF-8"", c.getEncoding());
		assertFalse(c.isAppend());
		assertTrue(c.isUseBuffer());
	}
	
	@Test
	public void testConfiguration() {
		FileOutputConfig c = new FileOutputConfig()
			.withAppend(true)
			.withEncoding(""ISO-8859-1"")
			.withFile(""/there/is/not/file"");
		
		assertEquals(""/there/is/not/file"", c.getFile().getPath());
		assertEquals(""ISO-8859-1"", c.getEncoding());
		assertTrue(c.isAppend());
	}
	
	@Test
	public void testClone() {
		FileOutputConfig c1 = new FileOutputConfig()
			.withAppend(true)
			.withUseBuffer(false)
			.withEncoding(""ISO-8859-1"")
			.withFile(""/there/is/not/file"")
			.putMetadata(""test"", ""my test"");
		
		FileOutputConfig c2 = c1.clone();
		assertEq",Java
"/*
 * This file is part of SpongeAPI, licensed under the MIT License (MIT).
 *
 * Copyright (c) SpongePowered <https://www.spongepowered.org>
 * Copyright (c) contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.spongepowered.api.data.types;

import org.spongepowered.api.CatalogType;
import org.spongepowered.api.util.annotation.CatalogedBy;

/**
 * Represents a type of instrument.
 */
@CatalogedBy(InstrumentTypes.class)
public interface Instrume",Java
"package hu.autsoft.nytimes.exception;


public class OkHttpException extends RuntimeException {
    public OkHttpException(Throwable cause) {
        super(cause);
    }
}
",Java
"package com.flockinger.spongeblogSP.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import springfox.documentation.builders.ApiInfoBuilder;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

@Configuration
@EnableSwagger2
public class SwaggerConfig {

  ApiInfo apiInfo() {
    return new ApiInfoBuilder().title(""SpongeblogSP API"").description(""Spongeblog blogging API"")
        .license("""").licenseUrl(""http://unlicense.org"").termsOfServiceUrl("""").version(""1.0.0"")
        .build();
  }

  @Bean
  public Docket customImplementation() {
    return new Docket(DocumentationType.SWAGGER_2).select()
        .apis(RequestHandlerSelectors.basePackage(""com.flockinger.spongeblogSP.api.impl"")).build()
        .directModelSubstitute(org.joda.time.LocalDate.class, java.sql.Date.class)
        .directModelSubstitute(org.joda.time.DateTime.class, java.util.Date.class)
        .apiInfo(apiInfo());
  }
}
",Java
"package org.aikodi.chameleon.support.statement;

import org.aikodi.chameleon.core.declaration.Declaration;
import org.aikodi.chameleon.core.element.ElementImpl;
import org.aikodi.chameleon.core.lookup.DeclarationSelector;
import org.aikodi.chameleon.core.lookup.LookupContext;
import org.aikodi.chameleon.core.lookup.LookupException;
import org.aikodi.chameleon.core.lookup.SelectionResult;
import org.aikodi.chameleon.core.validation.Valid;
import org.aikodi.chameleon.core.validation.Verification;
import org.aikodi.chameleon.oo.statement.ExceptionSource;
import org.aikodi.chameleon.oo.statement.Statement;
import org.aikodi.chameleon.util.association.Multi;

import java.util.Collections;
import java.util.List;

/**
 * A list of statement expressions as used in the initialization clause of a for
 * statement. It contains a list of statement expressions.
 * 
 * @author Marko van Dooren
 */
public class StatementExprList extends ElementImpl implements ForInit, ExceptionSource {

  public StatementExprList() {
  }

  /**
   * STATEMENT EXPRESSIONS
   */
  private Multi<StatementExpression> _statementExpressions = new Multi<StatementExpression>(this);

  public void addStatement(StatementExpression statement) {
    add(_statementExpressions, statement);
  }

  public void removeStatement(StatementExpression statement) {
    remove(_statementExpressions, statement);
  }

  public List<StatementExpression> statements() {
    return _statementExpressions.getOtherEnds();
  }

  @Override
",Java
"// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.applicationinsights.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.UUID;

/** User assigned identity properties. */
@Immutable
public class UserAssignedIdentity {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(UserAssignedIdentity.class);

    /*
     * The principal ID of the assigned identity.
     */
    @JsonProperty(value = ""principalId"", access = JsonProperty.Access.WRITE_ONLY)
    private UUID principalId;

    /*
     * The client ID of the assigned identity.
     */
    @JsonProperty(value = ""clientId"", access = JsonProperty.Access.WRITE_ONLY)
    private UUID clientId;

    /**
     * Get the principalId property: The principal ID of the assigned identity.
     *
     * @return the principalId value.
     */
    public UUID principalId() {
        return this.principalId;
    }

    /**
     * Get the clientId property: The client ID of the assigned identity.
     *
     * @return the clientId value.
     */
    public UUID clientId() {
        return this.clientId;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is",Java
"/*
 * This file is part of Sponge, licensed under the MIT License (MIT).
 *
 * Copyright (c) SpongePowered <https://www.spongepowered.org>
 * Copyright (c) contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.spongepowered.common.mixin.api.mcp.tileentity;

import net.minecraft.tileentity.TileEntityDropper;
import org.spongepowered.api.block.tileentity.carrier.Dropper;
import org.spongepowered.api.util.annotation.NonnullByDefault;
import org.spon",Java
"/*
 * This file is part of LuckPerms, licensed under the MIT License.
 *
 *  Copyright (c) lucko (Luck) <luck@lucko.me>
 *  Copyright (c) contributors
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

package me.lucko.luckperms.nukkit.inject.server;

import me.lucko.luckperms.nukkit.LPNukkitPlugin;

import cn.nukkit.Server;
import cn.nukkit.permission.Permissible;
import cn.nukkit.plugin.PluginManager;

import java.lang.reflect.Field;
import java.util",Java
"package info.yongli.statistic.table;

/**
 * Created by yangyongli on 25/04/2017.
 */
public class ColumnTransformer {


}
",Java
"package com.carbon108.tilde;

import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import java.util.Collection;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

/**
 * @author K Moroz
 * @version 1.0
 */
public class PrimaryModelFactoryTest {

	private PrimaryModelFactory factory;

	@Before
	public void setUp() {
		factory = new PrimaryModelFactory();
	}

	@Rule
	public final ExpectedException exception = ExpectedException.none();

	@Test
	public void getIDsGetsAllValidModelIDs() {
		Collection<String> factoryIDs = factory.getIDs();
		assertEquals(2, factoryIDs.size());
		assertEquals(true, factoryIDs.contains(ModelID.LINEAR));
		assertEquals(true, factoryIDs.contains(ModelID.CONSTANT));

		// check immutability
		exception.expect(UnsupportedOperationException.class);
		factoryIDs.add(""someString"");
	}

	@Test
	public void makeValidModelIDGetsModel() {
		TildeModel model1 = factory.make(ModelID.LINEAR);
		TildeModel model2 = factory.make(ModelID.CONSTANT);
		assertEquals(ModelID.LINEAR, model1.getID());
		assertEquals(ModelID.CONSTANT, model2.getID());
	}

	@Test
	public void makeInvalidIDGetsNullModel() {
		TildeModel m1null = factory.make(null);
		TildeModel m1blank = factory.make("""");
		TildeModel m2invalid = factory.make(""invalidModelID"");
		assertTrue(m1null.isNullModel());
		assertTrue(m1blank.isNullModel());
		assertTrue(m2invalid.isNullModel());
	}

	@Test
	public voi",Java
"package de.thomas.dreja.ec.musicquiz.gui.dialog;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.app.DialogFragment;
import android.content.DialogInterface;
import android.os.Bundle;
import de.thomas.dreja.ec.musicquiz.R;
import de.thomas.dreja.ec.musicquiz.ctrl.PlaylistResolver.SortOrder;

public class SortOrderSelectionDialog extends DialogFragment {

	private SortOrderSelectionListener listener;
	
	@Override
	public Dialog onCreateDialog(Bundle savedInstanceState) {
		
		String[] items = new String[SortOrder.values().length];
		
		for(int i=0; i<items.length; i++) {
			items[i] = SortOrder.values()[i].getName(getResources());
		}
		
		AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
	    builder.setTitle(R.string.sort_by)
	           .setItems(items, new DialogInterface.OnClickListener() {
	               public void onClick(DialogInterface dialog, int which) {
	            	   listener.onSortOrderSelected(SortOrder.values()[which]);
	           }
	    });

	    return builder.create();
	}

	public interface SortOrderSelectionListener {
		public void onSortOrderSelected(SortOrder order);
	}
	
	@Override
	public void onAttach(Activity activity) {
		super.onAttach(activity);
		
		// Verify that the host activity implements the callback interface
        try {
            // Instantiate the NoticeDialogListener so we can send events to the host
          ",Java
"public class Solution {
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        int[] map = new int[128];
        int count = 0, start = 0, end = 0, d = 0;
        while (end < s.length()) {
            if (map[s.charAt(end++)]++ == 0) count++;
            while (count > 2) if(map[s.charAt(start++)]-- == 1) count--;
            d = Math.max(d, end - start);
        }
        return d;
    }
}
",Java
"package edu.isep.sixcolors.view.listener;

import edu.isep.sixcolors.model.Config;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * A popup window asking if the player want's to exit Six Colors
 */
public class Exit implements ActionListener {

    @Override
    public void actionPerformed(ActionEvent e) {
        int option = JOptionPane.showConfirmDialog(
                null,
                Config.EXIT_MESSAGE,
                Config.EXIT_TITLE,
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
        );

        if (option == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }
}
",Java
"/*
 * Created on 24/02/2014
 *
 */
package net.rlviana.pricegrabber.model.entity.common;

import net.rlviana.pricegrabber.context.JPAPersistenceContext;
import net.rlviana.pricegrabber.model.entity.AbstractReadOnlyEntityTest;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.transaction.TransactionConfiguration;
import org.springframework.transaction.annotation.Transactional;

/**
 * @author ramon
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes = {JPAPersistenceContext.class})
@TransactionConfiguration(transactionManager = ""transactionManager"", defaultRollback = false)
@Transactional
public class CurrencyTest extends AbstractReadOnlyEntityTest<Currency, String> {

  private static final Logger LOGGER = LoggerFactory.getLogger(CurrencyTest.class);

  @Test
  public void testFindAll() {

  }

  @Test
  public void testFindByCriteria() {
  }

  /**
   * @return
   * @see net.rlviana.pricegrabber.model.entity.AbstractReadOnlyEntityTest#getEntityPKFindOK()
   */
  @Override
  protected String getEntityPKFindOK() {
    return ""EU"";
  }

  /**
   * @return
   * @see net.rlviana.pricegrabber.model.entity.AbstractReadOnlyEntityTest#getEntityPKFindKO()
   */
  @Override
  protected String getEntityPKFindKO() {
    return ""NEU"";",Java
"package util;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

/**
 * Taken from
 * http://www.javaworld.com/article/2077578/learn-java/java-tip-76--an-alternative-to-the-deep-copy-technique.html
 * 
 * @author David Miller (maybe)
 */
public class ObjectCloner
{
	// so that nobody can accidentally create an ObjectCloner object
	private ObjectCloner() {
	}

	// returns a deep copy of an object
	static public Object deepCopy(Object oldObj) throws Exception
	{
		ObjectOutputStream oos = null;
		ObjectInputStream ois = null;
		try
		{
			ByteArrayOutputStream bos =
					new ByteArrayOutputStream(); // A
			oos = new ObjectOutputStream(bos); // B
			// serialize and pass the object
			oos.writeObject(oldObj); // C
			oos.flush(); // D
			ByteArrayInputStream bin =
					new ByteArrayInputStream(bos.toByteArray()); // E
			ois = new ObjectInputStream(bin); // F
			// return the new object
			return ois.readObject(); // G
		} catch (Exception e)
		{
			System.out.println(""Exception in ObjectCloner = "" + e);
			throw (e);
		} finally
		{
			oos.close();
			ois.close();
		}
	}

}",Java
"/*
 * Encog(tm) Core v3.1 - Java Version
 * http://www.heatonresearch.com/encog/
 * http://code.google.com/p/encog-java/
 
 * Copyright 2008-2012 Heaton Research, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *   
 * For more information on Heaton Research copyrights, licenses 
 * and trademarks visit:
 * http://www.heatonresearch.com/copyright
 */
package org.encog.plugin.system;

import org.encog.EncogError;
import org.encog.engine.network.activation.ActivationFunction;
import org.encog.ml.MLMethod;
import org.encog.ml.data.MLDataSet;
import org.encog.ml.factory.MLTrainFactory;
import org.encog.ml.factory.train.AnnealFactory;
import org.encog.ml.factory.train.BackPropFactory;
import org.encog.ml.factory.train.ClusterSOMFactory;
import org.encog.ml.factory.train.GeneticFactory;
import org.encog.ml.factory.train.LMAFactory;
import org.encog.ml.factory.train.ManhattanFactory;
import org.encog.ml.factory.train.NeighborhoodSOMFactory;
import org.encog.ml.factory.train.Ne",Java
"package org.peerbox.presenter;

import javafx.fxml.FXML;
import javafx.scene.Node;
import javafx.scene.layout.Pane;

public class MainController implements INavigatable {

	@FXML
	private Pane mainPane;

	/*
	 * (non-Javadoc)
	 *
	 * @see org.peerbox.presenter.INavigatable#setContent(javafx.scene.Node)
	 */
	@Override
	public void setContent(Node content) {
		mainPane.getChildren().clear();
		mainPane.getChildren().add(content);
		mainPane.requestLayout();
	}

}
",Java
"package controllers;

import java.lang.reflect.InvocationTargetException;
import java.util.List;
import java.util.Date;

import models.Usuario;
import play.Play;
import play.mvc.*;
import play.data.validation.*;
import play.libs.*;
import play.utils.*;

public class Secure extends Controller {

    @Before(unless={""login"", ""authenticate"", ""logout""})
    static void checkAccess() throws Throwable {
        // Authent
        if(!session.contains(""username"")) {
            flash.put(""url"", ""GET"".equals(request.method) ? request.url : Play.ctxPath + ""/""); // seems a good default
            login();
        }
        // Checks
        Check check = getActionAnnotation(Check.class);
        if(check != null) {
            check(check);
        }
        check = getControllerInheritedAnnotation(Check.class);
        if(check != null) {
            check(check);
        }
    }

    private static void check(Check check) throws Throwable {
        for(String profile : check.value()) {
            boolean hasProfile = (Boolean)Security.invoke(""check"", profile);
            if(!hasProfile) {
                Security.invoke(""onCheckFailed"", profile);
            }
        }
    }

    // ~~~ Login

    public static void login() throws Throwable {
        Http.Cookie remember = request.cookies.get(""rememberme"");
        if(remember != null) {
            int firstIndex = remember.value.indexOf(""-"");
            int lastIndex = remember.value.lastIndexOf(""-"");
            if (lastIndex",Java
"package com.ripplargames.meshio.meshformats.ply;

import com.ripplargames.meshio.vertices.VertexType;

public class PlyVertexDataType {
    private final VertexType vertexType;
    private final PlyDataType plyDataType;

    public PlyVertexDataType(VertexType vertexType, PlyDataType plyDataType) {
        this.vertexType = vertexType;
        this.plyDataType = plyDataType;
    }

    public VertexType vertexType() {
        return vertexType;
    }

    public PlyDataType plyDataType() {
        return plyDataType;
    }
}
",Java
"package shadows;

import java.util.List;
import java.util.Map;

import org.lwjgl.opengl.GL11;
import org.lwjgl.util.vector.Matrix4f;
import org.lwjgl.util.vector.Vector2f;
import org.lwjgl.util.vector.Vector3f;

import entities.Camera;
import entities.Entity;
import entities.Light;
import entities.Player;
import models.TexturedModel;

public class ShadowMapMasterRenderer {

	private static final int SHADOW_MAP_SIZE = 5200;

	private ShadowFrameBuffer shadowFbo;
	private ShadowShader shader;
	private ShadowBox shadowBox;
	private Matrix4f projectionMatrix = new Matrix4f();
	private Matrix4f lightViewMatrix = new Matrix4f();
	private Matrix4f projectionViewMatrix = new Matrix4f();
	private Matrix4f offset = createOffset();

	private ShadowMapEntityRenderer entityRenderer;

	/**
	 * Creates instances of the important objects needed for rendering the scene
	 * to the shadow map. This includes the {@link ShadowBox} which calculates
	 * the position and size of the ""view cuboid"", the simple renderer and
	 * shader program that are used to render objects to the shadow map, and the
	 * {@link ShadowFrameBuffer} to which the scene is rendered. The size of the
	 * shadow map is determined here.
	 * 
	 * @param camera
	 *            - the camera being used in the scene.
	 */
	public ShadowMapMasterRenderer(Camera camera) {
		shader = new ShadowShader();
		shadowBox = new ShadowBox(lightViewMatrix, camera);
		shadowFbo = new ShadowFrameBuffer(S",Java
"package wanghaisheng.com.yakerweather;

import org.junit.Test;

import static org.junit.Assert.*;

/**
 * To work on unit tests, switch the Test Artifact in the Build Variants view.
 */
public class ExampleUnitTest {
    @Test
    public void addition_isCorrect() throws Exception {
        assertEquals(4, 2 + 2);
    }
}",Java
"#-- encoding: UTF-8
#-- copyright
# OpenProject is a project management system.
# Copyright (C) 2012-2013 the OpenProject Foundation (OPF)
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License version 3.
#
# OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
# Copyright (C) 2006-2013 Jean-Philippe Lang
# Copyright (C) 2010-2013 the ChiliProject Team
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# See doc/COPYRIGHT.rdoc for more details.
#++
require File.expand_path('../../test_helper', __FILE__)

class EnabledModuleTest < ActiveSupport::TestCase
  def test_enabling_wiki_should_create_a_wiki
    CustomField.delete_all
    FactoryGirl.create(:type_standard)
    project = Project.create!(:name => 'Project with wiki',",Ruby
"module InfinityTest
  module Core
    class Base
      # Specify the Ruby Version Manager to run
      cattr_accessor :strategy
      # ==== Options
      # * :rvm
      # * :rbenv
      # * :ruby_normal (Use when don't pass any rubies to run)
      # * :auto_discover(defaults)
      self.strategy = :auto_discover

      # Specify Ruby version(s) to test against
      #
      # ==== Examples
      # rubies = %w(ree jruby)
      #
      cattr_accessor :rubies
      self.rubies = []

      # Options to include in the command.
      #
      cattr_accessor :specific_options
      self.specific_options = ''

      # Test Framework to use Rspec, Bacon, Test::Unit or AutoDiscover(defaults)
      # ==== Options
      # * :rspec
      # * :bacon
      # * :test_unit (Test unit here apply to this two libs: test/unit and minitest)
      # * :auto_discover(defaults)
      #
      # This will load a exactly a class constantize by name.
      #
      cattr_accessor :test_framework
      self.test_framework = :auto_discover

      # Framework to know the folders and files that need to monitoring by the observer.
      #
      # ==== Options
      # * :rails
      # * :rubygems
      # * :auto_discover(defaults)
      #
      # This will load a exactly a class constantize by name.
      #
      cattr_accessor :framework
      self.framework = :auto_discover

      # Framework to observer watch the dirs.
      #
      # ==== Options
      #  * watchr
      #
      cattr_accessor :observer
   ",Ruby
"# encoding: UTF-8
# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# Note that this schema.rb definition is the authoritative source for your
# database schema. If you need to create the application database on another
# system, you should be using db:schema:load, not running all the migrations
# from scratch. The latter is a flawed and unsustainable approach (the more migrations
# you'll amass, the slower it'll run and the greater likelihood for issues).
#
# It's strongly recommended that you check this file into your version control system.

ActiveRecord::Schema.define(version: 20140216162246) do

  create_table ""active_admin_comments"", force: true do |t|
    t.string   ""namespace""
    t.text     ""body""
    t.string   ""resource_id"",   null: false
    t.string   ""resource_type"", null: false
    t.integer  ""author_id""
    t.string   ""author_type""
    t.datetime ""created_at""
    t.datetime ""updated_at""
  end

  add_index ""active_admin_comments"", [""author_type"", ""author_id""], name: ""index_active_admin_comments_on_author_type_and_author_id""
  add_index ""active_admin_comments"", [""namespace""], name: ""index_active_admin_comments_on_namespace""
  add_index ""active_admin_comments"", [""resource_type"", ""resource_id""], name: ""index_active_admin_comments_on_resource_type_and_resource_id""

  create_tabl",Ruby
"require 'spec_helper'

describe 'Git LFS File Locking API' do
  include WorkhorseHelpers

  let(:project)   { create(:project) }
  let(:maintainer) { create(:user) }
  let(:developer) { create(:user) }
  let(:guest)     { create(:user) }
  let(:path)      { 'README.md' }
  let(:headers) do
    {
      'Authorization' => authorization
    }.compact
  end

  shared_examples 'unauthorized request' do
    context 'when user is not authorized' do
      let(:authorization) { authorize_user(guest) }

      it 'returns a forbidden 403 response' do
        post_lfs_json url, body, headers

        expect(response).to have_gitlab_http_status(403)
      end
    end
  end

  before do
    allow(Gitlab.config.lfs).to receive(:enabled).and_return(true)

    project.add_developer(maintainer)
    project.add_developer(developer)
    project.add_guest(guest)
  end

  describe 'Create File Lock endpoint' do
    let(:url)           { ""#{project.http_url_to_repo}/info/lfs/locks"" }
    let(:authorization) { authorize_user(developer) }
    let(:body)          { { path: path } }

    include_examples 'unauthorized request'

    context 'with an existent lock' do
      before do
        lock_file('README.md', developer)
      end

      it 'return an error message' do
        post_lfs_json url, body, headers

        expect(response).to have_gitlab_http_status(409)

        expect(json_response.keys).to match_array(%w(lock message documentation_url))
        expect(json_response['message']).to match",Ruby
"##
# Backup v4.x Configuration
#
# Documentation: http://meskyanichi.github.io/backup
# Issue Tracker: https://github.com/meskyanichi/backup/issues

##
# Config Options
#
# The options here may be overridden on the command line, but the result
# will depend on the use of --root-path on the command line.
#
# If --root-path is used on the command line, then all paths set here
# will be overridden. If a path (like --tmp-path) is not given along with
# --root-path, that path will use it's default location _relative to --root-path_.
#
# If --root-path is not used on the command line, a path option (like --tmp-path)
# given on the command line will override the tmp_path set here, but all other
# paths set here will be used.
#
# Note that relative paths given on the command line without --root-path
# are relative to the current directory. The root_path set here only applies
# to relative paths set here.
#
# ---
#
# Sets the root path for all relative paths, including default paths.
# May be an absolute path, or relative to the current working directory.
#
# root_path 'my/root'
#
# Sets the path where backups are processed until they're stored.
# This must have enough free space to hold apx. 2 backups.
# May be an absolute path, or relative to the current directory or +root_path+.
#
# tmp_path  'my/tmp'
#
# Sets the path where backup stores persistent information.
# When Backup's Cycler is used, small YAML files are stored here.
# May be an absolute path, or relative to the current d",Ruby
"# frozen_string_literal: true

module Eve
  class AllRegionsContractsImporter
    def import
      region_ids.each do |region_id|
        Eve::RegionContractsJob.perform_later(region_id)
      end
    end

    private

    def region_ids
      @region_ids ||= Eve::Region.pluck(:region_id).sort.uniq
    end
  end
end
",Ruby
"require ""importeer_plan/version""
require 'importeer_plan/configuration'

module ImporteerPlan
		class Importeer
		

		attr_accessor :path, :name, :dir, :size_batch, :sep, :initial, :options
			#call importeer(""filename"") to import the file in batches of 1000, optional importeer(""filename"", size_)



			def initialize(name, options={})
				@options = options
				@name = name
				@path = Importeer.dir.join( @name ) 
				@size_batch = options[:size_batch]||1000
				@sep = options[:sep]|| "";""
				@initial = options[:initial]|| false
			end

			def self.dir
				# Rails.root.join('public/imports/')

				ImporteerPlan.configuration.dir

			end

			def bron
			end

			def sweep
			end

			def importeer
				sweep
				bron.each{|batch| importeer_batch batch}
			end

			def commaf(str) # comma-float; ""1,234"" 
				   ('%.2f' % str.gsub(',', '.') ).to_f
			end

			def pointf(str) # point-float; ""1.234""
				   ('%.2f' % str.gsub(',', '.') ).to_f
			end

		end

		class MyXls < Importeer
			require 'spreadsheet'
			def initialize(*)
				super
			end

			def bron
			 	Spreadsheet.open(@path).worksheet(0).to_a.tap{|x| x.shift}.each_slice(size_batch).each
			end
		end

		class  MyCsv< Importeer
			require 'csv'
			def initialize(*)
				super
				# @sep = options[:sep]
			end

			def bron
			 	CSV.read(path, { :col_sep => @sep , :encoding => ""ISO-8859-1""}).tap{|x| x.shift}.each_slice(@size_batch)
			end
		end

		class  MyTxt< Importeer
			def initialize(*)
				super
			end

			def bron
			 	# Cs",Ruby
"module Perus::Pinger
    class Upload < Command
        description 'Uploads a file from the client to the server. Valid values
                     for ""path"" are contained in the pinger config file.'
        option :path, restricted: true

        def run
            @file = File.new(options.path)
        end

        def cleanup
            @file.close unless @file.nil? || @file.closed?
        end
    end
end
",Ruby
"# frozen_string_literal: true

RSpec::Matchers.define :enforce_authorization_api do
  expected_error =
    { 'error' => 'User is not authorized to access this resource.' }

  match do |actual|
    expect(actual).to have_http_status(403)
    expect(JSON.parse(actual.body)).to eq(expected_error)
  end

  failure_message do |actual|
    ""expected to receive 403 status code (forbidden) and '#{expected_error}' "" \
      ""as the response body. Received #{actual.status} status and ""\
      ""'#{JSON.parse(actual.body)}' response body instead.""
  end

  failure_message_when_negated do
    ""expected not to receive 403 status (forbidden) or '#{expected_error}' ""\
      'in the response body, but it did.'
  end

  description do
    'enforce authorization policies when accessing API resources.'
  end
end
",Ruby
"class QuestionGroupTracker

  attr_reader :questions, :question_group_id, :question_group


  def initialize(question_group_id)
    @questions = Question.where('question_group_id=?', question_group_id)
    @counter = 0
    @question_group_id = question_group_id
    @question_group = QuestionGroup.find(question_group_id)
  end


  def check_for_new_group(question)
    if question.question_group_id != @question_group_id || !defined?(@initial_check)
      initialize(question.question_group_id)
      @initial_check = true
      return true
    else
      return false
    end
  end
end
",Ruby
"http_path       = ""/""
css_dir         = ""assets/css/src""
sass_dir        = ""assets/sass""
images_dir      = ""assets/img""
javascripts_dir = ""assets/js""
fonts_dir       = ""assets/font""

http_fonts_path  = ""assets/font""
http_images_path = ""assets/img""

output_style    = :nested
relative_assets = false
line_comments   = false
",Ruby
"class SessionsController < ApplicationController
before_filter :authenticate_user, :only => [:home, :profile, :setting]
before_filter :save_login_state, :only => [:login, :login_attempt]	
	def login
	end
	def login_attempt
		authorized_user = User.authenticate(params[:username_or_email],params[:login_password])
		if authorized_user
			session[:user_id] = authorized_user.id
			flash[:notice] = ""Wow Welcome again, you logged in as #{authorized_user.username}""
			redirect_to(:action => 'home')
		else
			flash.keep[:notice] = ""Invalid Username or Password""
			flash.keep[:color]= ""invalid""
			redirect_to(:action => 'index',error_message: ""Invalid Username or Password"",:locals => {:errorMessage => ""yes""})
		end
  end
  def home
  end

  def profile
    @user = User.find(session[:user_id])
  end

  def setting
  end

  def passreset

  end  
  def contactus
  end
  def passreset_attempt
  	if params[:submit_button]
  		# render plain: ""returned from the password reset form""
  		render ""home""
  	else
  		# render plain: ""cancel pressed""
  		render ""home""
  	end
  end
def logout
  session[:user_id] = nil
  redirect_to :action => 'index'
end  
end
",Ruby
"require 'spec_helper'

describe 'ssh::default' do
	let(:chef_run){ ChefSpec::SoloRunner.new(platform: 'ubuntu', version: '12.04').converge(described_recipe) }
	
	it 'should include the ssh::client recipe' do
		expect(chef_run).to include_recipe('ssh::client')
	end

	it 'should include the ssh::server recipe' do
		expect(chef_run).to include_recipe('ssh::server')
	end
end",Ruby
"module Marty
  module Promises
    module Ruby
    end
  end
end
",Ruby
"module Test 
  PI = 3.14 
  class Test2 
    def what_is_pi 
      puts PI 
    end 
  end 
end 
Test::Test2.new.what_is_pi # => 3.14 

module MyModule 
  MyConstant = 'Outer Constant' 
  class MyClass 
    puts MyConstant # => Outer Constant 
    MyConstant = 'Inner Constant' 
    puts MyConstant # => Inner Constant 
  end
  puts MyConstant # => Outer Constant 
end


",Ruby
"module Goaltender

end

require ""goaltender/version""
require ""goaltender/base_module""
require 'goaltender/value_parser'
require 'goaltender/input'
require 'goaltender/base'",Ruby
"require 'rubygems'
require 'bundler'
Bundler.require
require 'sinatra'

set :public_folder, 'static'

get '/' do
  File.read(File.join('index.html'))
end

get '/api/' do

  #content_type :js
  content_type(""application/javascript"")
  response[""Content-Type""] = ""application/javascript""

  #require 'config/initializers/beamly.rb'
  root = ::File.dirname(__FILE__)
  require ::File.join( root, 'config', 'initializers', 'beamly' )
  #require 'config/initializers/beamly'

  z = Beamly::Epg.new
  region_id = z.regions.first.id
  provider_id = z.providers.first.id
  result = z.catalogues(region_id, provider_id)
  services = z.epg(result.first.epg_id)
  today = Date.today.strftime(""%Y/%m/%d"")
  schedule = z.schedule(services[8].service_id, today)

  today_formatted = Date.today.strftime(""%Y-%m-%d"")

  headers ""Content-Type"" => ""application/json""

  json = '['
  schedule.each do |item|
    time_formatted = Time.at(item.start).getlocal.strftime(""%Y-%m-%d %H:%M"")
    json += '
      {
        ""date"": ""'+time_formatted+'"",
        ""episodes"":
        [
          {
          ""show"": {
            ""title"": ""'+item.title+'"",
            ""year"": 2013,
            ""genres"": [""Comedy""],

            },
          ""episode"":{""images"": {""screen"": ""http://img-a.zeebox.com/940x505/'+item.img+'""}}

          }
        ]
      },
    '
  end
  json += ']'
  formatted_callback = ""#{params['callback']}(""+json+')'
  content_type(""application/javascript"")
  response[""Content-Type""] = ""application/javascri",Ruby
"get '/user' do
  if logged_in?
    redirect '/'
  end
  erb :create_account
end

post '/user' do
  user = User.create(params[:user])
  redirect '/'
end

post '/login' do
  if user = User.login(params[:user])
    session[:permissions] = '3'
  end
  redirect '/'
end

get '/logout' do
  session.clear
  session[:permissions] = '0'
  redirect '/'
end
",Ruby
"require 'minitest/autorun'
require 'minitest/pride'
require 'bundler/setup'
Bundler.require(:default)
require 'active_record'
require File.dirname(__FILE__) + '/../lib/where_exists'

ActiveRecord::Base.default_timezone = :utc
ActiveRecord::Base.time_zone_aware_attributes = true

ActiveRecord::Base.establish_connection(
  :adapter => 'sqlite3',
  :database => File.dirname(__FILE__) + ""/db/test.db""
)
",Ruby
"class SystemModule < ActiveRecord::Base
  attr_accessible :name
  
  def self.CUSTOMER
    readonly.find_by_name(""Customer"")
  end
  
  def self.USER
    readonly.find_by_name(""User"")
  end
  
  def self.CONTACT
    readonly.find_by_name(""Contact"")
  end
  
end
",Ruby
"require ""rails_helper""

describe Linter::Shellcheck do
  it_behaves_like ""a linter"" do
    let(:lintable_files) { %w(foo.sh foo.zsh foo.bash) }
    let(:not_lintable_files) { %w(foo.js) }
  end

  describe ""#file_review"" do
    it ""returns a saved and incomplete file review"" do
      commit_file = build_commit_file(filename: ""lib/a.sh"")
      linter = build_linter

      result = linter.file_review(commit_file)

      expect(result).to be_persisted
      expect(result).not_to be_completed
    end

    it ""schedules a review job"" do
      build = build(:build, commit_sha: ""foo"", pull_request_number: 123)
      commit_file = build_commit_file(filename: ""lib/a.sh"")
      allow(LintersJob).to receive(:perform_async)
      linter = build_linter(build)

      linter.file_review(commit_file)

      expect(LintersJob).to have_received(:perform_async).with(
        filename: commit_file.filename,
        commit_sha: build.commit_sha,
        linter_name: ""shellcheck"",
        pull_request_number: build.pull_request_number,
        patch: commit_file.patch,
        content: commit_file.content,
        config: ""--- {}\n"",
        linter_version: nil,
      )
    end
  end
end
",Ruby
"require ""rails_helper""

RSpec.describe DiagnosesController, type: :routing do
  describe ""routing"" do

    it ""routes to #index"" do
      expect(:get => ""/diagnoses"").to route_to(""diagnoses#index"")
    end

    it ""routes to #new"" do
      expect(:get => ""/diagnoses/new"").to route_to(""diagnoses#new"")
    end

    it ""routes to #show"" do
      expect(:get => ""/diagnoses/1"").to route_to(""diagnoses#show"", :id => ""1"")
    end

    it ""routes to #edit"" do
      expect(:get => ""/diagnoses/1/edit"").to route_to(""diagnoses#edit"", :id => ""1"")
    end

    it ""routes to #create"" do
      expect(:post => ""/diagnoses"").to route_to(""diagnoses#create"")
    end

    it ""routes to #update via PUT"" do
      expect(:put => ""/diagnoses/1"").to route_to(""diagnoses#update"", :id => ""1"")
    end

    it ""routes to #update via PATCH"" do
      expect(:patch => ""/diagnoses/1"").to route_to(""diagnoses#update"", :id => ""1"")
    end

    it ""routes to #destroy"" do
      expect(:delete => ""/diagnoses/1"").to route_to(""diagnoses#destroy"", :id => ""1"")
    end

  end
end
",Ruby
"# frozen_string_literal: true

module Webdrone
  class MethodLogger < Module
    class << self
      attr_accessor :last_time, :screenshot
    end

    def initialize(methods = nil)
      super()

      @methods = methods
    end

    if Gem::Version.new(RUBY_VERSION) < Gem::Version.new('2.7')
      def included(base)
        @methods ||= base.instance_methods(false)
        method_list = @methods
        base.class_eval do
          method_list.each do |method_name|
            original_method = instance_method(method_name)
            define_method method_name do |*args, &block|
              caller_location = Kernel.caller_locations[0]
              cl_path = caller_location.path
              cl_line = caller_location.lineno
              if @a0.conf.logger && Gem.path.none? { |path| cl_path.include? path }
                ini = ::Webdrone::MethodLogger.last_time ||= Time.new
                ::Webdrone::MethodLogger.screenshot = nil
                args_log = [args].compact.reject(&:empty?).map(&:to_s).join(' ')
                begin
                  result = original_method.bind(self).call(*args, &block)
                  fin = ::Webdrone::MethodLogger.last_time = Time.new
                  @a0.logs.trace(ini, fin, cl_path, cl_line, base, method_name, args_log, result, nil, ::Webdrone::MethodLogger.screenshot)
                  result
                rescue StandardError => exception
                  fin = ::Webdrone::MethodLogger.last_time = Time.new
                 ",Ruby
"require ""administrate/field/base""

class EnumField < Administrate::Field::Base
  def to_s
    data
  end
end
",Ruby
"module Models
  class TimeStamp
    attr_accessor :sec
    attr_accessor :usec
  end
end",Ruby
"#pragma once
#include ""interface/types.h""

inline uintptr_t get_return_address()
{
	uintptr_t ret;
	asm volatile(""movq 8(%%rbp), %0"" : ""=r""(ret) : : ""memory"");
	return ret;
}",C
"/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <CoreData/NSSQLIntermediate.h>

// Not exported
@interface NSSQLLimitIntermediate : NSSQLIntermediate
{
    unsigned long long _limit;
}

- (id)generateSQLStringInContext:(id)arg1;
- (id)initWithLimit:(unsigned long long)arg1 inScope:(id)arg2;

@end

",C
"//***************************************************************************

// Copyright (C) 2009 Realmac Software Ltd
//
// These coded instructions, statements, and computer programs contain
// unpublished proprietary information of Realmac Software Ltd
// and are protected by copyright law. They may not be disclosed
// to third parties or copied or duplicated in any form, in whole or
// in part, without the prior written consent of Realmac Software Ltd.

// Created by Keith Duncan on 26/03/2009

//***************************************************************************

#import <Cocoa/Cocoa.h>

// Model

#import ""RMUploadKit/AFPropertyListProtocol.h""

#import ""RMUploadKit/RMUploadPlugin.h""
#import ""RMUploadKit/RMUploadPreset.h""
#import ""RMUploadKit/RMUploadCredentials.h""

// Controller

#import ""RMUploadKit/RMUploadPresetConfigurationViewController.h""
#import ""RMUploadKit/RMUploadMetadataConfigurationViewController.h""

// Upload

#import ""RMUploadKit/RMUploadTask.h""

#import ""RMUploadKit/RMUploadURLConnection.h""
#import ""RMUploadKit/NSURLRequest+RMUploadAdditions.h""
#import ""RMUploadKit/RMUploadMultipartFormDocument.h""

// Other

#import ""RMUploadKit/RMUploadConstants.h""
#import ""RMUploadKit/RMUploadErrors.h""
",C
"#ifndef LWEXML_H
#define LWEXML_H
#include <LWCore/LWText.h>
#include <functional>
#include ""LWETypes.h""

#define LWEXMLMAXNAMELEN 32
#define LWEXMLMAXVALUELEN 256
#define LWEXMLMAXTEXTLEN 1024

struct LWXMLAttribute {
	char m_Name[LWEXMLMAXNAMELEN];
	char m_Value[LWEXMLMAXVALUELEN];
};

struct LWEXMLNode {
	enum {
		MaxAttributes = 32
	};
	LWXMLAttribute m_Attributes[MaxAttributes];
	char m_Text[LWEXMLMAXTEXTLEN];
	char m_Name[LWEXMLMAXNAMELEN];
	uint32_t m_AttributeCount;
	LWEXMLNode *m_Parent;
	LWEXMLNode *m_Next;
	LWEXMLNode *m_FirstChild;
	LWEXMLNode *m_LastChild;

	bool PushAttribute(const char *Name, const char *Value);

	bool PushAttributef(const char *Name, const char *ValueFmt, ...);

	bool RemoveAttribute(uint32_t i);

	bool RemoveAttribute(LWXMLAttribute *Attr);

	LWEXMLNode &SetName(const char *Name);

	LWEXMLNode &SetText(const char *Text);

	LWEXMLNode &SetTextf(const char *TextFmt, ...);

	LWXMLAttribute *FindAttribute(const LWText &Name);
};

struct LWEXMLParser {
	char m_Name[LWEXMLMAXNAMELEN];
	std::function<bool(LWEXMLNode *, void *, LWEXML *)> m_Callback;
	void *m_UserData;
};

class LWEXML {
public:
	enum {
		NodePoolSize = 256,
		MaxParsers = 32
	};

	static bool LoadFile(LWEXML &XML, LWAllocator &Allocator, const LWText &Path, bool StripFormatting, LWEXMLNode *Parent, LWEXMLNode *Prev, LWFileStream *ExistingStream = nullptr);

	static bool LoadFile(LWEXML &XML, LWAllocator &Allocator, const LW",C
"/***********************************************************************
 * Copyright (c) 2015 Pieter Wuille                                    *
 * Distributed under the MIT software license, see the accompanying    *
 * file COPYING or https://www.opensource.org/licenses/mit-license.php.*
 ***********************************************************************/

/****
 * Please do not link this file directly. It is not part of the libsecp256k1
 * project and does not promise any stability in its API, functionality or
 * presence. Projects which use this code should instead copy this header
 * and its accompanying .c file directly into their codebase.
 ****/

/* This file defines a function that parses DER with various errors and
 * violations. This is not a part of the library itself, because the allowed
 * violations are chosen arbitrarily and do not follow or establish any
 * standard.
 *
 * In many places it matters that different implementations do not only accept
 * the same set of valid signatures, but also reject the same set of signatures.
 * The only means to accomplish that is by strictly obeying a standard, and not
 * accepting anything else.
 *
 * Nonetheless, sometimes there is a need for compatibility with systems that
 * use signatures which do not strictly obey DER. The snippet below shows how
 * certain violations are easily supported. You may need to adapt it.
 *
 * Do not use this for new systems. Use well-defined DER or compact signatures
 * instead if y",C
"#ifndef GAME_H
#define GAME_H

#include <array>

class Game
{
	public:
		//Standard Con/Destructors
		Game(); //Initialize the board.
		~Game(); //Not sure if I need this, but it's here in case
	
		//Are we playing the game?
		bool isRunning = true;
		
		//The easiest way I could implement stalemate 
		//detection with my limited knowledge.
		//Is the board completely full, thereby causing a stalemate?
		bool isStalemate = false;
		
		//Board specific variables. 
		static const int MAX_ROWS = 3; //Bounds for our board array
		static const int MAX_COLS = 3;
		
		//Return the bounds of our board.
		//Useful for, say, only allowing the player
		//to make a move within board boundaries
		//when player data is in a different class.
		int get_max_rows() { return MAX_ROWS; }
		int get_max_cols() { return MAX_COLS; }
	
		//Return our private piece variables for public use.
		char get_piece_x() { return pieceX; }
		char get_piece_o() { return pieceO; } 

		//Print the board in its current state
		void print_board();
		
		//Print our help board. This board does not change.
		void print_help_board();
	
		//Check for an overlap, IE placing an X on top of an O.
		//Returns false if there is an overlap. The space is invalid.
		//Does NOT check for input sanity or bounds!!! This is done
		//in some other class, likely going to be the player class.
		bool is_valid_space(int xPosition, int yPosition);
	
		//Check for every possible win using piece as the winning piece.
		//For example, check ",C
"/*
  HardwareSerial.h - Hardware serial library for Wiring
  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

#ifndef HardwareSerial_h
#define HardwareSerial_h

#include <inttypes.h>

#include ""Print.h""

struct ring_buffer;

#if defined(__AVR_ATmega103__)
class HardwareSerial : public Print
{
  private:
    ring_buffer *_rx_buffer;
    volatile uint8_t *_ubrr;
    volatile uint8_t *_ucr;
    volatile uint8_t *_usr;
    volatile uint8_t *_udr;
    uint8_t _rxen;
    uint8_t _txen;
    uint8_t _rxcie;
    uint8_t _udre;
  public:
    HardwareSerial(ring_buffer *rx_buffer,
      volatile uint8_t *ubrr, 
      volatile uint8_t *ucr, volatile uint8_t *usr,
      volatile uint8_t *udr,
      uint8_t rxen, uint8_t txen, uint8_t rxcie, uint8_t udre);
    void b",C
"#pragma once

#include ""animations/display.h""
#include ""animations/AnimationProgram.h""
#include ""animations/PaintPixel.h""

#include ""blewiz/BLECharacteristic.h""

#include ""freertos/task.h""

class BadgeService : public BLEService {
public:
    BadgeService(Display &display, AnimationProgram &animationProgram);
    virtual ~BadgeService();

    void init();
    void setPaintPixel(PaintPixel *paintPixel) { this->paintPixel = paintPixel; }

    void onStarted() override;
    void onConnect() override;
    void onDisconnect() override;

private:
    Display &display;
    AnimationProgram &animationProgram;
    PaintPixel *paintPixel;


    BLECharacteristic batteryCharacteristic;
    BLEDescriptor batteryNotifyDesciptor;
    BLECharacteristic brightnessCharacteristic;
    BLECharacteristic programCharacteristic;
    BLECharacteristic downloadCharacteristic;
    BLECharacteristic paintPixelCharacteristic;
    BLECharacteristic paintFrameCharacteristic;
    BLECharacteristic appVersionCharacteristic;
    BLECharacteristic frameDumpCharacteristic;

    static void batteryTask(void *parameters);
    TaskHandle_t taskHandle;

    std::vector<uint8_t> paintFrame;
};
",C
"//#include <stdio.h>
//#include <stdlib.h>
//#include <stdint.h>
//#include <stdbool.h>
//#include <string.h>
//#include <stddef.h>
#include ""esp_common.h""
#include ""coap.h""

#include ""shell.h""
//#include <rtthread.h>
//#define shell_printf rt_kshell_printf 

extern void endpoint_setup(void);
extern const coap_endpoint_t endpoints[];

#ifdef MICROCOAP_DEBUG
void ICACHE_FLASH_ATTR coap_dumpHeader(coap_header_t *hdr)
{
    shell_printf(""Header:\n"");
    shell_printf(""  ver  0x%02X\n"", hdr->ver);
    shell_printf(""  t    0x%02X\n"", hdr->t);
    shell_printf(""  tkl  0x%02X\n"", hdr->tkl);
    shell_printf(""  code 0x%02X\n"", hdr->code);
    shell_printf(""  id   0x%02X%02X\n"", hdr->id[0], hdr->id[1]);
}
#endif

#ifdef MICROCOAP_DEBUG
void ICACHE_FLASH_ATTR coap_dump(const uint8_t *buf, size_t buflen, bool bare)
{
    if (bare)
    {
        while(buflen--)
            shell_printf(""%02X%s"", *buf++, (buflen > 0) ? "" "" : """");
    }
    else
    {
        shell_printf(""Dump: "");
        while(buflen--)
            shell_printf(""%02X%s"", *buf++, (buflen > 0) ? "" "" : """");
        shell_printf(""\n"");
    }
}
#endif

int ICACHE_FLASH_ATTR coap_parseHeader(coap_header_t *hdr, const uint8_t *buf, size_t buflen)
{
    if (buflen < 4)
        return COAP_ERR_HEADER_TOO_SHORT;
    hdr->ver = (buf[0] & 0xC0) >> 6;
    if (hdr->ver != 1)
        return COAP_ERR_VERSION_NOT_1;
    hdr->t = (buf[0] & 0x30) >> 4;
    hdr->tkl = buf[0] & 0x0F;
  ",C
"//
// Copyright (c) 2017-2020 the rbfx project.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the ""Software""), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

#pragma once


#include <EASTL/utility.h>

#include ""Tabs/Tab.h""


namespace Urho3D
{

class Asset;
class FileChange;

struct ResourceContextMenuArgs
{
    ea::string resourceName_;
};

URHO3D_EVENT(E_RESOURCEBROWSERDELETE, ResourceBrowserDelete)
{
    URHO3D_PARAM(P_NAME, Name);                                     // String
}

/// Resource browser tab.
class ResourceTab",C
"//
// Created by Kévin POLOSSAT on 14/01/2018.
//

#ifndef LW_TCP_SERVER_SOCKET_H
#define LW_TCP_SERVER_SOCKET_H

#include <memory>
#include <type_traits>
#include ""Socket.h""
#include ""Reactor.h""
#include ""Buffer.h""
#include ""Operation.h""
#include ""SSLSocket.h""

namespace lw_network {

template<typename Sock = Socket>
class ReactiveSocketBase : public Sock {
    static_assert(std::is_base_of<Socket, Sock>::value, ""Socket base should be a derived class of Socket"");
public:
    explicit ReactiveSocketBase(Reactor &reactor) : Sock(), reactor_(reactor) { register_(); }

    ReactiveSocketBase(Reactor &reactor, Sock socket): Sock(socket), reactor_(reactor) { register_(); }

    ~ReactiveSocketBase() = default;

    ReactiveSocketBase(ReactiveSocketBase const &other) = default;

    ReactiveSocketBase(ReactiveSocketBase &&other) = default;

    ReactiveSocketBase &operator=(ReactiveSocketBase const &other) {
        Sock::operator=(other);
        return *this;
    }

    ReactiveSocketBase &operator=(ReactiveSocketBase &&other) {
        Sock::operator=(other);
        return *this;
    }

    void close() {
        reactor_.unregisterHandler(this->getImpl(), lw_network::Reactor::read);
        reactor_.unregisterHandler(this->getImpl(), lw_network::Reactor::write);
        error_code ec = no_error;
        Sock::close(ec);
    }

    void async_read_some(Buffer b, std::function<void(std::size_t nbyte, error_code ec)> completionHandler);

    void async_read(Buffer b, std::functio",C
"//
//  AppDelegate.h
//  topController
//
//  Created by 张衡 on 2016/11/18.
//  Copyright © 2016年 张衡. All rights reserved.
//

#import <UIKit/UIKit.h>

@interface AppDelegate : UIResponder <UIApplicationDelegate>

@property (strong, nonatomic) UIWindow *window;


@end

",C
"#pragma once

#include <mime/mimepp/mimepp.h>

namespace Zimbra
{
namespace MAPI
{
#define PR_URL_NAME                     PROP_TAG(PT_TSTRING, 0x6707)

#define EXCHIVERB_OPEN                  0
#define EXCHIVERB_RESERVED_COMPOSE      100
#define EXCHIVERB_RESERVED_OPEN         101
#define EXCHIVERB_REPLYTOSENDER         102
#define EXCHIVERB_REPLYTOALL            103
#define EXCHIVERB_FORWARD               104
#define EXCHIVERB_PRINT                 105
#define EXCHIVERB_SAVEAS                106
#define EXCHIVERB_RESERVED_DELIVERY     107
#define EXCHIVERB_REPLYTOFOLDER         108

typedef enum _ZM_ITEM_TYPE
{
    ZT_NONE = 0, ZT_MAIL, ZT_CONTACTS, ZT_APPOINTMENTS, ZT_TASKS, ZT_MEETREQ, ZTMAX
} ZM_ITEM_TYPE;

// MAPIMessageException class
class MAPIMessageException: public GenericException
{
public:
    MAPIMessageException(HRESULT hrErrCode, LPCWSTR lpszDescription);
    MAPIMessageException(HRESULT hrErrCode, LPCWSTR lpszDescription, LPCWSTR lpszShortDescription, int nLine, LPCSTR strFile);
    virtual ~MAPIMessageException() {}
};

// MAPIMessage Class
class MAPIMessage
{
private:
    // order of the message properties in _pMessagePropVals
    typedef enum _MessagePropIndex
    {
        MESSAGE_CLASS, MESSAGE_FLAGS, MESSAGE_DATE, SENDER_ADDRTYPE, SENDER_EMAIL_ADDR,
        SENDER_NAME, SENDER_ENTRYID, SUBJECT, TEXT_BODY, HTML_BODY, INTERNET_CPID,
        MESSAGE_CODEPAGE, LAST_VERB_EXECUTED, FLAG_STATUS, ENTRYID, SENT_ADDRTYPE,
        SENT_ENTRYID, SENT_EMAIL_ADDR, SE",C
"#ifndef __GTHREE_VECTOR_KEYFRAME_TRACK_H__
#define __GTHREE_VECTOR_KEYFRAME_TRACK_H__

#if !defined (__GTHREE_H_INSIDE__) && !defined (GTHREE_COMPILATION)
#error ""Only <gthree/gthree.h> can be included directly.""
#endif

#include <gthree/gthreekeyframetrack.h>

G_BEGIN_DECLS

#define GTHREE_TYPE_VECTOR_KEYFRAME_TRACK      (gthree_vector_keyframe_track_get_type ())
#define GTHREE_VECTOR_KEYFRAME_TRACK(inst)     (G_TYPE_CHECK_INSTANCE_CAST ((inst), \
                                                 GTHREE_TYPE_VECTOR_KEYFRAME_TRACK, \
                                                 GthreeVectorKeyframeTrack))
#define GTHREE_IS_VECTOR_KEYFRAME_TRACK(inst)  (G_TYPE_CHECK_INSTANCE_TYPE ((inst),    \
                                                 GTHREE_TYPE_VECTOR_KEYFRAME_TRACK))
#define GTHREE_VECTOR_KEYFRAME_TRACK_GET_CLASS(inst)  (G_TYPE_INSTANCE_GET_CLASS ((inst), GTHREE_TYPE_VECTOR_KEYFRAME_TRACK, GthreeVectorKeyframeTrackClass))


typedef struct {
  GthreeKeyframeTrack parent;
} GthreeVectorKeyframeTrack;

typedef struct {
  GthreeKeyframeTrackClass parent_class;
} GthreeVectorKeyframeTrackClass;

G_DEFINE_AUTOPTR_CLEANUP_FUNC (GthreeVectorKeyframeTrack, g_object_unref)

GTHREE_API
GType gthree_vector_keyframe_track_get_type (void) G_GNUC_CONST;

GTHREE_API
GthreeKeyframeTrack *gthree_vector_keyframe_track_new (const char *name,
                                                       GthreeAttributeArray *times,
                                                       Gthre",C
"//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import ""NSObject.h""

@class IBConnection, NSSet, NSString;

@interface IBDragConnectionContext : NSObject
{
    NSString *connectionName;
    long long relationshipType;
    NSString *sourceClassName;
    id source;
    IBConnection *prototype;
    BOOL limitToInterfaceBuilder;
    NSSet *endPointProvidingDocuments;
}

@property(readonly) NSSet *endPointProvidingDocuments; // @synthesize endPointProvidingDocuments;
@property(readonly) BOOL limitToInterfaceBuilder; // @synthesize limitToInterfaceBuilder;
@property(readonly) NSString *connectionName; // @synthesize connectionName;
@property(readonly) long long relationshipType; // @synthesize relationshipType;
@property(readonly) NSString *sourceClassName; // @synthesize sourceClassName;
@property(readonly) IBConnection *prototype; // @synthesize prototype;
@property(readonly) id source; // @synthesize source;
- (void).cxx_destruct;
- (id)initWithConnectionName:(id)arg1 relationshipType:(long long)arg2 sourceClassName:(id)arg3 endPointProvidingDocuments:(id)arg4 limitedToInterfaceBuilder:(BOOL)arg5;
- (id)initWithPrototype:(id)arg1 endPointProvidingDocuments:(id)arg2;
- (id)initWithSource:(id)arg1 endPointProvidingDocuments:(id)arg2;

@end

",C
"/*
 * (C) Copyright 2012 SAMSUNG Electronics
 * Jaehoon Chung <jh80.chung@samsung.com>
 *
 * SPDX-License-Identifier:	GPL-2.0+
 */

#include <common.h>
#include <dm.h>
#include <malloc.h>
#include <sdhci.h>
#include <fdtdec.h>
#include <linux/libfdt.h>
#include <asm/gpio.h>
#include <asm/arch/mmc.h>
#include <asm/arch/clk.h>
#include <errno.h>
#include <asm/arch/pinmux.h>

#ifdef CONFIG_DM_MMC
struct s5p_sdhci_plat {
	struct mmc_config cfg;
	struct mmc mmc;
};

DECLARE_GLOBAL_DATA_PTR;
#endif

static char *S5P_NAME = ""SAMSUNG SDHCI"";
static void s5p_sdhci_set_control_reg(struct sdhci_host *host)
{
	unsigned long val, ctrl;
	/*
	 * SELCLKPADDS[17:16]
	 * 00 = 2mA
	 * 01 = 4mA
	 * 10 = 7mA
	 * 11 = 9mA
	 */
	sdhci_writel(host, SDHCI_CTRL4_DRIVE_MASK(0x3), SDHCI_CONTROL4);

	val = sdhci_readl(host, SDHCI_CONTROL2);
	val &= SDHCI_CTRL2_SELBASECLK_MASK(3);

	val |=	SDHCI_CTRL2_ENSTAASYNCCLR |
		SDHCI_CTRL2_ENCMDCNFMSK |
		SDHCI_CTRL2_ENFBCLKRX |
		SDHCI_CTRL2_ENCLKOUTHOLD;

	sdhci_writel(host, val, SDHCI_CONTROL2);

	/*
	 * FCSEL3[31] FCSEL2[23] FCSEL1[15] FCSEL0[7]
	 * FCSel[1:0] : Rx Feedback Clock Delay Control
	 *	Inverter delay means10ns delay if SDCLK 50MHz setting
	 *	01 = Delay1 (basic delay)
	 *	11 = Delay2 (basic delay + 2ns)
	 *	00 = Delay3 (inverter delay)
	 *	10 = Delay4 (inverter delay + 2ns)
	 */
	val = SDHCI_CTRL3_FCSEL0 | SDHCI_CTRL3_FCSEL1;
	sdhci_writel(host, val, SDHCI_CONTROL3);

	/*
	 * SELBASECLK[5:4]
	 * 00/01 = HCLK
	 * 10 = EPLL
	 * 11 = XTI or XEXTCLK
	 ",C
"#ifndef _PSW_H_INCLUDED_
#define _PSW_H_INCLUDED_

/*
 * (補足) プロセッサステータスレジスタ(PSW):
 * -------+----------+----------------------------------------
 * b16    | I        | 割り込み許可ビット(0:禁止/1:許可)
 * b17    | U        | スタックポインタ指定ビット(0:ISP/1:USP)
 * b20    | PM       | プロセッサモード設定ビット(0:S/1:U)
 * b27-24 | IPL[3:0] | プロセッサ割り込み優先レベル(0(最低)-15(最高)
 * -------+----------+----------------------------------------
 */	
#define PSW_I_DISABLE 0x00000000
#define PSW_I_ENABLE  0x00010000
#define PSW_U_ISP     0x00000000
#define PSW_U_USP     0x00020000
#define PSW_PM_SUPER  0x00000000
#define PSW_PM_USER   0x00100000
#define PSW_IPL_MIN   0x00000000
#define PSW_IPL_MAX   0x0f000000

#endif /* _PSW_H_INCLUDED_ */
",C
"/* crypto/cryptlib.c */
/* ====================================================================
 * Copyright (c) 1998-2006 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    ""This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)""
 *
 * 4. The names ""OpenSSL Toolkit"" and ""OpenSSL Project"" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    openssl-core@openssl.org.
 *
 * 5. Products derived from this software may not be called ""OpenSSL""
 *    nor may ""OpenSSL"" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    ""This prod",C
"//
//  DNTag.h
//  DNTagView
//
//  Created by dawnnnnn on 16/9/1.
//  Copyright © 2016年 dawnnnnn. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

@interface DNTag : NSObject

@property (nonatomic, copy) NSString *text;
@property (nonatomic, copy) NSAttributedString *attributedText;

@property (nonatomic, strong) UIColor *textColor;
@property (nonatomic, strong) UIColor *bgColor;
@property (nonatomic, strong) UIColor *highlightedBgColor;
@property (nonatomic, strong) UIColor *borderColor;

@property (nonatomic, strong) UIImage *bgImg;
@property (nonatomic, strong) UIFont *font;

@property (nonatomic, assign) CGFloat cornerRadius;
@property (nonatomic, assign) CGFloat borderWidth;
///like padding in css
@property (nonatomic, assign) UIEdgeInsets padding;
///if no font is specified, system font with fontSize is used
@property (nonatomic, assign) CGFloat fontSize;
///default:YES
@property (nonatomic, assign) BOOL enable;

- (nonnull instancetype)initWithText: (nonnull NSString *)text;
+ (nonnull instancetype)tagWithText: (nonnull NSString *)text;

@end

NS_ASSUME_NONNULL_END
",C
"//
//  SNPGetStreamOperation.h
//  Snapper
//
//  Created by Paul Schifferer on 12/23/12.
//  Copyright (c) 2012 Pilgrimage Software. All rights reserved.
//

#import ""SNPBaseAppTokenOperation.h""


@interface SNPGetStreamOperation : SNPBaseAppTokenOperation

// -- Properties --
@property (nonatomic, assign) NSInteger streamId;

// -- Initializers --
- (nonnull instancetype)initWithStreamId:(NSUInteger)streamId
                                appToken:(nonnull NSString*)appToken
                             finishBlock:(nonnull void (^)(SNPResponse* _Nonnull response))finishBlock;

@end
",C
"
#include <stdarg.h>
#include <stddef.h>
#include <stdlib.h>
#include <string.h>

#include <fcntl.h>
#include <unistd.h>

#include <errno.h>
#include <sys/endian.h>
#include <sysexits.h>

#include <mpg123.h>

#include ""audio.h""
#include ""mp3.h""

struct mp3 {
	mpg123_handle *h;
	int fd;
	int first;
	int rate;
	int channels;
	int endian;
	int octets;
	int sign;
};

struct mp3 *
mp3_open(const char *file) {
	struct mp3 *m = NULL;
	char magic[3];
	long rate;
	int chan;
	int enc;
	if ((m = malloc(sizeof(struct mp3))) == NULL)
		goto err;
	m->h = NULL;
	if ((m->fd = open(file, O_RDONLY)) < 0)
		goto err;
	if (read(m->fd, magic, 3) != 3)
		goto err;
	if (strncmp(magic, ""\xFF\xFB"", 2) != 0 &&
	    strncmp(magic, ""ID3"", 3) != 0)
		goto err;
	if (lseek(m->fd, -3, SEEK_CUR) == -1)
		goto err;
	if (mpg123_init() != MPG123_OK)
		return NULL;
	if ((m->h = mpg123_new(NULL, NULL)) == NULL ||
	    mpg123_param(m->h, MPG123_ADD_FLAGS, MPG123_QUIET, 0)
	    != MPG123_OK || mpg123_open_fd(m->h, m->fd) != MPG123_OK)
		goto err;
	if (mpg123_getformat(m->h, &rate, &chan, &enc)
	    != MPG123_OK || rate > (int)(~0U >> 1)) {
		mpg123_close(m->h);
		goto err;
	}
	m->first = 1;
	/* Does mpg123 always output in host byte-order? */
	m->endian = BYTE_ORDER == LITTLE_ENDIAN;
	m->rate	= rate;
	m->sign = !!(enc & MPG123_ENC_SIGNED);
	if (chan & MPG123_STEREO)
		m->channels = 2;
	else /* MPG123_MONO */
		m->channels = 1;
	if (enc & MPG123_ENC_FLOAT) {
		mpg123_close(m->h);
		goto err;
	}
	if (enc & MPG123_ENC",C
"/**
 * Reverb for the OpenAL cross platform audio library
 * Copyright (C) 2008-2009 by Christopher Fitzgerald.
 * This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Library General Public
 *  License as published by the Free Software Foundation; either
 *  version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 *  License along with this library; if not, write to the
 *  Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 *  Boston, MA  02111-1307, USA.
 * Or go to http://www.gnu.org/copyleft/lgpl.html
 */

#include ""config.h""

#include <math.h>
#include <stdlib.h>

#include ""AL/al.h""
#include ""AL/alc.h""
#include ""alMain.h""
#include ""alAuxEffectSlot.h""
#include ""alEffect.h""
#include ""alError.h""
#include ""alu.h""

typedef struct DelayLine
{
    // The delay lines use sample lengths that are powers of 2 to allow
    // bitmasking instead of modulus wrapping.
    ALuint   Mask;
    ALfloat *Line;
} DelayLine;

typedef struct ALverbState {
    // Must be first in all effects!
    ALeffectState state;

    // All delay lines are allocated as a single buffer to reduce memory
    // fra",C
"//
//  SMActivityEventBuilder.h
//  SessionMEventsKit
//
//  Copyright © 2018 SessionM. All rights reserved.
//

#ifndef __SM_ACTIVITY_EVENT_BUILDER__
#define __SM_ACTIVITY_EVENT_BUILDER__

#import ""SMEventBuilder.h""
#import ""SMActivityEvent.h""

NS_ASSUME_NONNULL_BEGIN

/*!
 @class SMActivityEventBuilder
 @abstract Class used for building <code>SMActivityEvent</code> objects that represent a basic activity event performed by the user to make progress towards completing an application-specific campaign.
 */
@interface SMActivityEventBuilder : SMEventBuilder

/*!
 @abstract Generates an activity event based on the builder's current configuration.
 @result The generated <code>SMActivityEvent</code> object.
 */
- (SMActivityEvent *)build;

@end

NS_ASSUME_NONNULL_END

#endif /* __SM_ACTIVITY_EVENT_BUILDER__ */
",C
"/********************************************************************************
** Form generated from reading UI file 'modifystationdlg.ui'
**
** Created by: Qt User Interface Compiler version 5.7.0
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_MODIFYSTATIONDLG_H
#define UI_MODIFYSTATIONDLG_H

#include <QtCore/QVariant>
#include <QtWidgets/QAction>
#include <QtWidgets/QApplication>
#include <QtWidgets/QButtonGroup>
#include <QtWidgets/QDialog>
#include <QtWidgets/QGridLayout>
#include <QtWidgets/QGroupBox>
#include <QtWidgets/QHBoxLayout>
#include <QtWidgets/QHeaderView>
#include <QtWidgets/QLabel>
#include <QtWidgets/QLineEdit>
#include <QtWidgets/QPushButton>
#include <QtWidgets/QSpacerItem>
#include <QtWidgets/QVBoxLayout>

QT_BEGIN_NAMESPACE

class Ui_ModifyStationDlg
{
public:
    QGridLayout *gridLayout_2;
    QGroupBox *groupBox;
    QGridLayout *gridLayout;
    QVBoxLayout *verticalLayout;
    QHBoxLayout *horizontalLayout;
    QLabel *label;
    QLineEdit *lineEdit;
    QHBoxLayout *horizontalLayout_2;
    QSpacerItem *horizontalSpacer;
    QPushButton *pushButton;

    void setupUi(QDialog *ModifyStationDlg)
    {
        if (ModifyStationDlg->objectName().isEmpty())
            ModifyStationDlg->setObjectName(QStringLiteral(""ModifyStationDlg""));
        ModifyStationDlg->resize(311, 111);
        gridLayout_2 = new QGridLayout(Modif",C
"/**
  @file     std_streambuf.h
  @brief    suppresses warnings in streambuf.
  @author   HRYKY
  @version  $Id: std_streambuf.h 337 2014-03-23 14:12:33Z hryky.private@gmail.com $
 */
#ifndef STD_STREAMBUF_H_20140323003904693
#define STD_STREAMBUF_H_20140323003904693
#include ""hryky/pragma.h""
#pragma hryky_pragma_push_warning
#   include <streambuf>
#pragma hryky_pragma_pop_warning
//------------------------------------------------------------------------------
// defines macros
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
// declares types
//------------------------------------------------------------------------------
namespace hryky
{
} // namespace hryky
//------------------------------------------------------------------------------
// declares classes
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
// declares global functions
//------------------------------------------------------------------------------
namespace hryky
{
} // namespace hryky
//------------------------------------------------------------------------------
// defines global functions
//------------------------------------------------------------------------------
#endif // STD_STREAMBUF_H_20140323003904693
// end of file
",C
"from math import floor


def score_syntax_errors(program_lines):
    points = {')': 3, ']': 57, '}': 1197, '>': 25137}
    s = 0
    scores_auto = []

    for line in program_lines:
        corrupted, stack = corrupted_character(line)

        if corrupted:
            s += points[corrupted]
        else:
            scores_auto.append(score_autocomplete(stack))

    return s, sorted(scores_auto)[floor(len(scores_auto)/2)]


def corrupted_character(inp):
    stack = []
    lookup = {'(': ')', '[': ']', '{': '}', '<': '>'}
    lookup_close = {v: k for k, v in lookup.items()}

    def stack_converter(st):
        return [lookup[element] for element in st[::-1]]

    for char in inp:
        if char in lookup:
            stack.append(char)
        elif char in lookup_close:
            expected = stack.pop()

            if expected != lookup_close[char]:
                return char, stack_converter(stack)
        else:
            print(f""INVALID {char}"")

    return None, stack_converter(stack)


def score_autocomplete(stack):
    points_autocomplete = {')': 1, ']': 2, '}': 3, '>': 4}
    s_auto = 0

    for char in stack:
        s_auto *= 5
        s_auto += points_autocomplete[char]

    return s_auto


def test_corrupted_character():
    assert corrupted_character('{([(<{}[<>[]}>{[]{[(<()>')[0] == '}'
    assert corrupted_character('[[<[([]))<([[{}[[()]]]')[0] == ')'
    assert corrupted_character('[{[{({}]{}}([{[{{{}}([]')[0] == ']'
    assert corrupted_character('[<(<(<",Python
"from corecat.constants import OBJECT_CODES, MODEL_VERSION
from ._sqlalchemy import Base, CoreCatBaseMixin
from ._sqlalchemy import Column, \
    Integer, \
    String, Text


class Project(CoreCatBaseMixin, Base):
    """"""Project Model class represent for the 'projects' table
    which is used to store project's basic information.""""""

    # Add the real table name here.
    # TODO: Add the database prefix here
    __tablename__ = 'project'

    # Column definition
    project_id = Column('id', Integer,
                        primary_key=True,
                        autoincrement=True
                        )
    project_name = Column('name', String(100),
                          nullable=False
                          )
    project_description = Column('description', Text,
                                 nullable=True
                                 )

    # Relationship
    # TODO: Building relationship

    def __init__(self, project_name,
                 created_by_user_id,
                 **kwargs):
        """"""
        Constructor of Project Model Class.

        :param project_name: Name of the project.
        :param created_by_user_id: Project is created under this user ID.
        :param project_description: Description of the project.
        """"""

        self.set_up_basic_information(
            MODEL_VERSION[OBJECT_CODES['Project']],
            created_by_user_id
        )
        self.project_name = project_name
        self.project_description = kwargs.",Python
"from pydispatch import dispatcher
from PySide import QtCore, QtGui

import cbpos
logger = cbpos.get_logger(__name__)

from .page import BasePage

class MainWindow(QtGui.QMainWindow):
    __inits = []
    
    def __init__(self):
        super(MainWindow, self).__init__()
        
        self.tabs = QtGui.QTabWidget(self)
        self.tabs.setTabsClosable(False)
        self.tabs.setIconSize(QtCore.QSize(32, 32))
        self.tabs.currentChanged.connect(self.onCurrentTabChanged)
        
        self.toolbar = self.addToolBar('Base')
        self.toolbar.setIconSize(QtCore.QSize(48,48)) #Suitable for touchscreens
        self.toolbar.setObjectName('BaseToolbar')
        
        toolbarStyle = cbpos.config['menu', 'toolbar_style']
        # The index in this list is the same as that in the configuration page
        available_styles = (
              QtCore.Qt.ToolButtonFollowStyle,
              QtCore.Qt.ToolButtonIconOnly,
              QtCore.Qt.ToolButtonTextOnly,
              QtCore.Qt.ToolButtonTextBesideIcon,
              QtCore.Qt.ToolButtonTextUnderIcon,
              )
        try:
            toolbarStyle = available_styles[int(toolbarStyle)]
        except (ValueError, TypeError, IndexError):
            toolbarStyle = QtCore.Qt.ToolButtonFollowStyle
        self.toolbar.setToolButtonStyle(toolbarStyle)
        
        self.setCentralWidget(self.tabs)
        
        self.statusBar().showMessage(cbpos.tr._('Coinbox POS ",Python
"# -*- coding: utf-8 -*-
#
# RedPipe documentation build configuration file, created by
# sphinx-quickstart on Wed Apr 19 13:22:45 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))


# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
import os
import sys
from os import path

ROOTDIR = path.abspath(os.path.dirname(os.path.dirname(__file__)))

sys.path.insert(0, ROOTDIR)

import redpipe  # noqa

extensions = [
    'alabaster',
    'sphinx.ext.autodoc',
    'sphinx.ext.intersphinx',
    'sphinx.ext.viewcode',
    'sphinx.ext.napoleon',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenam",Python
"from __future__ import absolute_import

import matplotlib
# Force matplotlib to not use any Xwindows backend.
matplotlib.use('Agg')
import matplotlib.pyplot as plt

from plotly.tests.utils import compare_dict
from plotly.tests.test_optional.optional_utils import run_fig
from plotly.tests.test_optional.test_matplotlylib.data.annotations import *


def test_annotations():
    fig, ax = plt.subplots()
    ax.plot([1, 2, 3], 'b-')
    ax.plot([3, 2, 1], 'b-')
    ax.text(0.001, 0.999,
            'top-left', transform=ax.transAxes, va='top', ha='left')
    ax.text(0.001, 0.001,
            'bottom-left', transform=ax.transAxes, va='baseline', ha='left')
    ax.text(0.999, 0.999,
            'top-right', transform=ax.transAxes, va='top', ha='right')
    ax.text(0.999, 0.001,
            'bottom-right', transform=ax.transAxes, va='baseline', ha='right')
    renderer = run_fig(fig)
    for data_no, data_dict in enumerate(renderer.plotly_fig['data']):
        equivalent, msg = compare_dict(data_dict,
                                       ANNOTATIONS['data'][data_no])
        assert equivalent, msg
    for no, note in enumerate(renderer.plotly_fig['layout']['annotations']):
        equivalent, msg = compare_dict(note,
                                       ANNOTATIONS['layout']['annotations'][no])
        assert equivalent, msg
",Python
"from flask import Blueprint, request, render_template
from ..load import processing_results
from ..abbr import get_abbr_map

abbr_map = get_abbr_map()
liner_mod = Blueprint('liner', __name__, template_folder='templates', static_folder='static')


@liner_mod.route('/liner', methods=['GET', 'POST'])
def liner():
    if request.method == 'POST':
        query = request.form['liner-text']
        text = query.split('.')[:-1]
        if len(text) == 0:
            return render_template('projects/line.html', message='Please separate each line with "".""')

        abbr_expanded_text = """"
        for word in query.split():
            if word in abbr_map:
                abbr_expanded_text += abbr_map[word]
            else:
                abbr_expanded_text += word
            abbr_expanded_text += "" "" 

        data, emotion_sents, score, line_sentiment, text, length = processing_results(text)
        return render_template('projects/line.html', data=[data, emotion_sents, score, zip(text, line_sentiment), length, abbr_expanded_text])
    else:
        return render_template('projects/line.html')
",Python
"from rest_framework.filters import (
    FilterSet
)
from trialscompendium.trials.models import Treatment


class TreatmentListFilter(FilterSet):
    """"""
    Filter query list from treatment database table
    """"""
    class Meta:
        model = Treatment
        fields = {'id': ['exact', 'in'],
                  'no_replicate': ['exact', 'in', 'gte', 'lte'],
                  'nitrogen_treatment': ['iexact', 'in', 'icontains'],
                  'phosphate_treatment': ['iexact', 'in', 'icontains'],
                  'tillage_practice': ['iexact', 'in', 'icontains'],
                  'cropping_system': ['iexact', 'in', 'icontains'],
                  'crops_grown': ['iexact', 'in', 'icontains'],
                  'farm_yard_manure': ['iexact', 'in', 'icontains'],
                  'farm_residue': ['iexact', 'in', 'icontains'],
                  }
        order_by = ['tillage_practice', 'cropping_system', 'crops_grown']
",Python
"from setuptools import setup, find_packages
from codecs import open
import os

def read(*paths):
    """"""Build a file path from *paths* and return the contents.""""""
    with open(os.path.join(*paths), 'r') as f:
        return f.read()

setup(
    name='transposer',
    version='0.0.3',
    description='Transposes columns and rows in delimited text files',
    long_description=(read('README.rst')),
    url='https://github.com/keithhamilton/transposer',
    author='Keith Hamilton',
    maintainer='Keith Hamilton',
    maintainer_email='the.keith.hamilton@gmail.com',
    license='BSD License',
    classifiers=[
        'Development Status :: 4 - Beta',
        'Intended Audience :: Developers',
        'License :: OSI Approved :: MIT License',
        'Programming Language :: Python',
        'Programming Language :: Python :: 2.6',
        'Programming Language :: Python :: 2.7',
        'Topic :: Office/Business'
       ],
    keywords='text, csv, tab-delimited, delimited, excel, sheet, spreadsheet',
    packages=find_packages(exclude=['contrib', 'docs', 'test*', 'bin', 'include', 'lib', '.idea']),
    install_requires=[],
    package_data={},
    data_files=[],
    entry_points={
        'console_scripts': [
           'transposer=transposer.script.console_script:main'
        ]
    }
)
",Python
"import cairo

from gi.repository import Gtk
from gi.repository import Gdk

from pylsner import plugin


class Window(Gtk.Window):

    def __init__(self):
        super(Window, self).__init__(skip_pager_hint=True,
                                     skip_taskbar_hint=True,
                                    )
        self.set_title('Pylsner')

        screen = self.get_screen()
        self.width = screen.get_width()
        self.height = screen.get_height()
        self.set_size_request(self.width, self.height)
        self.set_position(Gtk.WindowPosition.CENTER)
        rgba = screen.get_rgba_visual()
        self.set_visual(rgba)
        self.override_background_color(Gtk.StateFlags.NORMAL,
                                       Gdk.RGBA(0, 0, 0, 0),
                                      )

        self.set_wmclass('pylsner', 'pylsner')
        self.set_type_hint(Gdk.WindowTypeHint.DOCK)
        self.stick()
        self.set_keep_below(True)

        drawing_area = Gtk.DrawingArea()
        drawing_area.connect('draw', self.redraw)
        self.refresh_cnt = 0
        self.add(drawing_area)

        self.connect('destroy', lambda q: Gtk.main_quit())

        self.widgets = []

        self.show_all()

    def refresh(self, force=False):
        self.refresh_cnt += 1
        if self.refresh_cnt >= 60000:
            self.refresh_cnt = 0
        redraw_required = False
        for wid in self.widgets:
            if (self.refresh_cnt % wid.metric.refresh_rate == 0) or forc",Python
"from baroque.entities.event import Event


class EventCounter:
    """"""A counter of events.""""""

    def __init__(self):
        self.events_count = 0
        self.events_count_by_type = dict()

    def increment_counting(self, event):
        """"""Counts an event

        Args:
            event (:obj:`baroque.entities.event.Event`): the event to be counted

        """"""
        assert isinstance(event, Event)
        self.events_count += 1
        t = type(event.type)
        if t in self.events_count_by_type:
            self.events_count_by_type[t] += 1
        else:
            self.events_count_by_type[t] = 1

    def count_all(self):
        """"""Tells how many events have been counted globally

        Returns:
            int

        """"""
        return self.events_count

    def count(self, eventtype):
        """"""Tells how many events have been counted of the specified type

        Args:
            eventtype (:obj:`baroque.entities.eventtype.EventType`): the type of events to be counted

        Returns:
            int

        """"""
        return self.events_count_by_type.get(type(eventtype), 0)

",Python
"
student_phoneNumber_name = {1: 'a', 3: 'c', 2: 'b'}

def Handler() :
	while (1) :
		choice = eval(input(""Enter :\t 1 - to search student name \n \t 2 - to insert new student record \n \t 0 - to quit\n""))
		print(choice)
		if (choice == 1) :
			if (student_phoneNumber_name) :
				phone_number = input(""Enter student's phone number : "")
				name = SearchRecord(phone_number)
				if (name) :
					print(""name : "" + name )
				else :
					print(str(phone_number) + ""Does not exist in record"" + str(name))
			else :
				print(""Record is empty "")
		elif (choice == 2) :
			phone_number = input(""Enter student's phone number : "")
			name = input(""Enter student's name : "") #best example to understand input() and raw_input()
			InsertRecord(phone_number, name)
		elif (choice == 0) :
			break
		else:
			print(""Enter correct choice"")
		

def InsertRecord(x, y):
	student_phoneNumber_name[x] = y
	return;
	
def SearchRecord(x):
	print(x)
	if (x in student_phoneNumber_name) :
		return student_phoneNumber_name[x]
	
	return False
	
		
Handler()

print(student_phoneNumber_name)",Python
"#!/usr/bin/python
# -*- coding: utf-8 -*-

from scrapy.spider import Spider
from scrapy.selector import Selector

from my_settings import name_file, test_mode, difference_days
from datetime import datetime, timedelta

print ""Run spider NewenglandFilm""

file_output = open(name_file, 'a')
email_current_session = []
email_in_file = open(name_file, 'r').readlines()

if test_mode:
    current_date = (datetime.today() - timedelta(days=difference_days)).strftime('%m/%d/%Y')
else:
    current_date = datetime.today().strftime('%m/%d/%Y')

class NewenglandFilm(Spider):
    name = 'newenglandfilm'
    allowed_domains = [""newenglandfilm.com""]
    start_urls = [""http://newenglandfilm.com/jobs.htm""]

    def parse(self, response):
        sel = Selector(response)
        for num_div in xrange(1, 31):
            date = sel.xpath('//*[@id=""mainContent""]/div[{0}]/span/text()'.format(str(num_div))).re('(\d{1,2}\/\d{1,2}\/\d{4})')[0]
            email = sel.xpath('//*[@id=""mainContent""]/div[{0}]/div/text()'.format(str(num_div))).re('(\w+@[a-zA-Z0-9_]+?\.[a-zA-Z]{2,6})')
            if current_date == date:
                for address in email:
                    if address + ""\n"" not in email_in_file and address not in email_current_session:
                        file_output.write(address + ""\n"")
                        email_current_session.append(address)
                        print ""Spider: NewenglandFilm. Email {0} added to file"".format(address)
   ",Python
"import random
from datetime import datetime
from multiprocessing import Pool

import numpy as np
from scipy.optimize import minimize


def worker_func(args):
    self = args[0]
    m = args[1]
    k = args[2]
    r = args[3]

    return (self.eval_func(m, k, r) -
            self.eval_func(m, k, self.rt) -
            self.temporal_diff_sum(m, k)) ** 2


def optimized_func_i_der(args):
    """"""
    The derivative of the optimized function with respect to the
    ith component of the vector r
    """"""
    self = args[0]
    r = args[1]
    i = args[2]

    result = 0
    M = len(self.data)

    for m in range(M):
        Nm = self.data[m].shape[0] - 1

        for k in range(Nm + 1):
            result += ((self.eval_func(m, k, r) -
                        self.eval_func(m, k, self.rt) -
                        self.temporal_diff_sum(m, k)) * 2 *
                       self.eval_func_der(m, k, r, i))

    return result


def worker_func_der(args):
    self = args[0]
    m = args[1]
    k = args[2]
    r = args[3]
    i = args[4]

    return ((self.eval_func(m, k, r) -
             self.eval_func(m, k, self.rt) -
             self.temporal_diff_sum(m, k)) * 2 *
            self.eval_func_der(m, k, r, i))


class Agent:
    num_features = 22

    def __init__(self):
        self.lf = 0.2  # Learning factor lambda
        self.data = []  # The features' values for all the games
        self.rewards = []  # Reward values for moving from 1 state to the next
        self.rt = np.array",Python
"""""""Basic thermodynamic calculations for pickaxe.""""""

from typing import Union

import pint
from equilibrator_api import (
    Q_,
    ComponentContribution,
    Reaction,
    default_physiological_ionic_strength,
    default_physiological_p_h,
    default_physiological_p_mg,
    default_physiological_temperature,
)
from equilibrator_api.phased_reaction import PhasedReaction
from equilibrator_assets.compounds import Compound
from equilibrator_assets.local_compound_cache import LocalCompoundCache
from equilibrator_cache.compound_cache import CompoundCache
from pymongo import MongoClient
from sqlalchemy import create_engine

from minedatabase.pickaxe import Pickaxe


class Thermodynamics:
    """"""Class to calculate thermodynamics of Pickaxe runs.

    Thermodynamics allows for the calculation of:
        1) Standard ∆G' of formation
        2) Standard ∆G'o of reaction
        3) Physiological ∆G'm of reaction
        4) Adjusted ∆G' of reaction

    eQuilibrator objects can also be obtained from r_ids and c_ids.

    Parameters
    ----------
    mongo_uri: str
        URI of the mongo database.
    client: MongoClient
        Connection to Mongo.
    CC: ComponentContribution
        eQuilibrator Component Contribution object to calculate ∆G with.
    lc: LocalCompoundCache
        The local compound cache to generate eQuilibrator compounds from.
    """"""

    def __init__(
        self,
    ):
        # Mongo params
        self.mongo_uri = None
        self.client = None
     ",Python
"# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(unique=True, max_length=150)),
                ('slug', models.SlugField(unique=True, max_length=150)),
                ('posted', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
    ]
",Python
"#!/usr/bin/env python
# coding:utf-8

""""""
Database operation module. This module is independent with web module.
""""""

import time, logging

import db

class Field(object):

    _count = 0

    def __init__(self, **kw):
        self.name = kw.get('name', None)
        self.ddl = kw.get('ddl', '')
        self._default = kw.get('default', None)

        self.comment = kw.get('comment', '')
        self.nullable = kw.get('nullable', False)
        self.updatable = kw.get('updatable', True)
        self.insertable = kw.get('insertable', True)

        self.unique_key = kw.get('unique_key', False)
        self.non_unique_key = kw.get('key', False)
        self.primary_key = kw.get('primary_key', False)

        self._order = Field._count
        Field._count += 1

    @property
    def default(self):
        d = self._default
        return d() if callable(d) else d

    def __str__(self):
        s = ['<%s:%s,%s,default(%s),' % (self.__class__.__name__, self.name, self.ddl, self._default)]
        self.nullable and s.append('N')
        self.updatable and s.append('U')
        self.insertable and s.append('I')
        s.append('>')
        return ''.join(s)

class StringField(Field):

    def __init__(self, **kw):
        if not 'default' in kw:
            kw['default'] = ''
        if not 'ddl' in kw:
            kw['ddl'] = 'varchar(255)'
        super(StringField, self).__init__(**kw)

class IntegerField(Field):

    def __init__(self, **kw):
        if not 'default' in kw:
 ",Python
"import datetime

from django.contrib.contenttypes.models import ContentType
from django.utils import timezone

from .models import Action


def create_action(user, verb, target=None):
    now = timezone.now()
    last_minute = now - datetime.timedelta(seconds=60)
    similar_actions = Action.objects.filter(user_id=user.id, verb=verb, created__gte=last_minute)

    if target:
        target_ct = ContentType.objects.get_for_model(target)
        similar_actions = Action.objects.filter(target_ct=target_ct, target_id=target.id)

    if not similar_actions:
        action = Action(user=user, verb=verb, target=target)
        action.save()
        return True
    return False
",Python
"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
""""""
Created on Fri Aug 25 21:11:45 2017

@author: hubert
""""""

import numpy as np
import matplotlib.pyplot as plt


class LiveBarGraph(object):
    """"""
    """"""
    def __init__(self, band_names=['delta', 'theta', 'alpha', 'beta'],
                 ch_names=['TP9', 'AF7', 'AF8', 'TP10']):
        """"""
        """"""
        self.band_names = band_names
        self.ch_names = ch_names
        self.n_bars = self.band_names * self.ch_names

        self.x =

        self.fig, self.ax = plt.subplots()
        self.ax.set_ylim((0, 1))

        y = np.zeros((self.n_bars,))
        x = range(self.n_bars)

        self.rects = self.ax.bar(x, y)

    def update(self, new_y):
        [rect.set_height(y) for rect, y in zip(self.rects, new_y)]


if __name__ == '__main__':

    bar = LiveBarGraph()
    plt.show()

    while True:
        bar.update(np.random.random(10))
        plt.pause(0.1)





",Python
"# -*- coding: utf-8 -*-
from __future__ import unicode_literals

import time
import curses

from . import docs
from .content import SubmissionContent, SubredditContent
from .page import Page, PageController, logged_in
from .objects import Navigator, Color, Command
from .exceptions import TemporaryFileError


class SubmissionController(PageController):
    character_map = {}


class SubmissionPage(Page):

    FOOTER = docs.FOOTER_SUBMISSION

    def __init__(self, reddit, term, config, oauth, url=None, submission=None):
        super(SubmissionPage, self).__init__(reddit, term, config, oauth)

        self.controller = SubmissionController(self, keymap=config.keymap)

        if url:
            self.content = SubmissionContent.from_url(
                reddit, url, term.loader,
                max_comment_cols=config['max_comment_cols'])
        else:
            self.content = SubmissionContent(
                submission, term.loader,
                max_comment_cols=config['max_comment_cols'])
        # Start at the submission post, which is indexed as -1
        self.nav = Navigator(self.content.get, page_index=-1)
        self.selected_subreddit = None

    @SubmissionController.register(Command('SUBMISSION_TOGGLE_COMMENT'))
    def toggle_comment(self):
        ""Toggle the selected comment tree between visible and hidden""

        current_index = self.nav.absolute_index
        self.content.toggle(current_index)

        # This logic handles a display edge case after a ",Python
"# -*- coding: utf-8 -*-
""""""
Created on Fri Jun 25 16:20:12 2015

@author: Balázs Hidasi
@lastmodified: Loreto Parisi (loretoparisi at gmail dot com)
""""""

import sys
import os
import numpy as np
import pandas as pd
import datetime as dt

# To redirect output to file
class Logger(object):
    def __init__(self, filename=""Default.log""):
        self.terminal = sys.stdout
        self.log = open(filename, ""a"")
    def write(self, message):
        self.terminal.write(message)
        self.log.write(message)
    def flush(self):
        pass
sys.stdout = Logger( os.environ['HOME' ] + '/theano.log' )

PATH_TO_ORIGINAL_DATA = os.environ['HOME'] + '/'
PATH_TO_PROCESSED_DATA = os.environ['HOME'] + '/'

data = pd.read_csv(PATH_TO_ORIGINAL_DATA + 'yoochoose-clicks.dat', sep=',', header=None, usecols=[0,1,2], dtype={0:np.int32, 1:str, 2:np.int64})
data.columns = ['SessionId', 'TimeStr', 'ItemId']
data['Time'] = data.TimeStr.apply(lambda x: dt.datetime.strptime(x, '%Y-%m-%dT%H:%M:%S.%fZ').timestamp()) #This is not UTC. It does not really matter.
del(data['TimeStr'])

session_lengths = data.groupby('SessionId').size()
data = data[np.in1d(data.SessionId, session_lengths[session_lengths>1].index)]
item_supports = data.groupby('ItemId').size()
data = data[np.in1d(data.ItemId, item_supports[item_supports>=5].index)]
session_lengths = data.groupby('SessionId').size()
data = data[np.in1d(data.SessionId, session_lengths[session_lengths>=2].index)]

tmax = data.Time.max()
session_max_times = data.",Python
"#!/usr/bin/python
# -*- coding: utf-8 -*-
# @author victor li nianchaoli@msn.cn
# @date 2015/10/07

import baseHandler

class MainHandler(baseHandler.RequestHandler):

    def get(self):
        self.redirect('/posts/last')
",Python
"from errors import *
from manager import SchemaManager
",Python
"""""""Main entry points for scripts.""""""

from __future__ import print_function, division

from argparse import ArgumentParser
from collections import OrderedDict
from copy import copy
from datetime import datetime
import glob
import json
import logging
import math
import os

import scipy.stats
import numpy as np

from .version import __version__
from .psffuncs import gaussian_moffat_psf
from .psf import TabularPSF, GaussianMoffatPSF
from .io import read_datacube, write_results, read_results
from .fitting import (guess_sky, fit_galaxy_single, fit_galaxy_sky_multi,
                      fit_position_sky, fit_position_sky_sn_multi,
                      RegularizationPenalty)
from .utils import yxbounds
from .extern import ADR, Hyper_PSF3D_PL


__all__ = [""cubefit"", ""cubefit_subtract"", ""cubefit_plot""]

MODEL_SHAPE = (32, 32)
SPAXEL_SIZE = 0.43
MIN_NMAD = 2.5  # Minimum Number of Median Absolute Deviations above
                # the minimum spaxel value in fit_position
LBFGSB_FACTOR = 1e10
REFWAVE = 5000.  # reference wavelength in Angstroms for PSF params and ADR
POSITION_BOUND = 3.  # Bound on fitted positions relative in initial positions

def snfpsf(wave, psfparams, header, psftype):
    """"""Create a 3-d PSF based on SNFactory-specific parameterization of
    Gaussian + Moffat PSF parameters and ADR.""""""

    # Get Gaussian+Moffat parameters at each wavelength.
    relwave = wave / REFWAVE - 1.0
    ellipticity = abs(psfparams[0]) * np.ones_like(wave)
    alpha = np.abs(psfparams",Python
"#!/usr/bin/python
# -*- coding: utf-8 -*-
__author__ = 'ar'

from layers_basic import LW_Layer, default_data_format
from layers_convolutional import conv_output_length

###############################################
class _LW_Pooling1D(LW_Layer):
    input_dim = 3
    def __init__(self, pool_size=2, strides=None, padding='valid'):
        if strides is None:
            strides = pool_size
        assert padding in {'valid', 'same'}, 'border_mode must be in {valid, same}'
        self.pool_length = pool_size
        self.stride = strides
        self.border_mode = padding
    def get_output_shape_for(self, input_shape):
        length = conv_output_length(input_shape[1], self.pool_length, self.border_mode, self.stride)
        return (input_shape[0], length, input_shape[2])

class LW_MaxPooling1D(_LW_Pooling1D):
    def __init__(self, pool_size=2, strides=None, padding='valid'):
        super(LW_MaxPooling1D, self).__init__(pool_size, strides, padding)

class LW_AveragePooling1D(_LW_Pooling1D):
    def __init__(self, pool_size=2, strides=None, padding='valid'):
        super(LW_AveragePooling1D, self).__init__(pool_size, strides, padding)

###############################################
class _LW_Pooling2D(LW_Layer):
    def __init__(self, pool_size=(2, 2), strides=None, padding='valid', data_format='default'):
        if data_format == 'default':
            data_format = default_data_format
        assert data_format in {'channels_last', 'channels_first'}, 'data_format mus",Python
"# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import functools
from typing import Any, Callable, Dict, Generic, Iterable, Optional, TypeVar
import warnings

from azure.core.exceptions import ClientAuthenticationError, HttpResponseError, ResourceExistsError, ResourceNotFoundError, map_error
from azure.core.paging import ItemPaged
from azure.core.pipeline import PipelineResponse
from azure.core.pipeline.transport import HttpResponse
from azure.core.rest import HttpRequest
from azure.core.tracing.decorator import distributed_trace
from azure.mgmt.core.exceptions import ARMErrorFormat
from msrest import Serializer

from .. import models as _models
from .._vendor import _convert_request, _format_url_section
T = TypeVar('T')
JSONType = Any
ClsType = Optional[Callable[[PipelineResponse[HttpRequest, HttpResponse], T, Dict[str, Any]], Any]]

_SERIALIZER = Serializer()
_SERIALIZER.client_side_validation = False

def build_delete_request(
    scope: str,
    policy_assignment_name: str,
    **kwargs: Any
) -> HttpRequest:
    api_version = ""2016-12-01""
    accept = ""applica",Python
"///////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 2017, STEREOLABS.
//
// All rights reserved.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
///////////////////////////////////////////////////////////////////////////




/****************************************************************************************************
 ** This sample is a wrapper for the ZED library in order to use the ZED Camera with ROS.          **
 ** A set of parameters can be specified in the launch file.                                       **
 ****************************************************************************************************/

#include <csignal>
#include <cstdio>
#include <math.h>
#include <limits>
#i",C++
"// ===========================================================================
//
//                            PUBLIC DOMAIN NOTICE
//                       Agricultural Research Service
//                  United States Department of Agriculture
//
//   This software/database is a ""United States Government Work"" under the
//   terms of the United States Copyright Act.  It was written as part of
//   the author's official duties as a United States Government employee
//   and thus cannot be copyrighted.  This software/database is freely
//   available to the public for use. The Department of Agriculture (USDA)
//   and the U.S. Government have not placed any restriction on its use or
//   reproduction.
//
//   Although all reasonable efforts have been taken to ensure the accuracy
//   and reliability of the software and data, the USDA and the U.S.
//   Government do not and cannot warrant the performance or results that
//   may be obtained by using this software or data. The USDA and the U.S.
//   Government disclaim all warranties, express or implied, including
//   warranties of performance, merchantability or fitness for any
//   particular purpose.
//
//   Please cite the author in any work or product based on this material.
//
//   =========================================================================
#ifndef _PARTIAL_CORE_MATRIX_H_
#define _PARTIAL_CORE_MATRIX_H_ 1

#include <memory>
#include <map>
#include <exception>
#include ""logging.hpp""
#include ""distributions",C++
"/*
---------------------------------------------------------------------------
Open Asset Import Library (ASSIMP)
---------------------------------------------------------------------------

Copyright (c) 2006-2010, ASSIMP Development Team

All rights reserved.

Redistribution and use of this software in source and binary forms, 
with or without modification, are permitted provided that the following 
conditions are met:

* Redistributions of source code must retain the above
  copyright notice, this list of conditions and the
  following disclaimer.

* Redistributions in binary form must reproduce the above
  copyright notice, this list of conditions and the
  following disclaimer in the documentation and/or other
  materials provided with the distribution.

* Neither the name of the ASSIMP team, nor the names of its
  contributors may be used to endorse or promote products
  derived from this software without specific prior
  written permission of the ASSIMP Development Team.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUS",C++
"/*
Copyright (c) 2015 - 2021 Advanced Micro Devices, Inc. All rights reserved.
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

#include <hip/hip_runtime_api.h>
#include ""test_common.h""

int main() {
    int val;
    hipDeviceAttribute_t attr =
        hipDeviceAttributeMaxThreadsPerBlock;  ///< Maximum number of threads per block.

    HIP_PRINT_STATUS(hipDeviceGetAttribute(NULL, attr, 0));
    HIP_PRINT_STATUS(hipDeviceGetAttribute(&val, attr, 0));
    HIP_PRINT_STATUS(hipDeviceGetAttribute(NULL, attr, -1));
    HIP",C++
"/*
 Print.cpp - Base class that provides print() and println()
 Copyright (c) 2008 David A. Mellis.  All right reserved.
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.
 
 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 Modified 23 November 2006 by David A. Mellis
 Modified 20 Aug 2014 by MediaTek Inc.
 */

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include ""Arduino.h""

#include ""Print.h""

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
  size_t n = 0;
  while (size--) {
    n += write(*buffer++);
  }
  return n;
}

size_t Print::print(const __FlashStringHelper *ifsh)
{
  return print(reinterpret_cast<const char *>(ifsh));
}

size_t Print::print(const String &s)
{
  return write(s.c_str(), s.lengt",C++
"/*
 * DISTRHO Plugin Framework (DPF)
 * Copyright (C) 2012-2014 Filipe Coelho <falktx@falktx.com>
 *
 * Permission to use, copy, modify, and/or distribute this software for any purpose with
 * or without fee is hereby granted, provided that the above copyright notice and this
 * permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD
 * TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN
 * NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
 * IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include ""DistrhoPluginInternal.hpp""

#include ""lv2/atom.h""
#include ""lv2/buf-size.h""
#include ""lv2/data-access.h""
#include ""lv2/instance-access.h""
#include ""lv2/midi.h""
#include ""lv2/options.h""
#include ""lv2/port-props.h""
#include ""lv2/resize-port.h""
#include ""lv2/state.h""
#include ""lv2/time.h""
#include ""lv2/ui.h""
#include ""lv2/units.h""
#include ""lv2/urid.h""
#include ""lv2/worker.h""
#include ""lv2/lv2_kxstudio_properties.h""
#include ""lv2/lv2_programs.h""

#include <fstream>
#include <iostream>

#ifndef DISTRHO_PLUGIN_URI
# error DISTRHO_PLUGIN_URI undefined!
#endif

#ifndef DISTRHO_PLUGIN_MINIMUM_BUFFER_SIZE
# define DISTRHO_PLUGIN_MINIMUM_BUFFER_SIZE 2048
#endi",C++
"// Endless Online Bot v0.0.1

#ifndef UTIL_HPP_INCLUDED
#define UTIL_HPP_INCLUDED

#include <math.h>
#include <vector>
#include <string>

int path_length(int x1, int y1, int x2, int y2);
std::vector<std::string> Args(std::string str);
std::string Lowercase(std::string str);

#endif // UTIL_HPP_INCLUDED
",C++
"#ifndef _HC_EXCEPTION_HPP_
#define _HC_EXCEPTION_HPP_

//////////////
// Includes //
#include <exception>
#include <string>

//////////
// Code //

// To distinguish between different HCExceptions.
enum HCType {
    // When the game cannot open the SDL window.
    HC_WINDOW_EXCEPTION,

    // When the game cannot load an asset, or it has been destroyed.
    HC_ASSET_EXCEPTION
};

// A custom exception for this project.
class HCException : public std::exception {
private:
    std::string msg;
    HCType type;

public:
    // Creating an HCException with a message and a type.
    HCException(std::string, HCType);
    
    // The message of this HCException.
    const char* what() throw();
};

#endif
",C++
"// BEGIN CUT HERE

// END CUT HERE
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <vector>
#include <map>
#include <string>
#include <set>
#include <algorithm>

using namespace std;

const int V = 64;
const int E = V * V * 2;
const int INF = 1 << 29;

int d[V], how[V], eCapacity[E], eU[E], eV[E], eCost[E];
int eIndex = 0;

void addEdge(int u, int v, int capacity, int cost) {
    eU[eIndex] = u, eV[eIndex] = v, eCapacity[eIndex] = capacity, eCost[eIndex++] = cost;
    eU[eIndex] = v, eV[eIndex] = u, eCapacity[eIndex] = 0, eCost[eIndex++] = -cost;
}

pair <int, int> minCostMaxFlow(int n, int s, int t) {
    int flow = 0, cost = 0;
    for (;;) {
       for (int i = 0; i < n; i++) {
           d[i] = INF;
       }
       d[s] = 0;
       for(;;) {
           bool done = true;
           for (int e = 0; e < eIndex; e++) {
               if (eCapacity[e] > 0) {
                   int u = eU[e], v = eV[e], cost = eCost[e];
                   if (d[v] > d[u] + cost) {
                       d[v] = d[u] + cost;
                       how[v] = e;
                       done = false;
                   }
               }
           }
           if (done) {
               break;
           }
       }
       if (d[t] >= INF / 2) {
           break;
       }
       int augment = INF;
       for (int v = t; v != s; v = eU[how[v]]) {
           augment = min(augment, eCapacity[how[v]]);
       }
 ",C++
"// cpu/test/unique-strings.cpp                                        -*-C++-*-
// ----------------------------------------------------------------------------
//  Copyright (C) 2015 Dietmar Kuehl http://www.dietmar-kuehl.de         
//                                                                       
//  Permission is hereby granted, free of charge, to any person          
//  obtaining a copy of this software and associated documentation       
//  files (the ""Software""), to deal in the Software without restriction, 
//  including without limitation the rights to use, copy, modify,        
//  merge, publish, distribute, sublicense, and/or sell copies of        
//  the Software, and to permit persons to whom the Software is          
//  furnished to do so, subject to the following conditions:             
//                                                                       
//  The above copyright notice and this permission notice shall be       
//  included in all copies or substantial portions of the Software.      
//                                                                       
//  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,      
//  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES      
//  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND             
//  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT          
//  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,         
//  WHET",C++
"#include <net/http/CServer.hpp>

namespace net { namespace http 
{
  CServer::CServer(void) : net::CServer(net::EProtocol::TCP)
  {
    
  }
}}
",C++
"// Copyright (c) 2016 Irfan Adilovic
// This software is licensed under the terms of the MIT license.
// See LICENSE for the text of the license.

#include <iostream>
#include <iomanip>
#include <limits>
#include <stdint.h>
#include <cstdio>
#include <typeinfo>
#include <inttypes.h>

using std::cout;
using std::cerr;
using std::endl;
using std::bad_cast;

#undef assert // for testability
//#define assert(e) ((e) ? (void)0 : ((void)printf (""%s:%u: failed assertion `%s'\n"", __FILE__, __LINE__, #e)))
#define assert(e) ((e) ? (void)0 : ((void)printf (""failed assertion `%s'\n"", #e)))
#define assert_op(e1, op, e2) ((e1) op (e2) ? (void)0 : ((void)(cout << ""failed assertion `"" << #e1 << "" "" #op "" "" << #e2 << "": ["" << (e1) << ""] isn't "" #op "" ["" << (e2) << ""]\n"")))
#define assert_eq(e1, e2) assert_op(e1, ==, e2)
#define assert_ne(e1, e2) assert_op(e1, !=, e2)

#include ""safe_ops.h""
using namespace safe_ops;

#define MAX(T) numeric_limits_compat<T>::max()
#define MIN(T) numeric_limits_compat<T>::lowest()

#ifdef SAFE_USE_INT128
std::ostream& operator<<(std::ostream& os, uint128_t t) {
    os << std::hex << ""0x"" << std::setw(16) <<std::setfill('0') << (uint64_t)(t>>64);
    return os << std::setw(16) << std::setfill('0') << (uint64_t)(t) << std::dec;
}

std::ostream& operator<<(std::ostream& os, int128_t t) {
    return os << (uint128_t)t;
}
#endif


#if __cplusplus < 201103L
struct Lambda {
    void operator ()(int result) { cout << ""lambda: "" << (result < 0 ? ""under"" : ""over"") << ""fl",C++
"#include ""sendcoinsdialog.h""
#include ""ui_sendcoinsdialog.h""
#include ""walletmodel.h""
#include ""bitcoinunits.h""
#include ""addressbookpage.h""
#include ""optionsmodel.h""
#include ""sendcoinsentry.h""
#include ""guiutil.h""
#include ""askpassphrasedialog.h""
#include ""base58.h""

#include <QMessageBox>
#include <QLocale>
#include <QTextDocument>
#include <QScrollBar>

SendCoinsDialog::SendCoinsDialog(QWidget *parent) :
    QDialog(parent),
    ui(new Ui::SendCoinsDialog),
    model(0)
{
    ui->setupUi(this);

#ifdef Q_OS_MAC // Icons on push buttons are very uncommon on Mac
    ui->addButton->setIcon(QIcon());
    ui->clearButton->setIcon(QIcon());
    ui->sendButton->setIcon(QIcon());
#endif

    addEntry();

    connect(ui->addButton, SIGNAL(clicked()), this, SLOT(addEntry()));
    connect(ui->clearButton, SIGNAL(clicked()), this, SLOT(clear()));

    fNewRecipientAllowed = true;
}

void SendCoinsDialog::setModel(WalletModel *model)
{
    this->model = model;

    for(int i = 0; i < ui->entries->count(); ++i)
    {
        SendCoinsEntry *entry = qobject_cast<SendCoinsEntry*>(ui->entries->itemAt(i)->widget());
        if(entry)
        {
            entry->setModel(model);
        }
    }
    if(model && model->getOptionsModel())
    {
        setBalance(model->getBalance(), model->getStake(), model->getUnconfirmedBalance(), model->getImmatureBalance());
        connect(model, SIGNAL(balanceChanged(qint64, qint64, qint64, qint64)), this, SLOT(setBalance(qint64, qint64, qint64, qint64",C++
"#include ""TextItem.h""

#include <QPainter>
#include <QFont>
#include <QDebug>

////////////////////////////////////////////////////////////////
TextItem::TextItem(const QString& text, QGraphicsLayoutItem *parent)
    : BaseItem(parent)
{
    _text = text;

    QFont font;
    font.setPointSize(11);
    font.setBold(false);

    setFont(font);
}

////////////////////////////////////////////////////////////////
TextItem::~TextItem()
{
}

////////////////////////////////////////////////////////////////
void TextItem::setFont(const QFont &font)
{
    _font = font;
    QFontMetrics fm(_font);
}

////////////////////////////////////////////////////////////////
QSizeF TextItem::measureSize() const
{
    QFontMetrics fm(_font);

    const QSizeF& size = fm.size(Qt::TextExpandTabs, _text);
    // NOTE: flag Qt::TextSingleLine ignores newline characters.
    return size;
}

////////////////////////////////////////////////////////////////
void TextItem::draw(QPainter *painter, const QRectF& bounds)
{
    painter->setFont(_font);

    // TODO: mozno bude treba specialne handlovat novy riadok
    painter->drawText(bounds, _text);
}
",C++
"#include <QWebView>

#include ""helpdialog.h""

/**
  * Constructor of Help Dialog
  */
HelpDialog::HelpDialog(QWidget *parent) : QWebPage(parent) {
    view = new QWebView();
}

/**
  * Shows the help dialog
  */
void HelpDialog::showHelpDialog() {
    createWindow(QWebPage::WebModalDialog);
    view->setPage(this);
    view->setWindowIcon(QIcon("":/images/help-icon.png""));
    view->setWindowTitle(""Othello FPG - Help"");
    view->load(QUrl(""qrc:/html/index.html""));
    view->show();
}
",C++
"/***********************************************************************************
		Copyright (C) 2016 Mohammad D. Mottaghi

	Under the terms of the MIT license, permission is granted to anyone to use, copy, 
	modify, publish, redistribute, and/or sell copies of this source code for any 
	commercial and non-commercial purposes, subject to the following restrictions:
		
	1. The above copyright notice and this permission notice shall not be removed 
	from any source distribution.
	
	2. The origin of this file shall not be misrepresented; The name of the original 
	author shall be cited in any copy, or modified version of this source code.
	
	3. If used in a product, acknowledgment in the product documentation would be
	appreciated, but is not required.

	4. Modified versions must be plainly marked as such, and must not be 
	misrepresented as being the original source code.

	This source code is provided ""as is"", without warranty of any kind, express or 
	implied, including but not limited to the warranties of merchantability, fitness 
	for a particular purpose and noninfringement. In no event shall the author
	or copyright holders be liable for any claim, damages or other liability, 
	whether in an action of contract, tort or otherwise, arising from, out of or 
	in connection with this source code or the use or other dealings in it.

		Mohammd Mottaghi Dastjerdi (mamad[a~t]cs.duke.edu)
		Sep. 1,2016

***************************************************************************",C++
"#include ""pch.h""
#include ""ActalogicApp.h""

TCHAR ActalogicApp::m_szWindowClass[] = _T(""Actalogic"");
TCHAR ActalogicApp::m_szTitle[] = _T(""Actalogic"");

ActalogicApp::ActalogicApp():
m_hWnd(NULL),
m_hInstance(NULL),
m_d2d1Manager(),
m_entityFPS(),
m_entityDebugInfoLayer(),
m_entitySceneContainer(this),
m_inputHelper()
{
	m_entityDebugInfoLayer.SetApp(this);
}


ActalogicApp::~ActalogicApp()
{
}

HRESULT ActalogicApp::Initialize(HINSTANCE hInstance, int nCmdShow)
{
	HRESULT hresult;

	hresult = m_d2d1Manager.CreateDeviceIndependentResources();
	if (FAILED(hresult)) {return hresult;}

	//TODO:±±ÉEntityÌfoCXñË¶Ìú»ðÇÁ
	hresult = m_entityDebugInfoLayer.OnCreateDeviceIndependentResources(&m_d2d1Manager);
	if (FAILED(hresult)) { return hresult; }

	hresult = m_entityFPS.OnCreateDeviceIndependentResources(&m_d2d1Manager);
	if (FAILED(hresult)) { return hresult; }

	hresult = m_entitySceneContainer.OnCreateDeviceIndependentResources(&m_d2d1Manager);
	if (FAILED(hresult)) { return hresult; }

	m_hInstance = hInstance;
	m_hWnd = InitializeWindow(hInstance, nCmdShow, 800.0F, 600.0F);

	return m_hWnd==NULL ? E_FAIL : S_OK;
}

HWND ActalogicApp::InitializeWindow(HINSTANCE hInstance, int nCmdShow, FLOAT width, FLOAT height)
{
	WNDCLASSEX wcex;

	wcex.cbSize = sizeof(WNDCLASSEX);
	wcex.style = CS_HREDRAW | CS_VREDRAW;
	wcex.lpfnWndProc = ActalogicApp::WndProc;
	wcex.cbClsExtra = 0;
	wcex.cbWndExtra = 0;
	wcex.hInstance = hInstance;
	wcex.hIcon = LoadIcon(hInstance, MAK",C++
"#include <gtest/gtest.h>
#include ""loquat/misc/binary_search.hpp""

TEST(BinarySearchTest, Integer){
	for(int l = -16; l <= 16; ++l){
		for(int r = l; r <= 16; ++r){
			for(int expect = l; expect <= r; ++expect){
				const auto actual = loquat::binary_search(
					l, r, [=](int x){ return x < expect; });
				EXPECT_EQ(expect, actual);
			}
		}
	}
}

TEST(BinarySearchTest, Floating){
	for(int li = -16; li <= 16; ++li){
		for(int ri = li; ri <= li; ++ri){
			const double l = li * 1.1, r = ri * 1.1;
			for(double expect = l; expect < r; expect += 0.2){
				const auto actual = loquat::binary_search(
					l, r, [=](double x){ return x < expect; });
				EXPECT_DOUBLE_EQ(expect, actual);
			}
			const auto min_actual = loquat::binary_search(
				l, r, [=](double){ return true; });
			EXPECT_DOUBLE_EQ(l, min_actual);
			const auto max_actual = loquat::binary_search(
				l, r, [=](double){ return false; });
			EXPECT_DOUBLE_EQ(r, max_actual);
		}
	}
}

",C++
"#include <iostream>
#include <string>
using namespace std;

int main(){
  int n;
  string experiment;
  for(cin>>n; n>0; n--){
    cin >> experiment;
    if (experiment.size() < 3) cout << '+' << endl;
    else{
      string s = experiment.substr(experiment.size()-2, 2);
      string saux;
      if(s == ""35"") cout << '-' << endl;
      else{
        s = s[1];
        saux = experiment[0];
        if(saux == ""9"" && s == ""4"") cout << '*' << endl;
        else{
          s = experiment.substr(0,3);
          if(s == ""190"") cout << '?' << endl;
          else cout << '?' << endl;
        }
      }
    }
  }



return 0;
}
",C++
"/* -*- mode: C; c-basic-offset: 4; indent-tabs-mode: nil; -*- */
/*
 * Copyright (c) 2008  litl, LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

#include <config.h>

#include <string.h>

/* include first for logging related #define used in repo.h */
#include <util/log.h>

#include ""union.h""
#include ""arg.h""
#include ""object.h""
#include <cjs/gjs-module.h>
#include <cjs/compat.h>
#include ""repo.h""
#include ""proxyutils.h""
#include ""function.h""
#include ""gtype.h""
",C++
"#include <string.hpp>
#include ""yatf/include/yatf.hpp""

using namespace yacppl;

TEST(string, can_be_created) {
    string str;
    REQUIRE(str == """");
    REQUIRE(str.empty());
    REQUIRE_EQ(str.length(), 0u);
    REQUIRE_EQ(str.size(), 0u);
    REQUIRE_FALSE(str == ""abc"");
}

TEST(string, can_be_constructed_from_cstring) {
    {
        string str(""test_string"");
        REQUIRE(str == ""test_string"");
        REQUIRE_EQ(str.length(), 11u);
        REQUIRE_EQ(str.size(), 11u);
        REQUIRE_EQ(*(str.cend() - 1), 'g');
        REQUIRE_EQ(*(str.end() - 1), 'g');
        REQUIRE_EQ(*(str.cbegin()), 't');
        REQUIRE_EQ(*(str.begin()), 't');
    }
    {
        string str(""test_string"", 4);
        REQUIRE(str == ""test"");
        REQUIRE_EQ(str.length(), 4u);
        REQUIRE_EQ(str.size(), 4u);
        REQUIRE_EQ(*(str.cend() - 1), 't');
        REQUIRE_EQ(*(str.end() - 1), 't');
        REQUIRE_EQ(*(str.cbegin()), 't');
        REQUIRE_EQ(*(str.begin()), 't');
    }
}

string get_string() {
    return ""some_string"";
}

TEST(string, can_be_created_from_other_string) {
    string str(""test_string"");
    {
        auto str2 = str;
        REQUIRE(not str.empty());
        REQUIRE(not str2.empty());
        REQUIRE(str == ""test_string"");
        REQUIRE(str2 == ""test_string"");
    }
    {
        string str2(str);
        REQUIRE(not str.empty());
        REQUIRE(not str2.empty());
        REQUIRE(str == ""test_string"");
        REQUIRE(str2 == ""test_string"");
    }
    {
   ",C++
"#include ""protagonist.h""
#include ""SerializeResult.h""
#include ""v8_wrapper.h""
#include ""snowcrash.h""

using namespace v8;
using namespace protagonist;

Result::Result()
{
}

Result::~Result()
{
}

Nan::Persistent<Function> Result::constructor;

void Result::Init(Handle<Object> exports)
{
    Nan::HandleScope scope;

    Local<FunctionTemplate> t = Nan::New<FunctionTemplate>(New);
    t->SetClassName(Nan::New<String>(""Result"").ToLocalChecked());
    t->InstanceTemplate()->SetInternalFieldCount(1);

    constructor.Reset(t->GetFunction());
    exports->Set(Nan::New<String>(""Result"").ToLocalChecked(), t->GetFunction());
}

NAN_METHOD(Result::New)
{
    Nan::HandleScope scope;

    Result* result = ::new Result();
    result->Wrap(info.This());

    info.GetReturnValue().Set(info.This());
}

v8::Local<v8::Object> Result::WrapResult(snowcrash::ParseResult<snowcrash::Blueprint>& parseResult,
                                         const snowcrash::BlueprintParserOptions& options,
                                         const drafter::ASTType& astType)
{
    static const char* AstKey = ""ast"";
    static const char* ErrorKey = ""error"";
    static const char* SourcemapKey = ""sourcemap"";

    sos::Object result;

    try {
        result = drafter::WrapResult(parseResult, options, astType);
    }
    catch (snowcrash::Error& error) {
        parseResult.report.error = error;
    }

    if (astType == drafter::NormalASTType && parseResult.report.error.code != snowcrash::Error::OK) {
 ",C++
"#include <iostream>
#include <sstream>
#include <vector>
#include <cmath>
#include <reader.hpp>
#include <writer.hpp>

using namespace std;
using namespace jam;

struct JoinK {
  
  JoinK(vector<vector<char>>&& input, int kIn) : g(input), k(kIn) { n = g.size(); }
  
  void rotate() {
    for (auto& v : g) {
      v.erase(remove(v.begin(), v.end(), '.'), v.end());
      v.insert(v.begin(), g.size() - v.size(), '.');
    }
  }
  
  bool winAt(int i, int j, char c) {
    bool winRight = false, winDown = false, winDiagRight = false, winDiagLeft = false;
    if (i <= n - k) {
      winDown = true;
      for (int x = i; x < i + k; ++x) { if (g[x][j] != c) { winDown = false; break; } }
    }
    if (j <= n - k) {
      winRight = true;
      for (int x = j; x < j + k; ++x) { if (g[i][x] != c) { winRight = false; break; } }
    }
    if (i <= n - k && j >= k - 1) {
      winDiagLeft = true;
      for (int x = 0; x < k; ++x) { if (g[i + x][j - x] != c) { winDiagLeft = false; break; } }
    }
    if (i <= n - k && j <= n - k) {
      winDiagRight = true;
      for (int x = 0; x < k; ++x) { if (g[i + x][j + x] != c) { winDiagRight = false; break; } }
    }
    return winRight || winDown || winDiagRight || winDiagLeft;
  }
  
  bool winFor(char c) {
    for (int i = 0; i < n; ++i) {
      for (int j = 0; j < n; ++j) {
        if (winAt(i, j, c)) { return true; }
      }
    }
    return false;
  }
  
  void dump() {
    cout << endl;
    for (int i = 0; i < n; ++i) {
      for (int j = 0",C++
"#include ""binary_buffer.hpp""

#include <iterator>
#include <algorithm>
#include <sstream>
#include <boost/endian/conversion.hpp>

using boost::endian::native_to_big;
using boost::endian::big_to_native;

namespace {
    using aria::byte;

    template <typename P>
    void append_bytes_to_vector(std::vector<byte> & vec, P primitive)
    {
        auto * begin = reinterpret_cast<byte *>(&primitive);
        auto * end = begin + sizeof(primitive);
        std::copy(begin, end, std::back_inserter(vec));
    }

    template <typename P>
    P read_primitive_and_advance(const byte * buffer, size_t size, size_t & offset, const std::string & name)
    {
        size_t stride = sizeof(P);
        if (offset + stride <= size) {
            auto i = reinterpret_cast<const P *>(buffer + offset);
            offset += stride;
            return big_to_native(*i);
        } else {
            throw aria::internal::buffer_error(""Insufficient bytes available to read "" + name + ""."");
        }
    }
}

aria::internal::buffer_error::buffer_error(const char *what)
    :   std::runtime_error(what)
{

}

aria::internal::buffer_error::buffer_error(const std::string &what)
    :   std::runtime_error(what)
{

}

void aria::internal::binary_buffer_writer::write_uint8(uint8_t i)
{
    _bytes.push_back(static_cast<byte>(i));
}

void aria::internal::binary_buffer_writer::write_uint16(uint16_t i)
{
    append_bytes_to_vector(_bytes, native_to_big(i));
}

void aria::internal::binary_buffer_writer::write_u",C++
"#include ""RDom.h""
#include ""Util.h""
#include ""IROperator.h""
#include ""IRPrinter.h""

namespace Halide {

using namespace Internal;

using std::string;
using std::vector;

RVar::operator Expr() const {
    if (!min().defined() || !extent().defined()) {
        user_error << ""Use of undefined RDom dimension: "" <<
            (name().empty() ? ""<unknown>"" : name()) << ""\n"";
    }
    return Variable::make(Int(32), name(), domain());
}

Expr RVar::min() const {
    if (_domain.defined()) {
        return _var().min;
    } else {
        return Expr();
    }
}

Expr RVar::extent() const {
    if (_domain.defined()) {
        return _var().extent;
    } else {
        return Expr();
    }
}

const std::string &RVar::name() const {
    if (_domain.defined()) {
        return _var().var;
    } else {
        return _name;
    }
}


template <int N>
ReductionDomain build_domain(ReductionVariable (&vars)[N]) {
    vector<ReductionVariable> d(&vars[0], &vars[N]);
    ReductionDomain dom(d);
    return dom;
}

// This just initializes the predefined x, y, z, w members of RDom.
void RDom::init_vars(string name) {
    static string var_names[] = { ""x"", ""y"", ""z"", ""w"" };

    const std::vector<ReductionVariable> &dom_vars = dom.domain();
    RVar *vars[] = { &x, &y, &z, &w };

    for (size_t i = 0; i < sizeof(vars)/sizeof(vars[0]); i++) {
        if (i < dom_vars.size()) {
            *(vars[i]) = RVar(dom, i);
        } else {
            *(vars[i]) = RVar(name + ""."" + var_names[i]);
      ",C++
"import { GraphQLError } from '../../error/GraphQLError';

import type {
  SchemaDefinitionNode,
  SchemaExtensionNode,
} from '../../language/ast';
import type { ASTVisitor } from '../../language/visitor';

import type { SDLValidationContext } from '../ValidationContext';

/**
 * Unique operation types
 *
 * A GraphQL document is only valid if it has only one type per operation.
 */
export function UniqueOperationTypesRule(
  context: SDLValidationContext,
): ASTVisitor {
  const schema = context.getSchema();
  const definedOperationTypes = Object.create(null);
  const existingOperationTypes = schema
    ? {
        query: schema.getQueryType(),
        mutation: schema.getMutationType(),
        subscription: schema.getSubscriptionType(),
      }
    : {};

  return {
    SchemaDefinition: checkOperationTypes,
    SchemaExtension: checkOperationTypes,
  };

  function checkOperationTypes(
    node: SchemaDefinitionNode | SchemaExtensionNode,
  ) {
    // See: https://github.com/graphql/graphql-js/issues/2203
    /* c8 ignore next */
    const operationTypesNodes = node.operationTypes ?? [];

    for (const operationType of operationTypesNodes) {
      const operation = operationType.operation;
      const alreadyDefinedOperationType = definedOperationTypes[operation];

      if (existingOperationTypes[operation]) {
        context.reportError(
          new GraphQLError(
            `Type for ${operation} already defined in the schema. It cannot be redefined.`,
            o",TypeScript
"import { IQuotation } from '../../model/QuotationService/IQuotation';

export interface IQuoteDisplayProps {
  quote: IQuotation;
}
",TypeScript
"class Projects {

    public static filters: string[] = [];

    public static open(): void {
        $.ajax(
            {
                url: ""./projects.html"",
                success: (data) => {
                    $(""#page"").fadeOut(
                        ""fast"",
                        () => {
                            document.getElementById(""page"").innerHTML = data;
                            NavTree.Update([
                                {
                                    name: ""home"",
                                    url: ""#""
                                },
                                {
                                    name: ""projects"",
                                    url: ""#projects""
                                }
                            ]);
                            $(""#page"").show(0);
                            $("".menu-item"").hide();
                            $("".menu-item"").each(
                                (i, e) => {
                                    setTimeout(
                                        () => {
                                            $(e).fadeIn(500);
                                        },
                                        i * 100
                                    )
                                }
                            )
                        }
                    );
                }
            }
        )
    }
}",TypeScript
"/* tslint:disable:no-unused-variable */

import { TestBed, async } from '@angular/core/testing';
import { DpsBarChartComponent } from './dps-bar-chart.component';

describe('Component: DpsBarChart', () => {
  it('should create an instance', () => {
    let component = new DpsBarChartComponent();
    expect(component).toBeTruthy();
  });
});
",TypeScript
"<?xml version=""1.0"" ?><!DOCTYPE TS><TS language=""eo"" version=""2.1"">
<context>
    <name>AboutDialog</name>
    <message>
        <location filename=""../forms/aboutdialog.ui"" line=""+14""/>
        <source>About BitSeeds</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+39""/>
        <source>&lt;b&gt;BitSeeds&lt;/b&gt; version</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+41""/>
        <source>Copyright © 2009-2014 The Bitcoin developers
Copyright © 2012-2014 The NovaCoin developers
Copyright © 2014 The BitSeeds developers</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+15""/>
        <source>
This is experimental software.

Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.

This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.</source>
        <translation>
Tio ĉi estas eksperimenta programo.

Eldonita laŭ la permesilo MIT/X11. Vidu la kunan dosieron COPYING aŭ http://www.opensource.org/licenses/mit-license.php.

Tiu ĉi produkto enhavas erojn kreitajn de la &quot;OpenSSL Project&quot; por uzo en la &quot;OpenSSL Toolkit&quot; (http://www.openssl.org/)",TypeScript
"import { Nibble, UInt4 } from '../types'

/**
 * Returns a Nibble (0-15) which equals the given bits.
 *
 * @example
 * byte.write([1,0,1,0]) => 10
 *
 * @param {Array} nibble 4-bit unsigned integer
 * @return {Number}
 */
export default (nibble: Nibble): UInt4 => {
	if (!Array.isArray(nibble) || nibble.length !== 4)
		throw new RangeError('invalid array length')

	let result: UInt4 = 0

	for (let i: number = 0; i < 4; i++) if (nibble[3 - i]) result |= 1 << i

	return <UInt4>result
}
",TypeScript
"import { expect } from 'chai';

import { Curry } from './curry';

describe('curry', () => {
  it('should curry the method with default arity', () => {
    class MyClass {
      @Curry()
      add(a: any, b?: any) {
        return a + b;
      }
    }

    const myClass = new MyClass();
    const add5 = myClass.add(5);

    expect(add5).to.be.an.instanceOf(Function);
    expect(add5(10)).to.equal(15);
  });

  it('should curry the method with default arity (paramless)', () => {
    class MyClass {
      @Curry
      add(a: any, b?: any) {
        return a + b;
      }
    }

    const myClass = new MyClass();
    const add5 = myClass.add(5);

    expect(add5).to.be.an.instanceOf(Function);
    expect(add5(10)).to.equal(15);
  });

  it('should curry the method with fixed arity', () => {
    class MyClass {
      @Curry(2)
      add(a: any, b?: any, c?: any) {
        return a + b * c;
      }
    }

    const myClass = new MyClass();
    const add5 = myClass.add(5);

    expect(add5).to.be.an.instanceOf(Function);
    expect(add5(10, 2)).to.equal(25);
  });

  it('should retain the class context', () => {
    class MyClass {
      value = 10;

      @Curry()
      add(a: any, b?: any): any {
        return (a + b) * this.value;
      }
    }

    const myClass = new MyClass();
    const add5 = myClass.add(5);

    expect(add5(2)).to.equal(70);
  });
});
",TypeScript
"<?xml version=""1.0"" ?><!DOCTYPE TS><TS language=""uk"" version=""2.0"">
<defaumlcodec>UTF-8</defaumlcodec>
<context>
    <name>AboutDialog</name>
    <message>
        <location filename=""../forms/aboutdialog.ui"" line=""+14""/>
        <source>About Menlocoin</source>
        <translation>Про Menlocoin</translation>
    </message>
    <message>
        <location line=""+39""/>
        <source>&lt;b&gt;Menlocoin&lt;/b&gt; version</source>
        <translation>Версія &lt;b&gt;Menlocoin&apos;a&lt;b&gt;</translation>
    </message>
    <message>
        <location line=""+57""/>
        <source>
This is experimental software.

Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.

This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.</source>
        <translation>
Це програмне забезпечення є експериментальним.

Поширюється за ліцензією MIT/X11, додаткова інформація міститься у файлі COPYING, а також за адресою http://www.opensource.org/licenses/mit-license.php.

Цей продукт включає в себе програмне забезпечення, розроблене в рамках проекту OpenSSL (http://www.openssl.org/), криптографічне програмне забезпечення, написане Еріком Янгом (eay@cryptsoft.com), та функції для роботи з UPnP, написані Томасом Бернардом.</translation>
    </",TypeScript
"
import {MdSnackBar} from '@angular/material';

export abstract class CommonCrudService {

  constructor(private snackBar: MdSnackBar) {
  }

  // todo refactor crud operations to here (use metadata?)
  onOperationPerformedNotify(opName: string): (res: boolean) => void {
    return (res) => {
      let text;
      if (res) {
        text = `Successful ${opName}!`;
      } else {
        text = `Failed to ${opName}!`;
      }
      this.snackBar.open(text, null, {
        duration: 1000
      });
    };
  }
}
",TypeScript
"import { autoinject } from 'aurelia-framework';
import { Customers } from './customers';
import { Router } from 'aurelia-router';

@autoinject()
export class List {
  heading = 'Customer management';

  customerList = [];

  customers: Customers;
  router: Router;

  constructor(customers: Customers, router: Router) {
    this.customers = customers;
    this.router = router;
  }

  gotoCustomer(customer: any) {
    this.router.navigateToRoute('edit', {id: customer.id});
  }

  new() {
    this.router.navigateToRoute('create');
  }

  activate() {
    return this.customers.getAll()
      .then(customerList => this.customerList = customerList);
  }
}
",TypeScript
"import { Component, OnInit, Input } from '@angular/core';
import { LoadingController, NavController } from 'ionic-angular';
import { Geolocation } from 'ionic-native';
import { Observable } from 'rxjs/Observable';
import { OriginLocationComponent } from '../origin-location/origin-location';
// import { AvailableProvidersComponent } from '../available-providers/available-providers';

@Component({
  selector: 'google-map',
  templateUrl: 'google-map.html',
  entryComponents: [OriginLocationComponent]
})

export class GoogleMapComponent implements OnInit {

  @Input() isServiceRequested: boolean;

  public location; map;
  public isMapIdle: boolean;

  constructor(public navCtrl: NavController, public loadingCtrl: LoadingController) {}


  ngOnInit(){
    this.map = this.createMap();
    this.addMapEventListeners();


    this.getLocation().subscribe(location => {
      this.centerLocation(location)
    })
  }

  addMapEventListeners(){
    google.maps.event.addListener(this.map, 'dragstart', ()=>{
      this.isMapIdle = false;
    })
    google.maps.event.addListener(this.map, 'idle', ()=>{
      this.isMapIdle = true;
    })
  }

  getLocation() {

    let loading = this.loadingCtrl.create({
      content: 'Locating...',
      spinner: 'bubbles'
    });
    loading.present()

    setTimeout(() => {
    loading.dismiss();
    }, 5000)

    let options = {timeout: 10000, enableHighAccuracy: true};

    let locationObs = Observable.create(observable => {

      Geolocation.getCur",TypeScript
"import { createElement } from 'react'
import omit from 'lodash/omit'
import { useSpring, animated } from '@react-spring/web'
import { useTheme, useMotionConfig } from '@nivo/core'
import { NoteSvg } from './types'

export const AnnotationNote = <Datum,>({
    datum,
    x,
    y,
    note,
}: {
    datum: Datum
    x: number
    y: number
    note: NoteSvg<Datum>
}) => {
    const theme = useTheme()
    const { animate, config: springConfig } = useMotionConfig()

    const animatedProps = useSpring({
        x,
        y,
        config: springConfig,
        immediate: !animate,
    })

    if (typeof note === 'function') {
        return createElement(note, { x, y, datum })
    }

    return (
        <>
            {theme.annotations.text.outlineWidth > 0 && (
                <animated.text
                    x={animatedProps.x}
                    y={animatedProps.y}
                    style={{
                        ...theme.annotations.text,
                        strokeLinejoin: 'round',
                        strokeWidth: theme.annotations.text.outlineWidth * 2,
                        stroke: theme.annotations.text.outlineColor,
                    }}
                >
                    {note}
                </animated.text>
            )}
            <animated.text
                x={animatedProps.x}
                y={animatedProps.y}
                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}
            >
                {note}
",TypeScript
"import { fullSrc } from '../element/element';
import { pixels } from '../math/unit';
import { Clone } from './clone';
import { Container } from './container';
import { Image } from './image';
import { Overlay } from './overlay';
import { Wrapper } from './wrapper';

export class ZoomDOM {
    static useExisting(element: HTMLImageElement, parent: HTMLElement, grandparent: HTMLElement): ZoomDOM {
        let overlay = Overlay.create();
        let wrapper = new Wrapper(grandparent);
        let container = new Container(parent);
        let image = new Image(element);
        let src = fullSrc(element);

        if (src === element.src) {
            return new ZoomDOM(overlay, wrapper, container, image);
        } else {
            return new ZoomDOM(overlay, wrapper, container, image, new Clone(container.clone()));
        }
    }

    static create(element: HTMLImageElement): ZoomDOM {
        let overlay = Overlay.create();
        let wrapper = Wrapper.create();
        let container = Container.create();
        let image = new Image(element);
        let src = fullSrc(element);

        if (src === element.src) {
            return new ZoomDOM(overlay, wrapper, container, image);
        } else {
            return new ZoomDOM(overlay, wrapper, container, image, Clone.create(src));
        }
    }

    readonly overlay: Overlay;
    readonly wrapper: Wrapper;
    readonly container: Container;
    readonly image: Image;
    readonly clone?: Clone;

    constructor(overl",TypeScript
"import * as b from ""bobril"";
import { IRouteWithNavDefinition } from ""../../../../common/routing"";
import { Anchor } from ""../../../../common/Anchor"";
import { Example } from ""../../../../common/Example"";
import { Col, Form, margin, Row } from ""../../../../../index"";
import { Code } from ""../../../../common/Code"";
import { Lead } from ""../../../../common/Lead"";

export const formControlsRoute: IRouteWithNavDefinition = {
    url: ""form-controls"",
    name: ""form-controls"",
    label: ""Form controls"",
    handler: () => <FormsDoc />,
    subs: [
        {
            url: ""example"",
            name: ""form-controls-example"",
            label: ""Example"",
            subs: [],
        },
        {
            url: ""sizing"",
            name: ""form-controls-sizing"",
            label: ""Sizing"",
            subs: [],
        },
        {
            url: ""readonly"",
            name: ""form-controls-readonly"",
            label: ""Readonly"",
            subs: [],
        },
        {
            url: ""readonly-plain-text"",
            name: ""form-controls-readonly-plain-text"",
            label: ""Readonly plain text"",
            subs: [],
        },
        {
            url: ""file-input"",
            name: ""form-controls-file-input"",
            label: ""File input"",
            subs: [],
        },
        {
            url: ""color"",
            name: ""form-controls-color"",
            label: ""Color"",
            subs: [],
        },
        {
            url: ""datalist"",
       ",TypeScript
"import {bootstrap} from '@angular/platform-browser-dynamic';
import {ROUTER_PROVIDERS} from '@angular/router-deprecated';
import {HTTP_PROVIDERS} from '@angular/http';
import {AppComponent} from './app.component';
import {LoggerService} from './blocks/logger.service';

bootstrap(AppComponent, [
    LoggerService, ROUTER_PROVIDERS, HTTP_PROVIDERS
]);
",TypeScript
"export class Guest {
  
  constructor(public name: String, public quantity: number){
    
  }
}",TypeScript
"<?xml version=""1.0"" ?><!DOCTYPE TS><TS language=""el_GR"" version=""2.0"">
<defaultcodec>UTF-8</defaultcodec>
<context>
    <name>AboutDialog</name>
    <message>
        <location filename=""../forms/aboutdialog.ui"" line=""+14""/>
        <source>About Number7</source>
        <translation>Σχετικά με το Number7</translation>
    </message>
    <message>
        <location line=""+39""/>
        <source>&lt;b&gt;Number7&lt;/b&gt; version</source>
        <translation>Έκδοση Number7</translation>
    </message>
    <message>
        <location line=""+57""/>
        <source>
This is experimental software.

Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.

This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.</source>
        <translation>
This is experimental software.

Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.

This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.</translation>
    </message>
    <message>
        <location filename=""../aboutdialog.cpp"" ",TypeScript
"/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

'use strict';

import { TPromise, Promise } from 'vs/base/common/winjs.base';
import { xhr } from 'vs/base/common/network';
import { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';
import strings = require('vs/base/common/strings');
import nls = require('vs/nls');
import { IDisposable, dispose } from 'vs/base/common/lifecycle';
import platform = require('vs/platform/platform');
import { IConfigurationService } from 'vs/platform/configuration/common/configuration';
import { BaseRequestService } from 'vs/platform/request/common/baseRequestService';
import { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';
import { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';
import { assign } from 'vs/base/common/objects';
import { IXHROptions, IXHRResponse } from 'vs/base/common/http';
import { request } from 'vs/base/node/request';
import { getProxyAgent } from 'vs/base/node/proxy';
import { createGunzip } from 'zlib';
import { Stream } from 'stream';

interface IHTTPConfiguration {
	http?: {
		proxy?: string;
		proxyStrictSSL?: boolean;
	};
}

expo",TypeScript
"import * as path from 'path';

import { EmptyTree } from '@angular-devkit/schematics';
import { SchematicTestRunner, UnitTestTree } from '@angular-devkit/schematics/testing';

describe('Update 6.1.0', () => {
    let appTree: UnitTestTree;
    const schematicRunner = new SchematicTestRunner('ig-migrate', path.join(__dirname, '../migration-collection.json'));
    const configJson = {
        defaultProject: 'testProj',
        projects: {
            testProj: {
                sourceRoot: '/testSrc'
            }
        },
        schematics: {
            '@schematics/angular:component': {
                prefix: 'appPrefix'
            }
        }
      };

    beforeEach(() => {
        appTree = new UnitTestTree(new EmptyTree());
        appTree.create('/angular.json', JSON.stringify(configJson));
    });

    it('should update igxToggle events and selectors', async () => {
        appTree.create(
            '/testSrc/appPrefix/component/test.component.html',
            `<igx-tab-bar attr igxForRemote=""true""></igx-tab-bar>` +
            `<elem igxToggle (onOpen)=""handler"" (onClose)=""handler""></elem>`
        );
        const tree = await schematicRunner.runSchematicAsync('migration-04', {}, appTree)
            .toPromise();
        expect(tree.readContent('/testSrc/appPrefix/component/test.component.html'))
            .toEqual(
                `<igx-bottom-nav attr></igx-bottom-nav>` +
                `<elem igxToggle (onOpened)=""handler"" (onClosed)=""handler""></elem",TypeScript
"import { Injectable } from '@angular/core';
import { Subject } from 'rxjs/Subject';
import { Observable } from 'rxjs/Observable';
import { AngularFireDatabase, FirebaseListObservable } from 'angularfire2/database';
import { AngularFireAuth } from 'angularfire2/auth';
import * as firebase from 'firebase/app';
import {Http, Headers} from '@angular/http';
import {Router } from '@angular/router';
import 'rxjs/add/operator/map';

@Injectable()
export class AuthService {
  submission: FirebaseListObservable<any>;
  constructor(public afAuth: AngularFireAuth, private db: AngularFireDatabase, private router: Router){
    console.log(""Authentication service started"");
    console.log(firebase.auth());

  }

  login(email, pass){
    this.afAuth.auth.signInWithEmailAndPassword(email, pass)
    .then(res => {
        console.log('Nice, logging you in!!!');
        this.router.navigate(['/admin']);
      });
  }

  checkAuth(){
    this.afAuth.authState.subscribe(res => {
      if (res && res.uid) {
        console.log('user is logged in');
        return true;
      } else {
        console.log('user not logged in...redirecting to welcome..');
        this.router.navigate(['/login']);
        return false;
      }
    });
  }

  logout() {
    this.afAuth.auth.signOut();
    this.router.navigate(['/']);
  }

}
",TypeScript
"/**
 * Anonymous class
 */
class A {
  a: any;
  constructor(a: number) {
    this.a = a;
  }
}

/**
 * Named class
 */
class B {
  a: any;
  b: any;
  constructor(a, b) {
    this.a = a;
    this.b = b;
  }
}

/**
 * Named class extension
 */
class C extends A {
  b: any;
  constructor(a, b) {
    super(a);
    this.b = b;
  }
}

/**
 * Anonymous class extension
 */
class D extends B {
  c: any;
  constructor(a, b, c) {
    super(a, b);
    this.c = c;
  }
}

/**
 * goog.defineClass based classes
 */
class E extends C {
  constructor(a, b) {
    super(a, b);
  }
}

let nested = {};
nested.klass = class {};

class F {
  // inline comment

  /**
   * block comment
   */
  constructor() {}
}

class G {
  /**
   * ES6 method short hand.
   */
  method() {}
}
",TypeScript
"<?xml version=""1.0"" ?><!DOCTYPE TS><TS language=""eu_ES"" version=""2.0"">
<defaultcodec>UTF-8</defaultcodec>
<context>
    <name>AboutDialog</name>
    <message>
        <location filename=""../forms/aboutdialog.ui"" line=""+14""/>
        <source>About POPCoin</source>
        <translation>POPCoin-i buruz</translation>
    </message>
    <message>
        <location line=""+39""/>
        <source>&lt;b&gt;POPCoin&lt;/b&gt; version</source>
        <translation>&lt;b&gt;POPCoin&lt;/b&gt; bertsioa</translation>
    </message>
    <message>
        <location line=""+57""/>
        <source>
This is experimental software.

Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.

This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location filename=""../aboutdialog.cpp"" line=""+14""/>
        <source>Copyright</source>
        <translation type=""unfinished""/>
    </message>
    <message>
        <location line=""+0""/>
        <source>POPCoin</source>
        <translation type=""unfinished""/>
    </message>
</context>
<context>
    <name>AddressBookPage</name>
    <message>
        <location filename=""../forms/addressbookpage.ui"" line=""+14""/>
        <s",TypeScript
"/**
 * @hidden
 * @param a0
 * @param a1
 * @param a2
 * @param a3
 * @param a4
 * @param a5
 * @param a6
 * @param a7
 * @param b0
 * @param b1
 * @param b2
 * @param b3
 * @param b4
 * @param b5
 * @param b6
 * @param b7
 * @param index
 * @returns
 */
export declare function extE3(a0: number, a1: number, a2: number, a3: number, a4: number, a5: number, a6: number, a7: number, b0: number, b1: number, b2: number, b3: number, b4: number, b5: number, b6: number, b7: number, index: number): number;
",TypeScript
"import { A, O } from 'b-o-a';

import { State } from '../types/state';

import currentPage$ from '../props/current-page';
import signIn$ from '../props/sign-in';
import spots$ from '../props/spots';
import spotForm$ from '../props/spot-form';
import stampRallies$ from '../props/stamp-rallies';
import stampRally$ from '../props/stamp-rally';
import stampRallyForm$ from '../props/stamp-rally-form';
import token$ from '../props/token';

const getDefaultState = (): State => {
  return {
    googleApiKey: process.env.GOOGLE_API_KEY,
    currentPage: 'sign_in#index',
    signIn: {
      email: null,
      password: null
    },
    spots: [],
    spotForm: {
      name: null
    },
    stampRallies: [],
    stampRally: null,
    stampRallyForm: {
      name: null
    },
    token: {
      token: null,
      userId: null
    }
  };
};

const $ = (action$: O<A<any>>, state: State): O<State> => {
  const s = (state ? state : getDefaultState());
  return O
    .combineLatest(
      currentPage$(s.currentPage, action$),
      signIn$(s.signIn, action$),
      token$(s.token, action$),
      spots$(s.spots, action$),
      spotForm$(s.spotForm, action$),
      stampRallies$(s.stampRallies, action$),
      stampRally$(s.stampRally, action$),
      stampRallyForm$(s.stampRallyForm, action$),
      (
        currentPage,
        signIn,
        token,
        spots,
        spotForm,
        stampRallies,
        stampRally,
        stampRallyForm
      ): State => {
        return Object.as",TypeScript
"import { inject, injectable } from 'inversify';
import TYPES from '../../di/types';
import * as i from '../../i';
import { RunOptions } from '../../models';
import { IInputConfig } from '../../user-extensibility';
import { BaseInputManager } from '../base-input-manager';
var NestedError = require('nested-error-stacks');


@injectable()
export class CustomInputManager extends BaseInputManager {
    constructor(
        @inject(TYPES.HandlerService) private handlerService: i.IHandlerService
    ) {
        super();
    }

    async ask(config: IInputConfig, options: RunOptions): Promise<{ [key: string]: any }> {
        try {
            const handler: Function = await this.handlerService
                .resolveAndLoad(this.tmplRootPath, config.handler);
            return handler(config);
        } catch (ex) {
            throw new NestedError(""Error running handler for input configuration"", ex);
        }
    }
}",TypeScript
"/*
 *= require ecm/tags/backend/application
 */
",CSS
".yan-github {
    position: fixed;
    bottom:0;
    right:0;
    min-width:350px;
    outline:1px solid rgba(0, 0, 0, 0.3);
    min-height:200px;
    background: #FFFFFF;
    border-radius:3px;
    box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3);
    z-index: 10000
}
.yan-github ul{
    padding:0
}
.yan-github li {
    list-style-type: none
}
.yan-header {
    margin: 10px;
    border-bottom: 1px solid #2299DD;
    padding-bottom: 5px;
}
.yan-header h2 {
    margin:0;
}

.yan-header .yan-close {
    float: right;
    font-size: 0.8em;
    cursor: pointer
}
            
.yan-github form {
    margin: 10px
}

.yan-github fieldset {
    border: 0;
    margin: 5px;
    margin-bottom: 20px
}

.yan-github fieldset::after {
    content: """";
    display: block;
    clear: both
}
.yan-github legend {
    font-size: 1.2em;
    margin-bottom: 10px;
    border-bottom: 1px solid #e5e5e5;
    width: 100%;
}
.yan-label-block{
    display: block;
    margin: 5px
}
.yan-btn {
    display: inline-block;
    padding: 6px 12px;
    margin-bottom: 0;
    font-size: 14px;
    font-weight: normal;
    line-height: 1.428571429;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    cursor: pointer;
    background-image: none;
    border: 1px solid transparent;
    border-radius: 4px;
}
.yan-btn:hover {
    color: #333;
}

",CSS
".favorites-container{
    margin-top: 16px;
    min-height: 350px;
    padding-bottom: 30px;
    font-family: Helvetica, Verdana;
    border-radius: 2px;
    background: rgba(255,255,255,0.8);
    
    border: solid 2px rgba(255,255,255,0.3);
    -webkit-box-shadow: 2px 2px 5px rgba(0,0,0,0.2);
    -moz-box-shadow: 2px 2px 5px rgba(0,0,0,0.2);
    box-shadow: 2px 2px 5px rgba(0,0,0,0.2);
}
.favorites-container p {
    
    color: #50737a;
    margin-left: 40px;
    margin-top: 20px;
}
.cat-small.favorite{
    display: inline-block;
    margin-left: 10px;
    margin-top: 10px;
}

.cat-small.favorite .image img {
}

a.credit {
	display:block;
	font-size: 11px;
	font-family: Arial,Helvetica,sans-serif;
	color: #999;
	position: absolute;
	bottom: 6px;
	right: 7px;
}

a.credit:hover{
    color: #fff;
}",CSS
"body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.bar {
  fill: steelblue;
}

g.orbit,
g.main {
  cursor: pointer;
  pointer-events: all;
}
",CSS
"@import url(""//fonts.googleapis.com/css?family=News+Cycle:400,700"");

/*! normalize.css v2.1.3 | MIT License | git.io/normalize */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
video {
  display: inline-block;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden],
template {
  display: none;
}

html {
  font-family: sans-serif;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
}

body {
  margin: 0;
}

a {
  background: transparent;
}

a:focus {
  outline: thin dotted;
}

a:active,
a:hover {
  outline: 0;
}

h1 {
  margin: 0.67em 0;
  font-size: 2em;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b,
strong {
  font-weight: bold;
}

dfn {
  font-style: italic;
}

hr {
  height: 0;
  -moz-box-sizing: content-box;
       box-sizing: content-box;
}

mark {
  color: #000;
  background: #ff0;
}

code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}

pre {
  white-space: pre-wrap;
}

q {
  quotes: ""\201C"" ""\201D"" ""\2018"" ""\2019"";
}

small {
  font-size: 80%;
}

sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

img {
  border: 0;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 0;
}

fieldset {
  padding: 0.35em 0.625em 0.75em;
  margin: 0 2px;
  border: 1px solid #c0c0c0;
}

legend {
  padding: 0;
  border: 0;
}

button,
inpu",CSS
"body {
  font-family: Arial, Verdana, ""Times New Roman"", Times, serif;
}

div.pages {
  font-weight: bold;
}

a.page, span.page {
  padding: 4px 6px;
}

a.page {
  margin: 0 3px;
  border: 1px solid #ddd;
  text-decoration: none;
  color: #0063dc;
}

a.page:hover {
  border: 1px solid #003366;
  background-color: #0063dc;
  color: #fff;
}

span.disabled_page {
  color: #b1aab1;
}

span.current_page {
  color: #ff0084;
}",CSS
".loading {
  margin: 0 auto;
  width: 100px;
  padding-top: 50px;
}


/*!
 * Load Awesome v1.1.0 (http://github.danielcardoso.net/load-awesome/)
 * Copyright 2015 Daniel Cardoso <@DanielCardoso>
 * Licensed under MIT
 */
.la-ball-fussion,
.la-ball-fussion > div {
    position: relative;
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
}
.la-ball-fussion {
    display: block;
    font-size: 0;
    color: #fff;
}
.la-ball-fussion.la-dark {
    color: #333;
}
.la-ball-fussion > div {
    display: inline-block;
    float: none;
    background-color: currentColor;
    border: 0 solid currentColor;
}
.la-ball-fussion {
    width: 8px;
    height: 8px;
}
.la-ball-fussion > div {
    position: absolute;
    width: 12px;
    height: 12px;
    border-radius: 100%;
    -webkit-transform: translate(-50%, -50%);
       -moz-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
         -o-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    -webkit-animation: ball-fussion-ball1 1s 0s ease infinite;
       -moz-animation: ball-fussion-ball1 1s 0s ease infinite;
         -o-animation: ball-fussion-ball1 1s 0s ease infinite;
            animation: ball-fussion-ball1 1s 0s ease infinite;
}
.la-ball-fussion > div:nth-child(1) {
    top: 0;
    left: 50%;
    z-index: 1;
}
.la-ball-fussion > div:nth-child(2) {
    top: 50%;
    left: 100%;
    z-index: 2;
    -webkit-animation-nam",CSS
"/*
 
@font-face
{
    font-family: 'Gotham-Book';
    src: url(Gotham-Book.otf);
    src: local('Gotham-Book'), local('Gotham-Book'), url(Gotham-Book.otf) format('opentype');
}

@font-face {
  font-family: 'Muli';
  font-style: normal;
  font-weight: 400;
  src: local('Muli'), url('http://themes.googleusercontent.com/static/fonts/muli/v4/kU4XYdV4jtS72BIidPtqyw.woff') format('woff');
}
*/

html
{
    min-height: 100%;
    padding-bottom: 1px;
}
body
{
    background: #000;
    margin: 0 auto;
    width: 1024px;
    font-family: 'Arial';
}

#header-container
{
    float: left;
    width: 128px;
}

#header-container img
{
    margin: 13px 10px 0;
}

#main
{
    background: #FFF;
    float: left;
    width: 768px;
    min-height: 728px;   
}

#footer-container
{
    float: left;
    width: 128px;
    overflow: hidden;
}
#footer-container img
{
    margin: 65px 10px 0;
}

#encabezado{	
	margin-top: 50px;
	margin-bottom: 40px;
	width: 100%;
	display: block;	
	position: relative;
}

#encabezado header{
	margin: 0px 0px 40px 35px;		
}

#encabezado nav{	
	margin: 0px 56px 0px 28px;	
	height: 33px;		
}

#encabezado nav .izquierda{
	float: left;
}


#encabezado nav .derecha{
	float: right;	
	width: 170px
}

#encabezado .txt-proceso-pago{	
	color: #e4e4e4;
	font-size: 13px;
	height: 25px;
	display: block;
	text-decoration: none;
	text-align: center;		
	cursor: default;
}

#encabezado .txt-proceso-pago-select{		
	color: #C90002;
	font-size: 13px;
	height: 25px;
	display: block;	
	text-dec",CSS
"@charset ""UTF-8"";
/* グレー系 */
/* シアン系 */

/* マージン、パディング */
/* フォントサイズ */
/* 行の高さ */

/* グレー系 */
/* シアン系 */
/* マージン、パディング */
/* フォントサイズ */
/* 行の高さ */
/* line 6, /vagrant/app/assets/stylesheets/staff/container.css.scss */
div#wrapper div#container h1 {
  margin: 0;
  padding: 9px 6px;
  font-size: 16px;
  font-weight: normal;
  background-color: #1a3333;
  color: #eeeeee;
}

/* マージン、パディング */
/* フォントサイズ */
/* 行の高さ */

/* グレー系 */
/* シアン系 */
/* マージン、パディング */
/* フォントサイズ */
/* 行の高さ */
/* line 4, /vagrant/app/assets/stylesheets/staff/layout.css.scss */
html, body {
  margin: 0;
  padding: 0;
  height: 100%;
}

/* line 9, /vagrant/app/assets/stylesheets/staff/layout.css.scss */
div#wrapper {
  position: relative;
  box-sizing: border-box;
  min-height: 100%;
  margin: 0 auto;
  padding-bottom: 48px;
  background-color: #cccccc;
}

/* line 17, /vagrant/app/assets/stylesheets/staff/layout.css.scss */
header {
  padding: 6px;
  background-color: #448888;
  color: #fafafa;
}
/* line 21, /vagrant/app/assets/stylesheets/staff/layout.css.scss */
header span.logo-mark {
  font-weight: bold;
}

/* line 25, /vagrant/app/assets/stylesheets/staff/layout.css.scss */
footer {
  bottom: 0;
  position: absolute;
  width: 100%;
  background-color: #666666;
  color: #fafafa;
}
/* line 31, /vagrant/app/assets/stylesheets/staff/layout.css.scss */
footer p {
  text-align: center;
  padding: 6px;
  margin: 0;
}
/*

*/

/*
 * This is a manifest file that'll be compiled into application.css, which will includ",CSS
".navbar-brand {
  font-family: ""Bungee"", cursive;
  font-size: 200%;
  padding: 0; }

#image_billiard {
  height: 70px;
  padding: 15px;
  width: auto;
  float: left; }

.brand-text {
  float: right;
  padding-top: 25px;
  padding-left: 10px; }

.navbar-default {
  height: 70px; }

.navbar-default .navbar-nav > li > a {
  padding-top: 20px;
  padding-bottom: 20px;
  line-height: 30px; }

.navbar-default .navbar-nav > li > a:hover,
.navbar-default .navbar-nav > li > a:focus,
.navbar-default .navbar-nav > .open > a,
.navbar-default .navbar-nav > .open > a,
.navbar-default .navbar-nav > .open > a:hover,
.navbar-default .navbar-nav > .open > a:focus {
  color: white;
  background-color: transparent; }

form#id_search_group {
  margin-top: 16px; }

.jumbotron {
  padding-top: 6rem;
  padding-bottom: 6rem;
  margin-bottom: 0;
  background-color: white; }

.jumbotron .container {
  max-width: 80rem; }

#lower_container {
  background-color: #f7f7f7; }
",CSS
"@charset ""utf-8"";
body {
    color: #7d7d7d;
    /*background: #f5f4f2;*/
    font-size: .875rem;
    line-height: 24px;
    background: #eeede8;
}
h1, h2, h3, h4, h5, h6, ul, li, ol, p {
    margin: 0;
    padding: 0;
}
a {
    color: #7d7d7d;
    text-decoration: none;
    cursor: pointer;
}
a:hover {
    color: #54abd4;
}
h1, h2, h3, h4, h5, h6 {
    color: #666;
    /*font-weight: bold;*/
}
h4 {
    margin: 0 0 10px 0;
}
li {
    display: list-item;
    text-align: -webkit-match-parent;
}
ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
}
p {
    margin: 12px 0;
}
input[type=""text""],
input[type=""password""],
input[type=""email""],
input[type=""date""],
textarea {
    height: 40px;
    /*line-height: 40px;*/
    padding: 6px 10px;
    background: #f5f5f5;
    border: 1px solid #f5f5f5;
    border-radius: 2px;
    box-shadow: none;
    color: #777;
}
input:focus,
input:active,
input:hover,
input[type=""text""]:focus,
input[type=""password""]:focus,
input[type=""email""]:focus,
input[type=""date""]:focus,
textarea:focus,
textarea:active,
textarea:hover {
    background: #fff;
    border: 1px solid #54abd4;
    box-shadow: none;
    transition: all .25s ease-in-out;
}


/*蓝色矩形*/
.tag-info {
    display: inline-block;
    margin: 0 4px 4px 0;
    padding: 0 8px;
    color: #fff;
    background: #88C5E1;
    border-radius: 4px;
}
.tag-info:hover {
    color: #fff;
    background: #54abd4;
    text-decoration: none;
}


/*字体设置工具类*/
.tag-sm {
    padding: 0 6px;
    font-size: .",CSS
"body {
font-family: 'Rancho', cursive;
font-weight: bold;
margin: auto;
padding: 5%;
background-color: #F49D37;
}

.score,
.game {

color: #0A1128;

font-size: 28px;
}

#board {
width: 450px;
height: 450px;
}

#board .square {
width: 33.333333333%;
height: 33.333333333%;
background-color: #496DDB;
float: left;
text-align: center;
line-height: 155px;
}

.square {
font-size: 170px;
color: #2E4052;
border: 2px dashed #F49D37;
}

.topRow {
	border-top: none;
}

.right {
	border-right: none;
}

.botRow {
	border-bottom: none;
}

.left {
	border-left: none;
}

.topRow.right {
	border-radius: 0 10% 0 0;
}

.topRow.left {
	border-radius: 10% 0 0 0;
}

.botRow.right {
	border-radius: 0 0 10% 0;
}

.botRow.left {
	border-radius: 0 0 0 10%;
}


#data-bottom,
#data-top {
width: 450px;
}

.btnText {
color: #0A1128;
font-size: 50px;
}
",CSS
"ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: #333;
    box-shadow: 0 6px 25px 0 rgba(0,0,0,.25);
}

li {
    float: left;
}

li a {
    display: block;
    color: white;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    cursor:pointer;
}

li a:hover:not(.active) {
    background-color: #464C5C;
}

.active {
    background-color: #8C98B8;
}

.img-right{
    float: right;
    padding-left: 1000px;
}
",CSS
"@charset ""utf-8"";
/* CSS Document */
/* -------------------------------------------------------------------------- */
/* BASE AD - typically, we do not mess with this section
/* -------------------------------------------------------------------------- */
body, body * {
    vertical-align: baseline;
    border: 0;
    outline: 0;
    padding: 0;
    margin: 0;
}

/* Div layer for the entire banner. */
#adkit_container {
    position: absolute;
    width: {{width}}px;
    height: {{height}}px;
    border: #9b9b9b 1px solid;
    top: 0;
    left: 0;
    margin: auto;
    overflow: hidden;
    display: none;
}

#adkit_content {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 100;
}

/* Invisible button for background clickthrough. */
#adkit_background_exit {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    cursor: pointer;
    opacity: 0;
    z-index: 400;
}

:focus {
    outline: none;
}

::-moz-focus-inner {
    border: 0;
}

/* -------------------------------------------------------------------------- */
/* Your ad styles here */
",CSS
".float-btn-wrapper {    
    width: 75;
    height: 75;
}
.float-btn-shadow {
    width: 56;
    height: 56;
}
.float-btn {
    background-color: #FF69B4;
    border-radius: 28;
    width: 56;
    height: 56;
    text-align: center;
    vertical-align: middle;  
}
.float-btn.down{
    animation-name: down;
    animation-duration: 0.2s;
    animation-fill-mode: forwards;
}
.float-btn-text {
    color: #ffffff;
    font-size: 36;
    margin-top: -3;
    margin-right: -1;
} 
@keyframes down {
    from { background-color: #FF69B4 }
    to { background-color: #FFA9B4 }
}",CSS
".sample2 .sea {
	height: 300px;
	width: 480px;
	position: relative;
	background-image: url(media/fishing.png), url(media/mermaid.png), url(media/sea.png);
	background-position: top right 10px, bottom left, top left;
	background-repeat: no-repeat, repeat-x, repeat-x;
}

.sample2 .fish {
	background: url(media/fish.png) no-repeat;
	height: 70px;
	width: 100px;
	left: 30px;
	top: 90px;
	position: absolute;
}",CSS
"html{
	height: 100%;
	margin: 0;
	background-color:#323232;
}

body{
	font-family: 'Lato', sans-serif;
	font-size: 11pt;
	font-weight: 300;
	color: #C8C8C8
}

ul {
    list-style: none;
}
a:link {color:#6c6c6c;} 
a:visited {color:#757575;}
a:hover {color:white;} 
a:active {color:white;} 

.header{
	text-align: center;
	padding-top: 10%;
	color: white;
}

.user_info{
	text-align: center;
	padding-top: 1%
}

.profile_pic{
	height: 25%;
	width: auto;
}

input:not([type=submit]):not([type=file]) {
    border: none; 
    padding: 5px;
    background: rgba(255,255,255,0.08);
    margin: 0 0 10px 0;
}
",CSS
"html {
  font-size: 12px;
  font-family: 'Rubik', sans-serif;
}
h1,h2,h3,h4,h5,h6 {
  font-family: 'Rubik Mono One',sans-serif;
}

header {
    text-align: center;
}
header h1 {
    margin: 0;
}

#countries-judged {
  margin-bottom: 2rem;
  min-height: 2rem;
}
#countries-judged.empty {
    border: 1px dashed;
}
#countries-unjudged .country {
    background: hsl(341, 38%, 53%);
}
#spacer {
  width: 100%;
  height: 2rem;
}
.country {
    display: grid;
    background: #b82352;
    color: white;
    grid-template-columns: 3rem 2rem 1fr 4rem 2fr;
    grid-template-areas: ""score flag name picture artist""                           ""score flag name picture title"";
    grid-gap: 0rem 0.5rem;
    padding: 0.2rem;
}
#judging .country {
    cursor: ns-resize;
}
.country a {
  color: white;
  text-decoration: none;
}
.country a:hover {
  text-decoration: underline;
}
.country .play {
  color: lightgreen;
}

.country > * {align-self: center;}
.country ~ .country {
  margin-top: 0.5rem;
}

.country .picture img {
  height: 4rem;
  width: 4rem;
  object-fit: cover;
  object-position: center;
  display: block;
}
.country .points {
  font-size: 2rem;
  text-align: right;
}
.country .flag-icon {
    height: 2rem;
    line-height: 2rem;
    width: 2rem;
}


body {
    margin: 0;
    min-height: 101vh;
}

div#app {
    width: 100%;
}

.country .points {
    grid-area: score;
    justify-self: end;
    align-se",CSS
".nav, .pagination, .carousel, .panel-title a { cursor: pointer; }

.done-true {
    text-decoration: line-through;
    color: #ddd;
}
.form-control[disabled], .form-control[readonly], .fieldset[disabled], .form-control {
    cursor: pointer;
    background-color: white;
}",CSS
"/*! HTML5 Boilerplate v5.2.0 | MIT License | https://html5boilerplate.com/ */

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */
html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
    vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: ",CSS
"@import url(""screen.css"");
@import url(""non-screen.css"") handheld;
@import url(""non-screen.css"") only screen and (max-device-width:640px);

#canvas-outer {
    border: 0px;
    position: relative;
    margin: 0px;
    padding: 0px;
    width: 100%;
    height: 100%;
}

#main_canvas {
    width: 100%;
    height: 100%;
    z-index: 0;
}

#tracer_canvas {
    left: 0px;
    position: absolute;
    top: 0px;
    z-index: 1;
}

a#fractal-download {
    display: none;
}
",CSS
"/* Generated by Font Squirrel (http://www.fontsquirrel.com) on April 1, 2011 08:28:28 AM America/New_York */



@font-face {
    font-family: 'UbuntuRegular';
    src: url('Ubuntu-Regular-webfont.eot');
    src: url('Ubuntu-Regular-webfont.eot?iefix') format('eot'),
         url('Ubuntu-Regular-webfont.woff') format('woff'),
         url('Ubuntu-Regular-webfont.ttf') format('truetype'),
         url('Ubuntu-Regular-webfont.svg#webfontHLBpjp3B') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'UbuntuItalic';
    src: url('Ubuntu-Italic-webfont.eot');
    src: url('Ubuntu-Italic-webfont.eot?iefix') format('eot'),
         url('Ubuntu-Italic-webfont.woff') format('woff'),
         url('Ubuntu-Italic-webfont.ttf') format('truetype'),
         url('Ubuntu-Italic-webfont.svg#webfontthRLUYUD') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'UbuntuBold';
    src: url('Ubuntu-Bold-webfont.eot');
    src: url('Ubuntu-Bold-webfont.eot?iefix') format('eot'),
         url('Ubuntu-Bold-webfont.woff') format('woff'),
         url('Ubuntu-Bold-webfont.ttf') format('truetype'),
         url('Ubuntu-Bold-webfont.svg#webfont1d3fIoP8') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'UbuntuBoldItalic';
    src: url('Ubuntu-BoldItalic-webfont.eot');
    src: url('Ubuntu-BoldItalic-webfont.eot?iefix') format('eot'),
         url('Ubuntu-BoldItalic-w",CSS
"/*   
 * Template Name: devAid - Responsive Website Template for developers
 * Version: 1.1
 * Author: Xiaoying Riley
 * Twitter: @3rdwave_themes
 * License: Creative Commons Attribution 3.0 License
 * Website: http://themes.3rdwavemedia.com/
*/
/* style-4.css */
/* ======= Base ======= */
body {
  font-family: 'Lato', arial, sans-serif;
  color: #444;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'Montserrat', sans-serif;
  font-weight: 700;
  color: #50c8c9;
}
a {
  color: #50c8c9;
  -webkit-transition: all 0.4s ease-in-out;
  -moz-transition: all 0.4s ease-in-out;
  -ms-transition: all 0.4s ease-in-out;
  -o-transition: all 0.4s ease-in-out;
}
a:hover {
  text-decoration: underline;
  color: #36afb0;
}
.btn,
a.btn {
  -webkit-transition: all 0.4s ease-in-out;
  -moz-transition: all 0.4s ease-in-out;
  -ms-transition: all 0.4s ease-in-out;
  -o-transition: all 0.4s ease-in-out;
  font-family: 'Montserrat', arial, sans-serif;
  padding: 8px 16px;
  font-weight: bold;
}
.btn .fa,
a.btn .fa {
  margin-right: 5px;
}
.btn:focus,
a.btn:focus {
  color: #fff;
}
a.btn-cta-primary,
.btn-cta-primary {
  background: #1e6162;
  border: 1px solid #1e6162;
  color: #fff;
  font-weight: 600;
  text-transform: uppercase;
}
a.btn-cta-primary:hover,
.btn-cta-primary:hover {
  background: #184e4e;
  border: 1px solid #184e4e;
  color: #fff;
}
a.btn-cta-secondary,
.btn-cta-secondary {
  background: #ffb",CSS
"/*!
 * Bootstrap v2.0.3
 *
 * Copyright 2012 Twitter, Inc
 * Licensed under the Apache License v2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Designed and built with all the love in the world @twitter by @mdo and @fat.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section {
  display: block;
}
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
}
audio:not([controls]) {
  display: none;
}
html {
  font-size: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}
a:focus {
  outline: thin dotted #333;
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}
a:hover,
a:active {
  outline: 0;
}
sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  max-width: 100%;
  vertical-align: middle;
  border: 0;
  -ms-interpolation-mode: bicubic;
}
button,
input,
select,
textarea {
  margin: 0;
  font-size: 100%;
  vertical-align: middle;
}
button,
input {
  *overflow: visible;
  line-height: normal;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  padding: 0;
  border: 0;
}
button,
input[type=""button""],
input[type=""reset""],
input[type=""submit""] {
  cursor: pointer;
  -webkit-appearance: button;
}
input[type=""search""] {
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  -webkit-appearance: textfield;
}
input[type=""search""]::-webkit-sear",CSS
"body {
  padding-top: 65px;
}

#footer {
  padding: 10px;
  color: #333;
}

#titulo {
  color: #fff;
}

#textoSobreNosotros {
  color: #333;
}

#login-buttons a, .accounts-dialog a {
  color: rgb(0, 0, 0);
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  line-height: 50px;
  padding: 20px;
}

#submit {
  background-color: #f4511e;
  color: #fff;
}

#formGraffiti {
  border: 2px solid #f4511e;
  border-radius: 12px;
  padding-top: 20px;
  padding-right: 20px;
}

#agregarGraffiti {
  padding-top: 0;
}

#misGraffitis {
  padding-top: 0;
  padding-bottom: 5px;
}

#buscarGraffitis {
  padding-top: 0;
}

#textJumbotron {
  color: #fff;
}

#textJumbotronUsuario {
  color: #fff;
}

.map-container {
  width: 800px;
  max-width: 100%;
  height: 500px;
  margin: 0 auto;
}

.navbar {
  margin-bottom: 0;
  background-color: #f4511e;
  z-index: 9999;
  border: 0;
  font-size: 12px !important;
  line-height: 1.42857143 !important;
  letter-spacing: 4px;
  border-radius: 0;
}

.navbar-nav li a:hover, .navbar-nav li.active a {
  color: #f4511e !important;
  background-color: #fff !important;
}

.navbar-default .navbar-toggle {
  border-color: transparent;
  color: #fff !important;
}

.container .jumbotron, .container-fluid .jumbotron {
  background-color: #f4511e;
}

.jumbotron {
  background-color: #f4511e;
  color: #fff;
  padding: 100px 25px;
}

.container-fluid {
  padding: 60px 50px;
}

.jumbotron h1 {
  color: #fff;
}

.bg-grey {
  background-color: #f6f6f6;
}
",CSS
